import{k as go,l as Gg,m as hr,W as vn,a as uo,n as Ma,H as gs,o as G0,p as Nc,q as Sd,r as xd,s as wd,t as Ad,u as Rd,v as Dc,w as Md,x as Fd,y as Pd,z as Ld,A as Od,B as Nd,C as Dd,S as H0,D as W0,E as Uc,b as hc,L as Y0,F as X0,G as Z0,I as Ud,J as Bd,K as zd,c as Rn,M as fr,N as j0,O as q0,P as Af,Q as Rf,j as K0,T as Q0,U as J0,V as $0,X as e_}from"./web-ifc-api-CuDRTh9k.js";/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Vd="160",t_={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},i_=0,Mf=1,n_=2,Hg=1,s_=2,Nn=3,$i=0,di=1,_i=2,Kn=0,fo=1,Ff=2,Pf=3,Lf=4,r_=5,qs=100,o_=101,a_=102,Of=103,Nf=104,l_=200,c_=201,h_=202,u_=203,Cu=204,yu=205,d_=206,f_=207,p_=208,m_=209,g_=210,E_=211,I_=212,__=213,T_=214,v_=0,C_=1,y_=2,vc=3,b_=4,S_=5,x_=6,w_=7,kd=0,A_=1,R_=2,Qn=0,M_=1,F_=2,P_=3,L_=4,O_=5,N_=6,Wg=300,Eo=301,Io=302,bu=303,Su=304,Bc=306,ga=1e3,cn=1001,xu=1002,Et=1003,Df=1004,oh=1005,ri=1006,D_=1007,Ea=1008,bs=1009,U_=1010,B_=1011,Gd=1012,Yg=1013,Wn=1014,Yn=1015,ws=1016,Xg=1017,Zg=1018,$s=1020,z_=1021,Pi=1023,V_=1024,k_=1025,Ss=1026,_o=1027,jg=1028,qg=1029,G_=1030,Kg=1031,Qg=1033,ah=33776,lh=33777,ch=33778,hh=33779,Uf=35840,Bf=35841,zf=35842,Vf=35843,Jg=36196,kf=37492,Gf=37496,Hf=37808,Wf=37809,Yf=37810,Xf=37811,Zf=37812,jf=37813,qf=37814,Kf=37815,Qf=37816,Jf=37817,$f=37818,ep=37819,tp=37820,ip=37821,uh=36492,np=36494,sp=36495,H_=36283,rp=36284,op=36285,ap=36286,$g=3e3,er=3001,W_=3200,Y_=3201,Hd=0,X_=1,Li="",ni="srgb",is="srgb-linear",Wd="display-p3",zc="display-p3-linear",Cc="linear",It="srgb",yc="rec709",bc="p3",pr=7680,lp=519,Z_=512,j_=513,q_=514,eE=515,K_=516,Q_=517,J_=518,$_=519,wu=35044,eT=35048,cp="300 es",Au=1035,Xn=2e3,Sc=2001;class So{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const i=this._listeners;i[e]===void 0&&(i[e]=[]),i[e].indexOf(t)===-1&&i[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const i=this._listeners;return i[e]!==void 0&&i[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const n=this._listeners[e];if(n!==void 0){const s=n.indexOf(t);s!==-1&&n.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const i=this._listeners[e.type];if(i!==void 0){e.target=this;const n=i.slice(0);for(let s=0,o=n.length;s<o;s++)n[s].call(this,e);e.target=null}}}const li=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let hp=1234567;const po=Math.PI/180,Ia=180/Math.PI;function Jn(){const r=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(li[r&255]+li[r>>8&255]+li[r>>16&255]+li[r>>24&255]+"-"+li[e&255]+li[e>>8&255]+"-"+li[e>>16&15|64]+li[e>>24&255]+"-"+li[t&63|128]+li[t>>8&255]+"-"+li[t>>16&255]+li[t>>24&255]+li[i&255]+li[i>>8&255]+li[i>>16&255]+li[i>>24&255]).toLowerCase()}function oi(r,e,t){return Math.max(e,Math.min(t,r))}function Yd(r,e){return(r%e+e)%e}function tT(r,e,t,i,n){return i+(r-e)*(n-i)/(t-e)}function iT(r,e,t){return r!==e?(t-r)/(e-r):0}function ua(r,e,t){return(1-t)*r+t*e}function nT(r,e,t,i){return ua(r,e,1-Math.exp(-t*i))}function sT(r,e=1){return e-Math.abs(Yd(r,e*2)-e)}function rT(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*(3-2*r))}function oT(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*r*(r*(r*6-15)+10))}function aT(r,e){return r+Math.floor(Math.random()*(e-r+1))}function lT(r,e){return r+Math.random()*(e-r)}function cT(r){return r*(.5-Math.random())}function hT(r){r!==void 0&&(hp=r);let e=hp+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function uT(r){return r*po}function dT(r){return r*Ia}function Ru(r){return(r&r-1)===0&&r!==0}function fT(r){return Math.pow(2,Math.ceil(Math.log(r)/Math.LN2))}function xc(r){return Math.pow(2,Math.floor(Math.log(r)/Math.LN2))}function pT(r,e,t,i,n){const s=Math.cos,o=Math.sin,a=s(t/2),l=o(t/2),c=s((e+i)/2),h=o((e+i)/2),d=s((e-i)/2),u=o((e-i)/2),f=s((i-e)/2),m=o((i-e)/2);switch(n){case"XYX":r.set(a*h,l*d,l*u,a*c);break;case"YZY":r.set(l*u,a*h,l*d,a*c);break;case"ZXZ":r.set(l*d,l*u,a*h,a*c);break;case"XZX":r.set(a*h,l*m,l*f,a*c);break;case"YXY":r.set(l*f,a*h,l*m,a*c);break;case"ZYZ":r.set(l*m,l*f,a*h,a*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+n)}}function yn(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return r/4294967295;case Uint16Array:return r/65535;case Uint8Array:return r/255;case Int32Array:return Math.max(r/2147483647,-1);case Int16Array:return Math.max(r/32767,-1);case Int8Array:return Math.max(r/127,-1);default:throw new Error("Invalid component type.")}}function ut(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return Math.round(r*4294967295);case Uint16Array:return Math.round(r*65535);case Uint8Array:return Math.round(r*255);case Int32Array:return Math.round(r*2147483647);case Int16Array:return Math.round(r*32767);case Int8Array:return Math.round(r*127);default:throw new Error("Invalid component type.")}}const sr={DEG2RAD:po,RAD2DEG:Ia,generateUUID:Jn,clamp:oi,euclideanModulo:Yd,mapLinear:tT,inverseLerp:iT,lerp:ua,damp:nT,pingpong:sT,smoothstep:rT,smootherstep:oT,randInt:aT,randFloat:lT,randFloatSpread:cT,seededRandom:hT,degToRad:uT,radToDeg:dT,isPowerOfTwo:Ru,ceilPowerOfTwo:fT,floorPowerOfTwo:xc,setQuaternionFromProperEuler:pT,normalize:ut,denormalize:yn};class Re{constructor(e=0,t=0){Re.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,i=this.y,n=e.elements;return this.x=n[0]*t+n[3]*i+n[6],this.y=n[1]*t+n[4]*i+n[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const i=this.dot(e)/t;return Math.acos(oi(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y;return t*t+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const i=Math.cos(t),n=Math.sin(t),s=this.x-e.x,o=this.y-e.y;return this.x=s*i-o*n+e.x,this.y=s*n+o*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Xe{constructor(e,t,i,n,s,o,a,l,c){Xe.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,i,n,s,o,a,l,c)}set(e,t,i,n,s,o,a,l,c){const h=this.elements;return h[0]=e,h[1]=n,h[2]=a,h[3]=t,h[4]=s,h[5]=l,h[6]=i,h[7]=o,h[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],this}extractBasis(e,t,i){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,n=t.elements,s=this.elements,o=i[0],a=i[3],l=i[6],c=i[1],h=i[4],d=i[7],u=i[2],f=i[5],m=i[8],E=n[0],g=n[3],p=n[6],_=n[1],T=n[4],I=n[7],v=n[2],b=n[5],x=n[8];return s[0]=o*E+a*_+l*v,s[3]=o*g+a*T+l*b,s[6]=o*p+a*I+l*x,s[1]=c*E+h*_+d*v,s[4]=c*g+h*T+d*b,s[7]=c*p+h*I+d*x,s[2]=u*E+f*_+m*v,s[5]=u*g+f*T+m*b,s[8]=u*p+f*I+m*x,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[1],n=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],h=e[8];return t*o*h-t*a*c-i*s*h+i*a*l+n*s*c-n*o*l}invert(){const e=this.elements,t=e[0],i=e[1],n=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],h=e[8],d=h*o-a*c,u=a*l-h*s,f=c*s-o*l,m=t*d+i*u+n*f;if(m===0)return this.set(0,0,0,0,0,0,0,0,0);const E=1/m;return e[0]=d*E,e[1]=(n*c-h*i)*E,e[2]=(a*i-n*o)*E,e[3]=u*E,e[4]=(h*t-n*l)*E,e[5]=(n*s-a*t)*E,e[6]=f*E,e[7]=(i*l-c*t)*E,e[8]=(o*t-i*s)*E,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,i,n,s,o,a){const l=Math.cos(s),c=Math.sin(s);return this.set(i*l,i*c,-i*(l*o+c*a)+o+e,-n*c,n*l,-n*(-c*o+l*a)+a+t,0,0,1),this}scale(e,t){return this.premultiply(dh.makeScale(e,t)),this}rotate(e){return this.premultiply(dh.makeRotation(-e)),this}translate(e,t){return this.premultiply(dh.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,i,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,i=e.elements;for(let n=0;n<9;n++)if(t[n]!==i[n])return!1;return!0}fromArray(e,t=0){for(let i=0;i<9;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const dh=new Xe;function tE(r){for(let e=r.length-1;e>=0;--e)if(r[e]>=65535)return!0;return!1}function wc(r){return document.createElementNS("http://www.w3.org/1999/xhtml",r)}function mT(){const r=wc("canvas");return r.style.display="block",r}const up={};function da(r){r in up||(up[r]=!0,console.warn(r))}const dp=new Xe().set(.8224621,.177538,0,.0331941,.9668058,0,.0170827,.0723974,.9105199),fp=new Xe().set(1.2249401,-.2249404,0,-.0420569,1.0420571,0,-.0196376,-.0786361,1.0982735),Da={[is]:{transfer:Cc,primaries:yc,toReference:r=>r,fromReference:r=>r},[ni]:{transfer:It,primaries:yc,toReference:r=>r.convertSRGBToLinear(),fromReference:r=>r.convertLinearToSRGB()},[zc]:{transfer:Cc,primaries:bc,toReference:r=>r.applyMatrix3(fp),fromReference:r=>r.applyMatrix3(dp)},[Wd]:{transfer:It,primaries:bc,toReference:r=>r.convertSRGBToLinear().applyMatrix3(fp),fromReference:r=>r.applyMatrix3(dp).convertLinearToSRGB()}},gT=new Set([is,zc]),rt={enabled:!0,_workingColorSpace:is,get workingColorSpace(){return this._workingColorSpace},set workingColorSpace(r){if(!gT.has(r))throw new Error(`Unsupported working color space, "${r}".`);this._workingColorSpace=r},convert:function(r,e,t){if(this.enabled===!1||e===t||!e||!t)return r;const i=Da[e].toReference,n=Da[t].fromReference;return n(i(r))},fromWorkingColorSpace:function(r,e){return this.convert(r,this._workingColorSpace,e)},toWorkingColorSpace:function(r,e){return this.convert(r,e,this._workingColorSpace)},getPrimaries:function(r){return Da[r].primaries},getTransfer:function(r){return r===Li?Cc:Da[r].transfer}};function mo(r){return r<.04045?r*.0773993808:Math.pow(r*.9478672986+.0521327014,2.4)}function fh(r){return r<.0031308?r*12.92:1.055*Math.pow(r,.41666)-.055}let mr;class iE{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{mr===void 0&&(mr=wc("canvas")),mr.width=e.width,mr.height=e.height;const i=mr.getContext("2d");e instanceof ImageData?i.putImageData(e,0,0):i.drawImage(e,0,0,e.width,e.height),t=mr}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=wc("canvas");t.width=e.width,t.height=e.height;const i=t.getContext("2d");i.drawImage(e,0,0,e.width,e.height);const n=i.getImageData(0,0,e.width,e.height),s=n.data;for(let o=0;o<s.length;o++)s[o]=mo(s[o]/255)*255;return i.putImageData(n,0,0),t}else if(e.data){const t=e.data.slice(0);for(let i=0;i<t.length;i++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[i]=Math.floor(mo(t[i]/255)*255):t[i]=mo(t[i]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let ET=0;class nE{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:ET++}),this.uuid=Jn(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const i={uuid:this.uuid,url:""},n=this.data;if(n!==null){let s;if(Array.isArray(n)){s=[];for(let o=0,a=n.length;o<a;o++)n[o].isDataTexture?s.push(ph(n[o].image)):s.push(ph(n[o]))}else s=ph(n);i.url=s}return t||(e.images[this.uuid]=i),i}}function ph(r){return typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&r instanceof ImageBitmap?iE.getDataURL(r):r.data?{data:Array.from(r.data),width:r.width,height:r.height,type:r.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let IT=0;class xi extends So{constructor(e=xi.DEFAULT_IMAGE,t=xi.DEFAULT_MAPPING,i=cn,n=cn,s=ri,o=Ea,a=Pi,l=bs,c=xi.DEFAULT_ANISOTROPY,h=Li){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:IT++}),this.uuid=Jn(),this.name="",this.source=new nE(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=i,this.wrapT=n,this.magFilter=s,this.minFilter=o,this.anisotropy=c,this.format=a,this.internalFormat=null,this.type=l,this.offset=new Re(0,0),this.repeat=new Re(1,1),this.center=new Re(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Xe,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,typeof h=="string"?this.colorSpace=h:(da("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=h===er?ni:Li),this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const i={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(i.userData=this.userData),t||(e.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==Wg)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case ga:e.x=e.x-Math.floor(e.x);break;case cn:e.x=e.x<0?0:1;break;case xu:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case ga:e.y=e.y-Math.floor(e.y);break;case cn:e.y=e.y<0?0:1;break;case xu:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}get encoding(){return da("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace===ni?er:$g}set encoding(e){da("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=e===er?ni:Li}}xi.DEFAULT_IMAGE=null;xi.DEFAULT_MAPPING=Wg;xi.DEFAULT_ANISOTROPY=1;class bt{constructor(e=0,t=0,i=0,n=1){bt.prototype.isVector4=!0,this.x=e,this.y=t,this.z=i,this.w=n}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,i,n){return this.x=e,this.y=t,this.z=i,this.w=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,i=this.y,n=this.z,s=this.w,o=e.elements;return this.x=o[0]*t+o[4]*i+o[8]*n+o[12]*s,this.y=o[1]*t+o[5]*i+o[9]*n+o[13]*s,this.z=o[2]*t+o[6]*i+o[10]*n+o[14]*s,this.w=o[3]*t+o[7]*i+o[11]*n+o[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,i,n,s;const l=e.elements,c=l[0],h=l[4],d=l[8],u=l[1],f=l[5],m=l[9],E=l[2],g=l[6],p=l[10];if(Math.abs(h-u)<.01&&Math.abs(d-E)<.01&&Math.abs(m-g)<.01){if(Math.abs(h+u)<.1&&Math.abs(d+E)<.1&&Math.abs(m+g)<.1&&Math.abs(c+f+p-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const T=(c+1)/2,I=(f+1)/2,v=(p+1)/2,b=(h+u)/4,x=(d+E)/4,A=(m+g)/4;return T>I&&T>v?T<.01?(i=0,n=.707106781,s=.707106781):(i=Math.sqrt(T),n=b/i,s=x/i):I>v?I<.01?(i=.707106781,n=0,s=.707106781):(n=Math.sqrt(I),i=b/n,s=A/n):v<.01?(i=.707106781,n=.707106781,s=0):(s=Math.sqrt(v),i=x/s,n=A/s),this.set(i,n,s,t),this}let _=Math.sqrt((g-m)*(g-m)+(d-E)*(d-E)+(u-h)*(u-h));return Math.abs(_)<.001&&(_=1),this.x=(g-m)/_,this.y=(d-E)/_,this.z=(u-h)/_,this.w=Math.acos((c+f+p-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this.w=e.w+(t.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class _T extends So{constructor(e=1,t=1,i={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new bt(0,0,e,t),this.scissorTest=!1,this.viewport=new bt(0,0,e,t);const n={width:e,height:t,depth:1};i.encoding!==void 0&&(da("THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace."),i.colorSpace=i.encoding===er?ni:Li),i=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:ri,depthBuffer:!0,stencilBuffer:!1,depthTexture:null,samples:0},i),this.texture=new xi(n,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=i.generateMipmaps,this.texture.internalFormat=i.internalFormat,this.depthBuffer=i.depthBuffer,this.stencilBuffer=i.stencilBuffer,this.depthTexture=i.depthTexture,this.samples=i.samples}setSize(e,t,i=1){(this.width!==e||this.height!==t||this.depth!==i)&&(this.width=e,this.height=t,this.depth=i,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=i,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new nE(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Qt extends _T{constructor(e=1,t=1,i={}){super(e,t,i),this.isWebGLRenderTarget=!0}}class sE extends xi{constructor(e=null,t=1,i=1,n=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:i,depth:n},this.magFilter=Et,this.minFilter=Et,this.wrapR=cn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class TT extends xi{constructor(e=null,t=1,i=1,n=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:i,depth:n},this.magFilter=Et,this.minFilter=Et,this.wrapR=cn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class vT extends Qt{constructor(e=1,t=1,i=1,n={}){super(e,t,n),this.isWebGLMultipleRenderTargets=!0;const s=this.texture;this.texture=[];for(let o=0;o<i;o++)this.texture[o]=s.clone(),this.texture[o].isRenderTargetTexture=!0}setSize(e,t,i=1){if(this.width!==e||this.height!==t||this.depth!==i){this.width=e,this.height=t,this.depth=i;for(let n=0,s=this.texture.length;n<s;n++)this.texture[n].image.width=e,this.texture[n].image.height=t,this.texture[n].image.depth=i;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.texture.length=0;for(let t=0,i=e.texture.length;t<i;t++)this.texture[t]=e.texture[t].clone(),this.texture[t].isRenderTargetTexture=!0;return this}}class si{constructor(e=0,t=0,i=0,n=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=i,this._w=n}static slerpFlat(e,t,i,n,s,o,a){let l=i[n+0],c=i[n+1],h=i[n+2],d=i[n+3];const u=s[o+0],f=s[o+1],m=s[o+2],E=s[o+3];if(a===0){e[t+0]=l,e[t+1]=c,e[t+2]=h,e[t+3]=d;return}if(a===1){e[t+0]=u,e[t+1]=f,e[t+2]=m,e[t+3]=E;return}if(d!==E||l!==u||c!==f||h!==m){let g=1-a;const p=l*u+c*f+h*m+d*E,_=p>=0?1:-1,T=1-p*p;if(T>Number.EPSILON){const v=Math.sqrt(T),b=Math.atan2(v,p*_);g=Math.sin(g*b)/v,a=Math.sin(a*b)/v}const I=a*_;if(l=l*g+u*I,c=c*g+f*I,h=h*g+m*I,d=d*g+E*I,g===1-a){const v=1/Math.sqrt(l*l+c*c+h*h+d*d);l*=v,c*=v,h*=v,d*=v}}e[t]=l,e[t+1]=c,e[t+2]=h,e[t+3]=d}static multiplyQuaternionsFlat(e,t,i,n,s,o){const a=i[n],l=i[n+1],c=i[n+2],h=i[n+3],d=s[o],u=s[o+1],f=s[o+2],m=s[o+3];return e[t]=a*m+h*d+l*f-c*u,e[t+1]=l*m+h*u+c*d-a*f,e[t+2]=c*m+h*f+a*u-l*d,e[t+3]=h*m-a*d-l*u-c*f,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,i,n){return this._x=e,this._y=t,this._z=i,this._w=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const i=e._x,n=e._y,s=e._z,o=e._order,a=Math.cos,l=Math.sin,c=a(i/2),h=a(n/2),d=a(s/2),u=l(i/2),f=l(n/2),m=l(s/2);switch(o){case"XYZ":this._x=u*h*d+c*f*m,this._y=c*f*d-u*h*m,this._z=c*h*m+u*f*d,this._w=c*h*d-u*f*m;break;case"YXZ":this._x=u*h*d+c*f*m,this._y=c*f*d-u*h*m,this._z=c*h*m-u*f*d,this._w=c*h*d+u*f*m;break;case"ZXY":this._x=u*h*d-c*f*m,this._y=c*f*d+u*h*m,this._z=c*h*m+u*f*d,this._w=c*h*d-u*f*m;break;case"ZYX":this._x=u*h*d-c*f*m,this._y=c*f*d+u*h*m,this._z=c*h*m-u*f*d,this._w=c*h*d+u*f*m;break;case"YZX":this._x=u*h*d+c*f*m,this._y=c*f*d+u*h*m,this._z=c*h*m-u*f*d,this._w=c*h*d-u*f*m;break;case"XZY":this._x=u*h*d-c*f*m,this._y=c*f*d-u*h*m,this._z=c*h*m+u*f*d,this._w=c*h*d+u*f*m;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const i=t/2,n=Math.sin(i);return this._x=e.x*n,this._y=e.y*n,this._z=e.z*n,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,i=t[0],n=t[4],s=t[8],o=t[1],a=t[5],l=t[9],c=t[2],h=t[6],d=t[10],u=i+a+d;if(u>0){const f=.5/Math.sqrt(u+1);this._w=.25/f,this._x=(h-l)*f,this._y=(s-c)*f,this._z=(o-n)*f}else if(i>a&&i>d){const f=2*Math.sqrt(1+i-a-d);this._w=(h-l)/f,this._x=.25*f,this._y=(n+o)/f,this._z=(s+c)/f}else if(a>d){const f=2*Math.sqrt(1+a-i-d);this._w=(s-c)/f,this._x=(n+o)/f,this._y=.25*f,this._z=(l+h)/f}else{const f=2*Math.sqrt(1+d-i-a);this._w=(o-n)/f,this._x=(s+c)/f,this._y=(l+h)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let i=e.dot(t)+1;return i<Number.EPSILON?(i=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=i):(this._x=0,this._y=-e.z,this._z=e.y,this._w=i)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=i),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(oi(this.dot(e),-1,1)))}rotateTowards(e,t){const i=this.angleTo(e);if(i===0)return this;const n=Math.min(1,t/i);return this.slerp(e,n),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const i=e._x,n=e._y,s=e._z,o=e._w,a=t._x,l=t._y,c=t._z,h=t._w;return this._x=i*h+o*a+n*c-s*l,this._y=n*h+o*l+s*a-i*c,this._z=s*h+o*c+i*l-n*a,this._w=o*h-i*a-n*l-s*c,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const i=this._x,n=this._y,s=this._z,o=this._w;let a=o*e._w+i*e._x+n*e._y+s*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=i,this._y=n,this._z=s,this;const l=1-a*a;if(l<=Number.EPSILON){const f=1-t;return this._w=f*o+t*this._w,this._x=f*i+t*this._x,this._y=f*n+t*this._y,this._z=f*s+t*this._z,this.normalize(),this}const c=Math.sqrt(l),h=Math.atan2(c,a),d=Math.sin((1-t)*h)/c,u=Math.sin(t*h)/c;return this._w=o*d+this._w*u,this._x=i*d+this._x*u,this._y=n*d+this._y*u,this._z=s*d+this._z*u,this._onChangeCallback(),this}slerpQuaternions(e,t,i){return this.copy(e).slerp(t,i)}random(){const e=Math.random(),t=Math.sqrt(1-e),i=Math.sqrt(e),n=2*Math.PI*Math.random(),s=2*Math.PI*Math.random();return this.set(t*Math.cos(n),i*Math.sin(s),i*Math.cos(s),t*Math.sin(n))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class F{constructor(e=0,t=0,i=0){F.prototype.isVector3=!0,this.x=e,this.y=t,this.z=i}set(e,t,i){return i===void 0&&(i=this.z),this.x=e,this.y=t,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(pp.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(pp.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,i=this.y,n=this.z,s=e.elements;return this.x=s[0]*t+s[3]*i+s[6]*n,this.y=s[1]*t+s[4]*i+s[7]*n,this.z=s[2]*t+s[5]*i+s[8]*n,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,i=this.y,n=this.z,s=e.elements,o=1/(s[3]*t+s[7]*i+s[11]*n+s[15]);return this.x=(s[0]*t+s[4]*i+s[8]*n+s[12])*o,this.y=(s[1]*t+s[5]*i+s[9]*n+s[13])*o,this.z=(s[2]*t+s[6]*i+s[10]*n+s[14])*o,this}applyQuaternion(e){const t=this.x,i=this.y,n=this.z,s=e.x,o=e.y,a=e.z,l=e.w,c=2*(o*n-a*i),h=2*(a*t-s*n),d=2*(s*i-o*t);return this.x=t+l*c+o*d-a*h,this.y=i+l*h+a*c-s*d,this.z=n+l*d+s*h-o*c,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,i=this.y,n=this.z,s=e.elements;return this.x=s[0]*t+s[4]*i+s[8]*n,this.y=s[1]*t+s[5]*i+s[9]*n,this.z=s[2]*t+s[6]*i+s[10]*n,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const i=e.x,n=e.y,s=e.z,o=t.x,a=t.y,l=t.z;return this.x=n*l-s*a,this.y=s*o-i*l,this.z=i*a-n*o,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const i=e.dot(this)/t;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return mh.copy(this).projectOnVector(e),this.sub(mh)}reflect(e){return this.sub(mh.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const i=this.dot(e)/t;return Math.acos(oi(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y,n=this.z-e.z;return t*t+i*i+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,i){const n=Math.sin(t)*e;return this.x=n*Math.sin(i),this.y=Math.cos(t)*e,this.z=n*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,i){return this.x=e*Math.sin(t),this.y=i,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),n=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=i,this.z=n,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,i=Math.sqrt(1-e**2);return this.x=i*Math.cos(t),this.y=i*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const mh=new F,pp=new si;class je{constructor(e=new F(1/0,1/0,1/0),t=new F(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t+=3)this.expandByPoint(en.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,i=e.count;t<i;t++)this.expandByPoint(en.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const i=en.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const i=e.geometry;if(i!==void 0){const s=i.getAttribute("position");if(t===!0&&s!==void 0&&e.isInstancedMesh!==!0)for(let o=0,a=s.count;o<a;o++)e.isMesh===!0?e.getVertexPosition(o,en):en.fromBufferAttribute(s,o),en.applyMatrix4(e.matrixWorld),this.expandByPoint(en);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),Ua.copy(e.boundingBox)):(i.boundingBox===null&&i.computeBoundingBox(),Ua.copy(i.boundingBox)),Ua.applyMatrix4(e.matrixWorld),this.union(Ua)}const n=e.children;for(let s=0,o=n.length;s<o;s++)this.expandByObject(n[s],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,en),en.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,i;return e.normal.x>0?(t=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),t<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(Oo),Ba.subVectors(this.max,Oo),gr.subVectors(e.a,Oo),Er.subVectors(e.b,Oo),Ir.subVectors(e.c,Oo),os.subVectors(Er,gr),as.subVectors(Ir,Er),Ns.subVectors(gr,Ir);let t=[0,-os.z,os.y,0,-as.z,as.y,0,-Ns.z,Ns.y,os.z,0,-os.x,as.z,0,-as.x,Ns.z,0,-Ns.x,-os.y,os.x,0,-as.y,as.x,0,-Ns.y,Ns.x,0];return!gh(t,gr,Er,Ir,Ba)||(t=[1,0,0,0,1,0,0,0,1],!gh(t,gr,Er,Ir,Ba))?!1:(za.crossVectors(os,as),t=[za.x,za.y,za.z],gh(t,gr,Er,Ir,Ba))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,en).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(en).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Mn[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Mn[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Mn[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Mn[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Mn[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Mn[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Mn[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Mn[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Mn),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Mn=[new F,new F,new F,new F,new F,new F,new F,new F],en=new F,Ua=new je,gr=new F,Er=new F,Ir=new F,os=new F,as=new F,Ns=new F,Oo=new F,Ba=new F,za=new F,Ds=new F;function gh(r,e,t,i,n){for(let s=0,o=r.length-3;s<=o;s+=3){Ds.fromArray(r,s);const a=n.x*Math.abs(Ds.x)+n.y*Math.abs(Ds.y)+n.z*Math.abs(Ds.z),l=e.dot(Ds),c=t.dot(Ds),h=i.dot(Ds);if(Math.max(-Math.max(l,c,h),Math.min(l,c,h))>a)return!1}return!0}const CT=new je,No=new F,Eh=new F;class vi{constructor(e=new F,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const i=this.center;t!==void 0?i.copy(t):CT.setFromPoints(e).getCenter(i);let n=0;for(let s=0,o=e.length;s<o;s++)n=Math.max(n,i.distanceToSquared(e[s]));return this.radius=Math.sqrt(n),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const i=this.center.distanceToSquared(e);return t.copy(e),i>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;No.subVectors(e,this.center);const t=No.lengthSq();if(t>this.radius*this.radius){const i=Math.sqrt(t),n=(i-this.radius)*.5;this.center.addScaledVector(No,n/i),this.radius+=n}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(Eh.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(No.copy(e.center).add(Eh)),this.expandByPoint(No.copy(e.center).sub(Eh))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Fn=new F,Ih=new F,Va=new F,ls=new F,_h=new F,ka=new F,Th=new F;class xo{constructor(e=new F,t=new F(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Fn)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const i=t.dot(this.direction);return i<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,i)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Fn.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Fn.copy(this.origin).addScaledVector(this.direction,t),Fn.distanceToSquared(e))}distanceSqToSegment(e,t,i,n){Ih.copy(e).add(t).multiplyScalar(.5),Va.copy(t).sub(e).normalize(),ls.copy(this.origin).sub(Ih);const s=e.distanceTo(t)*.5,o=-this.direction.dot(Va),a=ls.dot(this.direction),l=-ls.dot(Va),c=ls.lengthSq(),h=Math.abs(1-o*o);let d,u,f,m;if(h>0)if(d=o*l-a,u=o*a-l,m=s*h,d>=0)if(u>=-m)if(u<=m){const E=1/h;d*=E,u*=E,f=d*(d+o*u+2*a)+u*(o*d+u+2*l)+c}else u=s,d=Math.max(0,-(o*u+a)),f=-d*d+u*(u+2*l)+c;else u=-s,d=Math.max(0,-(o*u+a)),f=-d*d+u*(u+2*l)+c;else u<=-m?(d=Math.max(0,-(-o*s+a)),u=d>0?-s:Math.min(Math.max(-s,-l),s),f=-d*d+u*(u+2*l)+c):u<=m?(d=0,u=Math.min(Math.max(-s,-l),s),f=u*(u+2*l)+c):(d=Math.max(0,-(o*s+a)),u=d>0?s:Math.min(Math.max(-s,-l),s),f=-d*d+u*(u+2*l)+c);else u=o>0?-s:s,d=Math.max(0,-(o*u+a)),f=-d*d+u*(u+2*l)+c;return i&&i.copy(this.origin).addScaledVector(this.direction,d),n&&n.copy(Ih).addScaledVector(Va,u),f}intersectSphere(e,t){Fn.subVectors(e.center,this.origin);const i=Fn.dot(this.direction),n=Fn.dot(Fn)-i*i,s=e.radius*e.radius;if(n>s)return null;const o=Math.sqrt(s-n),a=i-o,l=i+o;return l<0?null:a<0?this.at(l,t):this.at(a,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(e.normal)+e.constant)/t;return i>=0?i:null}intersectPlane(e,t){const i=this.distanceToPlane(e);return i===null?null:this.at(i,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let i,n,s,o,a,l;const c=1/this.direction.x,h=1/this.direction.y,d=1/this.direction.z,u=this.origin;return c>=0?(i=(e.min.x-u.x)*c,n=(e.max.x-u.x)*c):(i=(e.max.x-u.x)*c,n=(e.min.x-u.x)*c),h>=0?(s=(e.min.y-u.y)*h,o=(e.max.y-u.y)*h):(s=(e.max.y-u.y)*h,o=(e.min.y-u.y)*h),i>o||s>n||((s>i||isNaN(i))&&(i=s),(o<n||isNaN(n))&&(n=o),d>=0?(a=(e.min.z-u.z)*d,l=(e.max.z-u.z)*d):(a=(e.max.z-u.z)*d,l=(e.min.z-u.z)*d),i>l||a>n)||((a>i||i!==i)&&(i=a),(l<n||n!==n)&&(n=l),n<0)?null:this.at(i>=0?i:n,t)}intersectsBox(e){return this.intersectBox(e,Fn)!==null}intersectTriangle(e,t,i,n,s){_h.subVectors(t,e),ka.subVectors(i,e),Th.crossVectors(_h,ka);let o=this.direction.dot(Th),a;if(o>0){if(n)return null;a=1}else if(o<0)a=-1,o=-o;else return null;ls.subVectors(this.origin,e);const l=a*this.direction.dot(ka.crossVectors(ls,ka));if(l<0)return null;const c=a*this.direction.dot(_h.cross(ls));if(c<0||l+c>o)return null;const h=-a*ls.dot(Th);return h<0?null:this.at(h/o,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class fe{constructor(e,t,i,n,s,o,a,l,c,h,d,u,f,m,E,g){fe.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,i,n,s,o,a,l,c,h,d,u,f,m,E,g)}set(e,t,i,n,s,o,a,l,c,h,d,u,f,m,E,g){const p=this.elements;return p[0]=e,p[4]=t,p[8]=i,p[12]=n,p[1]=s,p[5]=o,p[9]=a,p[13]=l,p[2]=c,p[6]=h,p[10]=d,p[14]=u,p[3]=f,p[7]=m,p[11]=E,p[15]=g,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new fe().fromArray(this.elements)}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],t[9]=i[9],t[10]=i[10],t[11]=i[11],t[12]=i[12],t[13]=i[13],t[14]=i[14],t[15]=i[15],this}copyPosition(e){const t=this.elements,i=e.elements;return t[12]=i[12],t[13]=i[13],t[14]=i[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,i){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,t,i){return this.set(e.x,t.x,i.x,0,e.y,t.y,i.y,0,e.z,t.z,i.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,i=e.elements,n=1/_r.setFromMatrixColumn(e,0).length(),s=1/_r.setFromMatrixColumn(e,1).length(),o=1/_r.setFromMatrixColumn(e,2).length();return t[0]=i[0]*n,t[1]=i[1]*n,t[2]=i[2]*n,t[3]=0,t[4]=i[4]*s,t[5]=i[5]*s,t[6]=i[6]*s,t[7]=0,t[8]=i[8]*o,t[9]=i[9]*o,t[10]=i[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,i=e.x,n=e.y,s=e.z,o=Math.cos(i),a=Math.sin(i),l=Math.cos(n),c=Math.sin(n),h=Math.cos(s),d=Math.sin(s);if(e.order==="XYZ"){const u=o*h,f=o*d,m=a*h,E=a*d;t[0]=l*h,t[4]=-l*d,t[8]=c,t[1]=f+m*c,t[5]=u-E*c,t[9]=-a*l,t[2]=E-u*c,t[6]=m+f*c,t[10]=o*l}else if(e.order==="YXZ"){const u=l*h,f=l*d,m=c*h,E=c*d;t[0]=u+E*a,t[4]=m*a-f,t[8]=o*c,t[1]=o*d,t[5]=o*h,t[9]=-a,t[2]=f*a-m,t[6]=E+u*a,t[10]=o*l}else if(e.order==="ZXY"){const u=l*h,f=l*d,m=c*h,E=c*d;t[0]=u-E*a,t[4]=-o*d,t[8]=m+f*a,t[1]=f+m*a,t[5]=o*h,t[9]=E-u*a,t[2]=-o*c,t[6]=a,t[10]=o*l}else if(e.order==="ZYX"){const u=o*h,f=o*d,m=a*h,E=a*d;t[0]=l*h,t[4]=m*c-f,t[8]=u*c+E,t[1]=l*d,t[5]=E*c+u,t[9]=f*c-m,t[2]=-c,t[6]=a*l,t[10]=o*l}else if(e.order==="YZX"){const u=o*l,f=o*c,m=a*l,E=a*c;t[0]=l*h,t[4]=E-u*d,t[8]=m*d+f,t[1]=d,t[5]=o*h,t[9]=-a*h,t[2]=-c*h,t[6]=f*d+m,t[10]=u-E*d}else if(e.order==="XZY"){const u=o*l,f=o*c,m=a*l,E=a*c;t[0]=l*h,t[4]=-d,t[8]=c*h,t[1]=u*d+E,t[5]=o*h,t[9]=f*d-m,t[2]=m*d-f,t[6]=a*h,t[10]=E*d+u}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(yT,e,bT)}lookAt(e,t,i){const n=this.elements;return Ri.subVectors(e,t),Ri.lengthSq()===0&&(Ri.z=1),Ri.normalize(),cs.crossVectors(i,Ri),cs.lengthSq()===0&&(Math.abs(i.z)===1?Ri.x+=1e-4:Ri.z+=1e-4,Ri.normalize(),cs.crossVectors(i,Ri)),cs.normalize(),Ga.crossVectors(Ri,cs),n[0]=cs.x,n[4]=Ga.x,n[8]=Ri.x,n[1]=cs.y,n[5]=Ga.y,n[9]=Ri.y,n[2]=cs.z,n[6]=Ga.z,n[10]=Ri.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,n=t.elements,s=this.elements,o=i[0],a=i[4],l=i[8],c=i[12],h=i[1],d=i[5],u=i[9],f=i[13],m=i[2],E=i[6],g=i[10],p=i[14],_=i[3],T=i[7],I=i[11],v=i[15],b=n[0],x=n[4],A=n[8],y=n[12],S=n[1],O=n[5],w=n[9],N=n[13],C=n[2],U=n[6],B=n[10],V=n[14],j=n[3],G=n[7],se=n[11],W=n[15];return s[0]=o*b+a*S+l*C+c*j,s[4]=o*x+a*O+l*U+c*G,s[8]=o*A+a*w+l*B+c*se,s[12]=o*y+a*N+l*V+c*W,s[1]=h*b+d*S+u*C+f*j,s[5]=h*x+d*O+u*U+f*G,s[9]=h*A+d*w+u*B+f*se,s[13]=h*y+d*N+u*V+f*W,s[2]=m*b+E*S+g*C+p*j,s[6]=m*x+E*O+g*U+p*G,s[10]=m*A+E*w+g*B+p*se,s[14]=m*y+E*N+g*V+p*W,s[3]=_*b+T*S+I*C+v*j,s[7]=_*x+T*O+I*U+v*G,s[11]=_*A+T*w+I*B+v*se,s[15]=_*y+T*N+I*V+v*W,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[4],n=e[8],s=e[12],o=e[1],a=e[5],l=e[9],c=e[13],h=e[2],d=e[6],u=e[10],f=e[14],m=e[3],E=e[7],g=e[11],p=e[15];return m*(+s*l*d-n*c*d-s*a*u+i*c*u+n*a*f-i*l*f)+E*(+t*l*f-t*c*u+s*o*u-n*o*f+n*c*h-s*l*h)+g*(+t*c*d-t*a*f-s*o*d+i*o*f+s*a*h-i*c*h)+p*(-n*a*h-t*l*d+t*a*u+n*o*d-i*o*u+i*l*h)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,i){const n=this.elements;return e.isVector3?(n[12]=e.x,n[13]=e.y,n[14]=e.z):(n[12]=e,n[13]=t,n[14]=i),this}invert(){const e=this.elements,t=e[0],i=e[1],n=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],h=e[8],d=e[9],u=e[10],f=e[11],m=e[12],E=e[13],g=e[14],p=e[15],_=d*g*c-E*u*c+E*l*f-a*g*f-d*l*p+a*u*p,T=m*u*c-h*g*c-m*l*f+o*g*f+h*l*p-o*u*p,I=h*E*c-m*d*c+m*a*f-o*E*f-h*a*p+o*d*p,v=m*d*l-h*E*l-m*a*u+o*E*u+h*a*g-o*d*g,b=t*_+i*T+n*I+s*v;if(b===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const x=1/b;return e[0]=_*x,e[1]=(E*u*s-d*g*s-E*n*f+i*g*f+d*n*p-i*u*p)*x,e[2]=(a*g*s-E*l*s+E*n*c-i*g*c-a*n*p+i*l*p)*x,e[3]=(d*l*s-a*u*s-d*n*c+i*u*c+a*n*f-i*l*f)*x,e[4]=T*x,e[5]=(h*g*s-m*u*s+m*n*f-t*g*f-h*n*p+t*u*p)*x,e[6]=(m*l*s-o*g*s-m*n*c+t*g*c+o*n*p-t*l*p)*x,e[7]=(o*u*s-h*l*s+h*n*c-t*u*c-o*n*f+t*l*f)*x,e[8]=I*x,e[9]=(m*d*s-h*E*s-m*i*f+t*E*f+h*i*p-t*d*p)*x,e[10]=(o*E*s-m*a*s+m*i*c-t*E*c-o*i*p+t*a*p)*x,e[11]=(h*a*s-o*d*s-h*i*c+t*d*c+o*i*f-t*a*f)*x,e[12]=v*x,e[13]=(h*E*n-m*d*n+m*i*u-t*E*u-h*i*g+t*d*g)*x,e[14]=(m*a*n-o*E*n-m*i*l+t*E*l+o*i*g-t*a*g)*x,e[15]=(o*d*n-h*a*n+h*i*l-t*d*l-o*i*u+t*a*u)*x,this}scale(e){const t=this.elements,i=e.x,n=e.y,s=e.z;return t[0]*=i,t[4]*=n,t[8]*=s,t[1]*=i,t[5]*=n,t[9]*=s,t[2]*=i,t[6]*=n,t[10]*=s,t[3]*=i,t[7]*=n,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],n=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,i,n))}makeTranslation(e,t,i){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,i,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,t,-i,0,0,i,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,0,i,0,0,1,0,0,-i,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,0,i,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const i=Math.cos(t),n=Math.sin(t),s=1-i,o=e.x,a=e.y,l=e.z,c=s*o,h=s*a;return this.set(c*o+i,c*a-n*l,c*l+n*a,0,c*a+n*l,h*a+i,h*l-n*o,0,c*l-n*a,h*l+n*o,s*l*l+i,0,0,0,0,1),this}makeScale(e,t,i){return this.set(e,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,t,i,n,s,o){return this.set(1,i,s,0,e,1,o,0,t,n,1,0,0,0,0,1),this}compose(e,t,i){const n=this.elements,s=t._x,o=t._y,a=t._z,l=t._w,c=s+s,h=o+o,d=a+a,u=s*c,f=s*h,m=s*d,E=o*h,g=o*d,p=a*d,_=l*c,T=l*h,I=l*d,v=i.x,b=i.y,x=i.z;return n[0]=(1-(E+p))*v,n[1]=(f+I)*v,n[2]=(m-T)*v,n[3]=0,n[4]=(f-I)*b,n[5]=(1-(u+p))*b,n[6]=(g+_)*b,n[7]=0,n[8]=(m+T)*x,n[9]=(g-_)*x,n[10]=(1-(u+E))*x,n[11]=0,n[12]=e.x,n[13]=e.y,n[14]=e.z,n[15]=1,this}decompose(e,t,i){const n=this.elements;let s=_r.set(n[0],n[1],n[2]).length();const o=_r.set(n[4],n[5],n[6]).length(),a=_r.set(n[8],n[9],n[10]).length();this.determinant()<0&&(s=-s),e.x=n[12],e.y=n[13],e.z=n[14],tn.copy(this);const c=1/s,h=1/o,d=1/a;return tn.elements[0]*=c,tn.elements[1]*=c,tn.elements[2]*=c,tn.elements[4]*=h,tn.elements[5]*=h,tn.elements[6]*=h,tn.elements[8]*=d,tn.elements[9]*=d,tn.elements[10]*=d,t.setFromRotationMatrix(tn),i.x=s,i.y=o,i.z=a,this}makePerspective(e,t,i,n,s,o,a=Xn){const l=this.elements,c=2*s/(t-e),h=2*s/(i-n),d=(t+e)/(t-e),u=(i+n)/(i-n);let f,m;if(a===Xn)f=-(o+s)/(o-s),m=-2*o*s/(o-s);else if(a===Sc)f=-o/(o-s),m=-o*s/(o-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);return l[0]=c,l[4]=0,l[8]=d,l[12]=0,l[1]=0,l[5]=h,l[9]=u,l[13]=0,l[2]=0,l[6]=0,l[10]=f,l[14]=m,l[3]=0,l[7]=0,l[11]=-1,l[15]=0,this}makeOrthographic(e,t,i,n,s,o,a=Xn){const l=this.elements,c=1/(t-e),h=1/(i-n),d=1/(o-s),u=(t+e)*c,f=(i+n)*h;let m,E;if(a===Xn)m=(o+s)*d,E=-2*d;else if(a===Sc)m=s*d,E=-1*d;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);return l[0]=2*c,l[4]=0,l[8]=0,l[12]=-u,l[1]=0,l[5]=2*h,l[9]=0,l[13]=-f,l[2]=0,l[6]=0,l[10]=E,l[14]=-m,l[3]=0,l[7]=0,l[11]=0,l[15]=1,this}equals(e){const t=this.elements,i=e.elements;for(let n=0;n<16;n++)if(t[n]!==i[n])return!1;return!0}fromArray(e,t=0){for(let i=0;i<16;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e[t+9]=i[9],e[t+10]=i[10],e[t+11]=i[11],e[t+12]=i[12],e[t+13]=i[13],e[t+14]=i[14],e[t+15]=i[15],e}}const _r=new F,tn=new fe,yT=new F(0,0,0),bT=new F(1,1,1),cs=new F,Ga=new F,Ri=new F,mp=new fe,gp=new si;class wo{constructor(e=0,t=0,i=0,n=wo.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=i,this._order=n}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,i,n=this._order){return this._x=e,this._y=t,this._z=i,this._order=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,i=!0){const n=e.elements,s=n[0],o=n[4],a=n[8],l=n[1],c=n[5],h=n[9],d=n[2],u=n[6],f=n[10];switch(t){case"XYZ":this._y=Math.asin(oi(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-h,f),this._z=Math.atan2(-o,s)):(this._x=Math.atan2(u,c),this._z=0);break;case"YXZ":this._x=Math.asin(-oi(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(a,f),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-d,s),this._z=0);break;case"ZXY":this._x=Math.asin(oi(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(-d,f),this._z=Math.atan2(-o,c)):(this._y=0,this._z=Math.atan2(l,s));break;case"ZYX":this._y=Math.asin(-oi(d,-1,1)),Math.abs(d)<.9999999?(this._x=Math.atan2(u,f),this._z=Math.atan2(l,s)):(this._x=0,this._z=Math.atan2(-o,c));break;case"YZX":this._z=Math.asin(oi(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-h,c),this._y=Math.atan2(-d,s)):(this._x=0,this._y=Math.atan2(a,f));break;case"XZY":this._z=Math.asin(-oi(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(u,c),this._y=Math.atan2(a,s)):(this._x=Math.atan2(-h,f),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,i===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,i){return mp.makeRotationFromQuaternion(e),this.setFromRotationMatrix(mp,t,i)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return gp.setFromEuler(this),this.setFromQuaternion(gp,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}wo.DEFAULT_ORDER="XYZ";class Xd{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let ST=0;const Ep=new F,Tr=new si,Pn=new fe,Ha=new F,Do=new F,xT=new F,wT=new si,Ip=new F(1,0,0),_p=new F(0,1,0),Tp=new F(0,0,1),AT={type:"added"},RT={type:"removed"};class St extends So{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:ST++}),this.uuid=Jn(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=St.DEFAULT_UP.clone();const e=new F,t=new wo,i=new si,n=new F(1,1,1);function s(){i.setFromEuler(t,!1)}function o(){t.setFromQuaternion(i,void 0,!1)}t._onChange(s),i._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:n},modelViewMatrix:{value:new fe},normalMatrix:{value:new Xe}}),this.matrix=new fe,this.matrixWorld=new fe,this.matrixAutoUpdate=St.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=St.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Xd,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Tr.setFromAxisAngle(e,t),this.quaternion.multiply(Tr),this}rotateOnWorldAxis(e,t){return Tr.setFromAxisAngle(e,t),this.quaternion.premultiply(Tr),this}rotateX(e){return this.rotateOnAxis(Ip,e)}rotateY(e){return this.rotateOnAxis(_p,e)}rotateZ(e){return this.rotateOnAxis(Tp,e)}translateOnAxis(e,t){return Ep.copy(e).applyQuaternion(this.quaternion),this.position.add(Ep.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(Ip,e)}translateY(e){return this.translateOnAxis(_p,e)}translateZ(e){return this.translateOnAxis(Tp,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Pn.copy(this.matrixWorld).invert())}lookAt(e,t,i){e.isVector3?Ha.copy(e):Ha.set(e,t,i);const n=this.parent;this.updateWorldMatrix(!0,!1),Do.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Pn.lookAt(Do,Ha,this.up):Pn.lookAt(Ha,Do,this.up),this.quaternion.setFromRotationMatrix(Pn),n&&(Pn.extractRotation(n.matrixWorld),Tr.setFromRotationMatrix(Pn),this.quaternion.premultiply(Tr.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(AT)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(RT)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),Pn.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Pn.multiply(e.parent.matrixWorld)),e.applyMatrix4(Pn),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let i=0,n=this.children.length;i<n;i++){const o=this.children[i].getObjectByProperty(e,t);if(o!==void 0)return o}}getObjectsByProperty(e,t,i=[]){this[e]===t&&i.push(this);const n=this.children;for(let s=0,o=n.length;s<o;s++)n[s].getObjectsByProperty(e,t,i);return i}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Do,e,xT),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Do,wT,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let i=0,n=t.length;i<n;i++){const s=t[i];(s.matrixWorldAutoUpdate===!0||e===!0)&&s.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const i=this.parent;if(e===!0&&i!==null&&i.matrixWorldAutoUpdate===!0&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const n=this.children;for(let s=0,o=n.length;s<o;s++){const a=n[s];a.matrixWorldAutoUpdate===!0&&a.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=e===void 0||typeof e=="string",i={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const n={};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.castShadow===!0&&(n.castShadow=!0),this.receiveShadow===!0&&(n.receiveShadow=!0),this.visible===!1&&(n.visible=!1),this.frustumCulled===!1&&(n.frustumCulled=!1),this.renderOrder!==0&&(n.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(n.userData=this.userData),n.layers=this.layers.mask,n.matrix=this.matrix.toArray(),n.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(n.matrixAutoUpdate=!1),this.isInstancedMesh&&(n.type="InstancedMesh",n.count=this.count,n.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(n.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(n.type="BatchedMesh",n.perObjectFrustumCulled=this.perObjectFrustumCulled,n.sortObjects=this.sortObjects,n.drawRanges=this._drawRanges,n.reservedRanges=this._reservedRanges,n.visibility=this._visibility,n.active=this._active,n.bounds=this._bounds.map(a=>({boxInitialized:a.boxInitialized,boxMin:a.box.min.toArray(),boxMax:a.box.max.toArray(),sphereInitialized:a.sphereInitialized,sphereRadius:a.sphere.radius,sphereCenter:a.sphere.center.toArray()})),n.maxGeometryCount=this._maxGeometryCount,n.maxVertexCount=this._maxVertexCount,n.maxIndexCount=this._maxIndexCount,n.geometryInitialized=this._geometryInitialized,n.geometryCount=this._geometryCount,n.matricesTexture=this._matricesTexture.toJSON(e),this.boundingSphere!==null&&(n.boundingSphere={center:n.boundingSphere.center.toArray(),radius:n.boundingSphere.radius}),this.boundingBox!==null&&(n.boundingBox={min:n.boundingBox.min.toArray(),max:n.boundingBox.max.toArray()}));function s(a,l){return a[l.uuid]===void 0&&(a[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?n.background=this.background.toJSON():this.background.isTexture&&(n.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(n.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){n.geometry=s(e.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const l=a.shapes;if(Array.isArray(l))for(let c=0,h=l.length;c<h;c++){const d=l[c];s(e.shapes,d)}else s(e.shapes,l)}}if(this.isSkinnedMesh&&(n.bindMode=this.bindMode,n.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),n.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let l=0,c=this.material.length;l<c;l++)a.push(s(e.materials,this.material[l]));n.material=a}else n.material=s(e.materials,this.material);if(this.children.length>0){n.children=[];for(let a=0;a<this.children.length;a++)n.children.push(this.children[a].toJSON(e).object)}if(this.animations.length>0){n.animations=[];for(let a=0;a<this.animations.length;a++){const l=this.animations[a];n.animations.push(s(e.animations,l))}}if(t){const a=o(e.geometries),l=o(e.materials),c=o(e.textures),h=o(e.images),d=o(e.shapes),u=o(e.skeletons),f=o(e.animations),m=o(e.nodes);a.length>0&&(i.geometries=a),l.length>0&&(i.materials=l),c.length>0&&(i.textures=c),h.length>0&&(i.images=h),d.length>0&&(i.shapes=d),u.length>0&&(i.skeletons=u),f.length>0&&(i.animations=f),m.length>0&&(i.nodes=m)}return i.object=n,i;function o(a){const l=[];for(const c in a){const h=a[c];delete h.metadata,l.push(h)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let i=0;i<e.children.length;i++){const n=e.children[i];this.add(n.clone())}return this}}St.DEFAULT_UP=new F(0,1,0);St.DEFAULT_MATRIX_AUTO_UPDATE=!0;St.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const nn=new F,Ln=new F,vh=new F,On=new F,vr=new F,Cr=new F,vp=new F,Ch=new F,yh=new F,bh=new F;let Wa=!1;class yt{constructor(e=new F,t=new F,i=new F){this.a=e,this.b=t,this.c=i}static getNormal(e,t,i,n){n.subVectors(i,t),nn.subVectors(e,t),n.cross(nn);const s=n.lengthSq();return s>0?n.multiplyScalar(1/Math.sqrt(s)):n.set(0,0,0)}static getBarycoord(e,t,i,n,s){nn.subVectors(n,t),Ln.subVectors(i,t),vh.subVectors(e,t);const o=nn.dot(nn),a=nn.dot(Ln),l=nn.dot(vh),c=Ln.dot(Ln),h=Ln.dot(vh),d=o*c-a*a;if(d===0)return s.set(0,0,0),null;const u=1/d,f=(c*l-a*h)*u,m=(o*h-a*l)*u;return s.set(1-f-m,m,f)}static containsPoint(e,t,i,n){return this.getBarycoord(e,t,i,n,On)===null?!1:On.x>=0&&On.y>=0&&On.x+On.y<=1}static getUV(e,t,i,n,s,o,a,l){return Wa===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),Wa=!0),this.getInterpolation(e,t,i,n,s,o,a,l)}static getInterpolation(e,t,i,n,s,o,a,l){return this.getBarycoord(e,t,i,n,On)===null?(l.x=0,l.y=0,"z"in l&&(l.z=0),"w"in l&&(l.w=0),null):(l.setScalar(0),l.addScaledVector(s,On.x),l.addScaledVector(o,On.y),l.addScaledVector(a,On.z),l)}static isFrontFacing(e,t,i,n){return nn.subVectors(i,t),Ln.subVectors(e,t),nn.cross(Ln).dot(n)<0}set(e,t,i){return this.a.copy(e),this.b.copy(t),this.c.copy(i),this}setFromPointsAndIndices(e,t,i,n){return this.a.copy(e[t]),this.b.copy(e[i]),this.c.copy(e[n]),this}setFromAttributeAndIndices(e,t,i,n){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,i),this.c.fromBufferAttribute(e,n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return nn.subVectors(this.c,this.b),Ln.subVectors(this.a,this.b),nn.cross(Ln).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return yt.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return yt.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,i,n,s){return Wa===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),Wa=!0),yt.getInterpolation(e,this.a,this.b,this.c,t,i,n,s)}getInterpolation(e,t,i,n,s){return yt.getInterpolation(e,this.a,this.b,this.c,t,i,n,s)}containsPoint(e){return yt.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return yt.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const i=this.a,n=this.b,s=this.c;let o,a;vr.subVectors(n,i),Cr.subVectors(s,i),Ch.subVectors(e,i);const l=vr.dot(Ch),c=Cr.dot(Ch);if(l<=0&&c<=0)return t.copy(i);yh.subVectors(e,n);const h=vr.dot(yh),d=Cr.dot(yh);if(h>=0&&d<=h)return t.copy(n);const u=l*d-h*c;if(u<=0&&l>=0&&h<=0)return o=l/(l-h),t.copy(i).addScaledVector(vr,o);bh.subVectors(e,s);const f=vr.dot(bh),m=Cr.dot(bh);if(m>=0&&f<=m)return t.copy(s);const E=f*c-l*m;if(E<=0&&c>=0&&m<=0)return a=c/(c-m),t.copy(i).addScaledVector(Cr,a);const g=h*m-f*d;if(g<=0&&d-h>=0&&f-m>=0)return vp.subVectors(s,n),a=(d-h)/(d-h+(f-m)),t.copy(n).addScaledVector(vp,a);const p=1/(g+E+u);return o=E*p,a=u*p,t.copy(i).addScaledVector(vr,o).addScaledVector(Cr,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const rE={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},hs={h:0,s:0,l:0},Ya={h:0,s:0,l:0};function Sh(r,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?r+(e-r)*6*t:t<1/2?e:t<2/3?r+(e-r)*6*(2/3-t):r}class Fe{constructor(e,t,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,i)}set(e,t,i){if(t===void 0&&i===void 0){const n=e;n&&n.isColor?this.copy(n):typeof n=="number"?this.setHex(n):typeof n=="string"&&this.setStyle(n)}else this.setRGB(e,t,i);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=ni){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,rt.toWorkingColorSpace(this,t),this}setRGB(e,t,i,n=rt.workingColorSpace){return this.r=e,this.g=t,this.b=i,rt.toWorkingColorSpace(this,n),this}setHSL(e,t,i,n=rt.workingColorSpace){if(e=Yd(e,1),t=oi(t,0,1),i=oi(i,0,1),t===0)this.r=this.g=this.b=i;else{const s=i<=.5?i*(1+t):i+t-i*t,o=2*i-s;this.r=Sh(o,s,e+1/3),this.g=Sh(o,s,e),this.b=Sh(o,s,e-1/3)}return rt.toWorkingColorSpace(this,n),this}setStyle(e,t=ni){function i(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let n;if(n=/^(\w+)\(([^\)]*)\)/.exec(e)){let s;const o=n[1],a=n[2];switch(o){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,t);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,t);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(n=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=n[1],o=s.length;if(o===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,t);if(o===6)return this.setHex(parseInt(s,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=ni){const i=rE[e.toLowerCase()];return i!==void 0?this.setHex(i,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=mo(e.r),this.g=mo(e.g),this.b=mo(e.b),this}copyLinearToSRGB(e){return this.r=fh(e.r),this.g=fh(e.g),this.b=fh(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=ni){return rt.fromWorkingColorSpace(ci.copy(this),e),Math.round(oi(ci.r*255,0,255))*65536+Math.round(oi(ci.g*255,0,255))*256+Math.round(oi(ci.b*255,0,255))}getHexString(e=ni){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=rt.workingColorSpace){rt.fromWorkingColorSpace(ci.copy(this),t);const i=ci.r,n=ci.g,s=ci.b,o=Math.max(i,n,s),a=Math.min(i,n,s);let l,c;const h=(a+o)/2;if(a===o)l=0,c=0;else{const d=o-a;switch(c=h<=.5?d/(o+a):d/(2-o-a),o){case i:l=(n-s)/d+(n<s?6:0);break;case n:l=(s-i)/d+2;break;case s:l=(i-n)/d+4;break}l/=6}return e.h=l,e.s=c,e.l=h,e}getRGB(e,t=rt.workingColorSpace){return rt.fromWorkingColorSpace(ci.copy(this),t),e.r=ci.r,e.g=ci.g,e.b=ci.b,e}getStyle(e=ni){rt.fromWorkingColorSpace(ci.copy(this),e);const t=ci.r,i=ci.g,n=ci.b;return e!==ni?`color(${e} ${t.toFixed(3)} ${i.toFixed(3)} ${n.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(i*255)},${Math.round(n*255)})`}offsetHSL(e,t,i){return this.getHSL(hs),this.setHSL(hs.h+e,hs.s+t,hs.l+i)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,i){return this.r=e.r+(t.r-e.r)*i,this.g=e.g+(t.g-e.g)*i,this.b=e.b+(t.b-e.b)*i,this}lerpHSL(e,t){this.getHSL(hs),e.getHSL(Ya);const i=ua(hs.h,Ya.h,t),n=ua(hs.s,Ya.s,t),s=ua(hs.l,Ya.l,t);return this.setHSL(i,n,s),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,i=this.g,n=this.b,s=e.elements;return this.r=s[0]*t+s[3]*i+s[6]*n,this.g=s[1]*t+s[4]*i+s[7]*n,this.b=s[2]*t+s[5]*i+s[8]*n,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const ci=new Fe;Fe.NAMES=rE;let MT=0;class Fs extends So{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:MT++}),this.uuid=Jn(),this.name="",this.type="Material",this.blending=fo,this.side=$i,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=Cu,this.blendDst=yu,this.blendEquation=qs,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new Fe(0,0,0),this.blendAlpha=0,this.depthFunc=vc,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=lp,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=pr,this.stencilZFail=pr,this.stencilZPass=pr,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const i=e[t];if(i===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const n=this[t];if(n===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}n&&n.isColor?n.set(i):n&&n.isVector3&&i&&i.isVector3?n.copy(i):this[t]=i}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const i={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),this.roughness!==void 0&&(i.roughness=this.roughness),this.metalness!==void 0&&(i.metalness=this.metalness),this.sheen!==void 0&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(i.shininess=this.shininess),this.clearcoat!==void 0&&(i.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(i.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(i.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(i.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(i.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(i.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(e).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(e).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(e).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(e).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(e).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(i.combine=this.combine)),this.envMapIntensity!==void 0&&(i.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(i.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(i.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(i.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(i.size=this.size),this.shadowSide!==null&&(i.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==fo&&(i.blending=this.blending),this.side!==$i&&(i.side=this.side),this.vertexColors===!0&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),this.transparent===!0&&(i.transparent=!0),this.blendSrc!==Cu&&(i.blendSrc=this.blendSrc),this.blendDst!==yu&&(i.blendDst=this.blendDst),this.blendEquation!==qs&&(i.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(i.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(i.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(i.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(i.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(i.blendAlpha=this.blendAlpha),this.depthFunc!==vc&&(i.depthFunc=this.depthFunc),this.depthTest===!1&&(i.depthTest=this.depthTest),this.depthWrite===!1&&(i.depthWrite=this.depthWrite),this.colorWrite===!1&&(i.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(i.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==lp&&(i.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(i.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(i.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==pr&&(i.stencilFail=this.stencilFail),this.stencilZFail!==pr&&(i.stencilZFail=this.stencilZFail),this.stencilZPass!==pr&&(i.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(i.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(i.rotation=this.rotation),this.polygonOffset===!0&&(i.polygonOffset=!0),this.polygonOffsetFactor!==0&&(i.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(i.linewidth=this.linewidth),this.dashSize!==void 0&&(i.dashSize=this.dashSize),this.gapSize!==void 0&&(i.gapSize=this.gapSize),this.scale!==void 0&&(i.scale=this.scale),this.dithering===!0&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),this.alphaHash===!0&&(i.alphaHash=!0),this.alphaToCoverage===!0&&(i.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(i.premultipliedAlpha=!0),this.forceSinglePass===!0&&(i.forceSinglePass=!0),this.wireframe===!0&&(i.wireframe=!0),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(i.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(i.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(i.flatShading=!0),this.visible===!1&&(i.visible=!1),this.toneMapped===!1&&(i.toneMapped=!1),this.fog===!1&&(i.fog=!1),Object.keys(this.userData).length>0&&(i.userData=this.userData);function n(s){const o=[];for(const a in s){const l=s[a];delete l.metadata,o.push(l)}return o}if(t){const s=n(e.textures),o=n(e.images);s.length>0&&(i.textures=s),o.length>0&&(i.images=o)}return i}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let i=null;if(t!==null){const n=t.length;i=new Array(n);for(let s=0;s!==n;++s)i[s]=t[s].clone()}return this.clippingPlanes=i,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}class Ti extends Fs{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Fe(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=kd,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const zt=new F,Xa=new Re;class ot{constructor(e,t,i=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=i,this.usage=wu,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.gpuType=Yn,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}get updateRange(){return console.warn("THREE.BufferAttribute: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead."),this._updateRange}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,i){e*=this.itemSize,i*=t.itemSize;for(let n=0,s=this.itemSize;n<s;n++)this.array[e+n]=t.array[i+n];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,i=this.count;t<i;t++)Xa.fromBufferAttribute(this,t),Xa.applyMatrix3(e),this.setXY(t,Xa.x,Xa.y);else if(this.itemSize===3)for(let t=0,i=this.count;t<i;t++)zt.fromBufferAttribute(this,t),zt.applyMatrix3(e),this.setXYZ(t,zt.x,zt.y,zt.z);return this}applyMatrix4(e){for(let t=0,i=this.count;t<i;t++)zt.fromBufferAttribute(this,t),zt.applyMatrix4(e),this.setXYZ(t,zt.x,zt.y,zt.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)zt.fromBufferAttribute(this,t),zt.applyNormalMatrix(e),this.setXYZ(t,zt.x,zt.y,zt.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)zt.fromBufferAttribute(this,t),zt.transformDirection(e),this.setXYZ(t,zt.x,zt.y,zt.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let i=this.array[e*this.itemSize+t];return this.normalized&&(i=yn(i,this.array)),i}setComponent(e,t,i){return this.normalized&&(i=ut(i,this.array)),this.array[e*this.itemSize+t]=i,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=yn(t,this.array)),t}setX(e,t){return this.normalized&&(t=ut(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=yn(t,this.array)),t}setY(e,t){return this.normalized&&(t=ut(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=yn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=ut(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=yn(t,this.array)),t}setW(e,t){return this.normalized&&(t=ut(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,i){return e*=this.itemSize,this.normalized&&(t=ut(t,this.array),i=ut(i,this.array)),this.array[e+0]=t,this.array[e+1]=i,this}setXYZ(e,t,i,n){return e*=this.itemSize,this.normalized&&(t=ut(t,this.array),i=ut(i,this.array),n=ut(n,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=n,this}setXYZW(e,t,i,n,s){return e*=this.itemSize,this.normalized&&(t=ut(t,this.array),i=ut(i,this.array),n=ut(n,this.array),s=ut(s,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=n,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==wu&&(e.usage=this.usage),e}}class oE extends ot{constructor(e,t,i){super(new Uint16Array(e),t,i)}}class aE extends ot{constructor(e,t,i){super(new Uint32Array(e),t,i)}}class ht extends ot{constructor(e,t,i){super(new Float32Array(e),t,i)}}let FT=0;const Gi=new fe,xh=new St,yr=new F,Mi=new je,Uo=new je,jt=new F;class Ve extends So{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:FT++}),this.uuid=Jn(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(tE(e)?aE:oE)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,i=0){this.groups.push({start:e,count:t,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const i=this.attributes.normal;if(i!==void 0){const s=new Xe().getNormalMatrix(e);i.applyNormalMatrix(s),i.needsUpdate=!0}const n=this.attributes.tangent;return n!==void 0&&(n.transformDirection(e),n.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return Gi.makeRotationFromQuaternion(e),this.applyMatrix4(Gi),this}rotateX(e){return Gi.makeRotationX(e),this.applyMatrix4(Gi),this}rotateY(e){return Gi.makeRotationY(e),this.applyMatrix4(Gi),this}rotateZ(e){return Gi.makeRotationZ(e),this.applyMatrix4(Gi),this}translate(e,t,i){return Gi.makeTranslation(e,t,i),this.applyMatrix4(Gi),this}scale(e,t,i){return Gi.makeScale(e,t,i),this.applyMatrix4(Gi),this}lookAt(e){return xh.lookAt(e),xh.updateMatrix(),this.applyMatrix4(xh.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(yr).negate(),this.translate(yr.x,yr.y,yr.z),this}setFromPoints(e){const t=[];for(let i=0,n=e.length;i<n;i++){const s=e[i];t.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new ht(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new je);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new F(-1/0,-1/0,-1/0),new F(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let i=0,n=t.length;i<n;i++){const s=t[i];Mi.setFromBufferAttribute(s),this.morphTargetsRelative?(jt.addVectors(this.boundingBox.min,Mi.min),this.boundingBox.expandByPoint(jt),jt.addVectors(this.boundingBox.max,Mi.max),this.boundingBox.expandByPoint(jt)):(this.boundingBox.expandByPoint(Mi.min),this.boundingBox.expandByPoint(Mi.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new vi);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new F,1/0);return}if(e){const i=this.boundingSphere.center;if(Mi.setFromBufferAttribute(e),t)for(let s=0,o=t.length;s<o;s++){const a=t[s];Uo.setFromBufferAttribute(a),this.morphTargetsRelative?(jt.addVectors(Mi.min,Uo.min),Mi.expandByPoint(jt),jt.addVectors(Mi.max,Uo.max),Mi.expandByPoint(jt)):(Mi.expandByPoint(Uo.min),Mi.expandByPoint(Uo.max))}Mi.getCenter(i);let n=0;for(let s=0,o=e.count;s<o;s++)jt.fromBufferAttribute(e,s),n=Math.max(n,i.distanceToSquared(jt));if(t)for(let s=0,o=t.length;s<o;s++){const a=t[s],l=this.morphTargetsRelative;for(let c=0,h=a.count;c<h;c++)jt.fromBufferAttribute(a,c),l&&(yr.fromBufferAttribute(e,c),jt.add(yr)),n=Math.max(n,i.distanceToSquared(jt))}this.boundingSphere.radius=Math.sqrt(n),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const i=e.array,n=t.position.array,s=t.normal.array,o=t.uv.array,a=n.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new ot(new Float32Array(4*a),4));const l=this.getAttribute("tangent").array,c=[],h=[];for(let S=0;S<a;S++)c[S]=new F,h[S]=new F;const d=new F,u=new F,f=new F,m=new Re,E=new Re,g=new Re,p=new F,_=new F;function T(S,O,w){d.fromArray(n,S*3),u.fromArray(n,O*3),f.fromArray(n,w*3),m.fromArray(o,S*2),E.fromArray(o,O*2),g.fromArray(o,w*2),u.sub(d),f.sub(d),E.sub(m),g.sub(m);const N=1/(E.x*g.y-g.x*E.y);isFinite(N)&&(p.copy(u).multiplyScalar(g.y).addScaledVector(f,-E.y).multiplyScalar(N),_.copy(f).multiplyScalar(E.x).addScaledVector(u,-g.x).multiplyScalar(N),c[S].add(p),c[O].add(p),c[w].add(p),h[S].add(_),h[O].add(_),h[w].add(_))}let I=this.groups;I.length===0&&(I=[{start:0,count:i.length}]);for(let S=0,O=I.length;S<O;++S){const w=I[S],N=w.start,C=w.count;for(let U=N,B=N+C;U<B;U+=3)T(i[U+0],i[U+1],i[U+2])}const v=new F,b=new F,x=new F,A=new F;function y(S){x.fromArray(s,S*3),A.copy(x);const O=c[S];v.copy(O),v.sub(x.multiplyScalar(x.dot(O))).normalize(),b.crossVectors(A,O);const N=b.dot(h[S])<0?-1:1;l[S*4]=v.x,l[S*4+1]=v.y,l[S*4+2]=v.z,l[S*4+3]=N}for(let S=0,O=I.length;S<O;++S){const w=I[S],N=w.start,C=w.count;for(let U=N,B=N+C;U<B;U+=3)y(i[U+0]),y(i[U+1]),y(i[U+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new ot(new Float32Array(t.count*3),3),this.setAttribute("normal",i);else for(let u=0,f=i.count;u<f;u++)i.setXYZ(u,0,0,0);const n=new F,s=new F,o=new F,a=new F,l=new F,c=new F,h=new F,d=new F;if(e)for(let u=0,f=e.count;u<f;u+=3){const m=e.getX(u+0),E=e.getX(u+1),g=e.getX(u+2);n.fromBufferAttribute(t,m),s.fromBufferAttribute(t,E),o.fromBufferAttribute(t,g),h.subVectors(o,s),d.subVectors(n,s),h.cross(d),a.fromBufferAttribute(i,m),l.fromBufferAttribute(i,E),c.fromBufferAttribute(i,g),a.add(h),l.add(h),c.add(h),i.setXYZ(m,a.x,a.y,a.z),i.setXYZ(E,l.x,l.y,l.z),i.setXYZ(g,c.x,c.y,c.z)}else for(let u=0,f=t.count;u<f;u+=3)n.fromBufferAttribute(t,u+0),s.fromBufferAttribute(t,u+1),o.fromBufferAttribute(t,u+2),h.subVectors(o,s),d.subVectors(n,s),h.cross(d),i.setXYZ(u+0,h.x,h.y,h.z),i.setXYZ(u+1,h.x,h.y,h.z),i.setXYZ(u+2,h.x,h.y,h.z);this.normalizeNormals(),i.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,i=e.count;t<i;t++)jt.fromBufferAttribute(e,t),jt.normalize(),e.setXYZ(t,jt.x,jt.y,jt.z)}toNonIndexed(){function e(a,l){const c=a.array,h=a.itemSize,d=a.normalized,u=new c.constructor(l.length*h);let f=0,m=0;for(let E=0,g=l.length;E<g;E++){a.isInterleavedBufferAttribute?f=l[E]*a.data.stride+a.offset:f=l[E]*h;for(let p=0;p<h;p++)u[m++]=c[f++]}return new ot(u,h,d)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new Ve,i=this.index.array,n=this.attributes;for(const a in n){const l=n[a],c=e(l,i);t.setAttribute(a,c)}const s=this.morphAttributes;for(const a in s){const l=[],c=s[a];for(let h=0,d=c.length;h<d;h++){const u=c[h],f=e(u,i);l.push(f)}t.morphAttributes[a]=l}t.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,l=o.length;a<l;a++){const c=o[a];t.addGroup(c.start,c.count,c.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(e[c]=l[c]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const i=this.attributes;for(const l in i){const c=i[l];e.data.attributes[l]=c.toJSON(e.data)}const n={};let s=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],h=[];for(let d=0,u=c.length;d<u;d++){const f=c[d];h.push(f.toJSON(e.data))}h.length>0&&(n[l]=h,s=!0)}s&&(e.data.morphAttributes=n,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(e.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const i=e.index;i!==null&&this.setIndex(i.clone(t));const n=e.attributes;for(const c in n){const h=n[c];this.setAttribute(c,h.clone(t))}const s=e.morphAttributes;for(const c in s){const h=[],d=s[c];for(let u=0,f=d.length;u<f;u++)h.push(d[u].clone(t));this.morphAttributes[c]=h}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let c=0,h=o.length;c<h;c++){const d=o[c];this.addGroup(d.start,d.count,d.materialIndex)}const a=e.boundingBox;a!==null&&(this.boundingBox=a.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const Cp=new fe,Us=new xo,Za=new vi,yp=new F,br=new F,Sr=new F,xr=new F,wh=new F,ja=new F,qa=new Re,Ka=new Re,Qa=new Re,bp=new F,Sp=new F,xp=new F,Ja=new F,$a=new F;class ge extends St{constructor(e=new Ve,t=new Ti){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const n=t[i[0]];if(n!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=n.length;s<o;s++){const a=n[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}getVertexPosition(e,t){const i=this.geometry,n=i.attributes.position,s=i.morphAttributes.position,o=i.morphTargetsRelative;t.fromBufferAttribute(n,e);const a=this.morphTargetInfluences;if(s&&a){ja.set(0,0,0);for(let l=0,c=s.length;l<c;l++){const h=a[l],d=s[l];h!==0&&(wh.fromBufferAttribute(d,e),o?ja.addScaledVector(wh,h):ja.addScaledVector(wh.sub(t),h))}t.add(ja)}return t}raycast(e,t){const i=this.geometry,n=this.material,s=this.matrixWorld;n!==void 0&&(i.boundingSphere===null&&i.computeBoundingSphere(),Za.copy(i.boundingSphere),Za.applyMatrix4(s),Us.copy(e.ray).recast(e.near),!(Za.containsPoint(Us.origin)===!1&&(Us.intersectSphere(Za,yp)===null||Us.origin.distanceToSquared(yp)>(e.far-e.near)**2))&&(Cp.copy(s).invert(),Us.copy(e.ray).applyMatrix4(Cp),!(i.boundingBox!==null&&Us.intersectsBox(i.boundingBox)===!1)&&this._computeIntersections(e,t,Us)))}_computeIntersections(e,t,i){let n;const s=this.geometry,o=this.material,a=s.index,l=s.attributes.position,c=s.attributes.uv,h=s.attributes.uv1,d=s.attributes.normal,u=s.groups,f=s.drawRange;if(a!==null)if(Array.isArray(o))for(let m=0,E=u.length;m<E;m++){const g=u[m],p=o[g.materialIndex],_=Math.max(g.start,f.start),T=Math.min(a.count,Math.min(g.start+g.count,f.start+f.count));for(let I=_,v=T;I<v;I+=3){const b=a.getX(I),x=a.getX(I+1),A=a.getX(I+2);n=el(this,p,e,i,c,h,d,b,x,A),n&&(n.faceIndex=Math.floor(I/3),n.face.materialIndex=g.materialIndex,t.push(n))}}else{const m=Math.max(0,f.start),E=Math.min(a.count,f.start+f.count);for(let g=m,p=E;g<p;g+=3){const _=a.getX(g),T=a.getX(g+1),I=a.getX(g+2);n=el(this,o,e,i,c,h,d,_,T,I),n&&(n.faceIndex=Math.floor(g/3),t.push(n))}}else if(l!==void 0)if(Array.isArray(o))for(let m=0,E=u.length;m<E;m++){const g=u[m],p=o[g.materialIndex],_=Math.max(g.start,f.start),T=Math.min(l.count,Math.min(g.start+g.count,f.start+f.count));for(let I=_,v=T;I<v;I+=3){const b=I,x=I+1,A=I+2;n=el(this,p,e,i,c,h,d,b,x,A),n&&(n.faceIndex=Math.floor(I/3),n.face.materialIndex=g.materialIndex,t.push(n))}}else{const m=Math.max(0,f.start),E=Math.min(l.count,f.start+f.count);for(let g=m,p=E;g<p;g+=3){const _=g,T=g+1,I=g+2;n=el(this,o,e,i,c,h,d,_,T,I),n&&(n.faceIndex=Math.floor(g/3),t.push(n))}}}}function PT(r,e,t,i,n,s,o,a){let l;if(e.side===di?l=i.intersectTriangle(o,s,n,!0,a):l=i.intersectTriangle(n,s,o,e.side===$i,a),l===null)return null;$a.copy(a),$a.applyMatrix4(r.matrixWorld);const c=t.ray.origin.distanceTo($a);return c<t.near||c>t.far?null:{distance:c,point:$a.clone(),object:r}}function el(r,e,t,i,n,s,o,a,l,c){r.getVertexPosition(a,br),r.getVertexPosition(l,Sr),r.getVertexPosition(c,xr);const h=PT(r,e,t,i,br,Sr,xr,Ja);if(h){n&&(qa.fromBufferAttribute(n,a),Ka.fromBufferAttribute(n,l),Qa.fromBufferAttribute(n,c),h.uv=yt.getInterpolation(Ja,br,Sr,xr,qa,Ka,Qa,new Re)),s&&(qa.fromBufferAttribute(s,a),Ka.fromBufferAttribute(s,l),Qa.fromBufferAttribute(s,c),h.uv1=yt.getInterpolation(Ja,br,Sr,xr,qa,Ka,Qa,new Re),h.uv2=h.uv1),o&&(bp.fromBufferAttribute(o,a),Sp.fromBufferAttribute(o,l),xp.fromBufferAttribute(o,c),h.normal=yt.getInterpolation(Ja,br,Sr,xr,bp,Sp,xp,new F),h.normal.dot(i.direction)>0&&h.normal.multiplyScalar(-1));const d={a,b:l,c,normal:new F,materialIndex:0};yt.getNormal(br,Sr,xr,d.normal),h.face=d}return h}class wt extends Ve{constructor(e=1,t=1,i=1,n=1,s=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:i,widthSegments:n,heightSegments:s,depthSegments:o};const a=this;n=Math.floor(n),s=Math.floor(s),o=Math.floor(o);const l=[],c=[],h=[],d=[];let u=0,f=0;m("z","y","x",-1,-1,i,t,e,o,s,0),m("z","y","x",1,-1,i,t,-e,o,s,1),m("x","z","y",1,1,e,i,t,n,o,2),m("x","z","y",1,-1,e,i,-t,n,o,3),m("x","y","z",1,-1,e,t,i,n,s,4),m("x","y","z",-1,-1,e,t,-i,n,s,5),this.setIndex(l),this.setAttribute("position",new ht(c,3)),this.setAttribute("normal",new ht(h,3)),this.setAttribute("uv",new ht(d,2));function m(E,g,p,_,T,I,v,b,x,A,y){const S=I/x,O=v/A,w=I/2,N=v/2,C=b/2,U=x+1,B=A+1;let V=0,j=0;const G=new F;for(let se=0;se<B;se++){const W=se*O-N;for(let Y=0;Y<U;Y++){const q=Y*S-w;G[E]=q*_,G[g]=W*T,G[p]=C,c.push(G.x,G.y,G.z),G[E]=0,G[g]=0,G[p]=b>0?1:-1,h.push(G.x,G.y,G.z),d.push(Y/x),d.push(1-se/A),V+=1}}for(let se=0;se<A;se++)for(let W=0;W<x;W++){const Y=u+W+U*se,q=u+W+U*(se+1),Q=u+(W+1)+U*(se+1),te=u+(W+1)+U*se;l.push(Y,q,te),l.push(q,Q,te),j+=6}a.addGroup(f,j,y),f+=j,u+=V}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new wt(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function To(r){const e={};for(const t in r){e[t]={};for(const i in r[t]){const n=r[t][i];n&&(n.isColor||n.isMatrix3||n.isMatrix4||n.isVector2||n.isVector3||n.isVector4||n.isTexture||n.isQuaternion)?n.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][i]=null):e[t][i]=n.clone():Array.isArray(n)?e[t][i]=n.slice():e[t][i]=n}}return e}function Ei(r){const e={};for(let t=0;t<r.length;t++){const i=To(r[t]);for(const n in i)e[n]=i[n]}return e}function LT(r){const e=[];for(let t=0;t<r.length;t++)e.push(r[t].clone());return e}function lE(r){return r.getRenderTarget()===null?r.outputColorSpace:rt.workingColorSpace}const Vc={clone:To,merge:Ei};var OT=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,NT=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Mt extends Fs{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=OT,this.fragmentShader=NT,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1,clipCullDistance:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=To(e.uniforms),this.uniformsGroups=LT(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const n in this.uniforms){const o=this.uniforms[n].value;o&&o.isTexture?t.uniforms[n]={type:"t",value:o.toJSON(e).uuid}:o&&o.isColor?t.uniforms[n]={type:"c",value:o.getHex()}:o&&o.isVector2?t.uniforms[n]={type:"v2",value:o.toArray()}:o&&o.isVector3?t.uniforms[n]={type:"v3",value:o.toArray()}:o&&o.isVector4?t.uniforms[n]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?t.uniforms[n]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?t.uniforms[n]={type:"m4",value:o.toArray()}:t.uniforms[n]={value:o}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const i={};for(const n in this.extensions)this.extensions[n]===!0&&(i[n]=!0);return Object.keys(i).length>0&&(t.extensions=i),t}}class cE extends St{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new fe,this.projectionMatrix=new fe,this.projectionMatrixInverse=new fe,this.coordinateSystem=Xn}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class Fi extends cE{constructor(e=50,t=1,i=.1,n=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=i,this.far=n,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=Ia*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(po*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return Ia*2*Math.atan(Math.tan(po*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,i,n,s,o){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=n,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(po*.5*this.fov)/this.zoom,i=2*t,n=this.aspect*i,s=-.5*n;const o=this.view;if(this.view!==null&&this.view.enabled){const l=o.fullWidth,c=o.fullHeight;s+=o.offsetX*n/l,t-=o.offsetY*i/c,n*=o.width/l,i*=o.height/c}const a=this.filmOffset;a!==0&&(s+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+n,t,t-i,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const wr=-90,Ar=1;class DT extends St{constructor(e,t,i){super(),this.type="CubeCamera",this.renderTarget=i,this.coordinateSystem=null,this.activeMipmapLevel=0;const n=new Fi(wr,Ar,e,t);n.layers=this.layers,this.add(n);const s=new Fi(wr,Ar,e,t);s.layers=this.layers,this.add(s);const o=new Fi(wr,Ar,e,t);o.layers=this.layers,this.add(o);const a=new Fi(wr,Ar,e,t);a.layers=this.layers,this.add(a);const l=new Fi(wr,Ar,e,t);l.layers=this.layers,this.add(l);const c=new Fi(wr,Ar,e,t);c.layers=this.layers,this.add(c)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[i,n,s,o,a,l]=t;for(const c of t)this.remove(c);if(e===Xn)i.up.set(0,1,0),i.lookAt(1,0,0),n.up.set(0,1,0),n.lookAt(-1,0,0),s.up.set(0,0,-1),s.lookAt(0,1,0),o.up.set(0,0,1),o.lookAt(0,-1,0),a.up.set(0,1,0),a.lookAt(0,0,1),l.up.set(0,1,0),l.lookAt(0,0,-1);else if(e===Sc)i.up.set(0,-1,0),i.lookAt(-1,0,0),n.up.set(0,-1,0),n.lookAt(1,0,0),s.up.set(0,0,1),s.lookAt(0,1,0),o.up.set(0,0,-1),o.lookAt(0,-1,0),a.up.set(0,-1,0),a.lookAt(0,0,1),l.up.set(0,-1,0),l.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const c of t)this.add(c),c.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:i,activeMipmapLevel:n}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[s,o,a,l,c,h]=this.children,d=e.getRenderTarget(),u=e.getActiveCubeFace(),f=e.getActiveMipmapLevel(),m=e.xr.enabled;e.xr.enabled=!1;const E=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,e.setRenderTarget(i,0,n),e.render(t,s),e.setRenderTarget(i,1,n),e.render(t,o),e.setRenderTarget(i,2,n),e.render(t,a),e.setRenderTarget(i,3,n),e.render(t,l),e.setRenderTarget(i,4,n),e.render(t,c),i.texture.generateMipmaps=E,e.setRenderTarget(i,5,n),e.render(t,h),e.setRenderTarget(d,u,f),e.xr.enabled=m,i.texture.needsPMREMUpdate=!0}}class hE extends xi{constructor(e,t,i,n,s,o,a,l,c,h){e=e!==void 0?e:[],t=t!==void 0?t:Eo,super(e,t,i,n,s,o,a,l,c,h),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class UT extends Qt{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const i={width:e,height:e,depth:1},n=[i,i,i,i,i,i];t.encoding!==void 0&&(da("THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace."),t.colorSpace=t.encoding===er?ni:Li),this.texture=new hE(n,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:ri}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const i={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},n=new wt(5,5,5),s=new Mt({name:"CubemapFromEquirect",uniforms:To(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:di,blending:Kn});s.uniforms.tEquirect.value=t;const o=new ge(n,s),a=t.minFilter;return t.minFilter===Ea&&(t.minFilter=ri),new DT(1,10,this).update(e,o),t.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(e,t,i,n){const s=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(t,i,n);e.setRenderTarget(s)}}const Ah=new F,BT=new F,zT=new Xe;class Kt{constructor(e=new F(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,i,n){return this.normal.set(e,t,i),this.constant=n,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,i){const n=Ah.subVectors(i,t).cross(BT.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(n,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const i=e.delta(Ah),n=this.normal.dot(i);if(n===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/n;return s<0||s>1?null:t.copy(e.start).addScaledVector(i,s)}intersectsLine(e){const t=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return t<0&&i>0||i<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const i=t||zT.getNormalMatrix(e),n=this.coplanarPoint(Ah).applyMatrix4(e),s=this.normal.applyMatrix3(i).normalize();return this.constant=-n.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const Bs=new vi,tl=new F;class Zd{constructor(e=new Kt,t=new Kt,i=new Kt,n=new Kt,s=new Kt,o=new Kt){this.planes=[e,t,i,n,s,o]}set(e,t,i,n,s,o){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(i),a[3].copy(n),a[4].copy(s),a[5].copy(o),this}copy(e){const t=this.planes;for(let i=0;i<6;i++)t[i].copy(e.planes[i]);return this}setFromProjectionMatrix(e,t=Xn){const i=this.planes,n=e.elements,s=n[0],o=n[1],a=n[2],l=n[3],c=n[4],h=n[5],d=n[6],u=n[7],f=n[8],m=n[9],E=n[10],g=n[11],p=n[12],_=n[13],T=n[14],I=n[15];if(i[0].setComponents(l-s,u-c,g-f,I-p).normalize(),i[1].setComponents(l+s,u+c,g+f,I+p).normalize(),i[2].setComponents(l+o,u+h,g+m,I+_).normalize(),i[3].setComponents(l-o,u-h,g-m,I-_).normalize(),i[4].setComponents(l-a,u-d,g-E,I-T).normalize(),t===Xn)i[5].setComponents(l+a,u+d,g+E,I+T).normalize();else if(t===Sc)i[5].setComponents(a,d,E,T).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),Bs.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),Bs.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(Bs)}intersectsSprite(e){return Bs.center.set(0,0,0),Bs.radius=.7071067811865476,Bs.applyMatrix4(e.matrixWorld),this.intersectsSphere(Bs)}intersectsSphere(e){const t=this.planes,i=e.center,n=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(i)<n)return!1;return!0}intersectsBox(e){const t=this.planes;for(let i=0;i<6;i++){const n=t[i];if(tl.x=n.normal.x>0?e.max.x:e.min.x,tl.y=n.normal.y>0?e.max.y:e.min.y,tl.z=n.normal.z>0?e.max.z:e.min.z,n.distanceToPoint(tl)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let i=0;i<6;i++)if(t[i].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function uE(){let r=null,e=!1,t=null,i=null;function n(s,o){t(s,o),i=r.requestAnimationFrame(n)}return{start:function(){e!==!0&&t!==null&&(i=r.requestAnimationFrame(n),e=!0)},stop:function(){r.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){r=s}}}function VT(r,e){const t=e.isWebGL2,i=new WeakMap;function n(c,h){const d=c.array,u=c.usage,f=d.byteLength,m=r.createBuffer();r.bindBuffer(h,m),r.bufferData(h,d,u),c.onUploadCallback();let E;if(d instanceof Float32Array)E=r.FLOAT;else if(d instanceof Uint16Array)if(c.isFloat16BufferAttribute)if(t)E=r.HALF_FLOAT;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else E=r.UNSIGNED_SHORT;else if(d instanceof Int16Array)E=r.SHORT;else if(d instanceof Uint32Array)E=r.UNSIGNED_INT;else if(d instanceof Int32Array)E=r.INT;else if(d instanceof Int8Array)E=r.BYTE;else if(d instanceof Uint8Array)E=r.UNSIGNED_BYTE;else if(d instanceof Uint8ClampedArray)E=r.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+d);return{buffer:m,type:E,bytesPerElement:d.BYTES_PER_ELEMENT,version:c.version,size:f}}function s(c,h,d){const u=h.array,f=h._updateRange,m=h.updateRanges;if(r.bindBuffer(d,c),f.count===-1&&m.length===0&&r.bufferSubData(d,0,u),m.length!==0){for(let E=0,g=m.length;E<g;E++){const p=m[E];t?r.bufferSubData(d,p.start*u.BYTES_PER_ELEMENT,u,p.start,p.count):r.bufferSubData(d,p.start*u.BYTES_PER_ELEMENT,u.subarray(p.start,p.start+p.count))}h.clearUpdateRanges()}f.count!==-1&&(t?r.bufferSubData(d,f.offset*u.BYTES_PER_ELEMENT,u,f.offset,f.count):r.bufferSubData(d,f.offset*u.BYTES_PER_ELEMENT,u.subarray(f.offset,f.offset+f.count)),f.count=-1),h.onUploadCallback()}function o(c){return c.isInterleavedBufferAttribute&&(c=c.data),i.get(c)}function a(c){c.isInterleavedBufferAttribute&&(c=c.data);const h=i.get(c);h&&(r.deleteBuffer(h.buffer),i.delete(c))}function l(c,h){if(c.isGLBufferAttribute){const u=i.get(c);(!u||u.version<c.version)&&i.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}c.isInterleavedBufferAttribute&&(c=c.data);const d=i.get(c);if(d===void 0)i.set(c,n(c,h));else if(d.version<c.version){if(d.size!==c.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");s(d.buffer,c,h),d.version=c.version}}return{get:o,remove:a,update:l}}class ur extends Ve{constructor(e=1,t=1,i=1,n=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:i,heightSegments:n};const s=e/2,o=t/2,a=Math.floor(i),l=Math.floor(n),c=a+1,h=l+1,d=e/a,u=t/l,f=[],m=[],E=[],g=[];for(let p=0;p<h;p++){const _=p*u-o;for(let T=0;T<c;T++){const I=T*d-s;m.push(I,-_,0),E.push(0,0,1),g.push(T/a),g.push(1-p/l)}}for(let p=0;p<l;p++)for(let _=0;_<a;_++){const T=_+c*p,I=_+c*(p+1),v=_+1+c*(p+1),b=_+1+c*p;f.push(T,I,b),f.push(I,v,b)}this.setIndex(f),this.setAttribute("position",new ht(m,3)),this.setAttribute("normal",new ht(E,3)),this.setAttribute("uv",new ht(g,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ur(e.width,e.height,e.widthSegments,e.heightSegments)}}var kT=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,GT=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,HT=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,WT=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,YT=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,XT=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,ZT=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,jT=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,qT=`#ifdef USE_BATCHING
	attribute float batchId;
	uniform highp sampler2D batchingTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,KT=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( batchId );
#endif`,QT=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,JT=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,$T=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,ev=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,tv=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,iv=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,nv=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,sv=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,rv=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,ov=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,av=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,lv=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,cv=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,hv=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,uv=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,dv=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,fv=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,pv=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,mv=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,gv=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,Ev="gl_FragColor = linearToOutputTexel( gl_FragColor );",Iv=`
const mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(
	vec3( 0.8224621, 0.177538, 0.0 ),
	vec3( 0.0331941, 0.9668058, 0.0 ),
	vec3( 0.0170827, 0.0723974, 0.9105199 )
);
const mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(
	vec3( 1.2249401, - 0.2249404, 0.0 ),
	vec3( - 0.0420569, 1.0420571, 0.0 ),
	vec3( - 0.0196376, - 0.0786361, 1.0982735 )
);
vec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {
	return vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );
}
vec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {
	return vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );
}
vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}
vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return sRGBTransferOETF( value );
}`,_v=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,Tv=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,vv=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,Cv=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,yv=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,bv=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,Sv=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,xv=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,wv=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,Av=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,Rv=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,Mv=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,Fv=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,Pv=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,Lv=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( LEGACY_LIGHTS )
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#else
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,Ov=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,Nv=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,Dv=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,Uv=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,Bv=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,zv=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,Vv=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,kv=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,Gv=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,Hv=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,Wv=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,Yv=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,Xv=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,Zv=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,jv=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,qv=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,Kv=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,Qv=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Jv=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,$v=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,eC=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,tC=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,iC=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,nC=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,sC=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,rC=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,oC=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,aC=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,lC=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,cC=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,hC=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,uC=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,dC=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,fC=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,pC=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,mC=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,gC=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,EC=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,IC=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,_C=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,TC=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,vC=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,CC=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,yC=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,bC=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,SC=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,xC=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,wC=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,AC=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,RC=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,MC=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,FC=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,PC=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,LC=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color *= toneMappingExposure;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	return color;
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,OC=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,NC=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,DC=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,UC=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,BC=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,zC=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const VC=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,kC=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,GC=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,HC=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,WC=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,YC=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,XC=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,ZC=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,jC=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,qC=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,KC=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,QC=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,JC=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,$C=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,ey=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,ty=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,iy=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,ny=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,sy=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,ry=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,oy=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,ay=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,ly=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,cy=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,hy=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,uy=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,dy=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,fy=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,py=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,my=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,gy=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Ey=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,Iy=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,_y=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,tt={alphahash_fragment:kT,alphahash_pars_fragment:GT,alphamap_fragment:HT,alphamap_pars_fragment:WT,alphatest_fragment:YT,alphatest_pars_fragment:XT,aomap_fragment:ZT,aomap_pars_fragment:jT,batching_pars_vertex:qT,batching_vertex:KT,begin_vertex:QT,beginnormal_vertex:JT,bsdfs:$T,iridescence_fragment:ev,bumpmap_pars_fragment:tv,clipping_planes_fragment:iv,clipping_planes_pars_fragment:nv,clipping_planes_pars_vertex:sv,clipping_planes_vertex:rv,color_fragment:ov,color_pars_fragment:av,color_pars_vertex:lv,color_vertex:cv,common:hv,cube_uv_reflection_fragment:uv,defaultnormal_vertex:dv,displacementmap_pars_vertex:fv,displacementmap_vertex:pv,emissivemap_fragment:mv,emissivemap_pars_fragment:gv,colorspace_fragment:Ev,colorspace_pars_fragment:Iv,envmap_fragment:_v,envmap_common_pars_fragment:Tv,envmap_pars_fragment:vv,envmap_pars_vertex:Cv,envmap_physical_pars_fragment:Ov,envmap_vertex:yv,fog_vertex:bv,fog_pars_vertex:Sv,fog_fragment:xv,fog_pars_fragment:wv,gradientmap_pars_fragment:Av,lightmap_fragment:Rv,lightmap_pars_fragment:Mv,lights_lambert_fragment:Fv,lights_lambert_pars_fragment:Pv,lights_pars_begin:Lv,lights_toon_fragment:Nv,lights_toon_pars_fragment:Dv,lights_phong_fragment:Uv,lights_phong_pars_fragment:Bv,lights_physical_fragment:zv,lights_physical_pars_fragment:Vv,lights_fragment_begin:kv,lights_fragment_maps:Gv,lights_fragment_end:Hv,logdepthbuf_fragment:Wv,logdepthbuf_pars_fragment:Yv,logdepthbuf_pars_vertex:Xv,logdepthbuf_vertex:Zv,map_fragment:jv,map_pars_fragment:qv,map_particle_fragment:Kv,map_particle_pars_fragment:Qv,metalnessmap_fragment:Jv,metalnessmap_pars_fragment:$v,morphcolor_vertex:eC,morphnormal_vertex:tC,morphtarget_pars_vertex:iC,morphtarget_vertex:nC,normal_fragment_begin:sC,normal_fragment_maps:rC,normal_pars_fragment:oC,normal_pars_vertex:aC,normal_vertex:lC,normalmap_pars_fragment:cC,clearcoat_normal_fragment_begin:hC,clearcoat_normal_fragment_maps:uC,clearcoat_pars_fragment:dC,iridescence_pars_fragment:fC,opaque_fragment:pC,packing:mC,premultiplied_alpha_fragment:gC,project_vertex:EC,dithering_fragment:IC,dithering_pars_fragment:_C,roughnessmap_fragment:TC,roughnessmap_pars_fragment:vC,shadowmap_pars_fragment:CC,shadowmap_pars_vertex:yC,shadowmap_vertex:bC,shadowmask_pars_fragment:SC,skinbase_vertex:xC,skinning_pars_vertex:wC,skinning_vertex:AC,skinnormal_vertex:RC,specularmap_fragment:MC,specularmap_pars_fragment:FC,tonemapping_fragment:PC,tonemapping_pars_fragment:LC,transmission_fragment:OC,transmission_pars_fragment:NC,uv_pars_fragment:DC,uv_pars_vertex:UC,uv_vertex:BC,worldpos_vertex:zC,background_vert:VC,background_frag:kC,backgroundCube_vert:GC,backgroundCube_frag:HC,cube_vert:WC,cube_frag:YC,depth_vert:XC,depth_frag:ZC,distanceRGBA_vert:jC,distanceRGBA_frag:qC,equirect_vert:KC,equirect_frag:QC,linedashed_vert:JC,linedashed_frag:$C,meshbasic_vert:ey,meshbasic_frag:ty,meshlambert_vert:iy,meshlambert_frag:ny,meshmatcap_vert:sy,meshmatcap_frag:ry,meshnormal_vert:oy,meshnormal_frag:ay,meshphong_vert:ly,meshphong_frag:cy,meshphysical_vert:hy,meshphysical_frag:uy,meshtoon_vert:dy,meshtoon_frag:fy,points_vert:py,points_frag:my,shadow_vert:gy,shadow_frag:Ey,sprite_vert:Iy,sprite_frag:_y},Ce={common:{diffuse:{value:new Fe(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new Xe},alphaMap:{value:null},alphaMapTransform:{value:new Xe},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new Xe}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new Xe}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new Xe}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new Xe},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new Xe},normalScale:{value:new Re(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new Xe},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new Xe}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new Xe}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new Xe}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Fe(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Fe(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new Xe},alphaTest:{value:0},uvTransform:{value:new Xe}},sprite:{diffuse:{value:new Fe(16777215)},opacity:{value:1},center:{value:new Re(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new Xe},alphaMap:{value:null},alphaMapTransform:{value:new Xe},alphaTest:{value:0}}},Si={basic:{uniforms:Ei([Ce.common,Ce.specularmap,Ce.envmap,Ce.aomap,Ce.lightmap,Ce.fog]),vertexShader:tt.meshbasic_vert,fragmentShader:tt.meshbasic_frag},lambert:{uniforms:Ei([Ce.common,Ce.specularmap,Ce.envmap,Ce.aomap,Ce.lightmap,Ce.emissivemap,Ce.bumpmap,Ce.normalmap,Ce.displacementmap,Ce.fog,Ce.lights,{emissive:{value:new Fe(0)}}]),vertexShader:tt.meshlambert_vert,fragmentShader:tt.meshlambert_frag},phong:{uniforms:Ei([Ce.common,Ce.specularmap,Ce.envmap,Ce.aomap,Ce.lightmap,Ce.emissivemap,Ce.bumpmap,Ce.normalmap,Ce.displacementmap,Ce.fog,Ce.lights,{emissive:{value:new Fe(0)},specular:{value:new Fe(1118481)},shininess:{value:30}}]),vertexShader:tt.meshphong_vert,fragmentShader:tt.meshphong_frag},standard:{uniforms:Ei([Ce.common,Ce.envmap,Ce.aomap,Ce.lightmap,Ce.emissivemap,Ce.bumpmap,Ce.normalmap,Ce.displacementmap,Ce.roughnessmap,Ce.metalnessmap,Ce.fog,Ce.lights,{emissive:{value:new Fe(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:tt.meshphysical_vert,fragmentShader:tt.meshphysical_frag},toon:{uniforms:Ei([Ce.common,Ce.aomap,Ce.lightmap,Ce.emissivemap,Ce.bumpmap,Ce.normalmap,Ce.displacementmap,Ce.gradientmap,Ce.fog,Ce.lights,{emissive:{value:new Fe(0)}}]),vertexShader:tt.meshtoon_vert,fragmentShader:tt.meshtoon_frag},matcap:{uniforms:Ei([Ce.common,Ce.bumpmap,Ce.normalmap,Ce.displacementmap,Ce.fog,{matcap:{value:null}}]),vertexShader:tt.meshmatcap_vert,fragmentShader:tt.meshmatcap_frag},points:{uniforms:Ei([Ce.points,Ce.fog]),vertexShader:tt.points_vert,fragmentShader:tt.points_frag},dashed:{uniforms:Ei([Ce.common,Ce.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:tt.linedashed_vert,fragmentShader:tt.linedashed_frag},depth:{uniforms:Ei([Ce.common,Ce.displacementmap]),vertexShader:tt.depth_vert,fragmentShader:tt.depth_frag},normal:{uniforms:Ei([Ce.common,Ce.bumpmap,Ce.normalmap,Ce.displacementmap,{opacity:{value:1}}]),vertexShader:tt.meshnormal_vert,fragmentShader:tt.meshnormal_frag},sprite:{uniforms:Ei([Ce.sprite,Ce.fog]),vertexShader:tt.sprite_vert,fragmentShader:tt.sprite_frag},background:{uniforms:{uvTransform:{value:new Xe},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:tt.background_vert,fragmentShader:tt.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:tt.backgroundCube_vert,fragmentShader:tt.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:tt.cube_vert,fragmentShader:tt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:tt.equirect_vert,fragmentShader:tt.equirect_frag},distanceRGBA:{uniforms:Ei([Ce.common,Ce.displacementmap,{referencePosition:{value:new F},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:tt.distanceRGBA_vert,fragmentShader:tt.distanceRGBA_frag},shadow:{uniforms:Ei([Ce.lights,Ce.fog,{color:{value:new Fe(0)},opacity:{value:1}}]),vertexShader:tt.shadow_vert,fragmentShader:tt.shadow_frag}};Si.physical={uniforms:Ei([Si.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new Xe},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new Xe},clearcoatNormalScale:{value:new Re(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new Xe},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new Xe},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new Xe},sheen:{value:0},sheenColor:{value:new Fe(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new Xe},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new Xe},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new Xe},transmissionSamplerSize:{value:new Re},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new Xe},attenuationDistance:{value:0},attenuationColor:{value:new Fe(0)},specularColor:{value:new Fe(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new Xe},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new Xe},anisotropyVector:{value:new Re},anisotropyMap:{value:null},anisotropyMapTransform:{value:new Xe}}]),vertexShader:tt.meshphysical_vert,fragmentShader:tt.meshphysical_frag};const il={r:0,b:0,g:0};function Ty(r,e,t,i,n,s,o){const a=new Fe(0);let l=s===!0?0:1,c,h,d=null,u=0,f=null;function m(g,p){let _=!1,T=p.isScene===!0?p.background:null;T&&T.isTexture&&(T=(p.backgroundBlurriness>0?t:e).get(T)),T===null?E(a,l):T&&T.isColor&&(E(T,1),_=!0);const I=r.xr.getEnvironmentBlendMode();I==="additive"?i.buffers.color.setClear(0,0,0,1,o):I==="alpha-blend"&&i.buffers.color.setClear(0,0,0,0,o),(r.autoClear||_)&&r.clear(r.autoClearColor,r.autoClearDepth,r.autoClearStencil),T&&(T.isCubeTexture||T.mapping===Bc)?(h===void 0&&(h=new ge(new wt(1,1,1),new Mt({name:"BackgroundCubeMaterial",uniforms:To(Si.backgroundCube.uniforms),vertexShader:Si.backgroundCube.vertexShader,fragmentShader:Si.backgroundCube.fragmentShader,side:di,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),h.geometry.deleteAttribute("uv"),h.onBeforeRender=function(v,b,x){this.matrixWorld.copyPosition(x.matrixWorld)},Object.defineProperty(h.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(h)),h.material.uniforms.envMap.value=T,h.material.uniforms.flipEnvMap.value=T.isCubeTexture&&T.isRenderTargetTexture===!1?-1:1,h.material.uniforms.backgroundBlurriness.value=p.backgroundBlurriness,h.material.uniforms.backgroundIntensity.value=p.backgroundIntensity,h.material.toneMapped=rt.getTransfer(T.colorSpace)!==It,(d!==T||u!==T.version||f!==r.toneMapping)&&(h.material.needsUpdate=!0,d=T,u=T.version,f=r.toneMapping),h.layers.enableAll(),g.unshift(h,h.geometry,h.material,0,0,null)):T&&T.isTexture&&(c===void 0&&(c=new ge(new ur(2,2),new Mt({name:"BackgroundMaterial",uniforms:To(Si.background.uniforms),vertexShader:Si.background.vertexShader,fragmentShader:Si.background.fragmentShader,side:$i,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(c)),c.material.uniforms.t2D.value=T,c.material.uniforms.backgroundIntensity.value=p.backgroundIntensity,c.material.toneMapped=rt.getTransfer(T.colorSpace)!==It,T.matrixAutoUpdate===!0&&T.updateMatrix(),c.material.uniforms.uvTransform.value.copy(T.matrix),(d!==T||u!==T.version||f!==r.toneMapping)&&(c.material.needsUpdate=!0,d=T,u=T.version,f=r.toneMapping),c.layers.enableAll(),g.unshift(c,c.geometry,c.material,0,0,null))}function E(g,p){g.getRGB(il,lE(r)),i.buffers.color.setClear(il.r,il.g,il.b,p,o)}return{getClearColor:function(){return a},setClearColor:function(g,p=1){a.set(g),l=p,E(a,l)},getClearAlpha:function(){return l},setClearAlpha:function(g){l=g,E(a,l)},render:m}}function vy(r,e,t,i){const n=r.getParameter(r.MAX_VERTEX_ATTRIBS),s=i.isWebGL2?null:e.get("OES_vertex_array_object"),o=i.isWebGL2||s!==null,a={},l=g(null);let c=l,h=!1;function d(C,U,B,V,j){let G=!1;if(o){const se=E(V,B,U);c!==se&&(c=se,f(c.object)),G=p(C,V,B,j),G&&_(C,V,B,j)}else{const se=U.wireframe===!0;(c.geometry!==V.id||c.program!==B.id||c.wireframe!==se)&&(c.geometry=V.id,c.program=B.id,c.wireframe=se,G=!0)}j!==null&&t.update(j,r.ELEMENT_ARRAY_BUFFER),(G||h)&&(h=!1,A(C,U,B,V),j!==null&&r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,t.get(j).buffer))}function u(){return i.isWebGL2?r.createVertexArray():s.createVertexArrayOES()}function f(C){return i.isWebGL2?r.bindVertexArray(C):s.bindVertexArrayOES(C)}function m(C){return i.isWebGL2?r.deleteVertexArray(C):s.deleteVertexArrayOES(C)}function E(C,U,B){const V=B.wireframe===!0;let j=a[C.id];j===void 0&&(j={},a[C.id]=j);let G=j[U.id];G===void 0&&(G={},j[U.id]=G);let se=G[V];return se===void 0&&(se=g(u()),G[V]=se),se}function g(C){const U=[],B=[],V=[];for(let j=0;j<n;j++)U[j]=0,B[j]=0,V[j]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:U,enabledAttributes:B,attributeDivisors:V,object:C,attributes:{},index:null}}function p(C,U,B,V){const j=c.attributes,G=U.attributes;let se=0;const W=B.getAttributes();for(const Y in W)if(W[Y].location>=0){const Q=j[Y];let te=G[Y];if(te===void 0&&(Y==="instanceMatrix"&&C.instanceMatrix&&(te=C.instanceMatrix),Y==="instanceColor"&&C.instanceColor&&(te=C.instanceColor)),Q===void 0||Q.attribute!==te||te&&Q.data!==te.data)return!0;se++}return c.attributesNum!==se||c.index!==V}function _(C,U,B,V){const j={},G=U.attributes;let se=0;const W=B.getAttributes();for(const Y in W)if(W[Y].location>=0){let Q=G[Y];Q===void 0&&(Y==="instanceMatrix"&&C.instanceMatrix&&(Q=C.instanceMatrix),Y==="instanceColor"&&C.instanceColor&&(Q=C.instanceColor));const te={};te.attribute=Q,Q&&Q.data&&(te.data=Q.data),j[Y]=te,se++}c.attributes=j,c.attributesNum=se,c.index=V}function T(){const C=c.newAttributes;for(let U=0,B=C.length;U<B;U++)C[U]=0}function I(C){v(C,0)}function v(C,U){const B=c.newAttributes,V=c.enabledAttributes,j=c.attributeDivisors;B[C]=1,V[C]===0&&(r.enableVertexAttribArray(C),V[C]=1),j[C]!==U&&((i.isWebGL2?r:e.get("ANGLE_instanced_arrays"))[i.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](C,U),j[C]=U)}function b(){const C=c.newAttributes,U=c.enabledAttributes;for(let B=0,V=U.length;B<V;B++)U[B]!==C[B]&&(r.disableVertexAttribArray(B),U[B]=0)}function x(C,U,B,V,j,G,se){se===!0?r.vertexAttribIPointer(C,U,B,j,G):r.vertexAttribPointer(C,U,B,V,j,G)}function A(C,U,B,V){if(i.isWebGL2===!1&&(C.isInstancedMesh||V.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;T();const j=V.attributes,G=B.getAttributes(),se=U.defaultAttributeValues;for(const W in G){const Y=G[W];if(Y.location>=0){let q=j[W];if(q===void 0&&(W==="instanceMatrix"&&C.instanceMatrix&&(q=C.instanceMatrix),W==="instanceColor"&&C.instanceColor&&(q=C.instanceColor)),q!==void 0){const Q=q.normalized,te=q.itemSize,Ie=t.get(q);if(Ie===void 0)continue;const ve=Ie.buffer,pe=Ie.type,_e=Ie.bytesPerElement,Ee=i.isWebGL2===!0&&(pe===r.INT||pe===r.UNSIGNED_INT||q.gpuType===Yg);if(q.isInterleavedBufferAttribute){const Ae=q.data,ie=Ae.stride,$e=q.offset;if(Ae.isInstancedInterleavedBuffer){for(let M=0;M<Y.locationSize;M++)v(Y.location+M,Ae.meshPerAttribute);C.isInstancedMesh!==!0&&V._maxInstanceCount===void 0&&(V._maxInstanceCount=Ae.meshPerAttribute*Ae.count)}else for(let M=0;M<Y.locationSize;M++)I(Y.location+M);r.bindBuffer(r.ARRAY_BUFFER,ve);for(let M=0;M<Y.locationSize;M++)x(Y.location+M,te/Y.locationSize,pe,Q,ie*_e,($e+te/Y.locationSize*M)*_e,Ee)}else{if(q.isInstancedBufferAttribute){for(let Ae=0;Ae<Y.locationSize;Ae++)v(Y.location+Ae,q.meshPerAttribute);C.isInstancedMesh!==!0&&V._maxInstanceCount===void 0&&(V._maxInstanceCount=q.meshPerAttribute*q.count)}else for(let Ae=0;Ae<Y.locationSize;Ae++)I(Y.location+Ae);r.bindBuffer(r.ARRAY_BUFFER,ve);for(let Ae=0;Ae<Y.locationSize;Ae++)x(Y.location+Ae,te/Y.locationSize,pe,Q,te*_e,te/Y.locationSize*Ae*_e,Ee)}}else if(se!==void 0){const Q=se[W];if(Q!==void 0)switch(Q.length){case 2:r.vertexAttrib2fv(Y.location,Q);break;case 3:r.vertexAttrib3fv(Y.location,Q);break;case 4:r.vertexAttrib4fv(Y.location,Q);break;default:r.vertexAttrib1fv(Y.location,Q)}}}}b()}function y(){w();for(const C in a){const U=a[C];for(const B in U){const V=U[B];for(const j in V)m(V[j].object),delete V[j];delete U[B]}delete a[C]}}function S(C){if(a[C.id]===void 0)return;const U=a[C.id];for(const B in U){const V=U[B];for(const j in V)m(V[j].object),delete V[j];delete U[B]}delete a[C.id]}function O(C){for(const U in a){const B=a[U];if(B[C.id]===void 0)continue;const V=B[C.id];for(const j in V)m(V[j].object),delete V[j];delete B[C.id]}}function w(){N(),h=!0,c!==l&&(c=l,f(c.object))}function N(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:d,reset:w,resetDefaultState:N,dispose:y,releaseStatesOfGeometry:S,releaseStatesOfProgram:O,initAttributes:T,enableAttribute:I,disableUnusedAttributes:b}}function Cy(r,e,t,i){const n=i.isWebGL2;let s;function o(h){s=h}function a(h,d){r.drawArrays(s,h,d),t.update(d,s,1)}function l(h,d,u){if(u===0)return;let f,m;if(n)f=r,m="drawArraysInstanced";else if(f=e.get("ANGLE_instanced_arrays"),m="drawArraysInstancedANGLE",f===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}f[m](s,h,d,u),t.update(d,s,u)}function c(h,d,u){if(u===0)return;const f=e.get("WEBGL_multi_draw");if(f===null)for(let m=0;m<u;m++)this.render(h[m],d[m]);else{f.multiDrawArraysWEBGL(s,h,0,d,0,u);let m=0;for(let E=0;E<u;E++)m+=d[E];t.update(m,s,1)}}this.setMode=o,this.render=a,this.renderInstances=l,this.renderMultiDraw=c}function yy(r,e,t){let i;function n(){if(i!==void 0)return i;if(e.has("EXT_texture_filter_anisotropic")===!0){const x=e.get("EXT_texture_filter_anisotropic");i=r.getParameter(x.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i}function s(x){if(x==="highp"){if(r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.HIGH_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.HIGH_FLOAT).precision>0)return"highp";x="mediump"}return x==="mediump"&&r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.MEDIUM_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}const o=typeof WebGL2RenderingContext<"u"&&r.constructor.name==="WebGL2RenderingContext";let a=t.precision!==void 0?t.precision:"highp";const l=s(a);l!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",l,"instead."),a=l);const c=o||e.has("WEBGL_draw_buffers"),h=t.logarithmicDepthBuffer===!0,d=r.getParameter(r.MAX_TEXTURE_IMAGE_UNITS),u=r.getParameter(r.MAX_VERTEX_TEXTURE_IMAGE_UNITS),f=r.getParameter(r.MAX_TEXTURE_SIZE),m=r.getParameter(r.MAX_CUBE_MAP_TEXTURE_SIZE),E=r.getParameter(r.MAX_VERTEX_ATTRIBS),g=r.getParameter(r.MAX_VERTEX_UNIFORM_VECTORS),p=r.getParameter(r.MAX_VARYING_VECTORS),_=r.getParameter(r.MAX_FRAGMENT_UNIFORM_VECTORS),T=u>0,I=o||e.has("OES_texture_float"),v=T&&I,b=o?r.getParameter(r.MAX_SAMPLES):0;return{isWebGL2:o,drawBuffers:c,getMaxAnisotropy:n,getMaxPrecision:s,precision:a,logarithmicDepthBuffer:h,maxTextures:d,maxVertexTextures:u,maxTextureSize:f,maxCubemapSize:m,maxAttributes:E,maxVertexUniforms:g,maxVaryings:p,maxFragmentUniforms:_,vertexTextures:T,floatFragmentTextures:I,floatVertexTextures:v,maxSamples:b}}function by(r){const e=this;let t=null,i=0,n=!1,s=!1;const o=new Kt,a=new Xe,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(d,u){const f=d.length!==0||u||i!==0||n;return n=u,i=d.length,f},this.beginShadows=function(){s=!0,h(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(d,u){t=h(d,u,0)},this.setState=function(d,u,f){const m=d.clippingPlanes,E=d.clipIntersection,g=d.clipShadows,p=r.get(d);if(!n||m===null||m.length===0||s&&!g)s?h(null):c();else{const _=s?0:i,T=_*4;let I=p.clippingState||null;l.value=I,I=h(m,u,T,f);for(let v=0;v!==T;++v)I[v]=t[v];p.clippingState=I,this.numIntersection=E?this.numPlanes:0,this.numPlanes+=_}};function c(){l.value!==t&&(l.value=t,l.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0}function h(d,u,f,m){const E=d!==null?d.length:0;let g=null;if(E!==0){if(g=l.value,m!==!0||g===null){const p=f+E*4,_=u.matrixWorldInverse;a.getNormalMatrix(_),(g===null||g.length<p)&&(g=new Float32Array(p));for(let T=0,I=f;T!==E;++T,I+=4)o.copy(d[T]).applyMatrix4(_,a),o.normal.toArray(g,I),g[I+3]=o.constant}l.value=g,l.needsUpdate=!0}return e.numPlanes=E,e.numIntersection=0,g}}function Sy(r){let e=new WeakMap;function t(o,a){return a===bu?o.mapping=Eo:a===Su&&(o.mapping=Io),o}function i(o){if(o&&o.isTexture){const a=o.mapping;if(a===bu||a===Su)if(e.has(o)){const l=e.get(o).texture;return t(l,o.mapping)}else{const l=o.image;if(l&&l.height>0){const c=new UT(l.height/2);return c.fromEquirectangularTexture(r,o),e.set(o,c),o.addEventListener("dispose",n),t(c.texture,o.mapping)}else return null}}return o}function n(o){const a=o.target;a.removeEventListener("dispose",n);const l=e.get(a);l!==void 0&&(e.delete(a),l.dispose())}function s(){e=new WeakMap}return{get:i,dispose:s}}class wn extends cE{constructor(e=-1,t=1,i=1,n=-1,s=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=i,this.bottom=n,this.near=s,this.far=o,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,i,n,s,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=n,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,n=(this.top+this.bottom)/2;let s=i-e,o=i+e,a=n+t,l=n-t;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,h=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=c*this.view.offsetX,o=s+c*this.view.width,a-=h*this.view.offsetY,l=a-h*this.view.height}this.projectionMatrix.makeOrthographic(s,o,a,l,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const no=4,wp=[.125,.215,.35,.446,.526,.582],Ks=20,Rh=new wn,Ap=new Fe;let Mh=null,Fh=0,Ph=0;const Hs=(1+Math.sqrt(5))/2,Rr=1/Hs,Rp=[new F(1,1,1),new F(-1,1,1),new F(1,1,-1),new F(-1,1,-1),new F(0,Hs,Rr),new F(0,Hs,-Rr),new F(Rr,0,Hs),new F(-Rr,0,Hs),new F(Hs,Rr,0),new F(-Hs,Rr,0)];class Mp{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,i=.1,n=100){Mh=this._renderer.getRenderTarget(),Fh=this._renderer.getActiveCubeFace(),Ph=this._renderer.getActiveMipmapLevel(),this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(e,i,n,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=Lp(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=Pp(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Mh,Fh,Ph),e.scissorTest=!1,nl(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===Eo||e.mapping===Io?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),Mh=this._renderer.getRenderTarget(),Fh=this._renderer.getActiveCubeFace(),Ph=this._renderer.getActiveMipmapLevel();const i=t||this._allocateTargets();return this._textureToCubeUV(e,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,i={magFilter:ri,minFilter:ri,generateMipmaps:!1,type:ws,format:Pi,colorSpace:is,depthBuffer:!1},n=Fp(e,t,i);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=Fp(e,t,i);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=xy(s)),this._blurMaterial=wy(s,e,t)}return n}_compileMaterial(e){const t=new ge(this._lodPlanes[0],e);this._renderer.compile(t,Rh)}_sceneToCubeUV(e,t,i,n){const a=new Fi(90,1,t,i),l=[1,-1,1,1,1,1],c=[1,1,1,-1,-1,-1],h=this._renderer,d=h.autoClear,u=h.toneMapping;h.getClearColor(Ap),h.toneMapping=Qn,h.autoClear=!1;const f=new Ti({name:"PMREM.Background",side:di,depthWrite:!1,depthTest:!1}),m=new ge(new wt,f);let E=!1;const g=e.background;g?g.isColor&&(f.color.copy(g),e.background=null,E=!0):(f.color.copy(Ap),E=!0);for(let p=0;p<6;p++){const _=p%3;_===0?(a.up.set(0,l[p],0),a.lookAt(c[p],0,0)):_===1?(a.up.set(0,0,l[p]),a.lookAt(0,c[p],0)):(a.up.set(0,l[p],0),a.lookAt(0,0,c[p]));const T=this._cubeSize;nl(n,_*T,p>2?T:0,T,T),h.setRenderTarget(n),E&&h.render(m,a),h.render(e,a)}m.geometry.dispose(),m.material.dispose(),h.toneMapping=u,h.autoClear=d,e.background=g}_textureToCubeUV(e,t){const i=this._renderer,n=e.mapping===Eo||e.mapping===Io;n?(this._cubemapMaterial===null&&(this._cubemapMaterial=Lp()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=Pp());const s=n?this._cubemapMaterial:this._equirectMaterial,o=new ge(this._lodPlanes[0],s),a=s.uniforms;a.envMap.value=e;const l=this._cubeSize;nl(t,0,0,3*l,2*l),i.setRenderTarget(t),i.render(o,Rh)}_applyPMREM(e){const t=this._renderer,i=t.autoClear;t.autoClear=!1;for(let n=1;n<this._lodPlanes.length;n++){const s=Math.sqrt(this._sigmas[n]*this._sigmas[n]-this._sigmas[n-1]*this._sigmas[n-1]),o=Rp[(n-1)%Rp.length];this._blur(e,n-1,n,s,o)}t.autoClear=i}_blur(e,t,i,n,s){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,i,n,"latitudinal",s),this._halfBlur(o,e,i,i,n,"longitudinal",s)}_halfBlur(e,t,i,n,s,o,a){const l=this._renderer,c=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const h=3,d=new ge(this._lodPlanes[n],c),u=c.uniforms,f=this._sizeLods[i]-1,m=isFinite(s)?Math.PI/(2*f):2*Math.PI/(2*Ks-1),E=s/m,g=isFinite(s)?1+Math.floor(h*E):Ks;g>Ks&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${g} samples when the maximum is set to ${Ks}`);const p=[];let _=0;for(let x=0;x<Ks;++x){const A=x/E,y=Math.exp(-A*A/2);p.push(y),x===0?_+=y:x<g&&(_+=2*y)}for(let x=0;x<p.length;x++)p[x]=p[x]/_;u.envMap.value=e.texture,u.samples.value=g,u.weights.value=p,u.latitudinal.value=o==="latitudinal",a&&(u.poleAxis.value=a);const{_lodMax:T}=this;u.dTheta.value=m,u.mipInt.value=T-i;const I=this._sizeLods[n],v=3*I*(n>T-no?n-T+no:0),b=4*(this._cubeSize-I);nl(t,v,b,3*I,2*I),l.setRenderTarget(t),l.render(d,Rh)}}function xy(r){const e=[],t=[],i=[];let n=r;const s=r-no+1+wp.length;for(let o=0;o<s;o++){const a=Math.pow(2,n);t.push(a);let l=1/a;o>r-no?l=wp[o-r+no-1]:o===0&&(l=0),i.push(l);const c=1/(a-2),h=-c,d=1+c,u=[h,h,d,h,d,d,h,h,d,d,h,d],f=6,m=6,E=3,g=2,p=1,_=new Float32Array(E*m*f),T=new Float32Array(g*m*f),I=new Float32Array(p*m*f);for(let b=0;b<f;b++){const x=b%3*2/3-1,A=b>2?0:-1,y=[x,A,0,x+2/3,A,0,x+2/3,A+1,0,x,A,0,x+2/3,A+1,0,x,A+1,0];_.set(y,E*m*b),T.set(u,g*m*b);const S=[b,b,b,b,b,b];I.set(S,p*m*b)}const v=new Ve;v.setAttribute("position",new ot(_,E)),v.setAttribute("uv",new ot(T,g)),v.setAttribute("faceIndex",new ot(I,p)),e.push(v),n>no&&n--}return{lodPlanes:e,sizeLods:t,sigmas:i}}function Fp(r,e,t){const i=new Qt(r,e,t);return i.texture.mapping=Bc,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function nl(r,e,t,i,n){r.viewport.set(e,t,i,n),r.scissor.set(e,t,i,n)}function wy(r,e,t){const i=new Float32Array(Ks),n=new F(0,1,0);return new Mt({name:"SphericalGaussianBlur",defines:{n:Ks,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${r}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:n}},vertexShader:jd(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Kn,depthTest:!1,depthWrite:!1})}function Pp(){return new Mt({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:jd(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Kn,depthTest:!1,depthWrite:!1})}function Lp(){return new Mt({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:jd(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Kn,depthTest:!1,depthWrite:!1})}function jd(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function Ay(r){let e=new WeakMap,t=null;function i(a){if(a&&a.isTexture){const l=a.mapping,c=l===bu||l===Su,h=l===Eo||l===Io;if(c||h)if(a.isRenderTargetTexture&&a.needsPMREMUpdate===!0){a.needsPMREMUpdate=!1;let d=e.get(a);return t===null&&(t=new Mp(r)),d=c?t.fromEquirectangular(a,d):t.fromCubemap(a,d),e.set(a,d),d.texture}else{if(e.has(a))return e.get(a).texture;{const d=a.image;if(c&&d&&d.height>0||h&&d&&n(d)){t===null&&(t=new Mp(r));const u=c?t.fromEquirectangular(a):t.fromCubemap(a);return e.set(a,u),a.addEventListener("dispose",s),u.texture}else return null}}}return a}function n(a){let l=0;const c=6;for(let h=0;h<c;h++)a[h]!==void 0&&l++;return l===c}function s(a){const l=a.target;l.removeEventListener("dispose",s);const c=e.get(l);c!==void 0&&(e.delete(l),c.dispose())}function o(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:i,dispose:o}}function Ry(r){const e={};function t(i){if(e[i]!==void 0)return e[i];let n;switch(i){case"WEBGL_depth_texture":n=r.getExtension("WEBGL_depth_texture")||r.getExtension("MOZ_WEBGL_depth_texture")||r.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":n=r.getExtension("EXT_texture_filter_anisotropic")||r.getExtension("MOZ_EXT_texture_filter_anisotropic")||r.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":n=r.getExtension("WEBGL_compressed_texture_s3tc")||r.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":n=r.getExtension("WEBGL_compressed_texture_pvrtc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:n=r.getExtension(i)}return e[i]=n,n}return{has:function(i){return t(i)!==null},init:function(i){i.isWebGL2?(t("EXT_color_buffer_float"),t("WEBGL_clip_cull_distance")):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(i){const n=t(i);return n===null&&console.warn("THREE.WebGLRenderer: "+i+" extension not supported."),n}}}function My(r,e,t,i){const n={},s=new WeakMap;function o(d){const u=d.target;u.index!==null&&e.remove(u.index);for(const m in u.attributes)e.remove(u.attributes[m]);for(const m in u.morphAttributes){const E=u.morphAttributes[m];for(let g=0,p=E.length;g<p;g++)e.remove(E[g])}u.removeEventListener("dispose",o),delete n[u.id];const f=s.get(u);f&&(e.remove(f),s.delete(u)),i.releaseStatesOfGeometry(u),u.isInstancedBufferGeometry===!0&&delete u._maxInstanceCount,t.memory.geometries--}function a(d,u){return n[u.id]===!0||(u.addEventListener("dispose",o),n[u.id]=!0,t.memory.geometries++),u}function l(d){const u=d.attributes;for(const m in u)e.update(u[m],r.ARRAY_BUFFER);const f=d.morphAttributes;for(const m in f){const E=f[m];for(let g=0,p=E.length;g<p;g++)e.update(E[g],r.ARRAY_BUFFER)}}function c(d){const u=[],f=d.index,m=d.attributes.position;let E=0;if(f!==null){const _=f.array;E=f.version;for(let T=0,I=_.length;T<I;T+=3){const v=_[T+0],b=_[T+1],x=_[T+2];u.push(v,b,b,x,x,v)}}else if(m!==void 0){const _=m.array;E=m.version;for(let T=0,I=_.length/3-1;T<I;T+=3){const v=T+0,b=T+1,x=T+2;u.push(v,b,b,x,x,v)}}else return;const g=new(tE(u)?aE:oE)(u,1);g.version=E;const p=s.get(d);p&&e.remove(p),s.set(d,g)}function h(d){const u=s.get(d);if(u){const f=d.index;f!==null&&u.version<f.version&&c(d)}else c(d);return s.get(d)}return{get:a,update:l,getWireframeAttribute:h}}function Fy(r,e,t,i){const n=i.isWebGL2;let s;function o(f){s=f}let a,l;function c(f){a=f.type,l=f.bytesPerElement}function h(f,m){r.drawElements(s,m,a,f*l),t.update(m,s,1)}function d(f,m,E){if(E===0)return;let g,p;if(n)g=r,p="drawElementsInstanced";else if(g=e.get("ANGLE_instanced_arrays"),p="drawElementsInstancedANGLE",g===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}g[p](s,m,a,f*l,E),t.update(m,s,E)}function u(f,m,E){if(E===0)return;const g=e.get("WEBGL_multi_draw");if(g===null)for(let p=0;p<E;p++)this.render(f[p]/l,m[p]);else{g.multiDrawElementsWEBGL(s,m,0,a,f,0,E);let p=0;for(let _=0;_<E;_++)p+=m[_];t.update(p,s,1)}}this.setMode=o,this.setIndex=c,this.render=h,this.renderInstances=d,this.renderMultiDraw=u}function Py(r){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function i(s,o,a){switch(t.calls++,o){case r.TRIANGLES:t.triangles+=a*(s/3);break;case r.LINES:t.lines+=a*(s/2);break;case r.LINE_STRIP:t.lines+=a*(s-1);break;case r.LINE_LOOP:t.lines+=a*s;break;case r.POINTS:t.points+=a*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function n(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:n,update:i}}function Ly(r,e){return r[0]-e[0]}function Oy(r,e){return Math.abs(e[1])-Math.abs(r[1])}function Ny(r,e,t){const i={},n=new Float32Array(8),s=new WeakMap,o=new bt,a=[];for(let c=0;c<8;c++)a[c]=[c,0];function l(c,h,d){const u=c.morphTargetInfluences;if(e.isWebGL2===!0){const f=h.morphAttributes.position||h.morphAttributes.normal||h.morphAttributes.color,m=f!==void 0?f.length:0;let E=s.get(h);if(E===void 0||E.count!==m){let C=function(){w.dispose(),s.delete(h),h.removeEventListener("dispose",C)};E!==void 0&&E.texture.dispose();const _=h.morphAttributes.position!==void 0,T=h.morphAttributes.normal!==void 0,I=h.morphAttributes.color!==void 0,v=h.morphAttributes.position||[],b=h.morphAttributes.normal||[],x=h.morphAttributes.color||[];let A=0;_===!0&&(A=1),T===!0&&(A=2),I===!0&&(A=3);let y=h.attributes.position.count*A,S=1;y>e.maxTextureSize&&(S=Math.ceil(y/e.maxTextureSize),y=e.maxTextureSize);const O=new Float32Array(y*S*4*m),w=new sE(O,y,S,m);w.type=Yn,w.needsUpdate=!0;const N=A*4;for(let U=0;U<m;U++){const B=v[U],V=b[U],j=x[U],G=y*S*4*U;for(let se=0;se<B.count;se++){const W=se*N;_===!0&&(o.fromBufferAttribute(B,se),O[G+W+0]=o.x,O[G+W+1]=o.y,O[G+W+2]=o.z,O[G+W+3]=0),T===!0&&(o.fromBufferAttribute(V,se),O[G+W+4]=o.x,O[G+W+5]=o.y,O[G+W+6]=o.z,O[G+W+7]=0),I===!0&&(o.fromBufferAttribute(j,se),O[G+W+8]=o.x,O[G+W+9]=o.y,O[G+W+10]=o.z,O[G+W+11]=j.itemSize===4?o.w:1)}}E={count:m,texture:w,size:new Re(y,S)},s.set(h,E),h.addEventListener("dispose",C)}let g=0;for(let _=0;_<u.length;_++)g+=u[_];const p=h.morphTargetsRelative?1:1-g;d.getUniforms().setValue(r,"morphTargetBaseInfluence",p),d.getUniforms().setValue(r,"morphTargetInfluences",u),d.getUniforms().setValue(r,"morphTargetsTexture",E.texture,t),d.getUniforms().setValue(r,"morphTargetsTextureSize",E.size)}else{const f=u===void 0?0:u.length;let m=i[h.id];if(m===void 0||m.length!==f){m=[];for(let T=0;T<f;T++)m[T]=[T,0];i[h.id]=m}for(let T=0;T<f;T++){const I=m[T];I[0]=T,I[1]=u[T]}m.sort(Oy);for(let T=0;T<8;T++)T<f&&m[T][1]?(a[T][0]=m[T][0],a[T][1]=m[T][1]):(a[T][0]=Number.MAX_SAFE_INTEGER,a[T][1]=0);a.sort(Ly);const E=h.morphAttributes.position,g=h.morphAttributes.normal;let p=0;for(let T=0;T<8;T++){const I=a[T],v=I[0],b=I[1];v!==Number.MAX_SAFE_INTEGER&&b?(E&&h.getAttribute("morphTarget"+T)!==E[v]&&h.setAttribute("morphTarget"+T,E[v]),g&&h.getAttribute("morphNormal"+T)!==g[v]&&h.setAttribute("morphNormal"+T,g[v]),n[T]=b,p+=b):(E&&h.hasAttribute("morphTarget"+T)===!0&&h.deleteAttribute("morphTarget"+T),g&&h.hasAttribute("morphNormal"+T)===!0&&h.deleteAttribute("morphNormal"+T),n[T]=0)}const _=h.morphTargetsRelative?1:1-p;d.getUniforms().setValue(r,"morphTargetBaseInfluence",_),d.getUniforms().setValue(r,"morphTargetInfluences",n)}}return{update:l}}function Dy(r,e,t,i){let n=new WeakMap;function s(l){const c=i.render.frame,h=l.geometry,d=e.get(l,h);if(n.get(d)!==c&&(e.update(d),n.set(d,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",a)===!1&&l.addEventListener("dispose",a),n.get(l)!==c&&(t.update(l.instanceMatrix,r.ARRAY_BUFFER),l.instanceColor!==null&&t.update(l.instanceColor,r.ARRAY_BUFFER),n.set(l,c))),l.isSkinnedMesh){const u=l.skeleton;n.get(u)!==c&&(u.update(),n.set(u,c))}return d}function o(){n=new WeakMap}function a(l){const c=l.target;c.removeEventListener("dispose",a),t.remove(c.instanceMatrix),c.instanceColor!==null&&t.remove(c.instanceColor)}return{update:s,dispose:o}}class qd extends xi{constructor(e,t,i,n,s,o,a,l,c,h){if(h=h!==void 0?h:Ss,h!==Ss&&h!==_o)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");i===void 0&&h===Ss&&(i=Wn),i===void 0&&h===_o&&(i=$s),super(null,n,s,o,a,l,h,i,c),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=a!==void 0?a:Et,this.minFilter=l!==void 0?l:Et,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}const dE=new xi,fE=new qd(1,1);fE.compareFunction=eE;const pE=new sE,mE=new TT,gE=new hE,Op=[],Np=[],Dp=new Float32Array(16),Up=new Float32Array(9),Bp=new Float32Array(4);function Ao(r,e,t){const i=r[0];if(i<=0||i>0)return r;const n=e*t;let s=Op[n];if(s===void 0&&(s=new Float32Array(n),Op[n]=s),e!==0){i.toArray(s,0);for(let o=1,a=0;o!==e;++o)a+=t,r[o].toArray(s,a)}return s}function Wt(r,e){if(r.length!==e.length)return!1;for(let t=0,i=r.length;t<i;t++)if(r[t]!==e[t])return!1;return!0}function Yt(r,e){for(let t=0,i=e.length;t<i;t++)r[t]=e[t]}function kc(r,e){let t=Np[e];t===void 0&&(t=new Int32Array(e),Np[e]=t);for(let i=0;i!==e;++i)t[i]=r.allocateTextureUnit();return t}function Uy(r,e){const t=this.cache;t[0]!==e&&(r.uniform1f(this.addr,e),t[0]=e)}function By(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Wt(t,e))return;r.uniform2fv(this.addr,e),Yt(t,e)}}function zy(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(r.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(Wt(t,e))return;r.uniform3fv(this.addr,e),Yt(t,e)}}function Vy(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Wt(t,e))return;r.uniform4fv(this.addr,e),Yt(t,e)}}function ky(r,e){const t=this.cache,i=e.elements;if(i===void 0){if(Wt(t,e))return;r.uniformMatrix2fv(this.addr,!1,e),Yt(t,e)}else{if(Wt(t,i))return;Bp.set(i),r.uniformMatrix2fv(this.addr,!1,Bp),Yt(t,i)}}function Gy(r,e){const t=this.cache,i=e.elements;if(i===void 0){if(Wt(t,e))return;r.uniformMatrix3fv(this.addr,!1,e),Yt(t,e)}else{if(Wt(t,i))return;Up.set(i),r.uniformMatrix3fv(this.addr,!1,Up),Yt(t,i)}}function Hy(r,e){const t=this.cache,i=e.elements;if(i===void 0){if(Wt(t,e))return;r.uniformMatrix4fv(this.addr,!1,e),Yt(t,e)}else{if(Wt(t,i))return;Dp.set(i),r.uniformMatrix4fv(this.addr,!1,Dp),Yt(t,i)}}function Wy(r,e){const t=this.cache;t[0]!==e&&(r.uniform1i(this.addr,e),t[0]=e)}function Yy(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Wt(t,e))return;r.uniform2iv(this.addr,e),Yt(t,e)}}function Xy(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(Wt(t,e))return;r.uniform3iv(this.addr,e),Yt(t,e)}}function Zy(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Wt(t,e))return;r.uniform4iv(this.addr,e),Yt(t,e)}}function jy(r,e){const t=this.cache;t[0]!==e&&(r.uniform1ui(this.addr,e),t[0]=e)}function qy(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Wt(t,e))return;r.uniform2uiv(this.addr,e),Yt(t,e)}}function Ky(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(Wt(t,e))return;r.uniform3uiv(this.addr,e),Yt(t,e)}}function Qy(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Wt(t,e))return;r.uniform4uiv(this.addr,e),Yt(t,e)}}function Jy(r,e,t){const i=this.cache,n=t.allocateTextureUnit();i[0]!==n&&(r.uniform1i(this.addr,n),i[0]=n);const s=this.type===r.SAMPLER_2D_SHADOW?fE:dE;t.setTexture2D(e||s,n)}function $y(r,e,t){const i=this.cache,n=t.allocateTextureUnit();i[0]!==n&&(r.uniform1i(this.addr,n),i[0]=n),t.setTexture3D(e||mE,n)}function eb(r,e,t){const i=this.cache,n=t.allocateTextureUnit();i[0]!==n&&(r.uniform1i(this.addr,n),i[0]=n),t.setTextureCube(e||gE,n)}function tb(r,e,t){const i=this.cache,n=t.allocateTextureUnit();i[0]!==n&&(r.uniform1i(this.addr,n),i[0]=n),t.setTexture2DArray(e||pE,n)}function ib(r){switch(r){case 5126:return Uy;case 35664:return By;case 35665:return zy;case 35666:return Vy;case 35674:return ky;case 35675:return Gy;case 35676:return Hy;case 5124:case 35670:return Wy;case 35667:case 35671:return Yy;case 35668:case 35672:return Xy;case 35669:case 35673:return Zy;case 5125:return jy;case 36294:return qy;case 36295:return Ky;case 36296:return Qy;case 35678:case 36198:case 36298:case 36306:case 35682:return Jy;case 35679:case 36299:case 36307:return $y;case 35680:case 36300:case 36308:case 36293:return eb;case 36289:case 36303:case 36311:case 36292:return tb}}function nb(r,e){r.uniform1fv(this.addr,e)}function sb(r,e){const t=Ao(e,this.size,2);r.uniform2fv(this.addr,t)}function rb(r,e){const t=Ao(e,this.size,3);r.uniform3fv(this.addr,t)}function ob(r,e){const t=Ao(e,this.size,4);r.uniform4fv(this.addr,t)}function ab(r,e){const t=Ao(e,this.size,4);r.uniformMatrix2fv(this.addr,!1,t)}function lb(r,e){const t=Ao(e,this.size,9);r.uniformMatrix3fv(this.addr,!1,t)}function cb(r,e){const t=Ao(e,this.size,16);r.uniformMatrix4fv(this.addr,!1,t)}function hb(r,e){r.uniform1iv(this.addr,e)}function ub(r,e){r.uniform2iv(this.addr,e)}function db(r,e){r.uniform3iv(this.addr,e)}function fb(r,e){r.uniform4iv(this.addr,e)}function pb(r,e){r.uniform1uiv(this.addr,e)}function mb(r,e){r.uniform2uiv(this.addr,e)}function gb(r,e){r.uniform3uiv(this.addr,e)}function Eb(r,e){r.uniform4uiv(this.addr,e)}function Ib(r,e,t){const i=this.cache,n=e.length,s=kc(t,n);Wt(i,s)||(r.uniform1iv(this.addr,s),Yt(i,s));for(let o=0;o!==n;++o)t.setTexture2D(e[o]||dE,s[o])}function _b(r,e,t){const i=this.cache,n=e.length,s=kc(t,n);Wt(i,s)||(r.uniform1iv(this.addr,s),Yt(i,s));for(let o=0;o!==n;++o)t.setTexture3D(e[o]||mE,s[o])}function Tb(r,e,t){const i=this.cache,n=e.length,s=kc(t,n);Wt(i,s)||(r.uniform1iv(this.addr,s),Yt(i,s));for(let o=0;o!==n;++o)t.setTextureCube(e[o]||gE,s[o])}function vb(r,e,t){const i=this.cache,n=e.length,s=kc(t,n);Wt(i,s)||(r.uniform1iv(this.addr,s),Yt(i,s));for(let o=0;o!==n;++o)t.setTexture2DArray(e[o]||pE,s[o])}function Cb(r){switch(r){case 5126:return nb;case 35664:return sb;case 35665:return rb;case 35666:return ob;case 35674:return ab;case 35675:return lb;case 35676:return cb;case 5124:case 35670:return hb;case 35667:case 35671:return ub;case 35668:case 35672:return db;case 35669:case 35673:return fb;case 5125:return pb;case 36294:return mb;case 36295:return gb;case 36296:return Eb;case 35678:case 36198:case 36298:case 36306:case 35682:return Ib;case 35679:case 36299:case 36307:return _b;case 35680:case 36300:case 36308:case 36293:return Tb;case 36289:case 36303:case 36311:case 36292:return vb}}class yb{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.type=t.type,this.setValue=ib(t.type)}}class bb{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=Cb(t.type)}}class Sb{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,i){const n=this.seq;for(let s=0,o=n.length;s!==o;++s){const a=n[s];a.setValue(e,t[a.id],i)}}}const Lh=/(\w+)(\])?(\[|\.)?/g;function zp(r,e){r.seq.push(e),r.map[e.id]=e}function xb(r,e,t){const i=r.name,n=i.length;for(Lh.lastIndex=0;;){const s=Lh.exec(i),o=Lh.lastIndex;let a=s[1];const l=s[2]==="]",c=s[3];if(l&&(a=a|0),c===void 0||c==="["&&o+2===n){zp(t,c===void 0?new yb(a,r,e):new bb(a,r,e));break}else{let d=t.map[a];d===void 0&&(d=new Sb(a),zp(t,d)),t=d}}}class uc{constructor(e,t){this.seq=[],this.map={};const i=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let n=0;n<i;++n){const s=e.getActiveUniform(t,n),o=e.getUniformLocation(t,s.name);xb(s,o,this)}}setValue(e,t,i,n){const s=this.map[t];s!==void 0&&s.setValue(e,i,n)}setOptional(e,t,i){const n=t[i];n!==void 0&&this.setValue(e,i,n)}static upload(e,t,i,n){for(let s=0,o=t.length;s!==o;++s){const a=t[s],l=i[a.id];l.needsUpdate!==!1&&a.setValue(e,l.value,n)}}static seqWithValue(e,t){const i=[];for(let n=0,s=e.length;n!==s;++n){const o=e[n];o.id in t&&i.push(o)}return i}}function Vp(r,e,t){const i=r.createShader(e);return r.shaderSource(i,t),r.compileShader(i),i}const wb=37297;let Ab=0;function Rb(r,e){const t=r.split(`
`),i=[],n=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let o=n;o<s;o++){const a=o+1;i.push(`${a===e?">":" "} ${a}: ${t[o]}`)}return i.join(`
`)}function Mb(r){const e=rt.getPrimaries(rt.workingColorSpace),t=rt.getPrimaries(r);let i;switch(e===t?i="":e===bc&&t===yc?i="LinearDisplayP3ToLinearSRGB":e===yc&&t===bc&&(i="LinearSRGBToLinearDisplayP3"),r){case is:case zc:return[i,"LinearTransferOETF"];case ni:case Wd:return[i,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",r),[i,"LinearTransferOETF"]}}function kp(r,e,t){const i=r.getShaderParameter(e,r.COMPILE_STATUS),n=r.getShaderInfoLog(e).trim();if(i&&n==="")return"";const s=/ERROR: 0:(\d+)/.exec(n);if(s){const o=parseInt(s[1]);return t.toUpperCase()+`

`+n+`

`+Rb(r.getShaderSource(e),o)}else return n}function Fb(r,e){const t=Mb(e);return`vec4 ${r}( vec4 value ) { return ${t[0]}( ${t[1]}( value ) ); }`}function Pb(r,e){let t;switch(e){case M_:t="Linear";break;case F_:t="Reinhard";break;case P_:t="OptimizedCineon";break;case L_:t="ACESFilmic";break;case N_:t="AgX";break;case O_:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+r+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function Lb(r){return[r.extensionDerivatives||r.envMapCubeUVHeight||r.bumpMap||r.normalMapTangentSpace||r.clearcoatNormalMap||r.flatShading||r.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(r.extensionFragDepth||r.logarithmicDepthBuffer)&&r.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",r.extensionDrawBuffers&&r.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(r.extensionShaderTextureLOD||r.envMap||r.transmission)&&r.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(so).join(`
`)}function Ob(r){return[r.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":""].filter(so).join(`
`)}function Nb(r){const e=[];for(const t in r){const i=r[t];i!==!1&&e.push("#define "+t+" "+i)}return e.join(`
`)}function Db(r,e){const t={},i=r.getProgramParameter(e,r.ACTIVE_ATTRIBUTES);for(let n=0;n<i;n++){const s=r.getActiveAttrib(e,n),o=s.name;let a=1;s.type===r.FLOAT_MAT2&&(a=2),s.type===r.FLOAT_MAT3&&(a=3),s.type===r.FLOAT_MAT4&&(a=4),t[o]={type:s.type,location:r.getAttribLocation(e,o),locationSize:a}}return t}function so(r){return r!==""}function Gp(r,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return r.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Hp(r,e){return r.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const Ub=/^[ \t]*#include +<([\w\d./]+)>/gm;function Mu(r){return r.replace(Ub,zb)}const Bb=new Map([["encodings_fragment","colorspace_fragment"],["encodings_pars_fragment","colorspace_pars_fragment"],["output_fragment","opaque_fragment"]]);function zb(r,e){let t=tt[e];if(t===void 0){const i=Bb.get(e);if(i!==void 0)t=tt[i],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,i);else throw new Error("Can not resolve #include <"+e+">")}return Mu(t)}const Vb=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Wp(r){return r.replace(Vb,kb)}function kb(r,e,t,i){let n="";for(let s=parseInt(e);s<parseInt(t);s++)n+=i.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return n}function Yp(r){let e="precision "+r.precision+` float;
precision `+r.precision+" int;";return r.precision==="highp"?e+=`
#define HIGH_PRECISION`:r.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:r.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function Gb(r){let e="SHADOWMAP_TYPE_BASIC";return r.shadowMapType===Hg?e="SHADOWMAP_TYPE_PCF":r.shadowMapType===s_?e="SHADOWMAP_TYPE_PCF_SOFT":r.shadowMapType===Nn&&(e="SHADOWMAP_TYPE_VSM"),e}function Hb(r){let e="ENVMAP_TYPE_CUBE";if(r.envMap)switch(r.envMapMode){case Eo:case Io:e="ENVMAP_TYPE_CUBE";break;case Bc:e="ENVMAP_TYPE_CUBE_UV";break}return e}function Wb(r){let e="ENVMAP_MODE_REFLECTION";if(r.envMap)switch(r.envMapMode){case Io:e="ENVMAP_MODE_REFRACTION";break}return e}function Yb(r){let e="ENVMAP_BLENDING_NONE";if(r.envMap)switch(r.combine){case kd:e="ENVMAP_BLENDING_MULTIPLY";break;case A_:e="ENVMAP_BLENDING_MIX";break;case R_:e="ENVMAP_BLENDING_ADD";break}return e}function Xb(r){const e=r.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,i=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:i,maxMip:t}}function Zb(r,e,t,i){const n=r.getContext(),s=t.defines;let o=t.vertexShader,a=t.fragmentShader;const l=Gb(t),c=Hb(t),h=Wb(t),d=Yb(t),u=Xb(t),f=t.isWebGL2?"":Lb(t),m=Ob(t),E=Nb(s),g=n.createProgram();let p,_,T=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(p=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,E].filter(so).join(`
`),p.length>0&&(p+=`
`),_=[f,"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,E].filter(so).join(`
`),_.length>0&&(_+=`
`)):(p=[Yp(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,E,t.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",t.batching?"#define USE_BATCHING":"",t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(so).join(`
`),_=[f,Yp(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,E,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.envMap?"#define "+h:"",t.envMap?"#define "+d:"",u?"#define CUBEUV_TEXEL_WIDTH "+u.texelWidth:"",u?"#define CUBEUV_TEXEL_HEIGHT "+u.texelHeight:"",u?"#define CUBEUV_MAX_MIP "+u.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Qn?"#define TONE_MAPPING":"",t.toneMapping!==Qn?tt.tonemapping_pars_fragment:"",t.toneMapping!==Qn?Pb("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",tt.colorspace_pars_fragment,Fb("linearToOutputTexel",t.outputColorSpace),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(so).join(`
`)),o=Mu(o),o=Gp(o,t),o=Hp(o,t),a=Mu(a),a=Gp(a,t),a=Hp(a,t),o=Wp(o),a=Wp(a),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(T=`#version 300 es
`,p=[m,"precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+p,_=["precision mediump sampler2DArray;","#define varying in",t.glslVersion===cp?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===cp?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+_);const I=T+p+o,v=T+_+a,b=Vp(n,n.VERTEX_SHADER,I),x=Vp(n,n.FRAGMENT_SHADER,v);n.attachShader(g,b),n.attachShader(g,x),t.index0AttributeName!==void 0?n.bindAttribLocation(g,0,t.index0AttributeName):t.morphTargets===!0&&n.bindAttribLocation(g,0,"position"),n.linkProgram(g);function A(w){if(r.debug.checkShaderErrors){const N=n.getProgramInfoLog(g).trim(),C=n.getShaderInfoLog(b).trim(),U=n.getShaderInfoLog(x).trim();let B=!0,V=!0;if(n.getProgramParameter(g,n.LINK_STATUS)===!1)if(B=!1,typeof r.debug.onShaderError=="function")r.debug.onShaderError(n,g,b,x);else{const j=kp(n,b,"vertex"),G=kp(n,x,"fragment");console.error("THREE.WebGLProgram: Shader Error "+n.getError()+" - VALIDATE_STATUS "+n.getProgramParameter(g,n.VALIDATE_STATUS)+`

Program Info Log: `+N+`
`+j+`
`+G)}else N!==""?console.warn("THREE.WebGLProgram: Program Info Log:",N):(C===""||U==="")&&(V=!1);V&&(w.diagnostics={runnable:B,programLog:N,vertexShader:{log:C,prefix:p},fragmentShader:{log:U,prefix:_}})}n.deleteShader(b),n.deleteShader(x),y=new uc(n,g),S=Db(n,g)}let y;this.getUniforms=function(){return y===void 0&&A(this),y};let S;this.getAttributes=function(){return S===void 0&&A(this),S};let O=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return O===!1&&(O=n.getProgramParameter(g,wb)),O},this.destroy=function(){i.releaseStatesOfProgram(this),n.deleteProgram(g),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=Ab++,this.cacheKey=e,this.usedTimes=1,this.program=g,this.vertexShader=b,this.fragmentShader=x,this}let jb=0;class qb{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,i=e.fragmentShader,n=this._getShaderStage(t),s=this._getShaderStage(i),o=this._getShaderCacheForMaterial(e);return o.has(n)===!1&&(o.add(n),n.usedTimes++),o.has(s)===!1&&(o.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const i of t)i.usedTimes--,i.usedTimes===0&&this.shaderCache.delete(i.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let i=t.get(e);return i===void 0&&(i=new Set,t.set(e,i)),i}_getShaderStage(e){const t=this.shaderCache;let i=t.get(e);return i===void 0&&(i=new Kb(e),t.set(e,i)),i}}class Kb{constructor(e){this.id=jb++,this.code=e,this.usedTimes=0}}function Qb(r,e,t,i,n,s,o){const a=new Xd,l=new qb,c=[],h=n.isWebGL2,d=n.logarithmicDepthBuffer,u=n.vertexTextures;let f=n.precision;const m={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function E(y){return y===0?"uv":`uv${y}`}function g(y,S,O,w,N){const C=w.fog,U=N.geometry,B=y.isMeshStandardMaterial?w.environment:null,V=(y.isMeshStandardMaterial?t:e).get(y.envMap||B),j=V&&V.mapping===Bc?V.image.height:null,G=m[y.type];y.precision!==null&&(f=n.getMaxPrecision(y.precision),f!==y.precision&&console.warn("THREE.WebGLProgram.getParameters:",y.precision,"not supported, using",f,"instead."));const se=U.morphAttributes.position||U.morphAttributes.normal||U.morphAttributes.color,W=se!==void 0?se.length:0;let Y=0;U.morphAttributes.position!==void 0&&(Y=1),U.morphAttributes.normal!==void 0&&(Y=2),U.morphAttributes.color!==void 0&&(Y=3);let q,Q,te,Ie;if(G){const fi=Si[G];q=fi.vertexShader,Q=fi.fragmentShader}else q=y.vertexShader,Q=y.fragmentShader,l.update(y),te=l.getVertexShaderID(y),Ie=l.getFragmentShaderID(y);const ve=r.getRenderTarget(),pe=N.isInstancedMesh===!0,_e=N.isBatchedMesh===!0,Ee=!!y.map,Ae=!!y.matcap,ie=!!V,$e=!!y.aoMap,M=!!y.lightMap,ee=!!y.bumpMap,K=!!y.normalMap,H=!!y.displacementMap,z=!!y.emissiveMap,P=!!y.metalnessMap,L=!!y.roughnessMap,Z=y.anisotropy>0,X=y.clearcoat>0,$=y.iridescence>0,re=y.sheen>0,le=y.transmission>0,de=Z&&!!y.anisotropyMap,Te=X&&!!y.clearcoatMap,ye=X&&!!y.clearcoatNormalMap,De=X&&!!y.clearcoatRoughnessMap,me=$&&!!y.iridescenceMap,it=$&&!!y.iridescenceThicknessMap,qe=re&&!!y.sheenColorMap,Pe=re&&!!y.sheenRoughnessMap,Oe=!!y.specularMap,Le=!!y.specularColorMap,Ue=!!y.specularIntensityMap,at=le&&!!y.transmissionMap,vt=le&&!!y.thicknessMap,et=!!y.gradientMap,be=!!y.alphaMap,J=y.alphaTest>0,Se=!!y.alphaHash,xe=!!y.extensions,He=!!U.attributes.uv1,Be=!!U.attributes.uv2,ft=!!U.attributes.uv3;let pt=Qn;return y.toneMapped&&(ve===null||ve.isXRRenderTarget===!0)&&(pt=r.toneMapping),{isWebGL2:h,shaderID:G,shaderType:y.type,shaderName:y.name,vertexShader:q,fragmentShader:Q,defines:y.defines,customVertexShaderID:te,customFragmentShaderID:Ie,isRawShaderMaterial:y.isRawShaderMaterial===!0,glslVersion:y.glslVersion,precision:f,batching:_e,instancing:pe,instancingColor:pe&&N.instanceColor!==null,supportsVertexTextures:u,outputColorSpace:ve===null?r.outputColorSpace:ve.isXRRenderTarget===!0?ve.texture.colorSpace:is,map:Ee,matcap:Ae,envMap:ie,envMapMode:ie&&V.mapping,envMapCubeUVHeight:j,aoMap:$e,lightMap:M,bumpMap:ee,normalMap:K,displacementMap:u&&H,emissiveMap:z,normalMapObjectSpace:K&&y.normalMapType===X_,normalMapTangentSpace:K&&y.normalMapType===Hd,metalnessMap:P,roughnessMap:L,anisotropy:Z,anisotropyMap:de,clearcoat:X,clearcoatMap:Te,clearcoatNormalMap:ye,clearcoatRoughnessMap:De,iridescence:$,iridescenceMap:me,iridescenceThicknessMap:it,sheen:re,sheenColorMap:qe,sheenRoughnessMap:Pe,specularMap:Oe,specularColorMap:Le,specularIntensityMap:Ue,transmission:le,transmissionMap:at,thicknessMap:vt,gradientMap:et,opaque:y.transparent===!1&&y.blending===fo,alphaMap:be,alphaTest:J,alphaHash:Se,combine:y.combine,mapUv:Ee&&E(y.map.channel),aoMapUv:$e&&E(y.aoMap.channel),lightMapUv:M&&E(y.lightMap.channel),bumpMapUv:ee&&E(y.bumpMap.channel),normalMapUv:K&&E(y.normalMap.channel),displacementMapUv:H&&E(y.displacementMap.channel),emissiveMapUv:z&&E(y.emissiveMap.channel),metalnessMapUv:P&&E(y.metalnessMap.channel),roughnessMapUv:L&&E(y.roughnessMap.channel),anisotropyMapUv:de&&E(y.anisotropyMap.channel),clearcoatMapUv:Te&&E(y.clearcoatMap.channel),clearcoatNormalMapUv:ye&&E(y.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:De&&E(y.clearcoatRoughnessMap.channel),iridescenceMapUv:me&&E(y.iridescenceMap.channel),iridescenceThicknessMapUv:it&&E(y.iridescenceThicknessMap.channel),sheenColorMapUv:qe&&E(y.sheenColorMap.channel),sheenRoughnessMapUv:Pe&&E(y.sheenRoughnessMap.channel),specularMapUv:Oe&&E(y.specularMap.channel),specularColorMapUv:Le&&E(y.specularColorMap.channel),specularIntensityMapUv:Ue&&E(y.specularIntensityMap.channel),transmissionMapUv:at&&E(y.transmissionMap.channel),thicknessMapUv:vt&&E(y.thicknessMap.channel),alphaMapUv:be&&E(y.alphaMap.channel),vertexTangents:!!U.attributes.tangent&&(K||Z),vertexColors:y.vertexColors,vertexAlphas:y.vertexColors===!0&&!!U.attributes.color&&U.attributes.color.itemSize===4,vertexUv1s:He,vertexUv2s:Be,vertexUv3s:ft,pointsUvs:N.isPoints===!0&&!!U.attributes.uv&&(Ee||be),fog:!!C,useFog:y.fog===!0,fogExp2:C&&C.isFogExp2,flatShading:y.flatShading===!0,sizeAttenuation:y.sizeAttenuation===!0,logarithmicDepthBuffer:d,skinning:N.isSkinnedMesh===!0,morphTargets:U.morphAttributes.position!==void 0,morphNormals:U.morphAttributes.normal!==void 0,morphColors:U.morphAttributes.color!==void 0,morphTargetsCount:W,morphTextureStride:Y,numDirLights:S.directional.length,numPointLights:S.point.length,numSpotLights:S.spot.length,numSpotLightMaps:S.spotLightMap.length,numRectAreaLights:S.rectArea.length,numHemiLights:S.hemi.length,numDirLightShadows:S.directionalShadowMap.length,numPointLightShadows:S.pointShadowMap.length,numSpotLightShadows:S.spotShadowMap.length,numSpotLightShadowsWithMaps:S.numSpotLightShadowsWithMaps,numLightProbes:S.numLightProbes,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:y.dithering,shadowMapEnabled:r.shadowMap.enabled&&O.length>0,shadowMapType:r.shadowMap.type,toneMapping:pt,useLegacyLights:r._useLegacyLights,decodeVideoTexture:Ee&&y.map.isVideoTexture===!0&&rt.getTransfer(y.map.colorSpace)===It,premultipliedAlpha:y.premultipliedAlpha,doubleSided:y.side===_i,flipSided:y.side===di,useDepthPacking:y.depthPacking>=0,depthPacking:y.depthPacking||0,index0AttributeName:y.index0AttributeName,extensionDerivatives:xe&&y.extensions.derivatives===!0,extensionFragDepth:xe&&y.extensions.fragDepth===!0,extensionDrawBuffers:xe&&y.extensions.drawBuffers===!0,extensionShaderTextureLOD:xe&&y.extensions.shaderTextureLOD===!0,extensionClipCullDistance:xe&&y.extensions.clipCullDistance&&i.has("WEBGL_clip_cull_distance"),rendererExtensionFragDepth:h||i.has("EXT_frag_depth"),rendererExtensionDrawBuffers:h||i.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:h||i.has("EXT_shader_texture_lod"),rendererExtensionParallelShaderCompile:i.has("KHR_parallel_shader_compile"),customProgramCacheKey:y.customProgramCacheKey()}}function p(y){const S=[];if(y.shaderID?S.push(y.shaderID):(S.push(y.customVertexShaderID),S.push(y.customFragmentShaderID)),y.defines!==void 0)for(const O in y.defines)S.push(O),S.push(y.defines[O]);return y.isRawShaderMaterial===!1&&(_(S,y),T(S,y),S.push(r.outputColorSpace)),S.push(y.customProgramCacheKey),S.join()}function _(y,S){y.push(S.precision),y.push(S.outputColorSpace),y.push(S.envMapMode),y.push(S.envMapCubeUVHeight),y.push(S.mapUv),y.push(S.alphaMapUv),y.push(S.lightMapUv),y.push(S.aoMapUv),y.push(S.bumpMapUv),y.push(S.normalMapUv),y.push(S.displacementMapUv),y.push(S.emissiveMapUv),y.push(S.metalnessMapUv),y.push(S.roughnessMapUv),y.push(S.anisotropyMapUv),y.push(S.clearcoatMapUv),y.push(S.clearcoatNormalMapUv),y.push(S.clearcoatRoughnessMapUv),y.push(S.iridescenceMapUv),y.push(S.iridescenceThicknessMapUv),y.push(S.sheenColorMapUv),y.push(S.sheenRoughnessMapUv),y.push(S.specularMapUv),y.push(S.specularColorMapUv),y.push(S.specularIntensityMapUv),y.push(S.transmissionMapUv),y.push(S.thicknessMapUv),y.push(S.combine),y.push(S.fogExp2),y.push(S.sizeAttenuation),y.push(S.morphTargetsCount),y.push(S.morphAttributeCount),y.push(S.numDirLights),y.push(S.numPointLights),y.push(S.numSpotLights),y.push(S.numSpotLightMaps),y.push(S.numHemiLights),y.push(S.numRectAreaLights),y.push(S.numDirLightShadows),y.push(S.numPointLightShadows),y.push(S.numSpotLightShadows),y.push(S.numSpotLightShadowsWithMaps),y.push(S.numLightProbes),y.push(S.shadowMapType),y.push(S.toneMapping),y.push(S.numClippingPlanes),y.push(S.numClipIntersection),y.push(S.depthPacking)}function T(y,S){a.disableAll(),S.isWebGL2&&a.enable(0),S.supportsVertexTextures&&a.enable(1),S.instancing&&a.enable(2),S.instancingColor&&a.enable(3),S.matcap&&a.enable(4),S.envMap&&a.enable(5),S.normalMapObjectSpace&&a.enable(6),S.normalMapTangentSpace&&a.enable(7),S.clearcoat&&a.enable(8),S.iridescence&&a.enable(9),S.alphaTest&&a.enable(10),S.vertexColors&&a.enable(11),S.vertexAlphas&&a.enable(12),S.vertexUv1s&&a.enable(13),S.vertexUv2s&&a.enable(14),S.vertexUv3s&&a.enable(15),S.vertexTangents&&a.enable(16),S.anisotropy&&a.enable(17),S.alphaHash&&a.enable(18),S.batching&&a.enable(19),y.push(a.mask),a.disableAll(),S.fog&&a.enable(0),S.useFog&&a.enable(1),S.flatShading&&a.enable(2),S.logarithmicDepthBuffer&&a.enable(3),S.skinning&&a.enable(4),S.morphTargets&&a.enable(5),S.morphNormals&&a.enable(6),S.morphColors&&a.enable(7),S.premultipliedAlpha&&a.enable(8),S.shadowMapEnabled&&a.enable(9),S.useLegacyLights&&a.enable(10),S.doubleSided&&a.enable(11),S.flipSided&&a.enable(12),S.useDepthPacking&&a.enable(13),S.dithering&&a.enable(14),S.transmission&&a.enable(15),S.sheen&&a.enable(16),S.opaque&&a.enable(17),S.pointsUvs&&a.enable(18),S.decodeVideoTexture&&a.enable(19),y.push(a.mask)}function I(y){const S=m[y.type];let O;if(S){const w=Si[S];O=Vc.clone(w.uniforms)}else O=y.uniforms;return O}function v(y,S){let O;for(let w=0,N=c.length;w<N;w++){const C=c[w];if(C.cacheKey===S){O=C,++O.usedTimes;break}}return O===void 0&&(O=new Zb(r,S,y,s),c.push(O)),O}function b(y){if(--y.usedTimes===0){const S=c.indexOf(y);c[S]=c[c.length-1],c.pop(),y.destroy()}}function x(y){l.remove(y)}function A(){l.dispose()}return{getParameters:g,getProgramCacheKey:p,getUniforms:I,acquireProgram:v,releaseProgram:b,releaseShaderCache:x,programs:c,dispose:A}}function Jb(){let r=new WeakMap;function e(s){let o=r.get(s);return o===void 0&&(o={},r.set(s,o)),o}function t(s){r.delete(s)}function i(s,o,a){r.get(s)[o]=a}function n(){r=new WeakMap}return{get:e,remove:t,update:i,dispose:n}}function $b(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.material.id!==e.material.id?r.material.id-e.material.id:r.z!==e.z?r.z-e.z:r.id-e.id}function Xp(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.z!==e.z?e.z-r.z:r.id-e.id}function Zp(){const r=[];let e=0;const t=[],i=[],n=[];function s(){e=0,t.length=0,i.length=0,n.length=0}function o(d,u,f,m,E,g){let p=r[e];return p===void 0?(p={id:d.id,object:d,geometry:u,material:f,groupOrder:m,renderOrder:d.renderOrder,z:E,group:g},r[e]=p):(p.id=d.id,p.object=d,p.geometry=u,p.material=f,p.groupOrder=m,p.renderOrder=d.renderOrder,p.z=E,p.group=g),e++,p}function a(d,u,f,m,E,g){const p=o(d,u,f,m,E,g);f.transmission>0?i.push(p):f.transparent===!0?n.push(p):t.push(p)}function l(d,u,f,m,E,g){const p=o(d,u,f,m,E,g);f.transmission>0?i.unshift(p):f.transparent===!0?n.unshift(p):t.unshift(p)}function c(d,u){t.length>1&&t.sort(d||$b),i.length>1&&i.sort(u||Xp),n.length>1&&n.sort(u||Xp)}function h(){for(let d=e,u=r.length;d<u;d++){const f=r[d];if(f.id===null)break;f.id=null,f.object=null,f.geometry=null,f.material=null,f.group=null}}return{opaque:t,transmissive:i,transparent:n,init:s,push:a,unshift:l,finish:h,sort:c}}function eS(){let r=new WeakMap;function e(i,n){const s=r.get(i);let o;return s===void 0?(o=new Zp,r.set(i,[o])):n>=s.length?(o=new Zp,s.push(o)):o=s[n],o}function t(){r=new WeakMap}return{get:e,dispose:t}}function tS(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new F,color:new Fe};break;case"SpotLight":t={position:new F,direction:new F,color:new Fe,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new F,color:new Fe,distance:0,decay:0};break;case"HemisphereLight":t={direction:new F,skyColor:new Fe,groundColor:new Fe};break;case"RectAreaLight":t={color:new Fe,position:new F,halfWidth:new F,halfHeight:new F};break}return r[e.id]=t,t}}}function iS(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Re};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Re};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Re,shadowCameraNear:1,shadowCameraFar:1e3};break}return r[e.id]=t,t}}}let nS=0;function sS(r,e){return(e.castShadow?2:0)-(r.castShadow?2:0)+(e.map?1:0)-(r.map?1:0)}function rS(r,e){const t=new tS,i=iS(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let h=0;h<9;h++)n.probe.push(new F);const s=new F,o=new fe,a=new fe;function l(h,d){let u=0,f=0,m=0;for(let w=0;w<9;w++)n.probe[w].set(0,0,0);let E=0,g=0,p=0,_=0,T=0,I=0,v=0,b=0,x=0,A=0,y=0;h.sort(sS);const S=d===!0?Math.PI:1;for(let w=0,N=h.length;w<N;w++){const C=h[w],U=C.color,B=C.intensity,V=C.distance,j=C.shadow&&C.shadow.map?C.shadow.map.texture:null;if(C.isAmbientLight)u+=U.r*B*S,f+=U.g*B*S,m+=U.b*B*S;else if(C.isLightProbe){for(let G=0;G<9;G++)n.probe[G].addScaledVector(C.sh.coefficients[G],B);y++}else if(C.isDirectionalLight){const G=t.get(C);if(G.color.copy(C.color).multiplyScalar(C.intensity*S),C.castShadow){const se=C.shadow,W=i.get(C);W.shadowBias=se.bias,W.shadowNormalBias=se.normalBias,W.shadowRadius=se.radius,W.shadowMapSize=se.mapSize,n.directionalShadow[E]=W,n.directionalShadowMap[E]=j,n.directionalShadowMatrix[E]=C.shadow.matrix,I++}n.directional[E]=G,E++}else if(C.isSpotLight){const G=t.get(C);G.position.setFromMatrixPosition(C.matrixWorld),G.color.copy(U).multiplyScalar(B*S),G.distance=V,G.coneCos=Math.cos(C.angle),G.penumbraCos=Math.cos(C.angle*(1-C.penumbra)),G.decay=C.decay,n.spot[p]=G;const se=C.shadow;if(C.map&&(n.spotLightMap[x]=C.map,x++,se.updateMatrices(C),C.castShadow&&A++),n.spotLightMatrix[p]=se.matrix,C.castShadow){const W=i.get(C);W.shadowBias=se.bias,W.shadowNormalBias=se.normalBias,W.shadowRadius=se.radius,W.shadowMapSize=se.mapSize,n.spotShadow[p]=W,n.spotShadowMap[p]=j,b++}p++}else if(C.isRectAreaLight){const G=t.get(C);G.color.copy(U).multiplyScalar(B),G.halfWidth.set(C.width*.5,0,0),G.halfHeight.set(0,C.height*.5,0),n.rectArea[_]=G,_++}else if(C.isPointLight){const G=t.get(C);if(G.color.copy(C.color).multiplyScalar(C.intensity*S),G.distance=C.distance,G.decay=C.decay,C.castShadow){const se=C.shadow,W=i.get(C);W.shadowBias=se.bias,W.shadowNormalBias=se.normalBias,W.shadowRadius=se.radius,W.shadowMapSize=se.mapSize,W.shadowCameraNear=se.camera.near,W.shadowCameraFar=se.camera.far,n.pointShadow[g]=W,n.pointShadowMap[g]=j,n.pointShadowMatrix[g]=C.shadow.matrix,v++}n.point[g]=G,g++}else if(C.isHemisphereLight){const G=t.get(C);G.skyColor.copy(C.color).multiplyScalar(B*S),G.groundColor.copy(C.groundColor).multiplyScalar(B*S),n.hemi[T]=G,T++}}_>0&&(e.isWebGL2?r.has("OES_texture_float_linear")===!0?(n.rectAreaLTC1=Ce.LTC_FLOAT_1,n.rectAreaLTC2=Ce.LTC_FLOAT_2):(n.rectAreaLTC1=Ce.LTC_HALF_1,n.rectAreaLTC2=Ce.LTC_HALF_2):r.has("OES_texture_float_linear")===!0?(n.rectAreaLTC1=Ce.LTC_FLOAT_1,n.rectAreaLTC2=Ce.LTC_FLOAT_2):r.has("OES_texture_half_float_linear")===!0?(n.rectAreaLTC1=Ce.LTC_HALF_1,n.rectAreaLTC2=Ce.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),n.ambient[0]=u,n.ambient[1]=f,n.ambient[2]=m;const O=n.hash;(O.directionalLength!==E||O.pointLength!==g||O.spotLength!==p||O.rectAreaLength!==_||O.hemiLength!==T||O.numDirectionalShadows!==I||O.numPointShadows!==v||O.numSpotShadows!==b||O.numSpotMaps!==x||O.numLightProbes!==y)&&(n.directional.length=E,n.spot.length=p,n.rectArea.length=_,n.point.length=g,n.hemi.length=T,n.directionalShadow.length=I,n.directionalShadowMap.length=I,n.pointShadow.length=v,n.pointShadowMap.length=v,n.spotShadow.length=b,n.spotShadowMap.length=b,n.directionalShadowMatrix.length=I,n.pointShadowMatrix.length=v,n.spotLightMatrix.length=b+x-A,n.spotLightMap.length=x,n.numSpotLightShadowsWithMaps=A,n.numLightProbes=y,O.directionalLength=E,O.pointLength=g,O.spotLength=p,O.rectAreaLength=_,O.hemiLength=T,O.numDirectionalShadows=I,O.numPointShadows=v,O.numSpotShadows=b,O.numSpotMaps=x,O.numLightProbes=y,n.version=nS++)}function c(h,d){let u=0,f=0,m=0,E=0,g=0;const p=d.matrixWorldInverse;for(let _=0,T=h.length;_<T;_++){const I=h[_];if(I.isDirectionalLight){const v=n.directional[u];v.direction.setFromMatrixPosition(I.matrixWorld),s.setFromMatrixPosition(I.target.matrixWorld),v.direction.sub(s),v.direction.transformDirection(p),u++}else if(I.isSpotLight){const v=n.spot[m];v.position.setFromMatrixPosition(I.matrixWorld),v.position.applyMatrix4(p),v.direction.setFromMatrixPosition(I.matrixWorld),s.setFromMatrixPosition(I.target.matrixWorld),v.direction.sub(s),v.direction.transformDirection(p),m++}else if(I.isRectAreaLight){const v=n.rectArea[E];v.position.setFromMatrixPosition(I.matrixWorld),v.position.applyMatrix4(p),a.identity(),o.copy(I.matrixWorld),o.premultiply(p),a.extractRotation(o),v.halfWidth.set(I.width*.5,0,0),v.halfHeight.set(0,I.height*.5,0),v.halfWidth.applyMatrix4(a),v.halfHeight.applyMatrix4(a),E++}else if(I.isPointLight){const v=n.point[f];v.position.setFromMatrixPosition(I.matrixWorld),v.position.applyMatrix4(p),f++}else if(I.isHemisphereLight){const v=n.hemi[g];v.direction.setFromMatrixPosition(I.matrixWorld),v.direction.transformDirection(p),g++}}}return{setup:l,setupView:c,state:n}}function jp(r,e){const t=new rS(r,e),i=[],n=[];function s(){i.length=0,n.length=0}function o(d){i.push(d)}function a(d){n.push(d)}function l(d){t.setup(i,d)}function c(d){t.setupView(i,d)}return{init:s,state:{lightsArray:i,shadowsArray:n,lights:t},setupLights:l,setupLightsView:c,pushLight:o,pushShadow:a}}function oS(r,e){let t=new WeakMap;function i(s,o=0){const a=t.get(s);let l;return a===void 0?(l=new jp(r,e),t.set(s,[l])):o>=a.length?(l=new jp(r,e),a.push(l)):l=a[o],l}function n(){t=new WeakMap}return{get:i,dispose:n}}class Kd extends Fs{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=W_,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class aS extends Fs{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const lS=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,cS=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function hS(r,e,t){let i=new Zd;const n=new Re,s=new Re,o=new bt,a=new Kd({depthPacking:Y_}),l=new aS,c={},h=t.maxTextureSize,d={[$i]:di,[di]:$i,[_i]:_i},u=new Mt({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Re},radius:{value:4}},vertexShader:lS,fragmentShader:cS}),f=u.clone();f.defines.HORIZONTAL_PASS=1;const m=new Ve;m.setAttribute("position",new ot(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const E=new ge(m,u),g=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Hg;let p=this.type;this.render=function(b,x,A){if(g.enabled===!1||g.autoUpdate===!1&&g.needsUpdate===!1||b.length===0)return;const y=r.getRenderTarget(),S=r.getActiveCubeFace(),O=r.getActiveMipmapLevel(),w=r.state;w.setBlending(Kn),w.buffers.color.setClear(1,1,1,1),w.buffers.depth.setTest(!0),w.setScissorTest(!1);const N=p!==Nn&&this.type===Nn,C=p===Nn&&this.type!==Nn;for(let U=0,B=b.length;U<B;U++){const V=b[U],j=V.shadow;if(j===void 0){console.warn("THREE.WebGLShadowMap:",V,"has no shadow.");continue}if(j.autoUpdate===!1&&j.needsUpdate===!1)continue;n.copy(j.mapSize);const G=j.getFrameExtents();if(n.multiply(G),s.copy(j.mapSize),(n.x>h||n.y>h)&&(n.x>h&&(s.x=Math.floor(h/G.x),n.x=s.x*G.x,j.mapSize.x=s.x),n.y>h&&(s.y=Math.floor(h/G.y),n.y=s.y*G.y,j.mapSize.y=s.y)),j.map===null||N===!0||C===!0){const W=this.type!==Nn?{minFilter:Et,magFilter:Et}:{};j.map!==null&&j.map.dispose(),j.map=new Qt(n.x,n.y,W),j.map.texture.name=V.name+".shadowMap",j.camera.updateProjectionMatrix()}r.setRenderTarget(j.map),r.clear();const se=j.getViewportCount();for(let W=0;W<se;W++){const Y=j.getViewport(W);o.set(s.x*Y.x,s.y*Y.y,s.x*Y.z,s.y*Y.w),w.viewport(o),j.updateMatrices(V,W),i=j.getFrustum(),I(x,A,j.camera,V,this.type)}j.isPointLightShadow!==!0&&this.type===Nn&&_(j,A),j.needsUpdate=!1}p=this.type,g.needsUpdate=!1,r.setRenderTarget(y,S,O)};function _(b,x){const A=e.update(E);u.defines.VSM_SAMPLES!==b.blurSamples&&(u.defines.VSM_SAMPLES=b.blurSamples,f.defines.VSM_SAMPLES=b.blurSamples,u.needsUpdate=!0,f.needsUpdate=!0),b.mapPass===null&&(b.mapPass=new Qt(n.x,n.y)),u.uniforms.shadow_pass.value=b.map.texture,u.uniforms.resolution.value=b.mapSize,u.uniforms.radius.value=b.radius,r.setRenderTarget(b.mapPass),r.clear(),r.renderBufferDirect(x,null,A,u,E,null),f.uniforms.shadow_pass.value=b.mapPass.texture,f.uniforms.resolution.value=b.mapSize,f.uniforms.radius.value=b.radius,r.setRenderTarget(b.map),r.clear(),r.renderBufferDirect(x,null,A,f,E,null)}function T(b,x,A,y){let S=null;const O=A.isPointLight===!0?b.customDistanceMaterial:b.customDepthMaterial;if(O!==void 0)S=O;else if(S=A.isPointLight===!0?l:a,r.localClippingEnabled&&x.clipShadows===!0&&Array.isArray(x.clippingPlanes)&&x.clippingPlanes.length!==0||x.displacementMap&&x.displacementScale!==0||x.alphaMap&&x.alphaTest>0||x.map&&x.alphaTest>0){const w=S.uuid,N=x.uuid;let C=c[w];C===void 0&&(C={},c[w]=C);let U=C[N];U===void 0&&(U=S.clone(),C[N]=U,x.addEventListener("dispose",v)),S=U}if(S.visible=x.visible,S.wireframe=x.wireframe,y===Nn?S.side=x.shadowSide!==null?x.shadowSide:x.side:S.side=x.shadowSide!==null?x.shadowSide:d[x.side],S.alphaMap=x.alphaMap,S.alphaTest=x.alphaTest,S.map=x.map,S.clipShadows=x.clipShadows,S.clippingPlanes=x.clippingPlanes,S.clipIntersection=x.clipIntersection,S.displacementMap=x.displacementMap,S.displacementScale=x.displacementScale,S.displacementBias=x.displacementBias,S.wireframeLinewidth=x.wireframeLinewidth,S.linewidth=x.linewidth,A.isPointLight===!0&&S.isMeshDistanceMaterial===!0){const w=r.properties.get(S);w.light=A}return S}function I(b,x,A,y,S){if(b.visible===!1)return;if(b.layers.test(x.layers)&&(b.isMesh||b.isLine||b.isPoints)&&(b.castShadow||b.receiveShadow&&S===Nn)&&(!b.frustumCulled||i.intersectsObject(b))){b.modelViewMatrix.multiplyMatrices(A.matrixWorldInverse,b.matrixWorld);const N=e.update(b),C=b.material;if(Array.isArray(C)){const U=N.groups;for(let B=0,V=U.length;B<V;B++){const j=U[B],G=C[j.materialIndex];if(G&&G.visible){const se=T(b,G,y,S);b.onBeforeShadow(r,b,x,A,N,se,j),r.renderBufferDirect(A,null,N,se,b,j),b.onAfterShadow(r,b,x,A,N,se,j)}}}else if(C.visible){const U=T(b,C,y,S);b.onBeforeShadow(r,b,x,A,N,U,null),r.renderBufferDirect(A,null,N,U,b,null),b.onAfterShadow(r,b,x,A,N,U,null)}}const w=b.children;for(let N=0,C=w.length;N<C;N++)I(w[N],x,A,y,S)}function v(b){b.target.removeEventListener("dispose",v);for(const A in c){const y=c[A],S=b.target.uuid;S in y&&(y[S].dispose(),delete y[S])}}}function uS(r,e,t){const i=t.isWebGL2;function n(){let J=!1;const Se=new bt;let xe=null;const He=new bt(0,0,0,0);return{setMask:function(Be){xe!==Be&&!J&&(r.colorMask(Be,Be,Be,Be),xe=Be)},setLocked:function(Be){J=Be},setClear:function(Be,ft,pt,Xt,fi){fi===!0&&(Be*=Xt,ft*=Xt,pt*=Xt),Se.set(Be,ft,pt,Xt),He.equals(Se)===!1&&(r.clearColor(Be,ft,pt,Xt),He.copy(Se))},reset:function(){J=!1,xe=null,He.set(-1,0,0,0)}}}function s(){let J=!1,Se=null,xe=null,He=null;return{setTest:function(Be){Be?_e(r.DEPTH_TEST):Ee(r.DEPTH_TEST)},setMask:function(Be){Se!==Be&&!J&&(r.depthMask(Be),Se=Be)},setFunc:function(Be){if(xe!==Be){switch(Be){case v_:r.depthFunc(r.NEVER);break;case C_:r.depthFunc(r.ALWAYS);break;case y_:r.depthFunc(r.LESS);break;case vc:r.depthFunc(r.LEQUAL);break;case b_:r.depthFunc(r.EQUAL);break;case S_:r.depthFunc(r.GEQUAL);break;case x_:r.depthFunc(r.GREATER);break;case w_:r.depthFunc(r.NOTEQUAL);break;default:r.depthFunc(r.LEQUAL)}xe=Be}},setLocked:function(Be){J=Be},setClear:function(Be){He!==Be&&(r.clearDepth(Be),He=Be)},reset:function(){J=!1,Se=null,xe=null,He=null}}}function o(){let J=!1,Se=null,xe=null,He=null,Be=null,ft=null,pt=null,Xt=null,fi=null;return{setTest:function(mt){J||(mt?_e(r.STENCIL_TEST):Ee(r.STENCIL_TEST))},setMask:function(mt){Se!==mt&&!J&&(r.stencilMask(mt),Se=mt)},setFunc:function(mt,pi,mn){(xe!==mt||He!==pi||Be!==mn)&&(r.stencilFunc(mt,pi,mn),xe=mt,He=pi,Be=mn)},setOp:function(mt,pi,mn){(ft!==mt||pt!==pi||Xt!==mn)&&(r.stencilOp(mt,pi,mn),ft=mt,pt=pi,Xt=mn)},setLocked:function(mt){J=mt},setClear:function(mt){fi!==mt&&(r.clearStencil(mt),fi=mt)},reset:function(){J=!1,Se=null,xe=null,He=null,Be=null,ft=null,pt=null,Xt=null,fi=null}}}const a=new n,l=new s,c=new o,h=new WeakMap,d=new WeakMap;let u={},f={},m=new WeakMap,E=[],g=null,p=!1,_=null,T=null,I=null,v=null,b=null,x=null,A=null,y=new Fe(0,0,0),S=0,O=!1,w=null,N=null,C=null,U=null,B=null;const V=r.getParameter(r.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let j=!1,G=0;const se=r.getParameter(r.VERSION);se.indexOf("WebGL")!==-1?(G=parseFloat(/^WebGL (\d)/.exec(se)[1]),j=G>=1):se.indexOf("OpenGL ES")!==-1&&(G=parseFloat(/^OpenGL ES (\d)/.exec(se)[1]),j=G>=2);let W=null,Y={};const q=r.getParameter(r.SCISSOR_BOX),Q=r.getParameter(r.VIEWPORT),te=new bt().fromArray(q),Ie=new bt().fromArray(Q);function ve(J,Se,xe,He){const Be=new Uint8Array(4),ft=r.createTexture();r.bindTexture(J,ft),r.texParameteri(J,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(J,r.TEXTURE_MAG_FILTER,r.NEAREST);for(let pt=0;pt<xe;pt++)i&&(J===r.TEXTURE_3D||J===r.TEXTURE_2D_ARRAY)?r.texImage3D(Se,0,r.RGBA,1,1,He,0,r.RGBA,r.UNSIGNED_BYTE,Be):r.texImage2D(Se+pt,0,r.RGBA,1,1,0,r.RGBA,r.UNSIGNED_BYTE,Be);return ft}const pe={};pe[r.TEXTURE_2D]=ve(r.TEXTURE_2D,r.TEXTURE_2D,1),pe[r.TEXTURE_CUBE_MAP]=ve(r.TEXTURE_CUBE_MAP,r.TEXTURE_CUBE_MAP_POSITIVE_X,6),i&&(pe[r.TEXTURE_2D_ARRAY]=ve(r.TEXTURE_2D_ARRAY,r.TEXTURE_2D_ARRAY,1,1),pe[r.TEXTURE_3D]=ve(r.TEXTURE_3D,r.TEXTURE_3D,1,1)),a.setClear(0,0,0,1),l.setClear(1),c.setClear(0),_e(r.DEPTH_TEST),l.setFunc(vc),z(!1),P(Mf),_e(r.CULL_FACE),K(Kn);function _e(J){u[J]!==!0&&(r.enable(J),u[J]=!0)}function Ee(J){u[J]!==!1&&(r.disable(J),u[J]=!1)}function Ae(J,Se){return f[J]!==Se?(r.bindFramebuffer(J,Se),f[J]=Se,i&&(J===r.DRAW_FRAMEBUFFER&&(f[r.FRAMEBUFFER]=Se),J===r.FRAMEBUFFER&&(f[r.DRAW_FRAMEBUFFER]=Se)),!0):!1}function ie(J,Se){let xe=E,He=!1;if(J)if(xe=m.get(Se),xe===void 0&&(xe=[],m.set(Se,xe)),J.isWebGLMultipleRenderTargets){const Be=J.texture;if(xe.length!==Be.length||xe[0]!==r.COLOR_ATTACHMENT0){for(let ft=0,pt=Be.length;ft<pt;ft++)xe[ft]=r.COLOR_ATTACHMENT0+ft;xe.length=Be.length,He=!0}}else xe[0]!==r.COLOR_ATTACHMENT0&&(xe[0]=r.COLOR_ATTACHMENT0,He=!0);else xe[0]!==r.BACK&&(xe[0]=r.BACK,He=!0);He&&(t.isWebGL2?r.drawBuffers(xe):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(xe))}function $e(J){return g!==J?(r.useProgram(J),g=J,!0):!1}const M={[qs]:r.FUNC_ADD,[o_]:r.FUNC_SUBTRACT,[a_]:r.FUNC_REVERSE_SUBTRACT};if(i)M[Of]=r.MIN,M[Nf]=r.MAX;else{const J=e.get("EXT_blend_minmax");J!==null&&(M[Of]=J.MIN_EXT,M[Nf]=J.MAX_EXT)}const ee={[l_]:r.ZERO,[c_]:r.ONE,[h_]:r.SRC_COLOR,[Cu]:r.SRC_ALPHA,[g_]:r.SRC_ALPHA_SATURATE,[p_]:r.DST_COLOR,[d_]:r.DST_ALPHA,[u_]:r.ONE_MINUS_SRC_COLOR,[yu]:r.ONE_MINUS_SRC_ALPHA,[m_]:r.ONE_MINUS_DST_COLOR,[f_]:r.ONE_MINUS_DST_ALPHA,[E_]:r.CONSTANT_COLOR,[I_]:r.ONE_MINUS_CONSTANT_COLOR,[__]:r.CONSTANT_ALPHA,[T_]:r.ONE_MINUS_CONSTANT_ALPHA};function K(J,Se,xe,He,Be,ft,pt,Xt,fi,mt){if(J===Kn){p===!0&&(Ee(r.BLEND),p=!1);return}if(p===!1&&(_e(r.BLEND),p=!0),J!==r_){if(J!==_||mt!==O){if((T!==qs||b!==qs)&&(r.blendEquation(r.FUNC_ADD),T=qs,b=qs),mt)switch(J){case fo:r.blendFuncSeparate(r.ONE,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case Ff:r.blendFunc(r.ONE,r.ONE);break;case Pf:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case Lf:r.blendFuncSeparate(r.ZERO,r.SRC_COLOR,r.ZERO,r.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",J);break}else switch(J){case fo:r.blendFuncSeparate(r.SRC_ALPHA,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case Ff:r.blendFunc(r.SRC_ALPHA,r.ONE);break;case Pf:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case Lf:r.blendFunc(r.ZERO,r.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",J);break}I=null,v=null,x=null,A=null,y.set(0,0,0),S=0,_=J,O=mt}return}Be=Be||Se,ft=ft||xe,pt=pt||He,(Se!==T||Be!==b)&&(r.blendEquationSeparate(M[Se],M[Be]),T=Se,b=Be),(xe!==I||He!==v||ft!==x||pt!==A)&&(r.blendFuncSeparate(ee[xe],ee[He],ee[ft],ee[pt]),I=xe,v=He,x=ft,A=pt),(Xt.equals(y)===!1||fi!==S)&&(r.blendColor(Xt.r,Xt.g,Xt.b,fi),y.copy(Xt),S=fi),_=J,O=!1}function H(J,Se){J.side===_i?Ee(r.CULL_FACE):_e(r.CULL_FACE);let xe=J.side===di;Se&&(xe=!xe),z(xe),J.blending===fo&&J.transparent===!1?K(Kn):K(J.blending,J.blendEquation,J.blendSrc,J.blendDst,J.blendEquationAlpha,J.blendSrcAlpha,J.blendDstAlpha,J.blendColor,J.blendAlpha,J.premultipliedAlpha),l.setFunc(J.depthFunc),l.setTest(J.depthTest),l.setMask(J.depthWrite),a.setMask(J.colorWrite);const He=J.stencilWrite;c.setTest(He),He&&(c.setMask(J.stencilWriteMask),c.setFunc(J.stencilFunc,J.stencilRef,J.stencilFuncMask),c.setOp(J.stencilFail,J.stencilZFail,J.stencilZPass)),Z(J.polygonOffset,J.polygonOffsetFactor,J.polygonOffsetUnits),J.alphaToCoverage===!0?_e(r.SAMPLE_ALPHA_TO_COVERAGE):Ee(r.SAMPLE_ALPHA_TO_COVERAGE)}function z(J){w!==J&&(J?r.frontFace(r.CW):r.frontFace(r.CCW),w=J)}function P(J){J!==i_?(_e(r.CULL_FACE),J!==N&&(J===Mf?r.cullFace(r.BACK):J===n_?r.cullFace(r.FRONT):r.cullFace(r.FRONT_AND_BACK))):Ee(r.CULL_FACE),N=J}function L(J){J!==C&&(j&&r.lineWidth(J),C=J)}function Z(J,Se,xe){J?(_e(r.POLYGON_OFFSET_FILL),(U!==Se||B!==xe)&&(r.polygonOffset(Se,xe),U=Se,B=xe)):Ee(r.POLYGON_OFFSET_FILL)}function X(J){J?_e(r.SCISSOR_TEST):Ee(r.SCISSOR_TEST)}function $(J){J===void 0&&(J=r.TEXTURE0+V-1),W!==J&&(r.activeTexture(J),W=J)}function re(J,Se,xe){xe===void 0&&(W===null?xe=r.TEXTURE0+V-1:xe=W);let He=Y[xe];He===void 0&&(He={type:void 0,texture:void 0},Y[xe]=He),(He.type!==J||He.texture!==Se)&&(W!==xe&&(r.activeTexture(xe),W=xe),r.bindTexture(J,Se||pe[J]),He.type=J,He.texture=Se)}function le(){const J=Y[W];J!==void 0&&J.type!==void 0&&(r.bindTexture(J.type,null),J.type=void 0,J.texture=void 0)}function de(){try{r.compressedTexImage2D.apply(r,arguments)}catch(J){console.error("THREE.WebGLState:",J)}}function Te(){try{r.compressedTexImage3D.apply(r,arguments)}catch(J){console.error("THREE.WebGLState:",J)}}function ye(){try{r.texSubImage2D.apply(r,arguments)}catch(J){console.error("THREE.WebGLState:",J)}}function De(){try{r.texSubImage3D.apply(r,arguments)}catch(J){console.error("THREE.WebGLState:",J)}}function me(){try{r.compressedTexSubImage2D.apply(r,arguments)}catch(J){console.error("THREE.WebGLState:",J)}}function it(){try{r.compressedTexSubImage3D.apply(r,arguments)}catch(J){console.error("THREE.WebGLState:",J)}}function qe(){try{r.texStorage2D.apply(r,arguments)}catch(J){console.error("THREE.WebGLState:",J)}}function Pe(){try{r.texStorage3D.apply(r,arguments)}catch(J){console.error("THREE.WebGLState:",J)}}function Oe(){try{r.texImage2D.apply(r,arguments)}catch(J){console.error("THREE.WebGLState:",J)}}function Le(){try{r.texImage3D.apply(r,arguments)}catch(J){console.error("THREE.WebGLState:",J)}}function Ue(J){te.equals(J)===!1&&(r.scissor(J.x,J.y,J.z,J.w),te.copy(J))}function at(J){Ie.equals(J)===!1&&(r.viewport(J.x,J.y,J.z,J.w),Ie.copy(J))}function vt(J,Se){let xe=d.get(Se);xe===void 0&&(xe=new WeakMap,d.set(Se,xe));let He=xe.get(J);He===void 0&&(He=r.getUniformBlockIndex(Se,J.name),xe.set(J,He))}function et(J,Se){const He=d.get(Se).get(J);h.get(Se)!==He&&(r.uniformBlockBinding(Se,He,J.__bindingPointIndex),h.set(Se,He))}function be(){r.disable(r.BLEND),r.disable(r.CULL_FACE),r.disable(r.DEPTH_TEST),r.disable(r.POLYGON_OFFSET_FILL),r.disable(r.SCISSOR_TEST),r.disable(r.STENCIL_TEST),r.disable(r.SAMPLE_ALPHA_TO_COVERAGE),r.blendEquation(r.FUNC_ADD),r.blendFunc(r.ONE,r.ZERO),r.blendFuncSeparate(r.ONE,r.ZERO,r.ONE,r.ZERO),r.blendColor(0,0,0,0),r.colorMask(!0,!0,!0,!0),r.clearColor(0,0,0,0),r.depthMask(!0),r.depthFunc(r.LESS),r.clearDepth(1),r.stencilMask(4294967295),r.stencilFunc(r.ALWAYS,0,4294967295),r.stencilOp(r.KEEP,r.KEEP,r.KEEP),r.clearStencil(0),r.cullFace(r.BACK),r.frontFace(r.CCW),r.polygonOffset(0,0),r.activeTexture(r.TEXTURE0),r.bindFramebuffer(r.FRAMEBUFFER,null),i===!0&&(r.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),r.bindFramebuffer(r.READ_FRAMEBUFFER,null)),r.useProgram(null),r.lineWidth(1),r.scissor(0,0,r.canvas.width,r.canvas.height),r.viewport(0,0,r.canvas.width,r.canvas.height),u={},W=null,Y={},f={},m=new WeakMap,E=[],g=null,p=!1,_=null,T=null,I=null,v=null,b=null,x=null,A=null,y=new Fe(0,0,0),S=0,O=!1,w=null,N=null,C=null,U=null,B=null,te.set(0,0,r.canvas.width,r.canvas.height),Ie.set(0,0,r.canvas.width,r.canvas.height),a.reset(),l.reset(),c.reset()}return{buffers:{color:a,depth:l,stencil:c},enable:_e,disable:Ee,bindFramebuffer:Ae,drawBuffers:ie,useProgram:$e,setBlending:K,setMaterial:H,setFlipSided:z,setCullFace:P,setLineWidth:L,setPolygonOffset:Z,setScissorTest:X,activeTexture:$,bindTexture:re,unbindTexture:le,compressedTexImage2D:de,compressedTexImage3D:Te,texImage2D:Oe,texImage3D:Le,updateUBOMapping:vt,uniformBlockBinding:et,texStorage2D:qe,texStorage3D:Pe,texSubImage2D:ye,texSubImage3D:De,compressedTexSubImage2D:me,compressedTexSubImage3D:it,scissor:Ue,viewport:at,reset:be}}function dS(r,e,t,i,n,s,o){const a=n.isWebGL2,l=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,c=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),h=new WeakMap;let d;const u=new WeakMap;let f=!1;try{f=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function m(P,L){return f?new OffscreenCanvas(P,L):wc("canvas")}function E(P,L,Z,X){let $=1;if((P.width>X||P.height>X)&&($=X/Math.max(P.width,P.height)),$<1||L===!0)if(typeof HTMLImageElement<"u"&&P instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&P instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&P instanceof ImageBitmap){const re=L?xc:Math.floor,le=re($*P.width),de=re($*P.height);d===void 0&&(d=m(le,de));const Te=Z?m(le,de):d;return Te.width=le,Te.height=de,Te.getContext("2d").drawImage(P,0,0,le,de),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+P.width+"x"+P.height+") to ("+le+"x"+de+")."),Te}else return"data"in P&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+P.width+"x"+P.height+")."),P;return P}function g(P){return Ru(P.width)&&Ru(P.height)}function p(P){return a?!1:P.wrapS!==cn||P.wrapT!==cn||P.minFilter!==Et&&P.minFilter!==ri}function _(P,L){return P.generateMipmaps&&L&&P.minFilter!==Et&&P.minFilter!==ri}function T(P){r.generateMipmap(P)}function I(P,L,Z,X,$=!1){if(a===!1)return L;if(P!==null){if(r[P]!==void 0)return r[P];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+P+"'")}let re=L;if(L===r.RED&&(Z===r.FLOAT&&(re=r.R32F),Z===r.HALF_FLOAT&&(re=r.R16F),Z===r.UNSIGNED_BYTE&&(re=r.R8)),L===r.RED_INTEGER&&(Z===r.UNSIGNED_BYTE&&(re=r.R8UI),Z===r.UNSIGNED_SHORT&&(re=r.R16UI),Z===r.UNSIGNED_INT&&(re=r.R32UI),Z===r.BYTE&&(re=r.R8I),Z===r.SHORT&&(re=r.R16I),Z===r.INT&&(re=r.R32I)),L===r.RG&&(Z===r.FLOAT&&(re=r.RG32F),Z===r.HALF_FLOAT&&(re=r.RG16F),Z===r.UNSIGNED_BYTE&&(re=r.RG8)),L===r.RGBA){const le=$?Cc:rt.getTransfer(X);Z===r.FLOAT&&(re=r.RGBA32F),Z===r.HALF_FLOAT&&(re=r.RGBA16F),Z===r.UNSIGNED_BYTE&&(re=le===It?r.SRGB8_ALPHA8:r.RGBA8),Z===r.UNSIGNED_SHORT_4_4_4_4&&(re=r.RGBA4),Z===r.UNSIGNED_SHORT_5_5_5_1&&(re=r.RGB5_A1)}return(re===r.R16F||re===r.R32F||re===r.RG16F||re===r.RG32F||re===r.RGBA16F||re===r.RGBA32F)&&e.get("EXT_color_buffer_float"),re}function v(P,L,Z){return _(P,Z)===!0||P.isFramebufferTexture&&P.minFilter!==Et&&P.minFilter!==ri?Math.log2(Math.max(L.width,L.height))+1:P.mipmaps!==void 0&&P.mipmaps.length>0?P.mipmaps.length:P.isCompressedTexture&&Array.isArray(P.image)?L.mipmaps.length:1}function b(P){return P===Et||P===Df||P===oh?r.NEAREST:r.LINEAR}function x(P){const L=P.target;L.removeEventListener("dispose",x),y(L),L.isVideoTexture&&h.delete(L)}function A(P){const L=P.target;L.removeEventListener("dispose",A),O(L)}function y(P){const L=i.get(P);if(L.__webglInit===void 0)return;const Z=P.source,X=u.get(Z);if(X){const $=X[L.__cacheKey];$.usedTimes--,$.usedTimes===0&&S(P),Object.keys(X).length===0&&u.delete(Z)}i.remove(P)}function S(P){const L=i.get(P);r.deleteTexture(L.__webglTexture);const Z=P.source,X=u.get(Z);delete X[L.__cacheKey],o.memory.textures--}function O(P){const L=P.texture,Z=i.get(P),X=i.get(L);if(X.__webglTexture!==void 0&&(r.deleteTexture(X.__webglTexture),o.memory.textures--),P.depthTexture&&P.depthTexture.dispose(),P.isWebGLCubeRenderTarget)for(let $=0;$<6;$++){if(Array.isArray(Z.__webglFramebuffer[$]))for(let re=0;re<Z.__webglFramebuffer[$].length;re++)r.deleteFramebuffer(Z.__webglFramebuffer[$][re]);else r.deleteFramebuffer(Z.__webglFramebuffer[$]);Z.__webglDepthbuffer&&r.deleteRenderbuffer(Z.__webglDepthbuffer[$])}else{if(Array.isArray(Z.__webglFramebuffer))for(let $=0;$<Z.__webglFramebuffer.length;$++)r.deleteFramebuffer(Z.__webglFramebuffer[$]);else r.deleteFramebuffer(Z.__webglFramebuffer);if(Z.__webglDepthbuffer&&r.deleteRenderbuffer(Z.__webglDepthbuffer),Z.__webglMultisampledFramebuffer&&r.deleteFramebuffer(Z.__webglMultisampledFramebuffer),Z.__webglColorRenderbuffer)for(let $=0;$<Z.__webglColorRenderbuffer.length;$++)Z.__webglColorRenderbuffer[$]&&r.deleteRenderbuffer(Z.__webglColorRenderbuffer[$]);Z.__webglDepthRenderbuffer&&r.deleteRenderbuffer(Z.__webglDepthRenderbuffer)}if(P.isWebGLMultipleRenderTargets)for(let $=0,re=L.length;$<re;$++){const le=i.get(L[$]);le.__webglTexture&&(r.deleteTexture(le.__webglTexture),o.memory.textures--),i.remove(L[$])}i.remove(L),i.remove(P)}let w=0;function N(){w=0}function C(){const P=w;return P>=n.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+P+" texture units while this GPU supports only "+n.maxTextures),w+=1,P}function U(P){const L=[];return L.push(P.wrapS),L.push(P.wrapT),L.push(P.wrapR||0),L.push(P.magFilter),L.push(P.minFilter),L.push(P.anisotropy),L.push(P.internalFormat),L.push(P.format),L.push(P.type),L.push(P.generateMipmaps),L.push(P.premultiplyAlpha),L.push(P.flipY),L.push(P.unpackAlignment),L.push(P.colorSpace),L.join()}function B(P,L){const Z=i.get(P);if(P.isVideoTexture&&H(P),P.isRenderTargetTexture===!1&&P.version>0&&Z.__version!==P.version){const X=P.image;if(X===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(X.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{te(Z,P,L);return}}t.bindTexture(r.TEXTURE_2D,Z.__webglTexture,r.TEXTURE0+L)}function V(P,L){const Z=i.get(P);if(P.version>0&&Z.__version!==P.version){te(Z,P,L);return}t.bindTexture(r.TEXTURE_2D_ARRAY,Z.__webglTexture,r.TEXTURE0+L)}function j(P,L){const Z=i.get(P);if(P.version>0&&Z.__version!==P.version){te(Z,P,L);return}t.bindTexture(r.TEXTURE_3D,Z.__webglTexture,r.TEXTURE0+L)}function G(P,L){const Z=i.get(P);if(P.version>0&&Z.__version!==P.version){Ie(Z,P,L);return}t.bindTexture(r.TEXTURE_CUBE_MAP,Z.__webglTexture,r.TEXTURE0+L)}const se={[ga]:r.REPEAT,[cn]:r.CLAMP_TO_EDGE,[xu]:r.MIRRORED_REPEAT},W={[Et]:r.NEAREST,[Df]:r.NEAREST_MIPMAP_NEAREST,[oh]:r.NEAREST_MIPMAP_LINEAR,[ri]:r.LINEAR,[D_]:r.LINEAR_MIPMAP_NEAREST,[Ea]:r.LINEAR_MIPMAP_LINEAR},Y={[Z_]:r.NEVER,[$_]:r.ALWAYS,[j_]:r.LESS,[eE]:r.LEQUAL,[q_]:r.EQUAL,[J_]:r.GEQUAL,[K_]:r.GREATER,[Q_]:r.NOTEQUAL};function q(P,L,Z){if(Z?(r.texParameteri(P,r.TEXTURE_WRAP_S,se[L.wrapS]),r.texParameteri(P,r.TEXTURE_WRAP_T,se[L.wrapT]),(P===r.TEXTURE_3D||P===r.TEXTURE_2D_ARRAY)&&r.texParameteri(P,r.TEXTURE_WRAP_R,se[L.wrapR]),r.texParameteri(P,r.TEXTURE_MAG_FILTER,W[L.magFilter]),r.texParameteri(P,r.TEXTURE_MIN_FILTER,W[L.minFilter])):(r.texParameteri(P,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(P,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),(P===r.TEXTURE_3D||P===r.TEXTURE_2D_ARRAY)&&r.texParameteri(P,r.TEXTURE_WRAP_R,r.CLAMP_TO_EDGE),(L.wrapS!==cn||L.wrapT!==cn)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),r.texParameteri(P,r.TEXTURE_MAG_FILTER,b(L.magFilter)),r.texParameteri(P,r.TEXTURE_MIN_FILTER,b(L.minFilter)),L.minFilter!==Et&&L.minFilter!==ri&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),L.compareFunction&&(r.texParameteri(P,r.TEXTURE_COMPARE_MODE,r.COMPARE_REF_TO_TEXTURE),r.texParameteri(P,r.TEXTURE_COMPARE_FUNC,Y[L.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){const X=e.get("EXT_texture_filter_anisotropic");if(L.magFilter===Et||L.minFilter!==oh&&L.minFilter!==Ea||L.type===Yn&&e.has("OES_texture_float_linear")===!1||a===!1&&L.type===ws&&e.has("OES_texture_half_float_linear")===!1)return;(L.anisotropy>1||i.get(L).__currentAnisotropy)&&(r.texParameterf(P,X.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(L.anisotropy,n.getMaxAnisotropy())),i.get(L).__currentAnisotropy=L.anisotropy)}}function Q(P,L){let Z=!1;P.__webglInit===void 0&&(P.__webglInit=!0,L.addEventListener("dispose",x));const X=L.source;let $=u.get(X);$===void 0&&($={},u.set(X,$));const re=U(L);if(re!==P.__cacheKey){$[re]===void 0&&($[re]={texture:r.createTexture(),usedTimes:0},o.memory.textures++,Z=!0),$[re].usedTimes++;const le=$[P.__cacheKey];le!==void 0&&($[P.__cacheKey].usedTimes--,le.usedTimes===0&&S(L)),P.__cacheKey=re,P.__webglTexture=$[re].texture}return Z}function te(P,L,Z){let X=r.TEXTURE_2D;(L.isDataArrayTexture||L.isCompressedArrayTexture)&&(X=r.TEXTURE_2D_ARRAY),L.isData3DTexture&&(X=r.TEXTURE_3D);const $=Q(P,L),re=L.source;t.bindTexture(X,P.__webglTexture,r.TEXTURE0+Z);const le=i.get(re);if(re.version!==le.__version||$===!0){t.activeTexture(r.TEXTURE0+Z);const de=rt.getPrimaries(rt.workingColorSpace),Te=L.colorSpace===Li?null:rt.getPrimaries(L.colorSpace),ye=L.colorSpace===Li||de===Te?r.NONE:r.BROWSER_DEFAULT_WEBGL;r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,L.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,L.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,L.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,ye);const De=p(L)&&g(L.image)===!1;let me=E(L.image,De,!1,n.maxTextureSize);me=z(L,me);const it=g(me)||a,qe=s.convert(L.format,L.colorSpace);let Pe=s.convert(L.type),Oe=I(L.internalFormat,qe,Pe,L.colorSpace,L.isVideoTexture);q(X,L,it);let Le;const Ue=L.mipmaps,at=a&&L.isVideoTexture!==!0&&Oe!==Jg,vt=le.__version===void 0||$===!0,et=v(L,me,it);if(L.isDepthTexture)Oe=r.DEPTH_COMPONENT,a?L.type===Yn?Oe=r.DEPTH_COMPONENT32F:L.type===Wn?Oe=r.DEPTH_COMPONENT24:L.type===$s?Oe=r.DEPTH24_STENCIL8:Oe=r.DEPTH_COMPONENT16:L.type===Yn&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),L.format===Ss&&Oe===r.DEPTH_COMPONENT&&L.type!==Gd&&L.type!==Wn&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),L.type=Wn,Pe=s.convert(L.type)),L.format===_o&&Oe===r.DEPTH_COMPONENT&&(Oe=r.DEPTH_STENCIL,L.type!==$s&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),L.type=$s,Pe=s.convert(L.type))),vt&&(at?t.texStorage2D(r.TEXTURE_2D,1,Oe,me.width,me.height):t.texImage2D(r.TEXTURE_2D,0,Oe,me.width,me.height,0,qe,Pe,null));else if(L.isDataTexture)if(Ue.length>0&&it){at&&vt&&t.texStorage2D(r.TEXTURE_2D,et,Oe,Ue[0].width,Ue[0].height);for(let be=0,J=Ue.length;be<J;be++)Le=Ue[be],at?t.texSubImage2D(r.TEXTURE_2D,be,0,0,Le.width,Le.height,qe,Pe,Le.data):t.texImage2D(r.TEXTURE_2D,be,Oe,Le.width,Le.height,0,qe,Pe,Le.data);L.generateMipmaps=!1}else at?(vt&&t.texStorage2D(r.TEXTURE_2D,et,Oe,me.width,me.height),t.texSubImage2D(r.TEXTURE_2D,0,0,0,me.width,me.height,qe,Pe,me.data)):t.texImage2D(r.TEXTURE_2D,0,Oe,me.width,me.height,0,qe,Pe,me.data);else if(L.isCompressedTexture)if(L.isCompressedArrayTexture){at&&vt&&t.texStorage3D(r.TEXTURE_2D_ARRAY,et,Oe,Ue[0].width,Ue[0].height,me.depth);for(let be=0,J=Ue.length;be<J;be++)Le=Ue[be],L.format!==Pi?qe!==null?at?t.compressedTexSubImage3D(r.TEXTURE_2D_ARRAY,be,0,0,0,Le.width,Le.height,me.depth,qe,Le.data,0,0):t.compressedTexImage3D(r.TEXTURE_2D_ARRAY,be,Oe,Le.width,Le.height,me.depth,0,Le.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):at?t.texSubImage3D(r.TEXTURE_2D_ARRAY,be,0,0,0,Le.width,Le.height,me.depth,qe,Pe,Le.data):t.texImage3D(r.TEXTURE_2D_ARRAY,be,Oe,Le.width,Le.height,me.depth,0,qe,Pe,Le.data)}else{at&&vt&&t.texStorage2D(r.TEXTURE_2D,et,Oe,Ue[0].width,Ue[0].height);for(let be=0,J=Ue.length;be<J;be++)Le=Ue[be],L.format!==Pi?qe!==null?at?t.compressedTexSubImage2D(r.TEXTURE_2D,be,0,0,Le.width,Le.height,qe,Le.data):t.compressedTexImage2D(r.TEXTURE_2D,be,Oe,Le.width,Le.height,0,Le.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):at?t.texSubImage2D(r.TEXTURE_2D,be,0,0,Le.width,Le.height,qe,Pe,Le.data):t.texImage2D(r.TEXTURE_2D,be,Oe,Le.width,Le.height,0,qe,Pe,Le.data)}else if(L.isDataArrayTexture)at?(vt&&t.texStorage3D(r.TEXTURE_2D_ARRAY,et,Oe,me.width,me.height,me.depth),t.texSubImage3D(r.TEXTURE_2D_ARRAY,0,0,0,0,me.width,me.height,me.depth,qe,Pe,me.data)):t.texImage3D(r.TEXTURE_2D_ARRAY,0,Oe,me.width,me.height,me.depth,0,qe,Pe,me.data);else if(L.isData3DTexture)at?(vt&&t.texStorage3D(r.TEXTURE_3D,et,Oe,me.width,me.height,me.depth),t.texSubImage3D(r.TEXTURE_3D,0,0,0,0,me.width,me.height,me.depth,qe,Pe,me.data)):t.texImage3D(r.TEXTURE_3D,0,Oe,me.width,me.height,me.depth,0,qe,Pe,me.data);else if(L.isFramebufferTexture){if(vt)if(at)t.texStorage2D(r.TEXTURE_2D,et,Oe,me.width,me.height);else{let be=me.width,J=me.height;for(let Se=0;Se<et;Se++)t.texImage2D(r.TEXTURE_2D,Se,Oe,be,J,0,qe,Pe,null),be>>=1,J>>=1}}else if(Ue.length>0&&it){at&&vt&&t.texStorage2D(r.TEXTURE_2D,et,Oe,Ue[0].width,Ue[0].height);for(let be=0,J=Ue.length;be<J;be++)Le=Ue[be],at?t.texSubImage2D(r.TEXTURE_2D,be,0,0,qe,Pe,Le):t.texImage2D(r.TEXTURE_2D,be,Oe,qe,Pe,Le);L.generateMipmaps=!1}else at?(vt&&t.texStorage2D(r.TEXTURE_2D,et,Oe,me.width,me.height),t.texSubImage2D(r.TEXTURE_2D,0,0,0,qe,Pe,me)):t.texImage2D(r.TEXTURE_2D,0,Oe,qe,Pe,me);_(L,it)&&T(X),le.__version=re.version,L.onUpdate&&L.onUpdate(L)}P.__version=L.version}function Ie(P,L,Z){if(L.image.length!==6)return;const X=Q(P,L),$=L.source;t.bindTexture(r.TEXTURE_CUBE_MAP,P.__webglTexture,r.TEXTURE0+Z);const re=i.get($);if($.version!==re.__version||X===!0){t.activeTexture(r.TEXTURE0+Z);const le=rt.getPrimaries(rt.workingColorSpace),de=L.colorSpace===Li?null:rt.getPrimaries(L.colorSpace),Te=L.colorSpace===Li||le===de?r.NONE:r.BROWSER_DEFAULT_WEBGL;r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,L.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,L.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,L.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,Te);const ye=L.isCompressedTexture||L.image[0].isCompressedTexture,De=L.image[0]&&L.image[0].isDataTexture,me=[];for(let be=0;be<6;be++)!ye&&!De?me[be]=E(L.image[be],!1,!0,n.maxCubemapSize):me[be]=De?L.image[be].image:L.image[be],me[be]=z(L,me[be]);const it=me[0],qe=g(it)||a,Pe=s.convert(L.format,L.colorSpace),Oe=s.convert(L.type),Le=I(L.internalFormat,Pe,Oe,L.colorSpace),Ue=a&&L.isVideoTexture!==!0,at=re.__version===void 0||X===!0;let vt=v(L,it,qe);q(r.TEXTURE_CUBE_MAP,L,qe);let et;if(ye){Ue&&at&&t.texStorage2D(r.TEXTURE_CUBE_MAP,vt,Le,it.width,it.height);for(let be=0;be<6;be++){et=me[be].mipmaps;for(let J=0;J<et.length;J++){const Se=et[J];L.format!==Pi?Pe!==null?Ue?t.compressedTexSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+be,J,0,0,Se.width,Se.height,Pe,Se.data):t.compressedTexImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+be,J,Le,Se.width,Se.height,0,Se.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):Ue?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+be,J,0,0,Se.width,Se.height,Pe,Oe,Se.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+be,J,Le,Se.width,Se.height,0,Pe,Oe,Se.data)}}}else{et=L.mipmaps,Ue&&at&&(et.length>0&&vt++,t.texStorage2D(r.TEXTURE_CUBE_MAP,vt,Le,me[0].width,me[0].height));for(let be=0;be<6;be++)if(De){Ue?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+be,0,0,0,me[be].width,me[be].height,Pe,Oe,me[be].data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+be,0,Le,me[be].width,me[be].height,0,Pe,Oe,me[be].data);for(let J=0;J<et.length;J++){const xe=et[J].image[be].image;Ue?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+be,J+1,0,0,xe.width,xe.height,Pe,Oe,xe.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+be,J+1,Le,xe.width,xe.height,0,Pe,Oe,xe.data)}}else{Ue?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+be,0,0,0,Pe,Oe,me[be]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+be,0,Le,Pe,Oe,me[be]);for(let J=0;J<et.length;J++){const Se=et[J];Ue?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+be,J+1,0,0,Pe,Oe,Se.image[be]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+be,J+1,Le,Pe,Oe,Se.image[be])}}}_(L,qe)&&T(r.TEXTURE_CUBE_MAP),re.__version=$.version,L.onUpdate&&L.onUpdate(L)}P.__version=L.version}function ve(P,L,Z,X,$,re){const le=s.convert(Z.format,Z.colorSpace),de=s.convert(Z.type),Te=I(Z.internalFormat,le,de,Z.colorSpace);if(!i.get(L).__hasExternalTextures){const De=Math.max(1,L.width>>re),me=Math.max(1,L.height>>re);$===r.TEXTURE_3D||$===r.TEXTURE_2D_ARRAY?t.texImage3D($,re,Te,De,me,L.depth,0,le,de,null):t.texImage2D($,re,Te,De,me,0,le,de,null)}t.bindFramebuffer(r.FRAMEBUFFER,P),K(L)?l.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,X,$,i.get(Z).__webglTexture,0,ee(L)):($===r.TEXTURE_2D||$>=r.TEXTURE_CUBE_MAP_POSITIVE_X&&$<=r.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&r.framebufferTexture2D(r.FRAMEBUFFER,X,$,i.get(Z).__webglTexture,re),t.bindFramebuffer(r.FRAMEBUFFER,null)}function pe(P,L,Z){if(r.bindRenderbuffer(r.RENDERBUFFER,P),L.depthBuffer&&!L.stencilBuffer){let X=a===!0?r.DEPTH_COMPONENT24:r.DEPTH_COMPONENT16;if(Z||K(L)){const $=L.depthTexture;$&&$.isDepthTexture&&($.type===Yn?X=r.DEPTH_COMPONENT32F:$.type===Wn&&(X=r.DEPTH_COMPONENT24));const re=ee(L);K(L)?l.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,re,X,L.width,L.height):r.renderbufferStorageMultisample(r.RENDERBUFFER,re,X,L.width,L.height)}else r.renderbufferStorage(r.RENDERBUFFER,X,L.width,L.height);r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.RENDERBUFFER,P)}else if(L.depthBuffer&&L.stencilBuffer){const X=ee(L);Z&&K(L)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,X,r.DEPTH24_STENCIL8,L.width,L.height):K(L)?l.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,X,r.DEPTH24_STENCIL8,L.width,L.height):r.renderbufferStorage(r.RENDERBUFFER,r.DEPTH_STENCIL,L.width,L.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.RENDERBUFFER,P)}else{const X=L.isWebGLMultipleRenderTargets===!0?L.texture:[L.texture];for(let $=0;$<X.length;$++){const re=X[$],le=s.convert(re.format,re.colorSpace),de=s.convert(re.type),Te=I(re.internalFormat,le,de,re.colorSpace),ye=ee(L);Z&&K(L)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,ye,Te,L.width,L.height):K(L)?l.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,ye,Te,L.width,L.height):r.renderbufferStorage(r.RENDERBUFFER,Te,L.width,L.height)}}r.bindRenderbuffer(r.RENDERBUFFER,null)}function _e(P,L){if(L&&L.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(r.FRAMEBUFFER,P),!(L.depthTexture&&L.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!i.get(L.depthTexture).__webglTexture||L.depthTexture.image.width!==L.width||L.depthTexture.image.height!==L.height)&&(L.depthTexture.image.width=L.width,L.depthTexture.image.height=L.height,L.depthTexture.needsUpdate=!0),B(L.depthTexture,0);const X=i.get(L.depthTexture).__webglTexture,$=ee(L);if(L.depthTexture.format===Ss)K(L)?l.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,X,0,$):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,X,0);else if(L.depthTexture.format===_o)K(L)?l.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,X,0,$):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,X,0);else throw new Error("Unknown depthTexture format")}function Ee(P){const L=i.get(P),Z=P.isWebGLCubeRenderTarget===!0;if(P.depthTexture&&!L.__autoAllocateDepthBuffer){if(Z)throw new Error("target.depthTexture not supported in Cube render targets");_e(L.__webglFramebuffer,P)}else if(Z){L.__webglDepthbuffer=[];for(let X=0;X<6;X++)t.bindFramebuffer(r.FRAMEBUFFER,L.__webglFramebuffer[X]),L.__webglDepthbuffer[X]=r.createRenderbuffer(),pe(L.__webglDepthbuffer[X],P,!1)}else t.bindFramebuffer(r.FRAMEBUFFER,L.__webglFramebuffer),L.__webglDepthbuffer=r.createRenderbuffer(),pe(L.__webglDepthbuffer,P,!1);t.bindFramebuffer(r.FRAMEBUFFER,null)}function Ae(P,L,Z){const X=i.get(P);L!==void 0&&ve(X.__webglFramebuffer,P,P.texture,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,0),Z!==void 0&&Ee(P)}function ie(P){const L=P.texture,Z=i.get(P),X=i.get(L);P.addEventListener("dispose",A),P.isWebGLMultipleRenderTargets!==!0&&(X.__webglTexture===void 0&&(X.__webglTexture=r.createTexture()),X.__version=L.version,o.memory.textures++);const $=P.isWebGLCubeRenderTarget===!0,re=P.isWebGLMultipleRenderTargets===!0,le=g(P)||a;if($){Z.__webglFramebuffer=[];for(let de=0;de<6;de++)if(a&&L.mipmaps&&L.mipmaps.length>0){Z.__webglFramebuffer[de]=[];for(let Te=0;Te<L.mipmaps.length;Te++)Z.__webglFramebuffer[de][Te]=r.createFramebuffer()}else Z.__webglFramebuffer[de]=r.createFramebuffer()}else{if(a&&L.mipmaps&&L.mipmaps.length>0){Z.__webglFramebuffer=[];for(let de=0;de<L.mipmaps.length;de++)Z.__webglFramebuffer[de]=r.createFramebuffer()}else Z.__webglFramebuffer=r.createFramebuffer();if(re)if(n.drawBuffers){const de=P.texture;for(let Te=0,ye=de.length;Te<ye;Te++){const De=i.get(de[Te]);De.__webglTexture===void 0&&(De.__webglTexture=r.createTexture(),o.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(a&&P.samples>0&&K(P)===!1){const de=re?L:[L];Z.__webglMultisampledFramebuffer=r.createFramebuffer(),Z.__webglColorRenderbuffer=[],t.bindFramebuffer(r.FRAMEBUFFER,Z.__webglMultisampledFramebuffer);for(let Te=0;Te<de.length;Te++){const ye=de[Te];Z.__webglColorRenderbuffer[Te]=r.createRenderbuffer(),r.bindRenderbuffer(r.RENDERBUFFER,Z.__webglColorRenderbuffer[Te]);const De=s.convert(ye.format,ye.colorSpace),me=s.convert(ye.type),it=I(ye.internalFormat,De,me,ye.colorSpace,P.isXRRenderTarget===!0),qe=ee(P);r.renderbufferStorageMultisample(r.RENDERBUFFER,qe,it,P.width,P.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+Te,r.RENDERBUFFER,Z.__webglColorRenderbuffer[Te])}r.bindRenderbuffer(r.RENDERBUFFER,null),P.depthBuffer&&(Z.__webglDepthRenderbuffer=r.createRenderbuffer(),pe(Z.__webglDepthRenderbuffer,P,!0)),t.bindFramebuffer(r.FRAMEBUFFER,null)}}if($){t.bindTexture(r.TEXTURE_CUBE_MAP,X.__webglTexture),q(r.TEXTURE_CUBE_MAP,L,le);for(let de=0;de<6;de++)if(a&&L.mipmaps&&L.mipmaps.length>0)for(let Te=0;Te<L.mipmaps.length;Te++)ve(Z.__webglFramebuffer[de][Te],P,L,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+de,Te);else ve(Z.__webglFramebuffer[de],P,L,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+de,0);_(L,le)&&T(r.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(re){const de=P.texture;for(let Te=0,ye=de.length;Te<ye;Te++){const De=de[Te],me=i.get(De);t.bindTexture(r.TEXTURE_2D,me.__webglTexture),q(r.TEXTURE_2D,De,le),ve(Z.__webglFramebuffer,P,De,r.COLOR_ATTACHMENT0+Te,r.TEXTURE_2D,0),_(De,le)&&T(r.TEXTURE_2D)}t.unbindTexture()}else{let de=r.TEXTURE_2D;if((P.isWebGL3DRenderTarget||P.isWebGLArrayRenderTarget)&&(a?de=P.isWebGL3DRenderTarget?r.TEXTURE_3D:r.TEXTURE_2D_ARRAY:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(de,X.__webglTexture),q(de,L,le),a&&L.mipmaps&&L.mipmaps.length>0)for(let Te=0;Te<L.mipmaps.length;Te++)ve(Z.__webglFramebuffer[Te],P,L,r.COLOR_ATTACHMENT0,de,Te);else ve(Z.__webglFramebuffer,P,L,r.COLOR_ATTACHMENT0,de,0);_(L,le)&&T(de),t.unbindTexture()}P.depthBuffer&&Ee(P)}function $e(P){const L=g(P)||a,Z=P.isWebGLMultipleRenderTargets===!0?P.texture:[P.texture];for(let X=0,$=Z.length;X<$;X++){const re=Z[X];if(_(re,L)){const le=P.isWebGLCubeRenderTarget?r.TEXTURE_CUBE_MAP:r.TEXTURE_2D,de=i.get(re).__webglTexture;t.bindTexture(le,de),T(le),t.unbindTexture()}}}function M(P){if(a&&P.samples>0&&K(P)===!1){const L=P.isWebGLMultipleRenderTargets?P.texture:[P.texture],Z=P.width,X=P.height;let $=r.COLOR_BUFFER_BIT;const re=[],le=P.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,de=i.get(P),Te=P.isWebGLMultipleRenderTargets===!0;if(Te)for(let ye=0;ye<L.length;ye++)t.bindFramebuffer(r.FRAMEBUFFER,de.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+ye,r.RENDERBUFFER,null),t.bindFramebuffer(r.FRAMEBUFFER,de.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+ye,r.TEXTURE_2D,null,0);t.bindFramebuffer(r.READ_FRAMEBUFFER,de.__webglMultisampledFramebuffer),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,de.__webglFramebuffer);for(let ye=0;ye<L.length;ye++){re.push(r.COLOR_ATTACHMENT0+ye),P.depthBuffer&&re.push(le);const De=de.__ignoreDepthValues!==void 0?de.__ignoreDepthValues:!1;if(De===!1&&(P.depthBuffer&&($|=r.DEPTH_BUFFER_BIT),P.stencilBuffer&&($|=r.STENCIL_BUFFER_BIT)),Te&&r.framebufferRenderbuffer(r.READ_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.RENDERBUFFER,de.__webglColorRenderbuffer[ye]),De===!0&&(r.invalidateFramebuffer(r.READ_FRAMEBUFFER,[le]),r.invalidateFramebuffer(r.DRAW_FRAMEBUFFER,[le])),Te){const me=i.get(L[ye]).__webglTexture;r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,me,0)}r.blitFramebuffer(0,0,Z,X,0,0,Z,X,$,r.NEAREST),c&&r.invalidateFramebuffer(r.READ_FRAMEBUFFER,re)}if(t.bindFramebuffer(r.READ_FRAMEBUFFER,null),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),Te)for(let ye=0;ye<L.length;ye++){t.bindFramebuffer(r.FRAMEBUFFER,de.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+ye,r.RENDERBUFFER,de.__webglColorRenderbuffer[ye]);const De=i.get(L[ye]).__webglTexture;t.bindFramebuffer(r.FRAMEBUFFER,de.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+ye,r.TEXTURE_2D,De,0)}t.bindFramebuffer(r.DRAW_FRAMEBUFFER,de.__webglMultisampledFramebuffer)}}function ee(P){return Math.min(n.maxSamples,P.samples)}function K(P){const L=i.get(P);return a&&P.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&L.__useRenderToTexture!==!1}function H(P){const L=o.render.frame;h.get(P)!==L&&(h.set(P,L),P.update())}function z(P,L){const Z=P.colorSpace,X=P.format,$=P.type;return P.isCompressedTexture===!0||P.isVideoTexture===!0||P.format===Au||Z!==is&&Z!==Li&&(rt.getTransfer(Z)===It?a===!1?e.has("EXT_sRGB")===!0&&X===Pi?(P.format=Au,P.minFilter=ri,P.generateMipmaps=!1):L=iE.sRGBToLinear(L):(X!==Pi||$!==bs)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",Z)),L}this.allocateTextureUnit=C,this.resetTextureUnits=N,this.setTexture2D=B,this.setTexture2DArray=V,this.setTexture3D=j,this.setTextureCube=G,this.rebindTextures=Ae,this.setupRenderTarget=ie,this.updateRenderTargetMipmap=$e,this.updateMultisampleRenderTarget=M,this.setupDepthRenderbuffer=Ee,this.setupFrameBufferTexture=ve,this.useMultisampledRTT=K}function fS(r,e,t){const i=t.isWebGL2;function n(s,o=Li){let a;const l=rt.getTransfer(o);if(s===bs)return r.UNSIGNED_BYTE;if(s===Xg)return r.UNSIGNED_SHORT_4_4_4_4;if(s===Zg)return r.UNSIGNED_SHORT_5_5_5_1;if(s===U_)return r.BYTE;if(s===B_)return r.SHORT;if(s===Gd)return r.UNSIGNED_SHORT;if(s===Yg)return r.INT;if(s===Wn)return r.UNSIGNED_INT;if(s===Yn)return r.FLOAT;if(s===ws)return i?r.HALF_FLOAT:(a=e.get("OES_texture_half_float"),a!==null?a.HALF_FLOAT_OES:null);if(s===z_)return r.ALPHA;if(s===Pi)return r.RGBA;if(s===V_)return r.LUMINANCE;if(s===k_)return r.LUMINANCE_ALPHA;if(s===Ss)return r.DEPTH_COMPONENT;if(s===_o)return r.DEPTH_STENCIL;if(s===Au)return a=e.get("EXT_sRGB"),a!==null?a.SRGB_ALPHA_EXT:null;if(s===jg)return r.RED;if(s===qg)return r.RED_INTEGER;if(s===G_)return r.RG;if(s===Kg)return r.RG_INTEGER;if(s===Qg)return r.RGBA_INTEGER;if(s===ah||s===lh||s===ch||s===hh)if(l===It)if(a=e.get("WEBGL_compressed_texture_s3tc_srgb"),a!==null){if(s===ah)return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(s===lh)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(s===ch)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(s===hh)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(a=e.get("WEBGL_compressed_texture_s3tc"),a!==null){if(s===ah)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(s===lh)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(s===ch)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(s===hh)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(s===Uf||s===Bf||s===zf||s===Vf)if(a=e.get("WEBGL_compressed_texture_pvrtc"),a!==null){if(s===Uf)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(s===Bf)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(s===zf)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(s===Vf)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(s===Jg)return a=e.get("WEBGL_compressed_texture_etc1"),a!==null?a.COMPRESSED_RGB_ETC1_WEBGL:null;if(s===kf||s===Gf)if(a=e.get("WEBGL_compressed_texture_etc"),a!==null){if(s===kf)return l===It?a.COMPRESSED_SRGB8_ETC2:a.COMPRESSED_RGB8_ETC2;if(s===Gf)return l===It?a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:a.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(s===Hf||s===Wf||s===Yf||s===Xf||s===Zf||s===jf||s===qf||s===Kf||s===Qf||s===Jf||s===$f||s===ep||s===tp||s===ip)if(a=e.get("WEBGL_compressed_texture_astc"),a!==null){if(s===Hf)return l===It?a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:a.COMPRESSED_RGBA_ASTC_4x4_KHR;if(s===Wf)return l===It?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:a.COMPRESSED_RGBA_ASTC_5x4_KHR;if(s===Yf)return l===It?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:a.COMPRESSED_RGBA_ASTC_5x5_KHR;if(s===Xf)return l===It?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:a.COMPRESSED_RGBA_ASTC_6x5_KHR;if(s===Zf)return l===It?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:a.COMPRESSED_RGBA_ASTC_6x6_KHR;if(s===jf)return l===It?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:a.COMPRESSED_RGBA_ASTC_8x5_KHR;if(s===qf)return l===It?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:a.COMPRESSED_RGBA_ASTC_8x6_KHR;if(s===Kf)return l===It?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:a.COMPRESSED_RGBA_ASTC_8x8_KHR;if(s===Qf)return l===It?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:a.COMPRESSED_RGBA_ASTC_10x5_KHR;if(s===Jf)return l===It?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:a.COMPRESSED_RGBA_ASTC_10x6_KHR;if(s===$f)return l===It?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:a.COMPRESSED_RGBA_ASTC_10x8_KHR;if(s===ep)return l===It?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:a.COMPRESSED_RGBA_ASTC_10x10_KHR;if(s===tp)return l===It?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:a.COMPRESSED_RGBA_ASTC_12x10_KHR;if(s===ip)return l===It?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:a.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(s===uh||s===np||s===sp)if(a=e.get("EXT_texture_compression_bptc"),a!==null){if(s===uh)return l===It?a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:a.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(s===np)return a.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(s===sp)return a.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(s===H_||s===rp||s===op||s===ap)if(a=e.get("EXT_texture_compression_rgtc"),a!==null){if(s===uh)return a.COMPRESSED_RED_RGTC1_EXT;if(s===rp)return a.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(s===op)return a.COMPRESSED_RED_GREEN_RGTC2_EXT;if(s===ap)return a.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return s===$s?i?r.UNSIGNED_INT_24_8:(a=e.get("WEBGL_depth_texture"),a!==null?a.UNSIGNED_INT_24_8_WEBGL:null):r[s]!==void 0?r[s]:null}return{convert:n}}class pS extends Fi{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class Zn extends St{constructor(){super(),this.isGroup=!0,this.type="Group"}}const mS={type:"move"};class Oh{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new Zn,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new Zn,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new F,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new F),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new Zn,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new F,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new F),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const i of e.hand.values())this._getHandJoint(t,i)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,i){let n=null,s=null,o=null;const a=this._targetRay,l=this._grip,c=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(c&&e.hand){o=!0;for(const E of e.hand.values()){const g=t.getJointPose(E,i),p=this._getHandJoint(c,E);g!==null&&(p.matrix.fromArray(g.transform.matrix),p.matrix.decompose(p.position,p.rotation,p.scale),p.matrixWorldNeedsUpdate=!0,p.jointRadius=g.radius),p.visible=g!==null}const h=c.joints["index-finger-tip"],d=c.joints["thumb-tip"],u=h.position.distanceTo(d.position),f=.02,m=.005;c.inputState.pinching&&u>f+m?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!c.inputState.pinching&&u<=f-m&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,i),s!==null&&(l.matrix.fromArray(s.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),l.matrixWorldNeedsUpdate=!0,s.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(s.linearVelocity)):l.hasLinearVelocity=!1,s.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(s.angularVelocity)):l.hasAngularVelocity=!1));a!==null&&(n=t.getPose(e.targetRaySpace,i),n===null&&s!==null&&(n=s),n!==null&&(a.matrix.fromArray(n.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),a.matrixWorldNeedsUpdate=!0,n.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(n.linearVelocity)):a.hasLinearVelocity=!1,n.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(n.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(mS)))}return a!==null&&(a.visible=n!==null),l!==null&&(l.visible=s!==null),c!==null&&(c.visible=o!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const i=new Zn;i.matrixAutoUpdate=!1,i.visible=!1,e.joints[t.jointName]=i,e.add(i)}return e.joints[t.jointName]}}class gS extends So{constructor(e,t){super();const i=this;let n=null,s=1,o=null,a="local-floor",l=1,c=null,h=null,d=null,u=null,f=null,m=null;const E=t.getContextAttributes();let g=null,p=null;const _=[],T=[],I=new Re;let v=null;const b=new Fi;b.layers.enable(1),b.viewport=new bt;const x=new Fi;x.layers.enable(2),x.viewport=new bt;const A=[b,x],y=new pS;y.layers.enable(1),y.layers.enable(2);let S=null,O=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(q){let Q=_[q];return Q===void 0&&(Q=new Oh,_[q]=Q),Q.getTargetRaySpace()},this.getControllerGrip=function(q){let Q=_[q];return Q===void 0&&(Q=new Oh,_[q]=Q),Q.getGripSpace()},this.getHand=function(q){let Q=_[q];return Q===void 0&&(Q=new Oh,_[q]=Q),Q.getHandSpace()};function w(q){const Q=T.indexOf(q.inputSource);if(Q===-1)return;const te=_[Q];te!==void 0&&(te.update(q.inputSource,q.frame,c||o),te.dispatchEvent({type:q.type,data:q.inputSource}))}function N(){n.removeEventListener("select",w),n.removeEventListener("selectstart",w),n.removeEventListener("selectend",w),n.removeEventListener("squeeze",w),n.removeEventListener("squeezestart",w),n.removeEventListener("squeezeend",w),n.removeEventListener("end",N),n.removeEventListener("inputsourceschange",C);for(let q=0;q<_.length;q++){const Q=T[q];Q!==null&&(T[q]=null,_[q].disconnect(Q))}S=null,O=null,e.setRenderTarget(g),f=null,u=null,d=null,n=null,p=null,Y.stop(),i.isPresenting=!1,e.setPixelRatio(v),e.setSize(I.width,I.height,!1),i.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(q){s=q,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(q){a=q,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return c||o},this.setReferenceSpace=function(q){c=q},this.getBaseLayer=function(){return u!==null?u:f},this.getBinding=function(){return d},this.getFrame=function(){return m},this.getSession=function(){return n},this.setSession=async function(q){if(n=q,n!==null){if(g=e.getRenderTarget(),n.addEventListener("select",w),n.addEventListener("selectstart",w),n.addEventListener("selectend",w),n.addEventListener("squeeze",w),n.addEventListener("squeezestart",w),n.addEventListener("squeezeend",w),n.addEventListener("end",N),n.addEventListener("inputsourceschange",C),E.xrCompatible!==!0&&await t.makeXRCompatible(),v=e.getPixelRatio(),e.getSize(I),n.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const Q={antialias:n.renderState.layers===void 0?E.antialias:!0,alpha:!0,depth:E.depth,stencil:E.stencil,framebufferScaleFactor:s};f=new XRWebGLLayer(n,t,Q),n.updateRenderState({baseLayer:f}),e.setPixelRatio(1),e.setSize(f.framebufferWidth,f.framebufferHeight,!1),p=new Qt(f.framebufferWidth,f.framebufferHeight,{format:Pi,type:bs,colorSpace:e.outputColorSpace,stencilBuffer:E.stencil})}else{let Q=null,te=null,Ie=null;E.depth&&(Ie=E.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,Q=E.stencil?_o:Ss,te=E.stencil?$s:Wn);const ve={colorFormat:t.RGBA8,depthFormat:Ie,scaleFactor:s};d=new XRWebGLBinding(n,t),u=d.createProjectionLayer(ve),n.updateRenderState({layers:[u]}),e.setPixelRatio(1),e.setSize(u.textureWidth,u.textureHeight,!1),p=new Qt(u.textureWidth,u.textureHeight,{format:Pi,type:bs,depthTexture:new qd(u.textureWidth,u.textureHeight,te,void 0,void 0,void 0,void 0,void 0,void 0,Q),stencilBuffer:E.stencil,colorSpace:e.outputColorSpace,samples:E.antialias?4:0});const pe=e.properties.get(p);pe.__ignoreDepthValues=u.ignoreDepthValues}p.isXRRenderTarget=!0,this.setFoveation(l),c=null,o=await n.requestReferenceSpace(a),Y.setContext(n),Y.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(n!==null)return n.environmentBlendMode};function C(q){for(let Q=0;Q<q.removed.length;Q++){const te=q.removed[Q],Ie=T.indexOf(te);Ie>=0&&(T[Ie]=null,_[Ie].disconnect(te))}for(let Q=0;Q<q.added.length;Q++){const te=q.added[Q];let Ie=T.indexOf(te);if(Ie===-1){for(let pe=0;pe<_.length;pe++)if(pe>=T.length){T.push(te),Ie=pe;break}else if(T[pe]===null){T[pe]=te,Ie=pe;break}if(Ie===-1)break}const ve=_[Ie];ve&&ve.connect(te)}}const U=new F,B=new F;function V(q,Q,te){U.setFromMatrixPosition(Q.matrixWorld),B.setFromMatrixPosition(te.matrixWorld);const Ie=U.distanceTo(B),ve=Q.projectionMatrix.elements,pe=te.projectionMatrix.elements,_e=ve[14]/(ve[10]-1),Ee=ve[14]/(ve[10]+1),Ae=(ve[9]+1)/ve[5],ie=(ve[9]-1)/ve[5],$e=(ve[8]-1)/ve[0],M=(pe[8]+1)/pe[0],ee=_e*$e,K=_e*M,H=Ie/(-$e+M),z=H*-$e;Q.matrixWorld.decompose(q.position,q.quaternion,q.scale),q.translateX(z),q.translateZ(H),q.matrixWorld.compose(q.position,q.quaternion,q.scale),q.matrixWorldInverse.copy(q.matrixWorld).invert();const P=_e+H,L=Ee+H,Z=ee-z,X=K+(Ie-z),$=Ae*Ee/L*P,re=ie*Ee/L*P;q.projectionMatrix.makePerspective(Z,X,$,re,P,L),q.projectionMatrixInverse.copy(q.projectionMatrix).invert()}function j(q,Q){Q===null?q.matrixWorld.copy(q.matrix):q.matrixWorld.multiplyMatrices(Q.matrixWorld,q.matrix),q.matrixWorldInverse.copy(q.matrixWorld).invert()}this.updateCamera=function(q){if(n===null)return;y.near=x.near=b.near=q.near,y.far=x.far=b.far=q.far,(S!==y.near||O!==y.far)&&(n.updateRenderState({depthNear:y.near,depthFar:y.far}),S=y.near,O=y.far);const Q=q.parent,te=y.cameras;j(y,Q);for(let Ie=0;Ie<te.length;Ie++)j(te[Ie],Q);te.length===2?V(y,b,x):y.projectionMatrix.copy(b.projectionMatrix),G(q,y,Q)};function G(q,Q,te){te===null?q.matrix.copy(Q.matrixWorld):(q.matrix.copy(te.matrixWorld),q.matrix.invert(),q.matrix.multiply(Q.matrixWorld)),q.matrix.decompose(q.position,q.quaternion,q.scale),q.updateMatrixWorld(!0),q.projectionMatrix.copy(Q.projectionMatrix),q.projectionMatrixInverse.copy(Q.projectionMatrixInverse),q.isPerspectiveCamera&&(q.fov=Ia*2*Math.atan(1/q.projectionMatrix.elements[5]),q.zoom=1)}this.getCamera=function(){return y},this.getFoveation=function(){if(!(u===null&&f===null))return l},this.setFoveation=function(q){l=q,u!==null&&(u.fixedFoveation=q),f!==null&&f.fixedFoveation!==void 0&&(f.fixedFoveation=q)};let se=null;function W(q,Q){if(h=Q.getViewerPose(c||o),m=Q,h!==null){const te=h.views;f!==null&&(e.setRenderTargetFramebuffer(p,f.framebuffer),e.setRenderTarget(p));let Ie=!1;te.length!==y.cameras.length&&(y.cameras.length=0,Ie=!0);for(let ve=0;ve<te.length;ve++){const pe=te[ve];let _e=null;if(f!==null)_e=f.getViewport(pe);else{const Ae=d.getViewSubImage(u,pe);_e=Ae.viewport,ve===0&&(e.setRenderTargetTextures(p,Ae.colorTexture,u.ignoreDepthValues?void 0:Ae.depthStencilTexture),e.setRenderTarget(p))}let Ee=A[ve];Ee===void 0&&(Ee=new Fi,Ee.layers.enable(ve),Ee.viewport=new bt,A[ve]=Ee),Ee.matrix.fromArray(pe.transform.matrix),Ee.matrix.decompose(Ee.position,Ee.quaternion,Ee.scale),Ee.projectionMatrix.fromArray(pe.projectionMatrix),Ee.projectionMatrixInverse.copy(Ee.projectionMatrix).invert(),Ee.viewport.set(_e.x,_e.y,_e.width,_e.height),ve===0&&(y.matrix.copy(Ee.matrix),y.matrix.decompose(y.position,y.quaternion,y.scale)),Ie===!0&&y.cameras.push(Ee)}}for(let te=0;te<_.length;te++){const Ie=T[te],ve=_[te];Ie!==null&&ve!==void 0&&ve.update(Ie,Q,c||o)}se&&se(q,Q),Q.detectedPlanes&&i.dispatchEvent({type:"planesdetected",data:Q}),m=null}const Y=new uE;Y.setAnimationLoop(W),this.setAnimationLoop=function(q){se=q},this.dispose=function(){}}}function ES(r,e){function t(g,p){g.matrixAutoUpdate===!0&&g.updateMatrix(),p.value.copy(g.matrix)}function i(g,p){p.color.getRGB(g.fogColor.value,lE(r)),p.isFog?(g.fogNear.value=p.near,g.fogFar.value=p.far):p.isFogExp2&&(g.fogDensity.value=p.density)}function n(g,p,_,T,I){p.isMeshBasicMaterial||p.isMeshLambertMaterial?s(g,p):p.isMeshToonMaterial?(s(g,p),d(g,p)):p.isMeshPhongMaterial?(s(g,p),h(g,p)):p.isMeshStandardMaterial?(s(g,p),u(g,p),p.isMeshPhysicalMaterial&&f(g,p,I)):p.isMeshMatcapMaterial?(s(g,p),m(g,p)):p.isMeshDepthMaterial?s(g,p):p.isMeshDistanceMaterial?(s(g,p),E(g,p)):p.isMeshNormalMaterial?s(g,p):p.isLineBasicMaterial?(o(g,p),p.isLineDashedMaterial&&a(g,p)):p.isPointsMaterial?l(g,p,_,T):p.isSpriteMaterial?c(g,p):p.isShadowMaterial?(g.color.value.copy(p.color),g.opacity.value=p.opacity):p.isShaderMaterial&&(p.uniformsNeedUpdate=!1)}function s(g,p){g.opacity.value=p.opacity,p.color&&g.diffuse.value.copy(p.color),p.emissive&&g.emissive.value.copy(p.emissive).multiplyScalar(p.emissiveIntensity),p.map&&(g.map.value=p.map,t(p.map,g.mapTransform)),p.alphaMap&&(g.alphaMap.value=p.alphaMap,t(p.alphaMap,g.alphaMapTransform)),p.bumpMap&&(g.bumpMap.value=p.bumpMap,t(p.bumpMap,g.bumpMapTransform),g.bumpScale.value=p.bumpScale,p.side===di&&(g.bumpScale.value*=-1)),p.normalMap&&(g.normalMap.value=p.normalMap,t(p.normalMap,g.normalMapTransform),g.normalScale.value.copy(p.normalScale),p.side===di&&g.normalScale.value.negate()),p.displacementMap&&(g.displacementMap.value=p.displacementMap,t(p.displacementMap,g.displacementMapTransform),g.displacementScale.value=p.displacementScale,g.displacementBias.value=p.displacementBias),p.emissiveMap&&(g.emissiveMap.value=p.emissiveMap,t(p.emissiveMap,g.emissiveMapTransform)),p.specularMap&&(g.specularMap.value=p.specularMap,t(p.specularMap,g.specularMapTransform)),p.alphaTest>0&&(g.alphaTest.value=p.alphaTest);const _=e.get(p).envMap;if(_&&(g.envMap.value=_,g.flipEnvMap.value=_.isCubeTexture&&_.isRenderTargetTexture===!1?-1:1,g.reflectivity.value=p.reflectivity,g.ior.value=p.ior,g.refractionRatio.value=p.refractionRatio),p.lightMap){g.lightMap.value=p.lightMap;const T=r._useLegacyLights===!0?Math.PI:1;g.lightMapIntensity.value=p.lightMapIntensity*T,t(p.lightMap,g.lightMapTransform)}p.aoMap&&(g.aoMap.value=p.aoMap,g.aoMapIntensity.value=p.aoMapIntensity,t(p.aoMap,g.aoMapTransform))}function o(g,p){g.diffuse.value.copy(p.color),g.opacity.value=p.opacity,p.map&&(g.map.value=p.map,t(p.map,g.mapTransform))}function a(g,p){g.dashSize.value=p.dashSize,g.totalSize.value=p.dashSize+p.gapSize,g.scale.value=p.scale}function l(g,p,_,T){g.diffuse.value.copy(p.color),g.opacity.value=p.opacity,g.size.value=p.size*_,g.scale.value=T*.5,p.map&&(g.map.value=p.map,t(p.map,g.uvTransform)),p.alphaMap&&(g.alphaMap.value=p.alphaMap,t(p.alphaMap,g.alphaMapTransform)),p.alphaTest>0&&(g.alphaTest.value=p.alphaTest)}function c(g,p){g.diffuse.value.copy(p.color),g.opacity.value=p.opacity,g.rotation.value=p.rotation,p.map&&(g.map.value=p.map,t(p.map,g.mapTransform)),p.alphaMap&&(g.alphaMap.value=p.alphaMap,t(p.alphaMap,g.alphaMapTransform)),p.alphaTest>0&&(g.alphaTest.value=p.alphaTest)}function h(g,p){g.specular.value.copy(p.specular),g.shininess.value=Math.max(p.shininess,1e-4)}function d(g,p){p.gradientMap&&(g.gradientMap.value=p.gradientMap)}function u(g,p){g.metalness.value=p.metalness,p.metalnessMap&&(g.metalnessMap.value=p.metalnessMap,t(p.metalnessMap,g.metalnessMapTransform)),g.roughness.value=p.roughness,p.roughnessMap&&(g.roughnessMap.value=p.roughnessMap,t(p.roughnessMap,g.roughnessMapTransform)),e.get(p).envMap&&(g.envMapIntensity.value=p.envMapIntensity)}function f(g,p,_){g.ior.value=p.ior,p.sheen>0&&(g.sheenColor.value.copy(p.sheenColor).multiplyScalar(p.sheen),g.sheenRoughness.value=p.sheenRoughness,p.sheenColorMap&&(g.sheenColorMap.value=p.sheenColorMap,t(p.sheenColorMap,g.sheenColorMapTransform)),p.sheenRoughnessMap&&(g.sheenRoughnessMap.value=p.sheenRoughnessMap,t(p.sheenRoughnessMap,g.sheenRoughnessMapTransform))),p.clearcoat>0&&(g.clearcoat.value=p.clearcoat,g.clearcoatRoughness.value=p.clearcoatRoughness,p.clearcoatMap&&(g.clearcoatMap.value=p.clearcoatMap,t(p.clearcoatMap,g.clearcoatMapTransform)),p.clearcoatRoughnessMap&&(g.clearcoatRoughnessMap.value=p.clearcoatRoughnessMap,t(p.clearcoatRoughnessMap,g.clearcoatRoughnessMapTransform)),p.clearcoatNormalMap&&(g.clearcoatNormalMap.value=p.clearcoatNormalMap,t(p.clearcoatNormalMap,g.clearcoatNormalMapTransform),g.clearcoatNormalScale.value.copy(p.clearcoatNormalScale),p.side===di&&g.clearcoatNormalScale.value.negate())),p.iridescence>0&&(g.iridescence.value=p.iridescence,g.iridescenceIOR.value=p.iridescenceIOR,g.iridescenceThicknessMinimum.value=p.iridescenceThicknessRange[0],g.iridescenceThicknessMaximum.value=p.iridescenceThicknessRange[1],p.iridescenceMap&&(g.iridescenceMap.value=p.iridescenceMap,t(p.iridescenceMap,g.iridescenceMapTransform)),p.iridescenceThicknessMap&&(g.iridescenceThicknessMap.value=p.iridescenceThicknessMap,t(p.iridescenceThicknessMap,g.iridescenceThicknessMapTransform))),p.transmission>0&&(g.transmission.value=p.transmission,g.transmissionSamplerMap.value=_.texture,g.transmissionSamplerSize.value.set(_.width,_.height),p.transmissionMap&&(g.transmissionMap.value=p.transmissionMap,t(p.transmissionMap,g.transmissionMapTransform)),g.thickness.value=p.thickness,p.thicknessMap&&(g.thicknessMap.value=p.thicknessMap,t(p.thicknessMap,g.thicknessMapTransform)),g.attenuationDistance.value=p.attenuationDistance,g.attenuationColor.value.copy(p.attenuationColor)),p.anisotropy>0&&(g.anisotropyVector.value.set(p.anisotropy*Math.cos(p.anisotropyRotation),p.anisotropy*Math.sin(p.anisotropyRotation)),p.anisotropyMap&&(g.anisotropyMap.value=p.anisotropyMap,t(p.anisotropyMap,g.anisotropyMapTransform))),g.specularIntensity.value=p.specularIntensity,g.specularColor.value.copy(p.specularColor),p.specularColorMap&&(g.specularColorMap.value=p.specularColorMap,t(p.specularColorMap,g.specularColorMapTransform)),p.specularIntensityMap&&(g.specularIntensityMap.value=p.specularIntensityMap,t(p.specularIntensityMap,g.specularIntensityMapTransform))}function m(g,p){p.matcap&&(g.matcap.value=p.matcap)}function E(g,p){const _=e.get(p).light;g.referencePosition.value.setFromMatrixPosition(_.matrixWorld),g.nearDistance.value=_.shadow.camera.near,g.farDistance.value=_.shadow.camera.far}return{refreshFogUniforms:i,refreshMaterialUniforms:n}}function IS(r,e,t,i){let n={},s={},o=[];const a=t.isWebGL2?r.getParameter(r.MAX_UNIFORM_BUFFER_BINDINGS):0;function l(_,T){const I=T.program;i.uniformBlockBinding(_,I)}function c(_,T){let I=n[_.id];I===void 0&&(m(_),I=h(_),n[_.id]=I,_.addEventListener("dispose",g));const v=T.program;i.updateUBOMapping(_,v);const b=e.render.frame;s[_.id]!==b&&(u(_),s[_.id]=b)}function h(_){const T=d();_.__bindingPointIndex=T;const I=r.createBuffer(),v=_.__size,b=_.usage;return r.bindBuffer(r.UNIFORM_BUFFER,I),r.bufferData(r.UNIFORM_BUFFER,v,b),r.bindBuffer(r.UNIFORM_BUFFER,null),r.bindBufferBase(r.UNIFORM_BUFFER,T,I),I}function d(){for(let _=0;_<a;_++)if(o.indexOf(_)===-1)return o.push(_),_;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function u(_){const T=n[_.id],I=_.uniforms,v=_.__cache;r.bindBuffer(r.UNIFORM_BUFFER,T);for(let b=0,x=I.length;b<x;b++){const A=Array.isArray(I[b])?I[b]:[I[b]];for(let y=0,S=A.length;y<S;y++){const O=A[y];if(f(O,b,y,v)===!0){const w=O.__offset,N=Array.isArray(O.value)?O.value:[O.value];let C=0;for(let U=0;U<N.length;U++){const B=N[U],V=E(B);typeof B=="number"||typeof B=="boolean"?(O.__data[0]=B,r.bufferSubData(r.UNIFORM_BUFFER,w+C,O.__data)):B.isMatrix3?(O.__data[0]=B.elements[0],O.__data[1]=B.elements[1],O.__data[2]=B.elements[2],O.__data[3]=0,O.__data[4]=B.elements[3],O.__data[5]=B.elements[4],O.__data[6]=B.elements[5],O.__data[7]=0,O.__data[8]=B.elements[6],O.__data[9]=B.elements[7],O.__data[10]=B.elements[8],O.__data[11]=0):(B.toArray(O.__data,C),C+=V.storage/Float32Array.BYTES_PER_ELEMENT)}r.bufferSubData(r.UNIFORM_BUFFER,w,O.__data)}}}r.bindBuffer(r.UNIFORM_BUFFER,null)}function f(_,T,I,v){const b=_.value,x=T+"_"+I;if(v[x]===void 0)return typeof b=="number"||typeof b=="boolean"?v[x]=b:v[x]=b.clone(),!0;{const A=v[x];if(typeof b=="number"||typeof b=="boolean"){if(A!==b)return v[x]=b,!0}else if(A.equals(b)===!1)return A.copy(b),!0}return!1}function m(_){const T=_.uniforms;let I=0;const v=16;for(let x=0,A=T.length;x<A;x++){const y=Array.isArray(T[x])?T[x]:[T[x]];for(let S=0,O=y.length;S<O;S++){const w=y[S],N=Array.isArray(w.value)?w.value:[w.value];for(let C=0,U=N.length;C<U;C++){const B=N[C],V=E(B),j=I%v;j!==0&&v-j<V.boundary&&(I+=v-j),w.__data=new Float32Array(V.storage/Float32Array.BYTES_PER_ELEMENT),w.__offset=I,I+=V.storage}}}const b=I%v;return b>0&&(I+=v-b),_.__size=I,_.__cache={},this}function E(_){const T={boundary:0,storage:0};return typeof _=="number"||typeof _=="boolean"?(T.boundary=4,T.storage=4):_.isVector2?(T.boundary=8,T.storage=8):_.isVector3||_.isColor?(T.boundary=16,T.storage=12):_.isVector4?(T.boundary=16,T.storage=16):_.isMatrix3?(T.boundary=48,T.storage=48):_.isMatrix4?(T.boundary=64,T.storage=64):_.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",_),T}function g(_){const T=_.target;T.removeEventListener("dispose",g);const I=o.indexOf(T.__bindingPointIndex);o.splice(I,1),r.deleteBuffer(n[T.id]),delete n[T.id],delete s[T.id]}function p(){for(const _ in n)r.deleteBuffer(n[_]);o=[],n={},s={}}return{bind:l,update:c,dispose:p}}class _a{constructor(e={}){const{canvas:t=mT(),context:i=null,depth:n=!0,stencil:s=!0,alpha:o=!1,antialias:a=!1,premultipliedAlpha:l=!0,preserveDrawingBuffer:c=!1,powerPreference:h="default",failIfMajorPerformanceCaveat:d=!1}=e;this.isWebGLRenderer=!0;let u;i!==null?u=i.getContextAttributes().alpha:u=o;const f=new Uint32Array(4),m=new Int32Array(4);let E=null,g=null;const p=[],_=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=ni,this._useLegacyLights=!1,this.toneMapping=Qn,this.toneMappingExposure=1;const T=this;let I=!1,v=0,b=0,x=null,A=-1,y=null;const S=new bt,O=new bt;let w=null;const N=new Fe(0);let C=0,U=t.width,B=t.height,V=1,j=null,G=null;const se=new bt(0,0,U,B),W=new bt(0,0,U,B);let Y=!1;const q=new Zd;let Q=!1,te=!1,Ie=null;const ve=new fe,pe=new Re,_e=new F,Ee={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function Ae(){return x===null?V:1}let ie=i;function $e(k,ne){for(let ce=0;ce<k.length;ce++){const he=k[ce],ae=t.getContext(he,ne);if(ae!==null)return ae}return null}try{const k={alpha:!0,depth:n,stencil:s,antialias:a,premultipliedAlpha:l,preserveDrawingBuffer:c,powerPreference:h,failIfMajorPerformanceCaveat:d};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${Vd}`),t.addEventListener("webglcontextlost",be,!1),t.addEventListener("webglcontextrestored",J,!1),t.addEventListener("webglcontextcreationerror",Se,!1),ie===null){const ne=["webgl2","webgl","experimental-webgl"];if(T.isWebGL1Renderer===!0&&ne.shift(),ie=$e(ne,k),ie===null)throw $e(ne)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}typeof WebGLRenderingContext<"u"&&ie instanceof WebGLRenderingContext&&console.warn("THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163."),ie.getShaderPrecisionFormat===void 0&&(ie.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(k){throw console.error("THREE.WebGLRenderer: "+k.message),k}let M,ee,K,H,z,P,L,Z,X,$,re,le,de,Te,ye,De,me,it,qe,Pe,Oe,Le,Ue,at;function vt(){M=new Ry(ie),ee=new yy(ie,M,e),M.init(ee),Le=new fS(ie,M,ee),K=new uS(ie,M,ee),H=new Py(ie),z=new Jb,P=new dS(ie,M,K,z,ee,Le,H),L=new Sy(T),Z=new Ay(T),X=new VT(ie,ee),Ue=new vy(ie,M,X,ee),$=new My(ie,X,H,Ue),re=new Dy(ie,$,X,H),qe=new Ny(ie,ee,P),De=new by(z),le=new Qb(T,L,Z,M,ee,Ue,De),de=new ES(T,z),Te=new eS,ye=new oS(M,ee),it=new Ty(T,L,Z,K,re,u,l),me=new hS(T,re,ee),at=new IS(ie,H,ee,K),Pe=new Cy(ie,M,H,ee),Oe=new Fy(ie,M,H,ee),H.programs=le.programs,T.capabilities=ee,T.extensions=M,T.properties=z,T.renderLists=Te,T.shadowMap=me,T.state=K,T.info=H}vt();const et=new gS(T,ie);this.xr=et,this.getContext=function(){return ie},this.getContextAttributes=function(){return ie.getContextAttributes()},this.forceContextLoss=function(){const k=M.get("WEBGL_lose_context");k&&k.loseContext()},this.forceContextRestore=function(){const k=M.get("WEBGL_lose_context");k&&k.restoreContext()},this.getPixelRatio=function(){return V},this.setPixelRatio=function(k){k!==void 0&&(V=k,this.setSize(U,B,!1))},this.getSize=function(k){return k.set(U,B)},this.setSize=function(k,ne,ce=!0){if(et.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}U=k,B=ne,t.width=Math.floor(k*V),t.height=Math.floor(ne*V),ce===!0&&(t.style.width=k+"px",t.style.height=ne+"px"),this.setViewport(0,0,k,ne)},this.getDrawingBufferSize=function(k){return k.set(U*V,B*V).floor()},this.setDrawingBufferSize=function(k,ne,ce){U=k,B=ne,V=ce,t.width=Math.floor(k*ce),t.height=Math.floor(ne*ce),this.setViewport(0,0,k,ne)},this.getCurrentViewport=function(k){return k.copy(S)},this.getViewport=function(k){return k.copy(se)},this.setViewport=function(k,ne,ce,he){k.isVector4?se.set(k.x,k.y,k.z,k.w):se.set(k,ne,ce,he),K.viewport(S.copy(se).multiplyScalar(V).floor())},this.getScissor=function(k){return k.copy(W)},this.setScissor=function(k,ne,ce,he){k.isVector4?W.set(k.x,k.y,k.z,k.w):W.set(k,ne,ce,he),K.scissor(O.copy(W).multiplyScalar(V).floor())},this.getScissorTest=function(){return Y},this.setScissorTest=function(k){K.setScissorTest(Y=k)},this.setOpaqueSort=function(k){j=k},this.setTransparentSort=function(k){G=k},this.getClearColor=function(k){return k.copy(it.getClearColor())},this.setClearColor=function(){it.setClearColor.apply(it,arguments)},this.getClearAlpha=function(){return it.getClearAlpha()},this.setClearAlpha=function(){it.setClearAlpha.apply(it,arguments)},this.clear=function(k=!0,ne=!0,ce=!0){let he=0;if(k){let ae=!1;if(x!==null){const Me=x.texture.format;ae=Me===Qg||Me===Kg||Me===qg}if(ae){const Me=x.texture.type,Ne=Me===bs||Me===Wn||Me===Gd||Me===$s||Me===Xg||Me===Zg,ke=it.getClearColor(),Ye=it.getClearAlpha(),nt=ke.r,Ke=ke.g,Qe=ke.b;Ne?(f[0]=nt,f[1]=Ke,f[2]=Qe,f[3]=Ye,ie.clearBufferuiv(ie.COLOR,0,f)):(m[0]=nt,m[1]=Ke,m[2]=Qe,m[3]=Ye,ie.clearBufferiv(ie.COLOR,0,m))}else he|=ie.COLOR_BUFFER_BIT}ne&&(he|=ie.DEPTH_BUFFER_BIT),ce&&(he|=ie.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),ie.clear(he)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",be,!1),t.removeEventListener("webglcontextrestored",J,!1),t.removeEventListener("webglcontextcreationerror",Se,!1),Te.dispose(),ye.dispose(),z.dispose(),L.dispose(),Z.dispose(),re.dispose(),Ue.dispose(),at.dispose(),le.dispose(),et.dispose(),et.removeEventListener("sessionstart",fi),et.removeEventListener("sessionend",mt),Ie&&(Ie.dispose(),Ie=null),pi.stop()};function be(k){k.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),I=!0}function J(){console.log("THREE.WebGLRenderer: Context Restored."),I=!1;const k=H.autoReset,ne=me.enabled,ce=me.autoUpdate,he=me.needsUpdate,ae=me.type;vt(),H.autoReset=k,me.enabled=ne,me.autoUpdate=ce,me.needsUpdate=he,me.type=ae}function Se(k){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",k.statusMessage)}function xe(k){const ne=k.target;ne.removeEventListener("dispose",xe),He(ne)}function He(k){Be(k),z.remove(k)}function Be(k){const ne=z.get(k).programs;ne!==void 0&&(ne.forEach(function(ce){le.releaseProgram(ce)}),k.isShaderMaterial&&le.releaseShaderCache(k))}this.renderBufferDirect=function(k,ne,ce,he,ae,Me){ne===null&&(ne=Ee);const Ne=ae.isMesh&&ae.matrixWorld.determinant()<0,ke=B0(k,ne,ce,he,ae);K.setMaterial(he,Ne);let Ye=ce.index,nt=1;if(he.wireframe===!0){if(Ye=$.getWireframeAttribute(ce),Ye===void 0)return;nt=2}const Ke=ce.drawRange,Qe=ce.attributes.position;let Ut=Ke.start*nt,Ai=(Ke.start+Ke.count)*nt;Me!==null&&(Ut=Math.max(Ut,Me.start*nt),Ai=Math.min(Ai,(Me.start+Me.count)*nt)),Ye!==null?(Ut=Math.max(Ut,0),Ai=Math.min(Ai,Ye.count)):Qe!=null&&(Ut=Math.max(Ut,0),Ai=Math.min(Ai,Qe.count));const Zt=Ai-Ut;if(Zt<0||Zt===1/0)return;Ue.setup(ae,he,ke,ce,Ye);let An,xt=Pe;if(Ye!==null&&(An=X.get(Ye),xt=Oe,xt.setIndex(An)),ae.isMesh)he.wireframe===!0?(K.setLineWidth(he.wireframeLinewidth*Ae()),xt.setMode(ie.LINES)):xt.setMode(ie.TRIANGLES);else if(ae.isLine){let st=he.linewidth;st===void 0&&(st=1),K.setLineWidth(st*Ae()),ae.isLineSegments?xt.setMode(ie.LINES):ae.isLineLoop?xt.setMode(ie.LINE_LOOP):xt.setMode(ie.LINE_STRIP)}else ae.isPoints?xt.setMode(ie.POINTS):ae.isSprite&&xt.setMode(ie.TRIANGLES);if(ae.isBatchedMesh)xt.renderMultiDraw(ae._multiDrawStarts,ae._multiDrawCounts,ae._multiDrawCount);else if(ae.isInstancedMesh)xt.renderInstances(Ut,Zt,ae.count);else if(ce.isInstancedBufferGeometry){const st=ce._maxInstanceCount!==void 0?ce._maxInstanceCount:1/0,ih=Math.min(ce.instanceCount,st);xt.renderInstances(Ut,Zt,ih)}else xt.render(Ut,Zt)};function ft(k,ne,ce){k.transparent===!0&&k.side===_i&&k.forceSinglePass===!1?(k.side=di,k.needsUpdate=!0,Na(k,ne,ce),k.side=$i,k.needsUpdate=!0,Na(k,ne,ce),k.side=_i):Na(k,ne,ce)}this.compile=function(k,ne,ce=null){ce===null&&(ce=k),g=ye.get(ce),g.init(),_.push(g),ce.traverseVisible(function(ae){ae.isLight&&ae.layers.test(ne.layers)&&(g.pushLight(ae),ae.castShadow&&g.pushShadow(ae))}),k!==ce&&k.traverseVisible(function(ae){ae.isLight&&ae.layers.test(ne.layers)&&(g.pushLight(ae),ae.castShadow&&g.pushShadow(ae))}),g.setupLights(T._useLegacyLights);const he=new Set;return k.traverse(function(ae){const Me=ae.material;if(Me)if(Array.isArray(Me))for(let Ne=0;Ne<Me.length;Ne++){const ke=Me[Ne];ft(ke,ce,ae),he.add(ke)}else ft(Me,ce,ae),he.add(Me)}),_.pop(),g=null,he},this.compileAsync=function(k,ne,ce=null){const he=this.compile(k,ne,ce);return new Promise(ae=>{function Me(){if(he.forEach(function(Ne){z.get(Ne).currentProgram.isReady()&&he.delete(Ne)}),he.size===0){ae(k);return}setTimeout(Me,10)}M.get("KHR_parallel_shader_compile")!==null?Me():setTimeout(Me,10)})};let pt=null;function Xt(k){pt&&pt(k)}function fi(){pi.stop()}function mt(){pi.start()}const pi=new uE;pi.setAnimationLoop(Xt),typeof self<"u"&&pi.setContext(self),this.setAnimationLoop=function(k){pt=k,et.setAnimationLoop(k),k===null?pi.stop():pi.start()},et.addEventListener("sessionstart",fi),et.addEventListener("sessionend",mt),this.render=function(k,ne){if(ne!==void 0&&ne.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(I===!0)return;k.matrixWorldAutoUpdate===!0&&k.updateMatrixWorld(),ne.parent===null&&ne.matrixWorldAutoUpdate===!0&&ne.updateMatrixWorld(),et.enabled===!0&&et.isPresenting===!0&&(et.cameraAutoUpdate===!0&&et.updateCamera(ne),ne=et.getCamera()),k.isScene===!0&&k.onBeforeRender(T,k,ne,x),g=ye.get(k,_.length),g.init(),_.push(g),ve.multiplyMatrices(ne.projectionMatrix,ne.matrixWorldInverse),q.setFromProjectionMatrix(ve),te=this.localClippingEnabled,Q=De.init(this.clippingPlanes,te),E=Te.get(k,p.length),E.init(),p.push(E),mn(k,ne,0,T.sortObjects),E.finish(),T.sortObjects===!0&&E.sort(j,G),this.info.render.frame++,Q===!0&&De.beginShadows();const ce=g.state.shadowsArray;if(me.render(ce,k,ne),Q===!0&&De.endShadows(),this.info.autoReset===!0&&this.info.reset(),it.render(E,k),g.setupLights(T._useLegacyLights),ne.isArrayCamera){const he=ne.cameras;for(let ae=0,Me=he.length;ae<Me;ae++){const Ne=he[ae];Cf(E,k,Ne,Ne.viewport)}}else Cf(E,k,ne);x!==null&&(P.updateMultisampleRenderTarget(x),P.updateRenderTargetMipmap(x)),k.isScene===!0&&k.onAfterRender(T,k,ne),Ue.resetDefaultState(),A=-1,y=null,_.pop(),_.length>0?g=_[_.length-1]:g=null,p.pop(),p.length>0?E=p[p.length-1]:E=null};function mn(k,ne,ce,he){if(k.visible===!1)return;if(k.layers.test(ne.layers)){if(k.isGroup)ce=k.renderOrder;else if(k.isLOD)k.autoUpdate===!0&&k.update(ne);else if(k.isLight)g.pushLight(k),k.castShadow&&g.pushShadow(k);else if(k.isSprite){if(!k.frustumCulled||q.intersectsSprite(k)){he&&_e.setFromMatrixPosition(k.matrixWorld).applyMatrix4(ve);const Ne=re.update(k),ke=k.material;ke.visible&&E.push(k,Ne,ke,ce,_e.z,null)}}else if((k.isMesh||k.isLine||k.isPoints)&&(!k.frustumCulled||q.intersectsObject(k))){const Ne=re.update(k),ke=k.material;if(he&&(k.boundingSphere!==void 0?(k.boundingSphere===null&&k.computeBoundingSphere(),_e.copy(k.boundingSphere.center)):(Ne.boundingSphere===null&&Ne.computeBoundingSphere(),_e.copy(Ne.boundingSphere.center)),_e.applyMatrix4(k.matrixWorld).applyMatrix4(ve)),Array.isArray(ke)){const Ye=Ne.groups;for(let nt=0,Ke=Ye.length;nt<Ke;nt++){const Qe=Ye[nt],Ut=ke[Qe.materialIndex];Ut&&Ut.visible&&E.push(k,Ne,Ut,ce,_e.z,Qe)}}else ke.visible&&E.push(k,Ne,ke,ce,_e.z,null)}}const Me=k.children;for(let Ne=0,ke=Me.length;Ne<ke;Ne++)mn(Me[Ne],ne,ce,he)}function Cf(k,ne,ce,he){const ae=k.opaque,Me=k.transmissive,Ne=k.transparent;g.setupLightsView(ce),Q===!0&&De.setGlobalState(T.clippingPlanes,ce),Me.length>0&&U0(ae,Me,ne,ce),he&&K.viewport(S.copy(he)),ae.length>0&&Oa(ae,ne,ce),Me.length>0&&Oa(Me,ne,ce),Ne.length>0&&Oa(Ne,ne,ce),K.buffers.depth.setTest(!0),K.buffers.depth.setMask(!0),K.buffers.color.setMask(!0),K.setPolygonOffset(!1)}function U0(k,ne,ce,he){if((ce.isScene===!0?ce.overrideMaterial:null)!==null)return;const Me=ee.isWebGL2;Ie===null&&(Ie=new Qt(1,1,{generateMipmaps:!0,type:M.has("EXT_color_buffer_half_float")?ws:bs,minFilter:Ea,samples:Me?4:0})),T.getDrawingBufferSize(pe),Me?Ie.setSize(pe.x,pe.y):Ie.setSize(xc(pe.x),xc(pe.y));const Ne=T.getRenderTarget();T.setRenderTarget(Ie),T.getClearColor(N),C=T.getClearAlpha(),C<1&&T.setClearColor(16777215,.5),T.clear();const ke=T.toneMapping;T.toneMapping=Qn,Oa(k,ce,he),P.updateMultisampleRenderTarget(Ie),P.updateRenderTargetMipmap(Ie);let Ye=!1;for(let nt=0,Ke=ne.length;nt<Ke;nt++){const Qe=ne[nt],Ut=Qe.object,Ai=Qe.geometry,Zt=Qe.material,An=Qe.group;if(Zt.side===_i&&Ut.layers.test(he.layers)){const xt=Zt.side;Zt.side=di,Zt.needsUpdate=!0,yf(Ut,ce,he,Ai,Zt,An),Zt.side=xt,Zt.needsUpdate=!0,Ye=!0}}Ye===!0&&(P.updateMultisampleRenderTarget(Ie),P.updateRenderTargetMipmap(Ie)),T.setRenderTarget(Ne),T.setClearColor(N,C),T.toneMapping=ke}function Oa(k,ne,ce){const he=ne.isScene===!0?ne.overrideMaterial:null;for(let ae=0,Me=k.length;ae<Me;ae++){const Ne=k[ae],ke=Ne.object,Ye=Ne.geometry,nt=he===null?Ne.material:he,Ke=Ne.group;ke.layers.test(ce.layers)&&yf(ke,ne,ce,Ye,nt,Ke)}}function yf(k,ne,ce,he,ae,Me){k.onBeforeRender(T,ne,ce,he,ae,Me),k.modelViewMatrix.multiplyMatrices(ce.matrixWorldInverse,k.matrixWorld),k.normalMatrix.getNormalMatrix(k.modelViewMatrix),ae.onBeforeRender(T,ne,ce,he,k,Me),ae.transparent===!0&&ae.side===_i&&ae.forceSinglePass===!1?(ae.side=di,ae.needsUpdate=!0,T.renderBufferDirect(ce,ne,he,ae,k,Me),ae.side=$i,ae.needsUpdate=!0,T.renderBufferDirect(ce,ne,he,ae,k,Me),ae.side=_i):T.renderBufferDirect(ce,ne,he,ae,k,Me),k.onAfterRender(T,ne,ce,he,ae,Me)}function Na(k,ne,ce){ne.isScene!==!0&&(ne=Ee);const he=z.get(k),ae=g.state.lights,Me=g.state.shadowsArray,Ne=ae.state.version,ke=le.getParameters(k,ae.state,Me,ne,ce),Ye=le.getProgramCacheKey(ke);let nt=he.programs;he.environment=k.isMeshStandardMaterial?ne.environment:null,he.fog=ne.fog,he.envMap=(k.isMeshStandardMaterial?Z:L).get(k.envMap||he.environment),nt===void 0&&(k.addEventListener("dispose",xe),nt=new Map,he.programs=nt);let Ke=nt.get(Ye);if(Ke!==void 0){if(he.currentProgram===Ke&&he.lightsStateVersion===Ne)return Sf(k,ke),Ke}else ke.uniforms=le.getUniforms(k),k.onBuild(ce,ke,T),k.onBeforeCompile(ke,T),Ke=le.acquireProgram(ke,Ye),nt.set(Ye,Ke),he.uniforms=ke.uniforms;const Qe=he.uniforms;return(!k.isShaderMaterial&&!k.isRawShaderMaterial||k.clipping===!0)&&(Qe.clippingPlanes=De.uniform),Sf(k,ke),he.needsLights=V0(k),he.lightsStateVersion=Ne,he.needsLights&&(Qe.ambientLightColor.value=ae.state.ambient,Qe.lightProbe.value=ae.state.probe,Qe.directionalLights.value=ae.state.directional,Qe.directionalLightShadows.value=ae.state.directionalShadow,Qe.spotLights.value=ae.state.spot,Qe.spotLightShadows.value=ae.state.spotShadow,Qe.rectAreaLights.value=ae.state.rectArea,Qe.ltc_1.value=ae.state.rectAreaLTC1,Qe.ltc_2.value=ae.state.rectAreaLTC2,Qe.pointLights.value=ae.state.point,Qe.pointLightShadows.value=ae.state.pointShadow,Qe.hemisphereLights.value=ae.state.hemi,Qe.directionalShadowMap.value=ae.state.directionalShadowMap,Qe.directionalShadowMatrix.value=ae.state.directionalShadowMatrix,Qe.spotShadowMap.value=ae.state.spotShadowMap,Qe.spotLightMatrix.value=ae.state.spotLightMatrix,Qe.spotLightMap.value=ae.state.spotLightMap,Qe.pointShadowMap.value=ae.state.pointShadowMap,Qe.pointShadowMatrix.value=ae.state.pointShadowMatrix),he.currentProgram=Ke,he.uniformsList=null,Ke}function bf(k){if(k.uniformsList===null){const ne=k.currentProgram.getUniforms();k.uniformsList=uc.seqWithValue(ne.seq,k.uniforms)}return k.uniformsList}function Sf(k,ne){const ce=z.get(k);ce.outputColorSpace=ne.outputColorSpace,ce.batching=ne.batching,ce.instancing=ne.instancing,ce.instancingColor=ne.instancingColor,ce.skinning=ne.skinning,ce.morphTargets=ne.morphTargets,ce.morphNormals=ne.morphNormals,ce.morphColors=ne.morphColors,ce.morphTargetsCount=ne.morphTargetsCount,ce.numClippingPlanes=ne.numClippingPlanes,ce.numIntersection=ne.numClipIntersection,ce.vertexAlphas=ne.vertexAlphas,ce.vertexTangents=ne.vertexTangents,ce.toneMapping=ne.toneMapping}function B0(k,ne,ce,he,ae){ne.isScene!==!0&&(ne=Ee),P.resetTextureUnits();const Me=ne.fog,Ne=he.isMeshStandardMaterial?ne.environment:null,ke=x===null?T.outputColorSpace:x.isXRRenderTarget===!0?x.texture.colorSpace:is,Ye=(he.isMeshStandardMaterial?Z:L).get(he.envMap||Ne),nt=he.vertexColors===!0&&!!ce.attributes.color&&ce.attributes.color.itemSize===4,Ke=!!ce.attributes.tangent&&(!!he.normalMap||he.anisotropy>0),Qe=!!ce.morphAttributes.position,Ut=!!ce.morphAttributes.normal,Ai=!!ce.morphAttributes.color;let Zt=Qn;he.toneMapped&&(x===null||x.isXRRenderTarget===!0)&&(Zt=T.toneMapping);const An=ce.morphAttributes.position||ce.morphAttributes.normal||ce.morphAttributes.color,xt=An!==void 0?An.length:0,st=z.get(he),ih=g.state.lights;if(Q===!0&&(te===!0||k!==y)){const ki=k===y&&he.id===A;De.setState(he,k,ki)}let Nt=!1;he.version===st.__version?(st.needsLights&&st.lightsStateVersion!==ih.state.version||st.outputColorSpace!==ke||ae.isBatchedMesh&&st.batching===!1||!ae.isBatchedMesh&&st.batching===!0||ae.isInstancedMesh&&st.instancing===!1||!ae.isInstancedMesh&&st.instancing===!0||ae.isSkinnedMesh&&st.skinning===!1||!ae.isSkinnedMesh&&st.skinning===!0||ae.isInstancedMesh&&st.instancingColor===!0&&ae.instanceColor===null||ae.isInstancedMesh&&st.instancingColor===!1&&ae.instanceColor!==null||st.envMap!==Ye||he.fog===!0&&st.fog!==Me||st.numClippingPlanes!==void 0&&(st.numClippingPlanes!==De.numPlanes||st.numIntersection!==De.numIntersection)||st.vertexAlphas!==nt||st.vertexTangents!==Ke||st.morphTargets!==Qe||st.morphNormals!==Ut||st.morphColors!==Ai||st.toneMapping!==Zt||ee.isWebGL2===!0&&st.morphTargetsCount!==xt)&&(Nt=!0):(Nt=!0,st.__version=he.version);let Ls=st.currentProgram;Nt===!0&&(Ls=Na(he,ne,ae));let xf=!1,Lo=!1,nh=!1;const ai=Ls.getUniforms(),Os=st.uniforms;if(K.useProgram(Ls.program)&&(xf=!0,Lo=!0,nh=!0),he.id!==A&&(A=he.id,Lo=!0),xf||y!==k){ai.setValue(ie,"projectionMatrix",k.projectionMatrix),ai.setValue(ie,"viewMatrix",k.matrixWorldInverse);const ki=ai.map.cameraPosition;ki!==void 0&&ki.setValue(ie,_e.setFromMatrixPosition(k.matrixWorld)),ee.logarithmicDepthBuffer&&ai.setValue(ie,"logDepthBufFC",2/(Math.log(k.far+1)/Math.LN2)),(he.isMeshPhongMaterial||he.isMeshToonMaterial||he.isMeshLambertMaterial||he.isMeshBasicMaterial||he.isMeshStandardMaterial||he.isShaderMaterial)&&ai.setValue(ie,"isOrthographic",k.isOrthographicCamera===!0),y!==k&&(y=k,Lo=!0,nh=!0)}if(ae.isSkinnedMesh){ai.setOptional(ie,ae,"bindMatrix"),ai.setOptional(ie,ae,"bindMatrixInverse");const ki=ae.skeleton;ki&&(ee.floatVertexTextures?(ki.boneTexture===null&&ki.computeBoneTexture(),ai.setValue(ie,"boneTexture",ki.boneTexture,P)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}ae.isBatchedMesh&&(ai.setOptional(ie,ae,"batchingTexture"),ai.setValue(ie,"batchingTexture",ae._matricesTexture,P));const sh=ce.morphAttributes;if((sh.position!==void 0||sh.normal!==void 0||sh.color!==void 0&&ee.isWebGL2===!0)&&qe.update(ae,ce,Ls),(Lo||st.receiveShadow!==ae.receiveShadow)&&(st.receiveShadow=ae.receiveShadow,ai.setValue(ie,"receiveShadow",ae.receiveShadow)),he.isMeshGouraudMaterial&&he.envMap!==null&&(Os.envMap.value=Ye,Os.flipEnvMap.value=Ye.isCubeTexture&&Ye.isRenderTargetTexture===!1?-1:1),Lo&&(ai.setValue(ie,"toneMappingExposure",T.toneMappingExposure),st.needsLights&&z0(Os,nh),Me&&he.fog===!0&&de.refreshFogUniforms(Os,Me),de.refreshMaterialUniforms(Os,he,V,B,Ie),uc.upload(ie,bf(st),Os,P)),he.isShaderMaterial&&he.uniformsNeedUpdate===!0&&(uc.upload(ie,bf(st),Os,P),he.uniformsNeedUpdate=!1),he.isSpriteMaterial&&ai.setValue(ie,"center",ae.center),ai.setValue(ie,"modelViewMatrix",ae.modelViewMatrix),ai.setValue(ie,"normalMatrix",ae.normalMatrix),ai.setValue(ie,"modelMatrix",ae.matrixWorld),he.isShaderMaterial||he.isRawShaderMaterial){const ki=he.uniformsGroups;for(let rh=0,k0=ki.length;rh<k0;rh++)if(ee.isWebGL2){const wf=ki[rh];at.update(wf,Ls),at.bind(wf,Ls)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return Ls}function z0(k,ne){k.ambientLightColor.needsUpdate=ne,k.lightProbe.needsUpdate=ne,k.directionalLights.needsUpdate=ne,k.directionalLightShadows.needsUpdate=ne,k.pointLights.needsUpdate=ne,k.pointLightShadows.needsUpdate=ne,k.spotLights.needsUpdate=ne,k.spotLightShadows.needsUpdate=ne,k.rectAreaLights.needsUpdate=ne,k.hemisphereLights.needsUpdate=ne}function V0(k){return k.isMeshLambertMaterial||k.isMeshToonMaterial||k.isMeshPhongMaterial||k.isMeshStandardMaterial||k.isShadowMaterial||k.isShaderMaterial&&k.lights===!0}this.getActiveCubeFace=function(){return v},this.getActiveMipmapLevel=function(){return b},this.getRenderTarget=function(){return x},this.setRenderTargetTextures=function(k,ne,ce){z.get(k.texture).__webglTexture=ne,z.get(k.depthTexture).__webglTexture=ce;const he=z.get(k);he.__hasExternalTextures=!0,he.__hasExternalTextures&&(he.__autoAllocateDepthBuffer=ce===void 0,he.__autoAllocateDepthBuffer||M.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),he.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(k,ne){const ce=z.get(k);ce.__webglFramebuffer=ne,ce.__useDefaultFramebuffer=ne===void 0},this.setRenderTarget=function(k,ne=0,ce=0){x=k,v=ne,b=ce;let he=!0,ae=null,Me=!1,Ne=!1;if(k){const Ye=z.get(k);Ye.__useDefaultFramebuffer!==void 0?(K.bindFramebuffer(ie.FRAMEBUFFER,null),he=!1):Ye.__webglFramebuffer===void 0?P.setupRenderTarget(k):Ye.__hasExternalTextures&&P.rebindTextures(k,z.get(k.texture).__webglTexture,z.get(k.depthTexture).__webglTexture);const nt=k.texture;(nt.isData3DTexture||nt.isDataArrayTexture||nt.isCompressedArrayTexture)&&(Ne=!0);const Ke=z.get(k).__webglFramebuffer;k.isWebGLCubeRenderTarget?(Array.isArray(Ke[ne])?ae=Ke[ne][ce]:ae=Ke[ne],Me=!0):ee.isWebGL2&&k.samples>0&&P.useMultisampledRTT(k)===!1?ae=z.get(k).__webglMultisampledFramebuffer:Array.isArray(Ke)?ae=Ke[ce]:ae=Ke,S.copy(k.viewport),O.copy(k.scissor),w=k.scissorTest}else S.copy(se).multiplyScalar(V).floor(),O.copy(W).multiplyScalar(V).floor(),w=Y;if(K.bindFramebuffer(ie.FRAMEBUFFER,ae)&&ee.drawBuffers&&he&&K.drawBuffers(k,ae),K.viewport(S),K.scissor(O),K.setScissorTest(w),Me){const Ye=z.get(k.texture);ie.framebufferTexture2D(ie.FRAMEBUFFER,ie.COLOR_ATTACHMENT0,ie.TEXTURE_CUBE_MAP_POSITIVE_X+ne,Ye.__webglTexture,ce)}else if(Ne){const Ye=z.get(k.texture),nt=ne||0;ie.framebufferTextureLayer(ie.FRAMEBUFFER,ie.COLOR_ATTACHMENT0,Ye.__webglTexture,ce||0,nt)}A=-1},this.readRenderTargetPixels=function(k,ne,ce,he,ae,Me,Ne){if(!(k&&k.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let ke=z.get(k).__webglFramebuffer;if(k.isWebGLCubeRenderTarget&&Ne!==void 0&&(ke=ke[Ne]),ke){K.bindFramebuffer(ie.FRAMEBUFFER,ke);try{const Ye=k.texture,nt=Ye.format,Ke=Ye.type;if(nt!==Pi&&Le.convert(nt)!==ie.getParameter(ie.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const Qe=Ke===ws&&(M.has("EXT_color_buffer_half_float")||ee.isWebGL2&&M.has("EXT_color_buffer_float"));if(Ke!==bs&&Le.convert(Ke)!==ie.getParameter(ie.IMPLEMENTATION_COLOR_READ_TYPE)&&!(Ke===Yn&&(ee.isWebGL2||M.has("OES_texture_float")||M.has("WEBGL_color_buffer_float")))&&!Qe){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}ne>=0&&ne<=k.width-he&&ce>=0&&ce<=k.height-ae&&ie.readPixels(ne,ce,he,ae,Le.convert(nt),Le.convert(Ke),Me)}finally{const Ye=x!==null?z.get(x).__webglFramebuffer:null;K.bindFramebuffer(ie.FRAMEBUFFER,Ye)}}},this.copyFramebufferToTexture=function(k,ne,ce=0){const he=Math.pow(2,-ce),ae=Math.floor(ne.image.width*he),Me=Math.floor(ne.image.height*he);P.setTexture2D(ne,0),ie.copyTexSubImage2D(ie.TEXTURE_2D,ce,0,0,k.x,k.y,ae,Me),K.unbindTexture()},this.copyTextureToTexture=function(k,ne,ce,he=0){const ae=ne.image.width,Me=ne.image.height,Ne=Le.convert(ce.format),ke=Le.convert(ce.type);P.setTexture2D(ce,0),ie.pixelStorei(ie.UNPACK_FLIP_Y_WEBGL,ce.flipY),ie.pixelStorei(ie.UNPACK_PREMULTIPLY_ALPHA_WEBGL,ce.premultiplyAlpha),ie.pixelStorei(ie.UNPACK_ALIGNMENT,ce.unpackAlignment),ne.isDataTexture?ie.texSubImage2D(ie.TEXTURE_2D,he,k.x,k.y,ae,Me,Ne,ke,ne.image.data):ne.isCompressedTexture?ie.compressedTexSubImage2D(ie.TEXTURE_2D,he,k.x,k.y,ne.mipmaps[0].width,ne.mipmaps[0].height,Ne,ne.mipmaps[0].data):ie.texSubImage2D(ie.TEXTURE_2D,he,k.x,k.y,Ne,ke,ne.image),he===0&&ce.generateMipmaps&&ie.generateMipmap(ie.TEXTURE_2D),K.unbindTexture()},this.copyTextureToTexture3D=function(k,ne,ce,he,ae=0){if(T.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const Me=k.max.x-k.min.x+1,Ne=k.max.y-k.min.y+1,ke=k.max.z-k.min.z+1,Ye=Le.convert(he.format),nt=Le.convert(he.type);let Ke;if(he.isData3DTexture)P.setTexture3D(he,0),Ke=ie.TEXTURE_3D;else if(he.isDataArrayTexture||he.isCompressedArrayTexture)P.setTexture2DArray(he,0),Ke=ie.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}ie.pixelStorei(ie.UNPACK_FLIP_Y_WEBGL,he.flipY),ie.pixelStorei(ie.UNPACK_PREMULTIPLY_ALPHA_WEBGL,he.premultiplyAlpha),ie.pixelStorei(ie.UNPACK_ALIGNMENT,he.unpackAlignment);const Qe=ie.getParameter(ie.UNPACK_ROW_LENGTH),Ut=ie.getParameter(ie.UNPACK_IMAGE_HEIGHT),Ai=ie.getParameter(ie.UNPACK_SKIP_PIXELS),Zt=ie.getParameter(ie.UNPACK_SKIP_ROWS),An=ie.getParameter(ie.UNPACK_SKIP_IMAGES),xt=ce.isCompressedTexture?ce.mipmaps[ae]:ce.image;ie.pixelStorei(ie.UNPACK_ROW_LENGTH,xt.width),ie.pixelStorei(ie.UNPACK_IMAGE_HEIGHT,xt.height),ie.pixelStorei(ie.UNPACK_SKIP_PIXELS,k.min.x),ie.pixelStorei(ie.UNPACK_SKIP_ROWS,k.min.y),ie.pixelStorei(ie.UNPACK_SKIP_IMAGES,k.min.z),ce.isDataTexture||ce.isData3DTexture?ie.texSubImage3D(Ke,ae,ne.x,ne.y,ne.z,Me,Ne,ke,Ye,nt,xt.data):ce.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),ie.compressedTexSubImage3D(Ke,ae,ne.x,ne.y,ne.z,Me,Ne,ke,Ye,xt.data)):ie.texSubImage3D(Ke,ae,ne.x,ne.y,ne.z,Me,Ne,ke,Ye,nt,xt),ie.pixelStorei(ie.UNPACK_ROW_LENGTH,Qe),ie.pixelStorei(ie.UNPACK_IMAGE_HEIGHT,Ut),ie.pixelStorei(ie.UNPACK_SKIP_PIXELS,Ai),ie.pixelStorei(ie.UNPACK_SKIP_ROWS,Zt),ie.pixelStorei(ie.UNPACK_SKIP_IMAGES,An),ae===0&&he.generateMipmaps&&ie.generateMipmap(Ke),K.unbindTexture()},this.initTexture=function(k){k.isCubeTexture?P.setTextureCube(k,0):k.isData3DTexture?P.setTexture3D(k,0):k.isDataArrayTexture||k.isCompressedArrayTexture?P.setTexture2DArray(k,0):P.setTexture2D(k,0),K.unbindTexture()},this.resetState=function(){v=0,b=0,x=null,K.reset(),Ue.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Xn}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=e===Wd?"display-p3":"srgb",t.unpackColorSpace=rt.workingColorSpace===zc?"display-p3":"srgb"}get outputEncoding(){return console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace===ni?er:$g}set outputEncoding(e){console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace=e===er?ni:is}get useLegacyLights(){return console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights}set useLegacyLights(e){console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights=e}}class _S extends _a{}_S.prototype.isWebGL1Renderer=!0;class dr extends St{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t}}class TS{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=wu,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.version=0,this.uuid=Jn()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}get updateRange(){return console.warn("THREE.InterleavedBuffer: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead."),this._updateRange}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,i){e*=this.stride,i*=t.stride;for(let n=0,s=this.stride;n<s;n++)this.array[e+n]=t.array[i+n];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Jn()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),i=new this.constructor(t,this.stride);return i.setUsage(this.usage),i}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Jn()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const mi=new F;class vs{constructor(e,t,i,n=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=i,this.normalized=n}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,i=this.data.count;t<i;t++)mi.fromBufferAttribute(this,t),mi.applyMatrix4(e),this.setXYZ(t,mi.x,mi.y,mi.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)mi.fromBufferAttribute(this,t),mi.applyNormalMatrix(e),this.setXYZ(t,mi.x,mi.y,mi.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)mi.fromBufferAttribute(this,t),mi.transformDirection(e),this.setXYZ(t,mi.x,mi.y,mi.z);return this}setX(e,t){return this.normalized&&(t=ut(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=ut(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=ut(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=ut(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=yn(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=yn(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=yn(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=yn(t,this.array)),t}setXY(e,t,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=ut(t,this.array),i=ut(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this}setXYZ(e,t,i,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=ut(t,this.array),i=ut(i,this.array),n=ut(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=n,this}setXYZW(e,t,i,n,s){return e=e*this.data.stride+this.offset,this.normalized&&(t=ut(t,this.array),i=ut(i,this.array),n=ut(n,this.array),s=ut(s,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=n,this.data.array[e+3]=s,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let i=0;i<this.count;i++){const n=i*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[n+s])}return new ot(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new vs(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let i=0;i<this.count;i++){const n=i*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[n+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class vS extends xi{constructor(e=null,t=1,i=1,n,s,o,a,l,c=Et,h=Et,d,u){super(null,o,a,l,c,h,n,s,d,u),this.isDataTexture=!0,this.image={data:e,width:t,height:i},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class qp extends ot{constructor(e,t,i,n=1){super(e,t,i),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const Mr=new fe,Kp=new fe,sl=[],Qp=new je,CS=new fe,Bo=new ge,zo=new vi;class Bi extends ge{constructor(e,t,i){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new qp(new Float32Array(i*16),16),this.instanceColor=null,this.count=i,this.boundingBox=null,this.boundingSphere=null;for(let n=0;n<i;n++)this.setMatrixAt(n,CS)}computeBoundingBox(){const e=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new je),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let i=0;i<t;i++)this.getMatrixAt(i,Mr),Qp.copy(e.boundingBox).applyMatrix4(Mr),this.boundingBox.union(Qp)}computeBoundingSphere(){const e=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new vi),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let i=0;i<t;i++)this.getMatrixAt(i,Mr),zo.copy(e.boundingSphere).applyMatrix4(Mr),this.boundingSphere.union(zo)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}raycast(e,t){const i=this.matrixWorld,n=this.count;if(Bo.geometry=this.geometry,Bo.material=this.material,Bo.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),zo.copy(this.boundingSphere),zo.applyMatrix4(i),e.ray.intersectsSphere(zo)!==!1))for(let s=0;s<n;s++){this.getMatrixAt(s,Mr),Kp.multiplyMatrices(i,Mr),Bo.matrixWorld=Kp,Bo.raycast(e,sl);for(let o=0,a=sl.length;o<a;o++){const l=sl[o];l.instanceId=s,l.object=this,t.push(l)}sl.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new qp(new Float32Array(this.instanceMatrix.count*3),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}class pn extends Fs{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Fe(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const Jp=new F,$p=new F,em=new fe,Nh=new xo,rl=new vi;class Dt extends St{constructor(e=new Ve,t=new pn){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,i=[0];for(let n=1,s=t.count;n<s;n++)Jp.fromBufferAttribute(t,n-1),$p.fromBufferAttribute(t,n),i[n]=i[n-1],i[n]+=Jp.distanceTo($p);e.setAttribute("lineDistance",new ht(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const i=this.geometry,n=this.matrixWorld,s=e.params.Line.threshold,o=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),rl.copy(i.boundingSphere),rl.applyMatrix4(n),rl.radius+=s,e.ray.intersectsSphere(rl)===!1)return;em.copy(n).invert(),Nh.copy(e.ray).applyMatrix4(em);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=new F,h=new F,d=new F,u=new F,f=this.isLineSegments?2:1,m=i.index,g=i.attributes.position;if(m!==null){const p=Math.max(0,o.start),_=Math.min(m.count,o.start+o.count);for(let T=p,I=_-1;T<I;T+=f){const v=m.getX(T),b=m.getX(T+1);if(c.fromBufferAttribute(g,v),h.fromBufferAttribute(g,b),Nh.distanceSqToSegment(c,h,u,d)>l)continue;u.applyMatrix4(this.matrixWorld);const A=e.ray.origin.distanceTo(u);A<e.near||A>e.far||t.push({distance:A,point:d.clone().applyMatrix4(this.matrixWorld),index:T,face:null,faceIndex:null,object:this})}}else{const p=Math.max(0,o.start),_=Math.min(g.count,o.start+o.count);for(let T=p,I=_-1;T<I;T+=f){if(c.fromBufferAttribute(g,T),h.fromBufferAttribute(g,T+1),Nh.distanceSqToSegment(c,h,u,d)>l)continue;u.applyMatrix4(this.matrixWorld);const b=e.ray.origin.distanceTo(u);b<e.near||b>e.far||t.push({distance:b,point:d.clone().applyMatrix4(this.matrixWorld),index:T,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const n=t[i[0]];if(n!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=n.length;s<o;s++){const a=n[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}}const tm=new F,im=new F;class EE extends Dt{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,i=[];for(let n=0,s=t.count;n<s;n+=2)tm.fromBufferAttribute(t,n),im.fromBufferAttribute(t,n+1),i[n]=n===0?0:i[n-1],i[n+1]=i[n]+tm.distanceTo(im);e.setAttribute("lineDistance",new ht(i,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class IE extends Fs{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Fe(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const nm=new fe,Fu=new xo,ol=new vi,al=new F;class yS extends St{constructor(e=new Ve,t=new IE){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const i=this.geometry,n=this.matrixWorld,s=e.params.Points.threshold,o=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),ol.copy(i.boundingSphere),ol.applyMatrix4(n),ol.radius+=s,e.ray.intersectsSphere(ol)===!1)return;nm.copy(n).invert(),Fu.copy(e.ray).applyMatrix4(nm);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=i.index,d=i.attributes.position;if(c!==null){const u=Math.max(0,o.start),f=Math.min(c.count,o.start+o.count);for(let m=u,E=f;m<E;m++){const g=c.getX(m);al.fromBufferAttribute(d,g),sm(al,g,l,n,e,t,this)}}else{const u=Math.max(0,o.start),f=Math.min(d.count,o.start+o.count);for(let m=u,E=f;m<E;m++)al.fromBufferAttribute(d,m),sm(al,m,l,n,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const n=t[i[0]];if(n!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=n.length;s<o;s++){const a=n[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}}function sm(r,e,t,i,n,s,o){const a=Fu.distanceSqToPoint(r);if(a<t){const l=new F;Fu.closestPointToPoint(r,l),l.applyMatrix4(i);const c=n.ray.origin.distanceTo(l);if(c<n.near||c>n.far)return;s.push({distance:c,distanceToRay:Math.sqrt(a),point:l,index:e,face:null,object:o})}}class ti extends Ve{constructor(e=1,t=1,i=1,n=32,s=1,o=!1,a=0,l=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:i,radialSegments:n,heightSegments:s,openEnded:o,thetaStart:a,thetaLength:l};const c=this;n=Math.floor(n),s=Math.floor(s);const h=[],d=[],u=[],f=[];let m=0;const E=[],g=i/2;let p=0;_(),o===!1&&(e>0&&T(!0),t>0&&T(!1)),this.setIndex(h),this.setAttribute("position",new ht(d,3)),this.setAttribute("normal",new ht(u,3)),this.setAttribute("uv",new ht(f,2));function _(){const I=new F,v=new F;let b=0;const x=(t-e)/i;for(let A=0;A<=s;A++){const y=[],S=A/s,O=S*(t-e)+e;for(let w=0;w<=n;w++){const N=w/n,C=N*l+a,U=Math.sin(C),B=Math.cos(C);v.x=O*U,v.y=-S*i+g,v.z=O*B,d.push(v.x,v.y,v.z),I.set(U,x,B).normalize(),u.push(I.x,I.y,I.z),f.push(N,1-S),y.push(m++)}E.push(y)}for(let A=0;A<n;A++)for(let y=0;y<s;y++){const S=E[y][A],O=E[y+1][A],w=E[y+1][A+1],N=E[y][A+1];h.push(S,O,N),h.push(O,w,N),b+=6}c.addGroup(p,b,0),p+=b}function T(I){const v=m,b=new Re,x=new F;let A=0;const y=I===!0?e:t,S=I===!0?1:-1;for(let w=1;w<=n;w++)d.push(0,g*S,0),u.push(0,S,0),f.push(.5,.5),m++;const O=m;for(let w=0;w<=n;w++){const C=w/n*l+a,U=Math.cos(C),B=Math.sin(C);x.x=y*B,x.y=g*S,x.z=y*U,d.push(x.x,x.y,x.z),u.push(0,S,0),b.x=U*.5+.5,b.y=B*.5*S+.5,f.push(b.x,b.y),m++}for(let w=0;w<n;w++){const N=v+w,C=O+w;I===!0?h.push(C,C+1,N):h.push(C+1,C,N),A+=3}c.addGroup(p,A,I===!0?1:2),p+=A}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ti(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Qd extends Ve{constructor(e=[],t=[],i=1,n=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:i,detail:n};const s=[],o=[];a(n),c(i),h(),this.setAttribute("position",new ht(s,3)),this.setAttribute("normal",new ht(s.slice(),3)),this.setAttribute("uv",new ht(o,2)),n===0?this.computeVertexNormals():this.normalizeNormals();function a(_){const T=new F,I=new F,v=new F;for(let b=0;b<t.length;b+=3)f(t[b+0],T),f(t[b+1],I),f(t[b+2],v),l(T,I,v,_)}function l(_,T,I,v){const b=v+1,x=[];for(let A=0;A<=b;A++){x[A]=[];const y=_.clone().lerp(I,A/b),S=T.clone().lerp(I,A/b),O=b-A;for(let w=0;w<=O;w++)w===0&&A===b?x[A][w]=y:x[A][w]=y.clone().lerp(S,w/O)}for(let A=0;A<b;A++)for(let y=0;y<2*(b-A)-1;y++){const S=Math.floor(y/2);y%2===0?(u(x[A][S+1]),u(x[A+1][S]),u(x[A][S])):(u(x[A][S+1]),u(x[A+1][S+1]),u(x[A+1][S]))}}function c(_){const T=new F;for(let I=0;I<s.length;I+=3)T.x=s[I+0],T.y=s[I+1],T.z=s[I+2],T.normalize().multiplyScalar(_),s[I+0]=T.x,s[I+1]=T.y,s[I+2]=T.z}function h(){const _=new F;for(let T=0;T<s.length;T+=3){_.x=s[T+0],_.y=s[T+1],_.z=s[T+2];const I=g(_)/2/Math.PI+.5,v=p(_)/Math.PI+.5;o.push(I,1-v)}m(),d()}function d(){for(let _=0;_<o.length;_+=6){const T=o[_+0],I=o[_+2],v=o[_+4],b=Math.max(T,I,v),x=Math.min(T,I,v);b>.9&&x<.1&&(T<.2&&(o[_+0]+=1),I<.2&&(o[_+2]+=1),v<.2&&(o[_+4]+=1))}}function u(_){s.push(_.x,_.y,_.z)}function f(_,T){const I=_*3;T.x=e[I+0],T.y=e[I+1],T.z=e[I+2]}function m(){const _=new F,T=new F,I=new F,v=new F,b=new Re,x=new Re,A=new Re;for(let y=0,S=0;y<s.length;y+=9,S+=6){_.set(s[y+0],s[y+1],s[y+2]),T.set(s[y+3],s[y+4],s[y+5]),I.set(s[y+6],s[y+7],s[y+8]),b.set(o[S+0],o[S+1]),x.set(o[S+2],o[S+3]),A.set(o[S+4],o[S+5]),v.copy(_).add(T).add(I).divideScalar(3);const O=g(v);E(b,S+0,_,O),E(x,S+2,T,O),E(A,S+4,I,O)}}function E(_,T,I,v){v<0&&_.x===1&&(o[T]=_.x-1),I.x===0&&I.z===0&&(o[T]=v/2/Math.PI+.5)}function g(_){return Math.atan2(_.z,-_.x)}function p(_){return Math.atan2(-_.y,Math.sqrt(_.x*_.x+_.z*_.z))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Qd(e.vertices,e.indices,e.radius,e.details)}}const ll=new F,cl=new F,Dh=new F,hl=new yt;class Jd extends Ve{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const n=Math.pow(10,4),s=Math.cos(po*t),o=e.getIndex(),a=e.getAttribute("position"),l=o?o.count:a.count,c=[0,0,0],h=["a","b","c"],d=new Array(3),u={},f=[];for(let m=0;m<l;m+=3){o?(c[0]=o.getX(m),c[1]=o.getX(m+1),c[2]=o.getX(m+2)):(c[0]=m,c[1]=m+1,c[2]=m+2);const{a:E,b:g,c:p}=hl;if(E.fromBufferAttribute(a,c[0]),g.fromBufferAttribute(a,c[1]),p.fromBufferAttribute(a,c[2]),hl.getNormal(Dh),d[0]=`${Math.round(E.x*n)},${Math.round(E.y*n)},${Math.round(E.z*n)}`,d[1]=`${Math.round(g.x*n)},${Math.round(g.y*n)},${Math.round(g.z*n)}`,d[2]=`${Math.round(p.x*n)},${Math.round(p.y*n)},${Math.round(p.z*n)}`,!(d[0]===d[1]||d[1]===d[2]||d[2]===d[0]))for(let _=0;_<3;_++){const T=(_+1)%3,I=d[_],v=d[T],b=hl[h[_]],x=hl[h[T]],A=`${I}_${v}`,y=`${v}_${I}`;y in u&&u[y]?(Dh.dot(u[y].normal)<=s&&(f.push(b.x,b.y,b.z),f.push(x.x,x.y,x.z)),u[y]=null):A in u||(u[A]={index0:c[_],index1:c[T],normal:Dh.clone()})}}for(const m in u)if(u[m]){const{index0:E,index1:g}=u[m];ll.fromBufferAttribute(a,E),cl.fromBufferAttribute(a,g),f.push(ll.x,ll.y,ll.z),f.push(cl.x,cl.y,cl.z)}this.setAttribute("position",new ht(f,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}const bS={triangulate:function(r,e,t=2){const i=e&&e.length,n=i?e[0]*t:r.length;let s=_E(r,0,n,t,!0);const o=[];if(!s||s.next===s.prev)return o;let a,l,c,h,d,u,f;if(i&&(s=RS(r,e,s,t)),r.length>80*t){a=c=r[0],l=h=r[1];for(let m=t;m<n;m+=t)d=r[m],u=r[m+1],d<a&&(a=d),u<l&&(l=u),d>c&&(c=d),u>h&&(h=u);f=Math.max(c-a,h-l),f=f!==0?32767/f:0}return Ta(s,o,t,a,l,f,0),o}};function _E(r,e,t,i,n){let s,o;if(n===VS(r,e,t,i)>0)for(s=e;s<t;s+=i)o=rm(s,r[s],r[s+1],o);else for(s=t-i;s>=e;s-=i)o=rm(s,r[s],r[s+1],o);return o&&Gc(o,o.next)&&(Ca(o),o=o.next),o}function rr(r,e){if(!r)return r;e||(e=r);let t=r,i;do if(i=!1,!t.steiner&&(Gc(t,t.next)||Ft(t.prev,t,t.next)===0)){if(Ca(t),t=e=t.prev,t===t.next)break;i=!0}else t=t.next;while(i||t!==e);return e}function Ta(r,e,t,i,n,s,o){if(!r)return;!o&&s&&OS(r,i,n,s);let a=r,l,c;for(;r.prev!==r.next;){if(l=r.prev,c=r.next,s?xS(r,i,n,s):SS(r)){e.push(l.i/t|0),e.push(r.i/t|0),e.push(c.i/t|0),Ca(r),r=c.next,a=c.next;continue}if(r=c,r===a){o?o===1?(r=wS(rr(r),e,t),Ta(r,e,t,i,n,s,2)):o===2&&AS(r,e,t,i,n,s):Ta(rr(r),e,t,i,n,s,1);break}}}function SS(r){const e=r.prev,t=r,i=r.next;if(Ft(e,t,i)>=0)return!1;const n=e.x,s=t.x,o=i.x,a=e.y,l=t.y,c=i.y,h=n<s?n<o?n:o:s<o?s:o,d=a<l?a<c?a:c:l<c?l:c,u=n>s?n>o?n:o:s>o?s:o,f=a>l?a>c?a:c:l>c?l:c;let m=i.next;for(;m!==e;){if(m.x>=h&&m.x<=u&&m.y>=d&&m.y<=f&&ro(n,a,s,l,o,c,m.x,m.y)&&Ft(m.prev,m,m.next)>=0)return!1;m=m.next}return!0}function xS(r,e,t,i){const n=r.prev,s=r,o=r.next;if(Ft(n,s,o)>=0)return!1;const a=n.x,l=s.x,c=o.x,h=n.y,d=s.y,u=o.y,f=a<l?a<c?a:c:l<c?l:c,m=h<d?h<u?h:u:d<u?d:u,E=a>l?a>c?a:c:l>c?l:c,g=h>d?h>u?h:u:d>u?d:u,p=Pu(f,m,e,t,i),_=Pu(E,g,e,t,i);let T=r.prevZ,I=r.nextZ;for(;T&&T.z>=p&&I&&I.z<=_;){if(T.x>=f&&T.x<=E&&T.y>=m&&T.y<=g&&T!==n&&T!==o&&ro(a,h,l,d,c,u,T.x,T.y)&&Ft(T.prev,T,T.next)>=0||(T=T.prevZ,I.x>=f&&I.x<=E&&I.y>=m&&I.y<=g&&I!==n&&I!==o&&ro(a,h,l,d,c,u,I.x,I.y)&&Ft(I.prev,I,I.next)>=0))return!1;I=I.nextZ}for(;T&&T.z>=p;){if(T.x>=f&&T.x<=E&&T.y>=m&&T.y<=g&&T!==n&&T!==o&&ro(a,h,l,d,c,u,T.x,T.y)&&Ft(T.prev,T,T.next)>=0)return!1;T=T.prevZ}for(;I&&I.z<=_;){if(I.x>=f&&I.x<=E&&I.y>=m&&I.y<=g&&I!==n&&I!==o&&ro(a,h,l,d,c,u,I.x,I.y)&&Ft(I.prev,I,I.next)>=0)return!1;I=I.nextZ}return!0}function wS(r,e,t){let i=r;do{const n=i.prev,s=i.next.next;!Gc(n,s)&&TE(n,i,i.next,s)&&va(n,s)&&va(s,n)&&(e.push(n.i/t|0),e.push(i.i/t|0),e.push(s.i/t|0),Ca(i),Ca(i.next),i=r=s),i=i.next}while(i!==r);return rr(i)}function AS(r,e,t,i,n,s){let o=r;do{let a=o.next.next;for(;a!==o.prev;){if(o.i!==a.i&&US(o,a)){let l=vE(o,a);o=rr(o,o.next),l=rr(l,l.next),Ta(o,e,t,i,n,s,0),Ta(l,e,t,i,n,s,0);return}a=a.next}o=o.next}while(o!==r)}function RS(r,e,t,i){const n=[];let s,o,a,l,c;for(s=0,o=e.length;s<o;s++)a=e[s]*i,l=s<o-1?e[s+1]*i:r.length,c=_E(r,a,l,i,!1),c===c.next&&(c.steiner=!0),n.push(DS(c));for(n.sort(MS),s=0;s<n.length;s++)t=FS(n[s],t);return t}function MS(r,e){return r.x-e.x}function FS(r,e){const t=PS(r,e);if(!t)return e;const i=vE(t,r);return rr(i,i.next),rr(t,t.next)}function PS(r,e){let t=e,i=-1/0,n;const s=r.x,o=r.y;do{if(o<=t.y&&o>=t.next.y&&t.next.y!==t.y){const u=t.x+(o-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(u<=s&&u>i&&(i=u,n=t.x<t.next.x?t:t.next,u===s))return n}t=t.next}while(t!==e);if(!n)return null;const a=n,l=n.x,c=n.y;let h=1/0,d;t=n;do s>=t.x&&t.x>=l&&s!==t.x&&ro(o<c?s:i,o,l,c,o<c?i:s,o,t.x,t.y)&&(d=Math.abs(o-t.y)/(s-t.x),va(t,r)&&(d<h||d===h&&(t.x>n.x||t.x===n.x&&LS(n,t)))&&(n=t,h=d)),t=t.next;while(t!==a);return n}function LS(r,e){return Ft(r.prev,r,e.prev)<0&&Ft(e.next,r,r.next)<0}function OS(r,e,t,i){let n=r;do n.z===0&&(n.z=Pu(n.x,n.y,e,t,i)),n.prevZ=n.prev,n.nextZ=n.next,n=n.next;while(n!==r);n.prevZ.nextZ=null,n.prevZ=null,NS(n)}function NS(r){let e,t,i,n,s,o,a,l,c=1;do{for(t=r,r=null,s=null,o=0;t;){for(o++,i=t,a=0,e=0;e<c&&(a++,i=i.nextZ,!!i);e++);for(l=c;a>0||l>0&&i;)a!==0&&(l===0||!i||t.z<=i.z)?(n=t,t=t.nextZ,a--):(n=i,i=i.nextZ,l--),s?s.nextZ=n:r=n,n.prevZ=s,s=n;t=i}s.nextZ=null,c*=2}while(o>1);return r}function Pu(r,e,t,i,n){return r=(r-t)*n|0,e=(e-i)*n|0,r=(r|r<<8)&16711935,r=(r|r<<4)&252645135,r=(r|r<<2)&858993459,r=(r|r<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,r|e<<1}function DS(r){let e=r,t=r;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==r);return t}function ro(r,e,t,i,n,s,o,a){return(n-o)*(e-a)>=(r-o)*(s-a)&&(r-o)*(i-a)>=(t-o)*(e-a)&&(t-o)*(s-a)>=(n-o)*(i-a)}function US(r,e){return r.next.i!==e.i&&r.prev.i!==e.i&&!BS(r,e)&&(va(r,e)&&va(e,r)&&zS(r,e)&&(Ft(r.prev,r,e.prev)||Ft(r,e.prev,e))||Gc(r,e)&&Ft(r.prev,r,r.next)>0&&Ft(e.prev,e,e.next)>0)}function Ft(r,e,t){return(e.y-r.y)*(t.x-e.x)-(e.x-r.x)*(t.y-e.y)}function Gc(r,e){return r.x===e.x&&r.y===e.y}function TE(r,e,t,i){const n=dl(Ft(r,e,t)),s=dl(Ft(r,e,i)),o=dl(Ft(t,i,r)),a=dl(Ft(t,i,e));return!!(n!==s&&o!==a||n===0&&ul(r,t,e)||s===0&&ul(r,i,e)||o===0&&ul(t,r,i)||a===0&&ul(t,e,i))}function ul(r,e,t){return e.x<=Math.max(r.x,t.x)&&e.x>=Math.min(r.x,t.x)&&e.y<=Math.max(r.y,t.y)&&e.y>=Math.min(r.y,t.y)}function dl(r){return r>0?1:r<0?-1:0}function BS(r,e){let t=r;do{if(t.i!==r.i&&t.next.i!==r.i&&t.i!==e.i&&t.next.i!==e.i&&TE(t,t.next,r,e))return!0;t=t.next}while(t!==r);return!1}function va(r,e){return Ft(r.prev,r,r.next)<0?Ft(r,e,r.next)>=0&&Ft(r,r.prev,e)>=0:Ft(r,e,r.prev)<0||Ft(r,r.next,e)<0}function zS(r,e){let t=r,i=!1;const n=(r.x+e.x)/2,s=(r.y+e.y)/2;do t.y>s!=t.next.y>s&&t.next.y!==t.y&&n<(t.next.x-t.x)*(s-t.y)/(t.next.y-t.y)+t.x&&(i=!i),t=t.next;while(t!==r);return i}function vE(r,e){const t=new Lu(r.i,r.x,r.y),i=new Lu(e.i,e.x,e.y),n=r.next,s=e.prev;return r.next=e,e.prev=r,t.next=n,n.prev=t,i.next=t,t.prev=i,s.next=i,i.prev=s,i}function rm(r,e,t,i){const n=new Lu(r,e,t);return i?(n.next=i.next,n.prev=i,i.next.prev=n,i.next=n):(n.prev=n,n.next=n),n}function Ca(r){r.next.prev=r.prev,r.prev.next=r.next,r.prevZ&&(r.prevZ.nextZ=r.nextZ),r.nextZ&&(r.nextZ.prevZ=r.prevZ)}function Lu(r,e,t){this.i=r,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function VS(r,e,t,i){let n=0;for(let s=e,o=t-i;s<t;s+=i)n+=(r[o]-r[s])*(r[s+1]+r[o+1]),o=s;return n}class $d{static area(e){const t=e.length;let i=0;for(let n=t-1,s=0;s<t;n=s++)i+=e[n].x*e[s].y-e[s].x*e[n].y;return i*.5}static isClockWise(e){return $d.area(e)<0}static triangulateShape(e,t){const i=[],n=[],s=[];om(e),am(i,e);let o=e.length;t.forEach(om);for(let l=0;l<t.length;l++)n.push(o),o+=t[l].length,am(i,t[l]);const a=bS.triangulate(i,n);for(let l=0;l<a.length;l+=3)s.push(a.slice(l,l+3));return s}}function om(r){const e=r.length;e>2&&r[e-1].equals(r[0])&&r.pop()}function am(r,e){for(let t=0;t<e.length;t++)r.push(e[t].x),r.push(e[t].y)}class oo extends Qd{constructor(e=1,t=0){const i=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],n=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(i,n,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new oo(e.radius,e.detail)}}class ef extends Ve{constructor(e=1,t=32,i=16,n=0,s=Math.PI*2,o=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:i,phiStart:n,phiLength:s,thetaStart:o,thetaLength:a},t=Math.max(3,Math.floor(t)),i=Math.max(2,Math.floor(i));const l=Math.min(o+a,Math.PI);let c=0;const h=[],d=new F,u=new F,f=[],m=[],E=[],g=[];for(let p=0;p<=i;p++){const _=[],T=p/i;let I=0;p===0&&o===0?I=.5/t:p===i&&l===Math.PI&&(I=-.5/t);for(let v=0;v<=t;v++){const b=v/t;d.x=-e*Math.cos(n+b*s)*Math.sin(o+T*a),d.y=e*Math.cos(o+T*a),d.z=e*Math.sin(n+b*s)*Math.sin(o+T*a),m.push(d.x,d.y,d.z),u.copy(d).normalize(),E.push(u.x,u.y,u.z),g.push(b+I,1-T),_.push(c++)}h.push(_)}for(let p=0;p<i;p++)for(let _=0;_<t;_++){const T=h[p][_+1],I=h[p][_],v=h[p+1][_],b=h[p+1][_+1];(p!==0||o>0)&&f.push(T,I,b),(p!==i-1||l<Math.PI)&&f.push(I,v,b)}this.setIndex(f),this.setAttribute("position",new ht(m,3)),this.setAttribute("normal",new ht(E,3)),this.setAttribute("uv",new ht(g,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ef(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class Qs extends Ve{constructor(e=1,t=.4,i=12,n=48,s=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:i,tubularSegments:n,arc:s},i=Math.floor(i),n=Math.floor(n);const o=[],a=[],l=[],c=[],h=new F,d=new F,u=new F;for(let f=0;f<=i;f++)for(let m=0;m<=n;m++){const E=m/n*s,g=f/i*Math.PI*2;d.x=(e+t*Math.cos(g))*Math.cos(E),d.y=(e+t*Math.cos(g))*Math.sin(E),d.z=t*Math.sin(g),a.push(d.x,d.y,d.z),h.x=e*Math.cos(E),h.y=e*Math.sin(E),u.subVectors(d,h).normalize(),l.push(u.x,u.y,u.z),c.push(m/n),c.push(f/i)}for(let f=1;f<=i;f++)for(let m=1;m<=n;m++){const E=(n+1)*f+m-1,g=(n+1)*(f-1)+m-1,p=(n+1)*(f-1)+m,_=(n+1)*f+m;o.push(E,g,_),o.push(g,p,_)}this.setIndex(o),this.setAttribute("position",new ht(a,3)),this.setAttribute("normal",new ht(l,3)),this.setAttribute("uv",new ht(c,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Qs(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class kS extends Ve{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],i=new Set,n=new F,s=new F;if(e.index!==null){const o=e.attributes.position,a=e.index;let l=e.groups;l.length===0&&(l=[{start:0,count:a.count,materialIndex:0}]);for(let c=0,h=l.length;c<h;++c){const d=l[c],u=d.start,f=d.count;for(let m=u,E=u+f;m<E;m+=3)for(let g=0;g<3;g++){const p=a.getX(m+g),_=a.getX(m+(g+1)%3);n.fromBufferAttribute(o,p),s.fromBufferAttribute(o,_),lm(n,s,i)===!0&&(t.push(n.x,n.y,n.z),t.push(s.x,s.y,s.z))}}}else{const o=e.attributes.position;for(let a=0,l=o.count/3;a<l;a++)for(let c=0;c<3;c++){const h=3*a+c,d=3*a+(c+1)%3;n.fromBufferAttribute(o,h),s.fromBufferAttribute(o,d),lm(n,s,i)===!0&&(t.push(n.x,n.y,n.z),t.push(s.x,s.y,s.z))}}this.setAttribute("position",new ht(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function lm(r,e,t){const i=`${r.x},${r.y},${r.z}-${e.x},${e.y},${e.z}`,n=`${e.x},${e.y},${e.z}-${r.x},${r.y},${r.z}`;return t.has(i)===!0||t.has(n)===!0?!1:(t.add(i),t.add(n),!0)}class dF extends Fs{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Fe(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Fe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Hd,this.normalScale=new Re(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class vo extends Fs{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Fe(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Fe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Hd,this.normalScale=new Re(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=kd,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class CE extends St{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new Fe(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}const Uh=new fe,cm=new F,hm=new F;class GS{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new Re(512,512),this.map=null,this.mapPass=null,this.matrix=new fe,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Zd,this._frameExtents=new Re(1,1),this._viewportCount=1,this._viewports=[new bt(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,i=this.matrix;cm.setFromMatrixPosition(e.matrixWorld),t.position.copy(cm),hm.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(hm),t.updateMatrixWorld(),Uh.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Uh),i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),i.multiply(Uh)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class HS extends GS{constructor(){super(new wn(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class fF extends CE{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(St.DEFAULT_UP),this.updateMatrix(),this.target=new St,this.shadow=new HS}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class pF extends CE{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class WS extends Ve{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class yE{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=um(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=um();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function um(){return(typeof performance>"u"?Date:performance).now()}class Ou extends TS{constructor(e,t,i=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class Hc{constructor(e,t,i=0,n=1/0){this.ray=new xo(e,t),this.near=i,this.far=n,this.camera=null,this.layers=new Xd,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,i=[]){return Nu(e,this,i,t),i.sort(dm),i}intersectObjects(e,t=!0,i=[]){for(let n=0,s=e.length;n<s;n++)Nu(e[n],this,i,t);return i.sort(dm),i}}function dm(r,e){return r.distance-e.distance}function Nu(r,e,t,i){if(r.layers.test(e.layers)&&r.raycast(e,t),i===!0){const n=r.children;for(let s=0,o=n.length;s<o;s++)Nu(n[s],e,t,!0)}}class YS{constructor(e=1,t=0,i=0){return this.radius=e,this.phi=t,this.theta=i,this}set(e,t,i){return this.radius=e,this.phi=t,this.theta=i,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,i){return this.radius=Math.sqrt(e*e+t*t+i*i),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,i),this.phi=Math.acos(oi(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}const fm=new F,fl=new F;class Ot{constructor(e=new F,t=new F){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){fm.subVectors(e,this.start),fl.subVectors(this.end,this.start);const i=fl.dot(fl);let s=fl.dot(fm)/i;return t&&(s=oi(s,0,1)),s}closestPointToPoint(e,t,i){const n=this.closestPointToPointParameter(e,t);return this.delta(i).multiplyScalar(n).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Vd}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Vd);var XS=Object.defineProperty,ZS=(r,e,t)=>e in r?XS(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,we=(r,e,t)=>(ZS(r,typeof e!="symbol"?e+"":e,t),t);class Ac extends Bi{constructor(e,t,i,n){if(super(e,t,i),we(this,"fragment"),we(this,"material"),we(this,"geometry"),Array.isArray(t)||(t=[t]),this.material=t,!e.index)throw new Error("The geometry for fragments must be indexed!");this.geometry=e,this.fragment=n;const s=e.index.count;e.groups.length||e.groups.push({start:0,count:s,materialIndex:0})}exportData(){const e=this.geometry.attributes.position.array,t=this.geometry.attributes.normal.array,i=Array.from(this.geometry.index.array),n=[];for(const l of this.geometry.groups){const c=l.materialIndex||0,{start:h,count:d}=l;n.push(h,d,c)}const s=[];if(Array.isArray(this.material))for(const l of this.material){const c=l.opacity,h=l.transparent?1:0,d=new Fe(l.color).toArray();s.push(c,h,...d)}const o=Array.from(this.instanceMatrix.array);let a;return this.instanceColor!==null?a=Array.from(this.instanceColor.array):a=[],{position:e,normal:t,index:i,groups:n,materials:s,matrices:o,colors:a}}clone(e){throw new Error("Fragment meshes can't be cloned directly. Use mesh.fragment.clone instead!")}}const bE=0,jS=1,qS=2,pm=2,Bh=1.25,mm=1,dc=6*4+4+4,Wc=65535,KS=Math.pow(2,-24),zh=Symbol("SKIP_GENERATION");function QS(r){return r.index?r.index.count:r.attributes.position.count}function Ro(r){return QS(r)/3}function JS(r,e=ArrayBuffer){return r>65535?new Uint32Array(new e(4*r)):new Uint16Array(new e(2*r))}function $S(r,e){if(!r.index){const t=r.attributes.position.count,i=e.useSharedArrayBuffer?SharedArrayBuffer:ArrayBuffer,n=JS(t,i);r.setIndex(new ot(n,1));for(let s=0;s<t;s++)n[s]=s}}function SE(r){const e=Ro(r),t=r.drawRange,i=t.start/3,n=(t.start+t.count)/3,s=Math.max(0,i),o=Math.min(e,n)-s;return[{offset:Math.floor(s),count:Math.floor(o)}]}function xE(r){if(!r.groups||!r.groups.length)return SE(r);const e=[],t=new Set,i=r.drawRange,n=i.start/3,s=(i.start+i.count)/3;for(const a of r.groups){const l=a.start/3,c=(a.start+a.count)/3;t.add(Math.max(n,l)),t.add(Math.min(s,c))}const o=Array.from(t.values()).sort((a,l)=>a-l);for(let a=0;a<o.length-1;a++){const l=o[a],c=o[a+1];e.push({offset:Math.floor(l),count:Math.floor(c-l)})}return e}function ex(r){if(r.groups.length===0)return!1;const e=Ro(r),t=xE(r).sort((s,o)=>s.offset-o.offset),i=t[t.length-1];i.count=Math.min(e-i.offset,i.count);let n=0;return t.forEach(({count:s})=>n+=s),e!==n}function At(r,e,t){return t.min.x=e[r],t.min.y=e[r+1],t.min.z=e[r+2],t.max.x=e[r+3],t.max.y=e[r+4],t.max.z=e[r+5],t}function tx(r){r[0]=r[1]=r[2]=1/0,r[3]=r[4]=r[5]=-1/0}function gm(r){let e=-1,t=-1/0;for(let i=0;i<3;i++){const n=r[i+3]-r[i];n>t&&(t=n,e=i)}return e}function Em(r,e){e.set(r)}function Im(r,e,t){let i,n;for(let s=0;s<3;s++){const o=s+3;i=r[s],n=e[s],t[s]=i<n?i:n,i=r[o],n=e[o],t[o]=i>n?i:n}}function pl(r,e,t){for(let i=0;i<3;i++){const n=e[r+2*i],s=e[r+2*i+1],o=n-s,a=n+s;o<t[i]&&(t[i]=o),a>t[i+3]&&(t[i+3]=a)}}function Vo(r){const e=r[3]-r[0],t=r[4]-r[1],i=r[5]-r[2];return 2*(e*t+t*i+i*e)}function Vh(r,e,t,i,n=null){let s=1/0,o=1/0,a=1/0,l=-1/0,c=-1/0,h=-1/0,d=1/0,u=1/0,f=1/0,m=-1/0,E=-1/0,g=-1/0;const p=n!==null;for(let _=e*6,T=(e+t)*6;_<T;_+=6){const I=r[_+0],v=r[_+1],b=I-v,x=I+v;b<s&&(s=b),x>l&&(l=x),p&&I<d&&(d=I),p&&I>m&&(m=I);const A=r[_+2],y=r[_+3],S=A-y,O=A+y;S<o&&(o=S),O>c&&(c=O),p&&A<u&&(u=A),p&&A>E&&(E=A);const w=r[_+4],N=r[_+5],C=w-N,U=w+N;C<a&&(a=C),U>h&&(h=U),p&&w<f&&(f=w),p&&w>g&&(g=w)}i[0]=s,i[1]=o,i[2]=a,i[3]=l,i[4]=c,i[5]=h,p&&(n[0]=d,n[1]=u,n[2]=f,n[3]=m,n[4]=E,n[5]=g)}function ix(r,e,t,i){let n=1/0,s=1/0,o=1/0,a=-1/0,l=-1/0,c=-1/0;for(let h=e*6,d=(e+t)*6;h<d;h+=6){const u=r[h+0];u<n&&(n=u),u>a&&(a=u);const f=r[h+2];f<s&&(s=f),f>l&&(l=f);const m=r[h+4];m<o&&(o=m),m>c&&(c=m)}i[0]=n,i[1]=s,i[2]=o,i[3]=a,i[4]=l,i[5]=c}function nx(r,e){tx(e);const t=r.attributes.position,i=r.index?r.index.array:null,n=Ro(r),s=new Float32Array(n*6),o=t.normalized,a=t.array,l=t.offset||0;let c=3;t.isInterleavedBufferAttribute&&(c=t.data.stride);const h=["getX","getY","getZ"];for(let d=0;d<n;d++){const u=d*3,f=d*6;let m=u+0,E=u+1,g=u+2;i&&(m=i[m],E=i[E],g=i[g]),o||(m=m*c+l,E=E*c+l,g=g*c+l);for(let p=0;p<3;p++){let _,T,I;o?(_=t[h[p]](m),T=t[h[p]](E),I=t[h[p]](g)):(_=a[m+p],T=a[E+p],I=a[g+p]);let v=_;T<v&&(v=T),I<v&&(v=I);let b=_;T>b&&(b=T),I>b&&(b=I);const x=(b-v)/2,A=p*2;s[f+A+0]=v+x,s[f+A+1]=x+(Math.abs(v)+x)*KS,v<e[p]&&(e[p]=v),b>e[p+3]&&(e[p+3]=b)}}return s}const Dn=32,sx=(r,e)=>r.candidate-e.candidate,us=new Array(Dn).fill().map(()=>({count:0,bounds:new Float32Array(6),rightCacheBounds:new Float32Array(6),leftCacheBounds:new Float32Array(6),candidate:0})),ml=new Float32Array(6);function rx(r,e,t,i,n,s){let o=-1,a=0;if(s===bE)o=gm(e),o!==-1&&(a=(e[o]+e[o+3])/2);else if(s===jS)o=gm(r),o!==-1&&(a=ox(t,i,n,o));else if(s===qS){const l=Vo(r);let c=Bh*n;const h=i*6,d=(i+n)*6;for(let u=0;u<3;u++){const f=e[u],g=(e[u+3]-f)/Dn;if(n<Dn/4){const p=[...us];p.length=n;let _=0;for(let I=h;I<d;I+=6,_++){const v=p[_];v.candidate=t[I+2*u],v.count=0;const{bounds:b,leftCacheBounds:x,rightCacheBounds:A}=v;for(let y=0;y<3;y++)A[y]=1/0,A[y+3]=-1/0,x[y]=1/0,x[y+3]=-1/0,b[y]=1/0,b[y+3]=-1/0;pl(I,t,b)}p.sort(sx);let T=n;for(let I=0;I<T;I++){const v=p[I];for(;I+1<T&&p[I+1].candidate===v.candidate;)p.splice(I+1,1),T--}for(let I=h;I<d;I+=6){const v=t[I+2*u];for(let b=0;b<T;b++){const x=p[b];v>=x.candidate?pl(I,t,x.rightCacheBounds):(pl(I,t,x.leftCacheBounds),x.count++)}}for(let I=0;I<T;I++){const v=p[I],b=v.count,x=n-v.count,A=v.leftCacheBounds,y=v.rightCacheBounds;let S=0;b!==0&&(S=Vo(A)/l);let O=0;x!==0&&(O=Vo(y)/l);const w=mm+Bh*(S*b+O*x);w<c&&(o=u,c=w,a=v.candidate)}}else{for(let T=0;T<Dn;T++){const I=us[T];I.count=0,I.candidate=f+g+T*g;const v=I.bounds;for(let b=0;b<3;b++)v[b]=1/0,v[b+3]=-1/0}for(let T=h;T<d;T+=6){let b=~~((t[T+2*u]-f)/g);b>=Dn&&(b=Dn-1);const x=us[b];x.count++,pl(T,t,x.bounds)}const p=us[Dn-1];Em(p.bounds,p.rightCacheBounds);for(let T=Dn-2;T>=0;T--){const I=us[T],v=us[T+1];Im(I.bounds,v.rightCacheBounds,I.rightCacheBounds)}let _=0;for(let T=0;T<Dn-1;T++){const I=us[T],v=I.count,b=I.bounds,A=us[T+1].rightCacheBounds;v!==0&&(_===0?Em(b,ml):Im(b,ml,ml)),_+=v;let y=0,S=0;_!==0&&(y=Vo(ml)/l);const O=n-_;O!==0&&(S=Vo(A)/l);const w=mm+Bh*(y*_+S*O);w<c&&(o=u,c=w,a=I.candidate)}}}}else console.warn(`MeshBVH: Invalid build strategy value ${s} used.`);return{axis:o,pos:a}}function ox(r,e,t,i){let n=0;for(let s=e,o=e+t;s<o;s++)n+=r[s*6+i*2];return n/t}class gl{constructor(){}}function ax(r,e,t,i,n,s){let o=i,a=i+n-1;const l=s.pos,c=s.axis*2;for(;;){for(;o<=a&&t[o*6+c]<l;)o++;for(;o<=a&&t[a*6+c]>=l;)a--;if(o<a){for(let h=0;h<3;h++){let d=e[o*3+h];e[o*3+h]=e[a*3+h],e[a*3+h]=d}for(let h=0;h<6;h++){let d=t[o*6+h];t[o*6+h]=t[a*6+h],t[a*6+h]=d}o++,a--}else return o}}function lx(r,e,t,i,n,s){let o=i,a=i+n-1;const l=s.pos,c=s.axis*2;for(;;){for(;o<=a&&t[o*6+c]<l;)o++;for(;o<=a&&t[a*6+c]>=l;)a--;if(o<a){let h=r[o];r[o]=r[a],r[a]=h;for(let d=0;d<6;d++){let u=t[o*6+d];t[o*6+d]=t[a*6+d],t[a*6+d]=u}o++,a--}else return o}}function cx(r,e){const t=(r.index?r.index.count:r.attributes.position.count)/3,i=t>2**16,n=i?4:2,s=e?new SharedArrayBuffer(t*n):new ArrayBuffer(t*n),o=i?new Uint32Array(s):new Uint16Array(s);for(let a=0,l=o.length;a<l;a++)o[a]=a;return o}function hx(r,e){const t=r.geometry,i=t.index?t.index.array:null,n=e.maxDepth,s=e.verbose,o=e.maxLeafTris,a=e.strategy,l=e.onProgress,c=Ro(t),h=r._indirectBuffer;let d=!1;const u=new Float32Array(6),f=new Float32Array(6),m=nx(t,u),E=e.indirect?lx:ax,g=[],p=e.indirect?SE(t):xE(t);if(p.length===1){const I=p[0],v=new gl;v.boundingData=u,ix(m,I.offset,I.count,f),T(v,I.offset,I.count,f),g.push(v)}else for(let I of p){const v=new gl;v.boundingData=new Float32Array(6),Vh(m,I.offset,I.count,v.boundingData,f),T(v,I.offset,I.count,f),g.push(v)}return g;function _(I){l&&l(I/c)}function T(I,v,b,x=null,A=0){if(!d&&A>=n&&(d=!0,s&&(console.warn(`MeshBVH: Max depth of ${n} reached when generating BVH. Consider increasing maxDepth.`),console.warn(t))),b<=o||A>=n)return _(v+b),I.offset=v,I.count=b,I;const y=rx(I.boundingData,x,m,v,b,a);if(y.axis===-1)return _(v+b),I.offset=v,I.count=b,I;const S=E(h,i,m,v,b,y);if(S===v||S===v+b)_(v+b),I.offset=v,I.count=b;else{I.splitAxis=y.axis;const O=new gl,w=v,N=S-v;I.left=O,O.boundingData=new Float32Array(6),Vh(m,w,N,O.boundingData,f),T(O,w,N,f,A+1);const C=new gl,U=S,B=b-N;I.right=C,C.boundingData=new Float32Array(6),Vh(m,U,B,C.boundingData,f),T(C,U,B,f,A+1)}return I}}function ux(r,e){const t=r.geometry;e.indirect&&(r._indirectBuffer=cx(t,e.useSharedArrayBuffer),ex(t)&&!e.verbose&&console.warn('MeshBVH: Provided geometry contains groups that do not fully span the vertex contents while using the "indirect" option. BVH may incorrectly report intersections on unrendered portions of the geometry.')),r._indirectBuffer||$S(t,e);const i=hx(r,e);let n,s,o;const a=[],l=e.useSharedArrayBuffer?SharedArrayBuffer:ArrayBuffer;for(let d=0;d<i.length;d++){const u=i[d];let f=c(u);const m=new l(dc*f);n=new Float32Array(m),s=new Uint32Array(m),o=new Uint16Array(m),h(0,u),a.push(m)}r._roots=a;return;function c(d){return d.count?1:1+c(d.left)+c(d.right)}function h(d,u){const f=d/4,m=d/2,E=!!u.count,g=u.boundingData;for(let p=0;p<6;p++)n[f+p]=g[p];if(E){const p=u.offset,_=u.count;return s[f+6]=p,o[m+14]=_,o[m+15]=Wc,d+dc}else{const p=u.left,_=u.right,T=u.splitAxis;let I;if(I=h(d+dc,p),I/4>Math.pow(2,32))throw new Error("MeshBVH: Cannot store child pointer greater than 32 bits.");return s[f+6]=I/4,I=h(I,_),s[f+7]=T,I}}}class ns{constructor(){this.min=1/0,this.max=-1/0}setFromPointsField(e,t){let i=1/0,n=-1/0;for(let s=0,o=e.length;s<o;s++){const l=e[s][t];i=l<i?l:i,n=l>n?l:n}this.min=i,this.max=n}setFromPoints(e,t){let i=1/0,n=-1/0;for(let s=0,o=t.length;s<o;s++){const a=t[s],l=e.dot(a);i=l<i?l:i,n=l>n?l:n}this.min=i,this.max=n}isSeparated(e){return this.min>e.max||e.min>this.max}}ns.prototype.setFromBox=function(){const r=new F;return function(t,i){const n=i.min,s=i.max;let o=1/0,a=-1/0;for(let l=0;l<=1;l++)for(let c=0;c<=1;c++)for(let h=0;h<=1;h++){r.x=n.x*l+s.x*(1-l),r.y=n.y*c+s.y*(1-c),r.z=n.z*h+s.z*(1-h);const d=t.dot(r);o=Math.min(d,o),a=Math.max(d,a)}this.min=o,this.max=a}}();const dx=function(){const r=new F,e=new F,t=new F;return function(n,s,o){const a=n.start,l=r,c=s.start,h=e;t.subVectors(a,c),r.subVectors(n.end,n.start),e.subVectors(s.end,s.start);const d=t.dot(h),u=h.dot(l),f=h.dot(h),m=t.dot(l),g=l.dot(l)*f-u*u;let p,_;g!==0?p=(d*u-m*f)/g:p=0,_=(d+p*u)/f,o.x=p,o.y=_}}(),tf=function(){const r=new Re,e=new F,t=new F;return function(n,s,o,a){dx(n,s,r);let l=r.x,c=r.y;if(l>=0&&l<=1&&c>=0&&c<=1){n.at(l,o),s.at(c,a);return}else if(l>=0&&l<=1){c<0?s.at(0,a):s.at(1,a),n.closestPointToPoint(a,!0,o);return}else if(c>=0&&c<=1){l<0?n.at(0,o):n.at(1,o),s.closestPointToPoint(o,!0,a);return}else{let h;l<0?h=n.start:h=n.end;let d;c<0?d=s.start:d=s.end;const u=e,f=t;if(n.closestPointToPoint(d,!0,e),s.closestPointToPoint(h,!0,t),u.distanceToSquared(d)<=f.distanceToSquared(h)){o.copy(u),a.copy(d);return}else{o.copy(h),a.copy(f);return}}}}(),fx=function(){const r=new F,e=new F,t=new Kt,i=new Ot;return function(s,o){const{radius:a,center:l}=s,{a:c,b:h,c:d}=o;if(i.start=c,i.end=h,i.closestPointToPoint(l,!0,r).distanceTo(l)<=a||(i.start=c,i.end=d,i.closestPointToPoint(l,!0,r).distanceTo(l)<=a)||(i.start=h,i.end=d,i.closestPointToPoint(l,!0,r).distanceTo(l)<=a))return!0;const E=o.getPlane(t);if(Math.abs(E.distanceToPoint(l))<=a){const p=E.projectPoint(l,e);if(o.containsPoint(p))return!0}return!1}}(),px=1e-15;function kh(r){return Math.abs(r)<px}class un extends yt{constructor(...e){super(...e),this.isExtendedTriangle=!0,this.satAxes=new Array(4).fill().map(()=>new F),this.satBounds=new Array(4).fill().map(()=>new ns),this.points=[this.a,this.b,this.c],this.sphere=new vi,this.plane=new Kt,this.needsUpdate=!0}intersectsSphere(e){return fx(e,this)}update(){const e=this.a,t=this.b,i=this.c,n=this.points,s=this.satAxes,o=this.satBounds,a=s[0],l=o[0];this.getNormal(a),l.setFromPoints(a,n);const c=s[1],h=o[1];c.subVectors(e,t),h.setFromPoints(c,n);const d=s[2],u=o[2];d.subVectors(t,i),u.setFromPoints(d,n);const f=s[3],m=o[3];f.subVectors(i,e),m.setFromPoints(f,n),this.sphere.setFromPoints(this.points),this.plane.setFromNormalAndCoplanarPoint(a,e),this.needsUpdate=!1}}un.prototype.closestPointToSegment=function(){const r=new F,e=new F,t=new Ot;return function(n,s=null,o=null){const{start:a,end:l}=n,c=this.points;let h,d=1/0;for(let u=0;u<3;u++){const f=(u+1)%3;t.start.copy(c[u]),t.end.copy(c[f]),tf(t,n,r,e),h=r.distanceToSquared(e),h<d&&(d=h,s&&s.copy(r),o&&o.copy(e))}return this.closestPointToPoint(a,r),h=a.distanceToSquared(r),h<d&&(d=h,s&&s.copy(r),o&&o.copy(a)),this.closestPointToPoint(l,r),h=l.distanceToSquared(r),h<d&&(d=h,s&&s.copy(r),o&&o.copy(l)),Math.sqrt(d)}}();un.prototype.intersectsTriangle=function(){const r=new un,e=new Array(3),t=new Array(3),i=new ns,n=new ns,s=new F,o=new F,a=new F,l=new F,c=new F,h=new Ot,d=new Ot,u=new Ot,f=new F;function m(E,g,p){const _=E.points;let T=0,I=-1;for(let v=0;v<3;v++){const{start:b,end:x}=h;b.copy(_[v]),x.copy(_[(v+1)%3]),h.delta(o);const A=kh(g.distanceToPoint(b));if(kh(g.normal.dot(o))&&A){p.copy(h),T=2;break}const y=g.intersectLine(h,f);if(!y&&A&&f.copy(b),(y||A)&&!kh(f.distanceTo(x))){if(T<=1)(T===1?p.start:p.end).copy(f),A&&(I=T);else if(T>=2){(I===1?p.start:p.end).copy(f),T=2;break}if(T++,T===2&&I===-1)break}}return T}return function(g,p=null,_=!1){this.needsUpdate&&this.update(),g.isExtendedTriangle?g.needsUpdate&&g.update():(r.copy(g),r.update(),g=r);const T=this.plane,I=g.plane;if(Math.abs(T.normal.dot(I.normal))>1-1e-10){const v=this.satBounds,b=this.satAxes;t[0]=g.a,t[1]=g.b,t[2]=g.c;for(let y=0;y<4;y++){const S=v[y],O=b[y];if(i.setFromPoints(O,t),S.isSeparated(i))return!1}const x=g.satBounds,A=g.satAxes;e[0]=this.a,e[1]=this.b,e[2]=this.c;for(let y=0;y<4;y++){const S=x[y],O=A[y];if(i.setFromPoints(O,e),S.isSeparated(i))return!1}for(let y=0;y<4;y++){const S=b[y];for(let O=0;O<4;O++){const w=A[O];if(s.crossVectors(S,w),i.setFromPoints(s,e),n.setFromPoints(s,t),i.isSeparated(n))return!1}}return p&&(_||console.warn("ExtendedTriangle.intersectsTriangle: Triangles are coplanar which does not support an output edge. Setting edge to 0, 0, 0."),p.start.set(0,0,0),p.end.set(0,0,0)),!0}else{const v=m(this,I,d);if(v===1&&g.containsPoint(d.end))return p&&(p.start.copy(d.end),p.end.copy(d.end)),!0;if(v!==2)return!1;const b=m(g,T,u);if(b===1&&this.containsPoint(u.end))return p&&(p.start.copy(u.end),p.end.copy(u.end)),!0;if(b!==2)return!1;if(d.delta(a),u.delta(l),a.dot(l)<0){let N=u.start;u.start=u.end,u.end=N}const x=d.start.dot(a),A=d.end.dot(a),y=u.start.dot(a),S=u.end.dot(a),O=A<y,w=x<S;return x!==S&&y!==A&&O===w?!1:(p&&(c.subVectors(d.start,u.start),c.dot(a)>0?p.start.copy(d.start):p.start.copy(u.start),c.subVectors(d.end,u.end),c.dot(a)<0?p.end.copy(d.end):p.end.copy(u.end)),!0)}}}();un.prototype.distanceToPoint=function(){const r=new F;return function(t){return this.closestPointToPoint(t,r),t.distanceTo(r)}}();un.prototype.distanceToTriangle=function(){const r=new F,e=new F,t=["a","b","c"],i=new Ot,n=new Ot;return function(o,a=null,l=null){const c=a||l?i:null;if(this.intersectsTriangle(o,c))return(a||l)&&(a&&c.getCenter(a),l&&c.getCenter(l)),0;let h=1/0;for(let d=0;d<3;d++){let u;const f=t[d],m=o[f];this.closestPointToPoint(m,r),u=m.distanceToSquared(r),u<h&&(h=u,a&&a.copy(r),l&&l.copy(m));const E=this[f];o.closestPointToPoint(E,r),u=E.distanceToSquared(r),u<h&&(h=u,a&&a.copy(E),l&&l.copy(r))}for(let d=0;d<3;d++){const u=t[d],f=t[(d+1)%3];i.set(this[u],this[f]);for(let m=0;m<3;m++){const E=t[m],g=t[(m+1)%3];n.set(o[E],o[g]),tf(i,n,r,e);const p=r.distanceToSquared(e);p<h&&(h=p,a&&a.copy(r),l&&l.copy(e))}}return Math.sqrt(h)}}();class Ci{constructor(e,t,i){this.isOrientedBox=!0,this.min=new F,this.max=new F,this.matrix=new fe,this.invMatrix=new fe,this.points=new Array(8).fill().map(()=>new F),this.satAxes=new Array(3).fill().map(()=>new F),this.satBounds=new Array(3).fill().map(()=>new ns),this.alignedSatBounds=new Array(3).fill().map(()=>new ns),this.needsUpdate=!1,e&&this.min.copy(e),t&&this.max.copy(t),i&&this.matrix.copy(i)}set(e,t,i){this.min.copy(e),this.max.copy(t),this.matrix.copy(i),this.needsUpdate=!0}copy(e){this.min.copy(e.min),this.max.copy(e.max),this.matrix.copy(e.matrix),this.needsUpdate=!0}}Ci.prototype.update=function(){return function(){const e=this.matrix,t=this.min,i=this.max,n=this.points;for(let c=0;c<=1;c++)for(let h=0;h<=1;h++)for(let d=0;d<=1;d++){const u=1*c|2*h|4*d,f=n[u];f.x=c?i.x:t.x,f.y=h?i.y:t.y,f.z=d?i.z:t.z,f.applyMatrix4(e)}const s=this.satBounds,o=this.satAxes,a=n[0];for(let c=0;c<3;c++){const h=o[c],d=s[c],u=1<<c,f=n[u];h.subVectors(a,f),d.setFromPoints(h,n)}const l=this.alignedSatBounds;l[0].setFromPointsField(n,"x"),l[1].setFromPointsField(n,"y"),l[2].setFromPointsField(n,"z"),this.invMatrix.copy(this.matrix).invert(),this.needsUpdate=!1}}();Ci.prototype.intersectsBox=function(){const r=new ns;return function(t){this.needsUpdate&&this.update();const i=t.min,n=t.max,s=this.satBounds,o=this.satAxes,a=this.alignedSatBounds;if(r.min=i.x,r.max=n.x,a[0].isSeparated(r)||(r.min=i.y,r.max=n.y,a[1].isSeparated(r))||(r.min=i.z,r.max=n.z,a[2].isSeparated(r)))return!1;for(let l=0;l<3;l++){const c=o[l],h=s[l];if(r.setFromBox(c,t),h.isSeparated(r))return!1}return!0}}();Ci.prototype.intersectsTriangle=function(){const r=new un,e=new Array(3),t=new ns,i=new ns,n=new F;return function(o){this.needsUpdate&&this.update(),o.isExtendedTriangle?o.needsUpdate&&o.update():(r.copy(o),r.update(),o=r);const a=this.satBounds,l=this.satAxes;e[0]=o.a,e[1]=o.b,e[2]=o.c;for(let u=0;u<3;u++){const f=a[u],m=l[u];if(t.setFromPoints(m,e),f.isSeparated(t))return!1}const c=o.satBounds,h=o.satAxes,d=this.points;for(let u=0;u<3;u++){const f=c[u],m=h[u];if(t.setFromPoints(m,d),f.isSeparated(t))return!1}for(let u=0;u<3;u++){const f=l[u];for(let m=0;m<4;m++){const E=h[m];if(n.crossVectors(f,E),t.setFromPoints(n,e),i.setFromPoints(n,d),t.isSeparated(i))return!1}}return!0}}();Ci.prototype.closestPointToPoint=function(){return function(e,t){return this.needsUpdate&&this.update(),t.copy(e).applyMatrix4(this.invMatrix).clamp(this.min,this.max).applyMatrix4(this.matrix),t}}();Ci.prototype.distanceToPoint=function(){const r=new F;return function(t){return this.closestPointToPoint(t,r),t.distanceTo(r)}}();Ci.prototype.distanceToBox=function(){const r=["x","y","z"],e=new Array(12).fill().map(()=>new Ot),t=new Array(12).fill().map(()=>new Ot),i=new F,n=new F;return function(o,a=0,l=null,c=null){if(this.needsUpdate&&this.update(),this.intersectsBox(o))return(l||c)&&(o.getCenter(n),this.closestPointToPoint(n,i),o.closestPointToPoint(i,n),l&&l.copy(i),c&&c.copy(n)),0;const h=a*a,d=o.min,u=o.max,f=this.points;let m=1/0;for(let g=0;g<8;g++){const p=f[g];n.copy(p).clamp(d,u);const _=p.distanceToSquared(n);if(_<m&&(m=_,l&&l.copy(p),c&&c.copy(n),_<h))return Math.sqrt(_)}let E=0;for(let g=0;g<3;g++)for(let p=0;p<=1;p++)for(let _=0;_<=1;_++){const T=(g+1)%3,I=(g+2)%3,v=p<<T|_<<I,b=1<<g|p<<T|_<<I,x=f[v],A=f[b];e[E].set(x,A);const S=r[g],O=r[T],w=r[I],N=t[E],C=N.start,U=N.end;C[S]=d[S],C[O]=p?d[O]:u[O],C[w]=_?d[w]:u[O],U[S]=u[S],U[O]=p?d[O]:u[O],U[w]=_?d[w]:u[O],E++}for(let g=0;g<=1;g++)for(let p=0;p<=1;p++)for(let _=0;_<=1;_++){n.x=g?u.x:d.x,n.y=p?u.y:d.y,n.z=_?u.z:d.z,this.closestPointToPoint(n,i);const T=n.distanceToSquared(i);if(T<m&&(m=T,l&&l.copy(i),c&&c.copy(n),T<h))return Math.sqrt(T)}for(let g=0;g<12;g++){const p=e[g];for(let _=0;_<12;_++){const T=t[_];tf(p,T,i,n);const I=i.distanceToSquared(n);if(I<m&&(m=I,l&&l.copy(i),c&&c.copy(n),I<h))return Math.sqrt(I)}}return Math.sqrt(m)}}();class nf{constructor(e){this._getNewPrimitive=e,this._primitives=[]}getPrimitive(){const e=this._primitives;return e.length===0?this._getNewPrimitive():e.pop()}releasePrimitive(e){this._primitives.push(e)}}class mx extends nf{constructor(){super(()=>new un)}}const Wi=new mx;function Oi(r,e){return e[r+15]===65535}function Di(r,e){return e[r+6]}function Yi(r,e){return e[r+14]}function Xi(r){return r+8}function Zi(r,e){return e[r+6]}function wE(r,e){return e[r+7]}class gx{constructor(){this.float32Array=null,this.uint16Array=null,this.uint32Array=null;const e=[];let t=null;this.setBuffer=i=>{t&&e.push(t),t=i,this.float32Array=new Float32Array(i),this.uint16Array=new Uint16Array(i),this.uint32Array=new Uint32Array(i)},this.clearBuffer=()=>{t=null,this.float32Array=null,this.uint16Array=null,this.uint32Array=null,e.length!==0&&this.setBuffer(e.pop())}}}const _t=new gx;let Cs,ao;const Fr=[],El=new nf(()=>new je);function Ex(r,e,t,i,n,s){Cs=El.getPrimitive(),ao=El.getPrimitive(),Fr.push(Cs,ao),_t.setBuffer(r._roots[e]);const o=Du(0,r.geometry,t,i,n,s);_t.clearBuffer(),El.releasePrimitive(Cs),El.releasePrimitive(ao),Fr.pop(),Fr.pop();const a=Fr.length;return a>0&&(ao=Fr[a-1],Cs=Fr[a-2]),o}function Du(r,e,t,i,n=null,s=0,o=0){const{float32Array:a,uint16Array:l,uint32Array:c}=_t;let h=r*2;if(Oi(h,l)){const u=Di(r,c),f=Yi(h,l);return At(r,a,Cs),i(u,f,!1,o,s+r,Cs)}else{let u=function(w){const{uint16Array:N,uint32Array:C}=_t;let U=w*2;for(;!Oi(U,N);)w=Xi(w),U=w*2;return Di(w,C)},f=function(w){const{uint16Array:N,uint32Array:C}=_t;let U=w*2;for(;!Oi(U,N);)w=Zi(w,C),U=w*2;return Di(w,C)+Yi(U,N)};const m=Xi(r),E=Zi(r,c);let g=m,p=E,_,T,I,v;if(n&&(I=Cs,v=ao,At(g,a,I),At(p,a,v),_=n(I),T=n(v),T<_)){g=E,p=m;const w=_;_=T,T=w,I=v}I||(I=Cs,At(g,a,I));const b=Oi(g*2,l),x=t(I,b,_,o+1,s+g);let A;if(x===pm){const w=u(g),C=f(g)-w;A=i(w,C,!0,o+1,s+g,I)}else A=x&&Du(g,e,t,i,n,s,o+1);if(A)return!0;v=ao,At(p,a,v);const y=Oi(p*2,l),S=t(v,y,T,o+1,s+p);let O;if(S===pm){const w=u(p),C=f(p)-w;O=i(w,C,!0,o+1,s+p,v)}else O=S&&Du(p,e,t,i,n,s,o+1);return!!O}}const ko=new F,Gh=new F;function Ix(r,e,t={},i=0,n=1/0){const s=i*i,o=n*n;let a=1/0,l=null;if(r.shapecast({boundsTraverseOrder:h=>(ko.copy(e).clamp(h.min,h.max),ko.distanceToSquared(e)),intersectsBounds:(h,d,u)=>u<a&&u<o,intersectsTriangle:(h,d)=>{h.closestPointToPoint(e,ko);const u=e.distanceToSquared(ko);return u<a&&(Gh.copy(ko),a=u,l=d),u<s}}),a===1/0)return null;const c=Math.sqrt(a);return t.point?t.point.copy(Gh):t.point=Gh.clone(),t.distance=c,t.faceIndex=l,t}const Pr=new F,Lr=new F,Or=new F,Il=new Re,_l=new Re,Tl=new Re,_m=new F,Tm=new F,vm=new F,vl=new F;function _x(r,e,t,i,n,s){let o;return s===di?o=r.intersectTriangle(i,t,e,!0,n):o=r.intersectTriangle(e,t,i,s!==_i,n),o===null?null:{distance:r.origin.distanceTo(n),point:n.clone()}}function Tx(r,e,t,i,n,s,o,a,l){Pr.fromBufferAttribute(e,s),Lr.fromBufferAttribute(e,o),Or.fromBufferAttribute(e,a);const c=_x(r,Pr,Lr,Or,vl,l);if(c){i&&(Il.fromBufferAttribute(i,s),_l.fromBufferAttribute(i,o),Tl.fromBufferAttribute(i,a),c.uv=yt.getInterpolation(vl,Pr,Lr,Or,Il,_l,Tl,new Re)),n&&(Il.fromBufferAttribute(n,s),_l.fromBufferAttribute(n,o),Tl.fromBufferAttribute(n,a),c.uv1=yt.getInterpolation(vl,Pr,Lr,Or,Il,_l,Tl,new Re)),t&&(_m.fromBufferAttribute(t,s),Tm.fromBufferAttribute(t,o),vm.fromBufferAttribute(t,a),c.normal=yt.getInterpolation(vl,Pr,Lr,Or,_m,Tm,vm,new F),c.normal.dot(r.direction)>0&&c.normal.multiplyScalar(-1));const h={a:s,b:o,c:a,normal:new F,materialIndex:0};yt.getNormal(Pr,Lr,Or,h.normal),c.face=h,c.faceIndex=s}return c}function Yc(r,e,t,i,n){const s=i*3;let o=s+0,a=s+1,l=s+2;const c=r.index;r.index&&(o=c.getX(o),a=c.getX(a),l=c.getX(l));const{position:h,normal:d,uv:u,uv1:f}=r.attributes,m=Tx(t,h,d,u,f,o,a,l,e);return m?(m.faceIndex=i,n&&n.push(m),m):null}function Gt(r,e,t,i){const n=r.a,s=r.b,o=r.c;let a=e,l=e+1,c=e+2;t&&(a=t.getX(a),l=t.getX(l),c=t.getX(c)),n.x=i.getX(a),n.y=i.getY(a),n.z=i.getZ(a),s.x=i.getX(l),s.y=i.getY(l),s.z=i.getZ(l),o.x=i.getX(c),o.y=i.getY(c),o.z=i.getZ(c)}function vx(r,e,t,i,n,s){const{geometry:o,_indirectBuffer:a}=r;for(let l=i,c=i+n;l<c;l++)Yc(o,e,t,l,s)}function Cx(r,e,t,i,n){const{geometry:s,_indirectBuffer:o}=r;let a=1/0,l=null;for(let c=i,h=i+n;c<h;c++){let d;d=Yc(s,e,t,c),d&&d.distance<a&&(l=d,a=d.distance)}return l}function yx(r,e,t,i,n,s,o){const{geometry:a}=t,{index:l}=a,c=a.attributes.position;for(let h=r,d=e+r;h<d;h++){let u;if(u=h,Gt(o,u*3,l,c),o.needsUpdate=!0,i(o,u,n,s))return!0}return!1}function bx(r,e=null){e&&Array.isArray(e)&&(e=new Set(e));const t=r.geometry,i=t.index?t.index.array:null,n=t.attributes.position;let s,o,a,l,c=0;const h=r._roots;for(let u=0,f=h.length;u<f;u++)s=h[u],o=new Uint32Array(s),a=new Uint16Array(s),l=new Float32Array(s),d(0,c),c+=s.byteLength;function d(u,f,m=!1){const E=u*2;if(a[E+15]===Wc){const p=o[u+6],_=a[E+14];let T=1/0,I=1/0,v=1/0,b=-1/0,x=-1/0,A=-1/0;for(let y=3*p,S=3*(p+_);y<S;y++){let O=i[y];const w=n.getX(O),N=n.getY(O),C=n.getZ(O);w<T&&(T=w),w>b&&(b=w),N<I&&(I=N),N>x&&(x=N),C<v&&(v=C),C>A&&(A=C)}return l[u+0]!==T||l[u+1]!==I||l[u+2]!==v||l[u+3]!==b||l[u+4]!==x||l[u+5]!==A?(l[u+0]=T,l[u+1]=I,l[u+2]=v,l[u+3]=b,l[u+4]=x,l[u+5]=A,!0):!1}else{const p=u+8,_=o[u+6],T=p+f,I=_+f;let v=m,b=!1,x=!1;e?v||(b=e.has(T),x=e.has(I),v=!b&&!x):(b=!0,x=!0);const A=v||b,y=v||x;let S=!1;A&&(S=d(p,f,v));let O=!1;y&&(O=d(_,f,v));const w=S||O;if(w)for(let N=0;N<3;N++){const C=p+N,U=_+N,B=l[C],V=l[C+3],j=l[U],G=l[U+3];l[u+N]=B<j?B:j,l[u+N+3]=V>G?V:G}return w}}}const Cm=new je;function As(r,e,t,i){return At(r,e,Cm),t.intersectBox(Cm,i)}function Sx(r,e,t,i,n,s){const{geometry:o,_indirectBuffer:a}=r;for(let l=i,c=i+n;l<c;l++){let h=a?a[l]:l;Yc(o,e,t,h,s)}}function xx(r,e,t,i,n){const{geometry:s,_indirectBuffer:o}=r;let a=1/0,l=null;for(let c=i,h=i+n;c<h;c++){let d;d=Yc(s,e,t,o?o[c]:c),d&&d.distance<a&&(l=d,a=d.distance)}return l}function wx(r,e,t,i,n,s,o){const{geometry:a}=t,{index:l}=a,c=a.attributes.position;for(let h=r,d=e+r;h<d;h++){let u;if(u=t.resolveTriangleIndex(h),Gt(o,u*3,l,c),o.needsUpdate=!0,i(o,u,n,s))return!0}return!1}const ym=new F;function Ax(r,e,t,i,n){_t.setBuffer(r._roots[e]),Uu(0,r,t,i,n),_t.clearBuffer()}function Uu(r,e,t,i,n){const{float32Array:s,uint16Array:o,uint32Array:a}=_t,l=r*2;if(Oi(l,o)){const h=Di(r,a),d=Yi(l,o);vx(e,t,i,h,d,n)}else{const h=Xi(r);As(h,s,i,ym)&&Uu(h,e,t,i,n);const d=Zi(r,a);As(d,s,i,ym)&&Uu(d,e,t,i,n)}}const bm=new F,Rx=["x","y","z"];function Mx(r,e,t,i){_t.setBuffer(r._roots[e]);const n=Bu(0,r,t,i);return _t.clearBuffer(),n}function Bu(r,e,t,i){const{float32Array:n,uint16Array:s,uint32Array:o}=_t;let a=r*2;if(Oi(a,s)){const c=Di(r,o),h=Yi(a,s);return Cx(e,t,i,c,h)}else{const c=wE(r,o),h=Rx[c],u=i.direction[h]>=0;let f,m;u?(f=Xi(r),m=Zi(r,o)):(f=Zi(r,o),m=Xi(r));const g=As(f,n,i,bm)?Bu(f,e,t,i):null;if(g){const T=g.point[h];if(u?T<=n[m+c]:T>=n[m+c+3])return g}const _=As(m,n,i,bm)?Bu(m,e,t,i):null;return g&&_?g.distance<=_.distance?g:_:g||_||null}}const Cl=new je,Nr=new un,Dr=new un,Go=new fe,Sm=new Ci,yl=new Ci;function Fx(r,e,t,i){_t.setBuffer(r._roots[e]);const n=zu(0,r,t,i);return _t.clearBuffer(),n}function zu(r,e,t,i,n=null){const{float32Array:s,uint16Array:o,uint32Array:a}=_t;let l=r*2;if(n===null&&(t.boundingBox||t.computeBoundingBox(),Sm.set(t.boundingBox.min,t.boundingBox.max,i),n=Sm),Oi(l,o)){const h=e.geometry,d=h.index,u=h.attributes.position,f=t.index,m=t.attributes.position,E=Di(r,a),g=Yi(l,o);if(Go.copy(i).invert(),t.boundsTree)return At(r,s,yl),yl.matrix.copy(Go),yl.needsUpdate=!0,t.boundsTree.shapecast({intersectsBounds:_=>yl.intersectsBox(_),intersectsTriangle:_=>{_.a.applyMatrix4(i),_.b.applyMatrix4(i),_.c.applyMatrix4(i),_.needsUpdate=!0;for(let T=E*3,I=(g+E)*3;T<I;T+=3)if(Gt(Dr,T,d,u),Dr.needsUpdate=!0,_.intersectsTriangle(Dr))return!0;return!1}});for(let p=E*3,_=(g+E)*3;p<_;p+=3){Gt(Nr,p,d,u),Nr.a.applyMatrix4(Go),Nr.b.applyMatrix4(Go),Nr.c.applyMatrix4(Go),Nr.needsUpdate=!0;for(let T=0,I=f.count;T<I;T+=3)if(Gt(Dr,T,f,m),Dr.needsUpdate=!0,Nr.intersectsTriangle(Dr))return!0}}else{const h=r+8,d=a[r+6];return At(h,s,Cl),!!(n.intersectsBox(Cl)&&zu(h,e,t,i,n)||(At(d,s,Cl),n.intersectsBox(Cl)&&zu(d,e,t,i,n)))}}const bl=new fe,Hh=new Ci,Ho=new Ci,Px=new F,Lx=new F,Ox=new F,Nx=new F;function Dx(r,e,t,i={},n={},s=0,o=1/0){e.boundingBox||e.computeBoundingBox(),Hh.set(e.boundingBox.min,e.boundingBox.max,t),Hh.needsUpdate=!0;const a=r.geometry,l=a.attributes.position,c=a.index,h=e.attributes.position,d=e.index,u=Wi.getPrimitive(),f=Wi.getPrimitive();let m=Px,E=Lx,g=null,p=null;n&&(g=Ox,p=Nx);let _=1/0,T=null,I=null;return bl.copy(t).invert(),Ho.matrix.copy(bl),r.shapecast({boundsTraverseOrder:v=>Hh.distanceToBox(v),intersectsBounds:(v,b,x)=>x<_&&x<o?(b&&(Ho.min.copy(v.min),Ho.max.copy(v.max),Ho.needsUpdate=!0),!0):!1,intersectsRange:(v,b)=>{if(e.boundsTree)return e.boundsTree.shapecast({boundsTraverseOrder:A=>Ho.distanceToBox(A),intersectsBounds:(A,y,S)=>S<_&&S<o,intersectsRange:(A,y)=>{for(let S=A,O=A+y;S<O;S++){Gt(f,3*S,d,h),f.a.applyMatrix4(t),f.b.applyMatrix4(t),f.c.applyMatrix4(t),f.needsUpdate=!0;for(let w=v,N=v+b;w<N;w++){Gt(u,3*w,c,l),u.needsUpdate=!0;const C=u.distanceToTriangle(f,m,g);if(C<_&&(E.copy(m),p&&p.copy(g),_=C,T=w,I=S),C<s)return!0}}}});{const x=Ro(e);for(let A=0,y=x;A<y;A++){Gt(f,3*A,d,h),f.a.applyMatrix4(t),f.b.applyMatrix4(t),f.c.applyMatrix4(t),f.needsUpdate=!0;for(let S=v,O=v+b;S<O;S++){Gt(u,3*S,c,l),u.needsUpdate=!0;const w=u.distanceToTriangle(f,m,g);if(w<_&&(E.copy(m),p&&p.copy(g),_=w,T=S,I=A),w<s)return!0}}}}}),Wi.releasePrimitive(u),Wi.releasePrimitive(f),_===1/0?null:(i.point?i.point.copy(E):i.point=E.clone(),i.distance=_,i.faceIndex=T,n&&(n.point?n.point.copy(p):n.point=p.clone(),n.point.applyMatrix4(bl),E.applyMatrix4(bl),n.distance=E.sub(n.point).length(),n.faceIndex=I),i)}function Ux(r,e=null){e&&Array.isArray(e)&&(e=new Set(e));const t=r.geometry,i=t.index?t.index.array:null,n=t.attributes.position;let s,o,a,l,c=0;const h=r._roots;for(let u=0,f=h.length;u<f;u++)s=h[u],o=new Uint32Array(s),a=new Uint16Array(s),l=new Float32Array(s),d(0,c),c+=s.byteLength;function d(u,f,m=!1){const E=u*2;if(a[E+15]===Wc){const p=o[u+6],_=a[E+14];let T=1/0,I=1/0,v=1/0,b=-1/0,x=-1/0,A=-1/0;for(let y=p,S=p+_;y<S;y++){const O=3*r.resolveTriangleIndex(y);for(let w=0;w<3;w++){let N=O+w;N=i?i[N]:N;const C=n.getX(N),U=n.getY(N),B=n.getZ(N);C<T&&(T=C),C>b&&(b=C),U<I&&(I=U),U>x&&(x=U),B<v&&(v=B),B>A&&(A=B)}}return l[u+0]!==T||l[u+1]!==I||l[u+2]!==v||l[u+3]!==b||l[u+4]!==x||l[u+5]!==A?(l[u+0]=T,l[u+1]=I,l[u+2]=v,l[u+3]=b,l[u+4]=x,l[u+5]=A,!0):!1}else{const p=u+8,_=o[u+6],T=p+f,I=_+f;let v=m,b=!1,x=!1;e?v||(b=e.has(T),x=e.has(I),v=!b&&!x):(b=!0,x=!0);const A=v||b,y=v||x;let S=!1;A&&(S=d(p,f,v));let O=!1;y&&(O=d(_,f,v));const w=S||O;if(w)for(let N=0;N<3;N++){const C=p+N,U=_+N,B=l[C],V=l[C+3],j=l[U],G=l[U+3];l[u+N]=B<j?B:j,l[u+N+3]=V>G?V:G}return w}}}const xm=new F;function Bx(r,e,t,i,n){_t.setBuffer(r._roots[e]),Vu(0,r,t,i,n),_t.clearBuffer()}function Vu(r,e,t,i,n){const{float32Array:s,uint16Array:o,uint32Array:a}=_t,l=r*2;if(Oi(l,o)){const h=Di(r,a),d=Yi(l,o);Sx(e,t,i,h,d,n)}else{const h=Xi(r);As(h,s,i,xm)&&Vu(h,e,t,i,n);const d=Zi(r,a);As(d,s,i,xm)&&Vu(d,e,t,i,n)}}const wm=new F,zx=["x","y","z"];function Vx(r,e,t,i){_t.setBuffer(r._roots[e]);const n=ku(0,r,t,i);return _t.clearBuffer(),n}function ku(r,e,t,i){const{float32Array:n,uint16Array:s,uint32Array:o}=_t;let a=r*2;if(Oi(a,s)){const c=Di(r,o),h=Yi(a,s);return xx(e,t,i,c,h)}else{const c=wE(r,o),h=zx[c],u=i.direction[h]>=0;let f,m;u?(f=Xi(r),m=Zi(r,o)):(f=Zi(r,o),m=Xi(r));const g=As(f,n,i,wm)?ku(f,e,t,i):null;if(g){const T=g.point[h];if(u?T<=n[m+c]:T>=n[m+c+3])return g}const _=As(m,n,i,wm)?ku(m,e,t,i):null;return g&&_?g.distance<=_.distance?g:_:g||_||null}}const Sl=new je,Ur=new un,Br=new un,Wo=new fe,Am=new Ci,xl=new Ci;function kx(r,e,t,i){_t.setBuffer(r._roots[e]);const n=Gu(0,r,t,i);return _t.clearBuffer(),n}function Gu(r,e,t,i,n=null){const{float32Array:s,uint16Array:o,uint32Array:a}=_t;let l=r*2;if(n===null&&(t.boundingBox||t.computeBoundingBox(),Am.set(t.boundingBox.min,t.boundingBox.max,i),n=Am),Oi(l,o)){const h=e.geometry,d=h.index,u=h.attributes.position,f=t.index,m=t.attributes.position,E=Di(r,a),g=Yi(l,o);if(Wo.copy(i).invert(),t.boundsTree)return At(r,s,xl),xl.matrix.copy(Wo),xl.needsUpdate=!0,t.boundsTree.shapecast({intersectsBounds:_=>xl.intersectsBox(_),intersectsTriangle:_=>{_.a.applyMatrix4(i),_.b.applyMatrix4(i),_.c.applyMatrix4(i),_.needsUpdate=!0;for(let T=E,I=g+E;T<I;T++)if(Gt(Br,3*e.resolveTriangleIndex(T),d,u),Br.needsUpdate=!0,_.intersectsTriangle(Br))return!0;return!1}});for(let p=E,_=g+E;p<_;p++){const T=e.resolveTriangleIndex(p);Gt(Ur,3*T,d,u),Ur.a.applyMatrix4(Wo),Ur.b.applyMatrix4(Wo),Ur.c.applyMatrix4(Wo),Ur.needsUpdate=!0;for(let I=0,v=f.count;I<v;I+=3)if(Gt(Br,I,f,m),Br.needsUpdate=!0,Ur.intersectsTriangle(Br))return!0}}else{const h=r+8,d=a[r+6];return At(h,s,Sl),!!(n.intersectsBox(Sl)&&Gu(h,e,t,i,n)||(At(d,s,Sl),n.intersectsBox(Sl)&&Gu(d,e,t,i,n)))}}const wl=new fe,Wh=new Ci,Yo=new Ci,Gx=new F,Hx=new F,Wx=new F,Yx=new F;function Xx(r,e,t,i={},n={},s=0,o=1/0){e.boundingBox||e.computeBoundingBox(),Wh.set(e.boundingBox.min,e.boundingBox.max,t),Wh.needsUpdate=!0;const a=r.geometry,l=a.attributes.position,c=a.index,h=e.attributes.position,d=e.index,u=Wi.getPrimitive(),f=Wi.getPrimitive();let m=Gx,E=Hx,g=null,p=null;n&&(g=Wx,p=Yx);let _=1/0,T=null,I=null;return wl.copy(t).invert(),Yo.matrix.copy(wl),r.shapecast({boundsTraverseOrder:v=>Wh.distanceToBox(v),intersectsBounds:(v,b,x)=>x<_&&x<o?(b&&(Yo.min.copy(v.min),Yo.max.copy(v.max),Yo.needsUpdate=!0),!0):!1,intersectsRange:(v,b)=>{if(e.boundsTree){const x=e.boundsTree;return x.shapecast({boundsTraverseOrder:A=>Yo.distanceToBox(A),intersectsBounds:(A,y,S)=>S<_&&S<o,intersectsRange:(A,y)=>{for(let S=A,O=A+y;S<O;S++){const w=x.resolveTriangleIndex(S);Gt(f,3*w,d,h),f.a.applyMatrix4(t),f.b.applyMatrix4(t),f.c.applyMatrix4(t),f.needsUpdate=!0;for(let N=v,C=v+b;N<C;N++){const U=r.resolveTriangleIndex(N);Gt(u,3*U,c,l),u.needsUpdate=!0;const B=u.distanceToTriangle(f,m,g);if(B<_&&(E.copy(m),p&&p.copy(g),_=B,T=N,I=S),B<s)return!0}}}})}else{const x=Ro(e);for(let A=0,y=x;A<y;A++){Gt(f,3*A,d,h),f.a.applyMatrix4(t),f.b.applyMatrix4(t),f.c.applyMatrix4(t),f.needsUpdate=!0;for(let S=v,O=v+b;S<O;S++){const w=r.resolveTriangleIndex(S);Gt(u,3*w,c,l),u.needsUpdate=!0;const N=u.distanceToTriangle(f,m,g);if(N<_&&(E.copy(m),p&&p.copy(g),_=N,T=S,I=A),N<s)return!0}}}}}),Wi.releasePrimitive(u),Wi.releasePrimitive(f),_===1/0?null:(i.point?i.point.copy(E):i.point=E.clone(),i.distance=_,i.faceIndex=T,n&&(n.point?n.point.copy(p):n.point=p.clone(),n.point.applyMatrix4(wl),E.applyMatrix4(wl),n.distance=E.sub(n.point).length(),n.faceIndex=I),i)}function Zx(){return typeof SharedArrayBuffer<"u"}const fa=new _t.constructor,Rc=new _t.constructor,Es=new nf(()=>new je),zr=new je,Vr=new je,Yh=new je,Xh=new je;let Zh=!1;function jx(r,e,t,i){if(Zh)throw new Error("MeshBVH: Recursive calls to bvhcast not supported.");Zh=!0;const n=r._roots,s=e._roots;let o,a=0,l=0;const c=new fe().copy(t).invert();for(let h=0,d=n.length;h<d;h++){fa.setBuffer(n[h]),l=0;const u=Es.getPrimitive();At(0,fa.float32Array,u),u.applyMatrix4(c);for(let f=0,m=s.length;f<m&&(Rc.setBuffer(s[h]),o=sn(0,0,t,c,i,a,l,0,0,u),Rc.clearBuffer(),l+=s[f].length,!o);f++);if(Es.releasePrimitive(u),fa.clearBuffer(),a+=n[h].length,o)break}return Zh=!1,o}function sn(r,e,t,i,n,s=0,o=0,a=0,l=0,c=null,h=!1){let d,u;h?(d=Rc,u=fa):(d=fa,u=Rc);const f=d.float32Array,m=d.uint32Array,E=d.uint16Array,g=u.float32Array,p=u.uint32Array,_=u.uint16Array,T=r*2,I=e*2,v=Oi(T,E),b=Oi(I,_);let x=!1;if(b&&v)h?x=n(Di(e,p),Yi(e*2,_),Di(r,m),Yi(r*2,E),l,o+e,a,s+r):x=n(Di(r,m),Yi(r*2,E),Di(e,p),Yi(e*2,_),a,s+r,l,o+e);else if(b){const A=Es.getPrimitive();At(e,g,A),A.applyMatrix4(t);const y=Xi(r),S=Zi(r,m);At(y,f,zr),At(S,f,Vr);const O=A.intersectsBox(zr),w=A.intersectsBox(Vr);x=O&&sn(e,y,i,t,n,o,s,l,a+1,A,!h)||w&&sn(e,S,i,t,n,o,s,l,a+1,A,!h),Es.releasePrimitive(A)}else{const A=Xi(e),y=Zi(e,p);At(A,g,Yh),At(y,g,Xh);const S=c.intersectsBox(Yh),O=c.intersectsBox(Xh);if(S&&O)x=sn(r,A,t,i,n,s,o,a,l+1,c,h)||sn(r,y,t,i,n,s,o,a,l+1,c,h);else if(S)if(v)x=sn(r,A,t,i,n,s,o,a,l+1,c,h);else{const w=Es.getPrimitive();w.copy(Yh).applyMatrix4(t);const N=Xi(r),C=Zi(r,m);At(N,f,zr),At(C,f,Vr);const U=w.intersectsBox(zr),B=w.intersectsBox(Vr);x=U&&sn(A,N,i,t,n,o,s,l,a+1,w,!h)||B&&sn(A,C,i,t,n,o,s,l,a+1,w,!h),Es.releasePrimitive(w)}else if(O)if(v)x=sn(r,y,t,i,n,s,o,a,l+1,c,h);else{const w=Es.getPrimitive();w.copy(Xh).applyMatrix4(t);const N=Xi(r),C=Zi(r,m);At(N,f,zr),At(C,f,Vr);const U=w.intersectsBox(zr),B=w.intersectsBox(Vr);x=U&&sn(y,N,i,t,n,o,s,l,a+1,w,!h)||B&&sn(y,C,i,t,n,o,s,l,a+1,w,!h),Es.releasePrimitive(w)}}return x}const Al=new Ci,Rm=new je;class sf{static serialize(e,t={}){t={cloneBuffers:!0,...t};const i=e.geometry,n=e._roots,s=e._indirectBuffer,o=i.getIndex();let a;return t.cloneBuffers?a={roots:n.map(l=>l.slice()),index:o.array.slice(),indirectBuffer:s?s.slice():null}:a={roots:n,index:o.array,indirectBuffer:s},a}static deserialize(e,t,i={}){i={setIndex:!0,indirect:!!e.indirectBuffer,...i};const{index:n,roots:s,indirectBuffer:o}=e,a=new sf(t,{...i,[zh]:!0});if(a._roots=s,a._indirectBuffer=o||null,i.setIndex){const l=t.getIndex();if(l===null){const c=new ot(e.index,1,!1);t.setIndex(c)}else l.array!==n&&(l.array.set(n),l.needsUpdate=!0)}return a}get indirect(){return!!this._indirectBuffer}constructor(e,t={}){if(e.isBufferGeometry){if(e.index&&e.index.isInterleavedBufferAttribute)throw new Error("MeshBVH: InterleavedBufferAttribute is not supported for the index attribute.")}else throw new Error("MeshBVH: Only BufferGeometries are supported.");if(t=Object.assign({strategy:bE,maxDepth:40,maxLeafTris:10,verbose:!0,useSharedArrayBuffer:!1,setBoundingBox:!0,onProgress:null,indirect:!1,[zh]:!1},t),t.useSharedArrayBuffer&&!Zx())throw new Error("MeshBVH: SharedArrayBuffer is not available.");this.geometry=e,this._roots=null,this._indirectBuffer=null,t[zh]||(ux(this,t),!e.boundingBox&&t.setBoundingBox&&(e.boundingBox=this.getBoundingBox(new je)));const{_indirectBuffer:i}=this;this.resolveTriangleIndex=t.indirect?n=>i[n]:n=>n}refit(e=null){return(this.indirect?Ux:bx)(this,e)}traverse(e,t=0){const i=this._roots[t],n=new Uint32Array(i),s=new Uint16Array(i);o(0);function o(a,l=0){const c=a*2,h=s[c+15]===Wc;if(h){const d=n[a+6],u=s[c+14];e(l,h,new Float32Array(i,a*4,6),d,u)}else{const d=a+dc/4,u=n[a+6],f=n[a+7];e(l,h,new Float32Array(i,a*4,6),f)||(o(d,l+1),o(u,l+1))}}}raycast(e,t=$i){const i=this._roots,n=this.geometry,s=[],o=t.isMaterial,a=Array.isArray(t),l=n.groups,c=o?t.side:t,h=this.indirect?Bx:Ax;for(let d=0,u=i.length;d<u;d++){const f=a?t[l[d].materialIndex].side:c,m=s.length;if(h(this,d,f,e,s),a){const E=l[d].materialIndex;for(let g=m,p=s.length;g<p;g++)s[g].face.materialIndex=E}}return s}raycastFirst(e,t=$i){const i=this._roots,n=this.geometry,s=t.isMaterial,o=Array.isArray(t);let a=null;const l=n.groups,c=s?t.side:t,h=this.indirect?Vx:Mx;for(let d=0,u=i.length;d<u;d++){const f=o?t[l[d].materialIndex].side:c,m=h(this,d,f,e);m!=null&&(a==null||m.distance<a.distance)&&(a=m,o&&(m.face.materialIndex=l[d].materialIndex))}return a}intersectsGeometry(e,t){let i=!1;const n=this._roots,s=this.indirect?kx:Fx;for(let o=0,a=n.length;o<a&&(i=s(this,o,e,t),!i);o++);return i}shapecast(e){const t=Wi.getPrimitive(),i=this.indirect?wx:yx;let{boundsTraverseOrder:n,intersectsBounds:s,intersectsRange:o,intersectsTriangle:a}=e;if(o&&a){const d=o;o=(u,f,m,E,g)=>d(u,f,m,E,g)?!0:i(u,f,this,a,m,E,t)}else o||(a?o=(d,u,f,m)=>i(d,u,this,a,f,m,t):o=(d,u,f)=>f);let l=!1,c=0;const h=this._roots;for(let d=0,u=h.length;d<u;d++){const f=h[d];if(l=Ex(this,d,s,o,n,c),l)break;c+=f.byteLength}return Wi.releasePrimitive(t),l}bvhcast(e,t,i){let{intersectsRanges:n,intersectsTriangles:s}=i;const o=Wi.getPrimitive(),a=this.geometry.index,l=this.geometry.attributes.position,c=this.indirect?m=>{const E=this.resolveTriangleIndex(m);Gt(o,E*3,a,l)}:m=>{Gt(o,m*3,a,l)},h=Wi.getPrimitive(),d=e.geometry.index,u=e.geometry.attributes.position,f=e.indirect?m=>{const E=e.resolveTriangleIndex(m);Gt(h,E*3,d,u)}:m=>{Gt(h,m*3,d,u)};if(s){const m=(E,g,p,_,T,I,v,b)=>{for(let x=p,A=p+_;x<A;x++){f(x),h.a.applyMatrix4(t),h.b.applyMatrix4(t),h.c.applyMatrix4(t),h.needsUpdate=!0;for(let y=E,S=E+g;y<S;y++)if(c(y),o.needsUpdate=!0,s(o,h,y,x,T,I,v,b))return!0}return!1};if(n){const E=n;n=function(g,p,_,T,I,v,b,x){return E(g,p,_,T,I,v,b,x)?!0:m(g,p,_,T,I,v,b,x)}}else n=m}return jx(this,e,t,n)}intersectsBox(e,t){return Al.set(e.min,e.max,t),Al.needsUpdate=!0,this.shapecast({intersectsBounds:i=>Al.intersectsBox(i),intersectsTriangle:i=>Al.intersectsTriangle(i)})}intersectsSphere(e){return this.shapecast({intersectsBounds:t=>e.intersectsBox(t),intersectsTriangle:t=>t.intersectsSphere(e)})}closestPointToGeometry(e,t,i={},n={},s=0,o=1/0){return(this.indirect?Xx:Dx)(this,e,t,i,n,s,o)}closestPointToPoint(e,t={},i=0,n=1/0){return Ix(this,e,t,i,n)}getBoundingBox(e){return e.makeEmpty(),this._roots.forEach(i=>{At(0,new Float32Array(i),Rm),e.union(Rm)}),e}}function Mm(r,e,t){return r===null||(r.point.applyMatrix4(e.matrixWorld),r.distance=r.point.distanceTo(t.ray.origin),r.object=e,r.distance<t.near||r.distance>t.far)?null:r}const jh=new xo,Fm=new fe,qx=ge.prototype.raycast;function Kx(r,e){if(this.geometry.boundsTree){if(this.material===void 0)return;Fm.copy(this.matrixWorld).invert(),jh.copy(r.ray).applyMatrix4(Fm);const t=this.geometry.boundsTree;if(r.firstHitOnly===!0){const i=Mm(t.raycastFirst(jh,this.material),this,r);i&&e.push(i)}else{const i=t.raycast(jh,this.material);for(let n=0,s=i.length;n<s;n++){const o=Mm(i[n],this,r);o&&e.push(o)}}}else qx.call(this,r,e)}function Qx(r){return this.boundsTree=new sf(this,r),this.boundsTree}function Jx(){this.boundsTree=null}const AE=class Hu{static apply(e){Hu.initialized||(Ve.prototype.computeBoundsTree=Qx,Ve.prototype.disposeBoundsTree=Jx,ge.prototype.raycast=Kx,Hu.initialized=!0),e.boundsTree||e.computeBoundsTree()}static dispose(e){e&&e.disposeBoundsTree&&e.disposeBoundsTree()}};we(AE,"initialized",!1);let Pm=AE,Co=class RE{constructor(e,t,i){we(this,"ids",new Set),we(this,"itemToInstances",new Map),we(this,"instanceToItem",new Map),we(this,"hiddenItems",new Set),we(this,"id"),we(this,"mesh"),we(this,"capacity",0),we(this,"capacityOffset",10),we(this,"group"),we(this,"_originalColors",new Map),we(this,"_settingVisibility",!1),this.mesh=new Ac(e,t,i,this),this.id=this.mesh.uuid,this.capacity=i,this.mesh.count=0,this.mesh.geometry.index.count&&Pm.apply(this.mesh.geometry)}get uniqueVertices(){const e=[],t=this.mesh.geometry.getAttribute("position");if(!t)return e;const i=new Set;for(let n=0;n<t.count;n++){const s=t.getX(n),o=t.getY(n),a=t.getZ(n),l=`${s},${o},${a}`;i.has(l)||(i.add(l),e.push(new F(s,o,a)))}return e}dispose(e=!0){if(this.clear(),this.group=void 0,this._originalColors.clear(),this.mesh){if(e){for(const t of this.mesh.material)t.dispose();this.mesh.material=[],Pm.dispose(this.mesh.geometry),this.mesh.geometry&&this.mesh.geometry.dispose(),this.mesh.geometry=null}this.mesh.removeFromParent(),this.mesh.userData={},this.mesh.dispose(),this.mesh.fragment=null,this.mesh=null}}get(e){const t=this.getInstancesIDs(e);if(!t)throw new Error("Item not found!");const i=[],n=[];for(const o of t){const a=new fe;if(this.mesh.getMatrixAt(o,a),i.push(a),this.mesh.instanceColor){const l=new Fe;this.mesh.getColorAt(o,l),n.push(l)}}const s=n.length?n:void 0;return{id:e,transforms:i,colors:s}}getItemID(e){return this.instanceToItem.get(e)||null}getInstancesIDs(e){return this.itemToInstances.get(e)||null}update(){this.mesh.instanceColor&&(this.mesh.instanceColor.needsUpdate=!0),this.mesh.instanceMatrix.needsUpdate=!0}add(e){var t;let i=0;for(const s of e)i+=s.transforms.length;const n=this.mesh.count+i;if(n>this.capacity){const s=n+this.capacityOffset,o=new Ac(this.mesh.geometry,this.mesh.material,s,this);o.count=this.mesh.count,this.capacity=s;const a=this.mesh;(t=a.parent)==null||t.add(o),a.removeFromParent(),this.mesh=o;const l=new fe;for(let c=0;c<a.instanceMatrix.count;c++)a.getMatrixAt(c,l),o.setMatrixAt(c,l);if(a.instanceColor){const c=new Fe;for(let h=0;h<a.instanceColor.count;h++)a.getColorAt(h,c),o.setColorAt(h,c)}a.dispose()}for(let s=0;s<e.length;s++){const{transforms:o,colors:a,id:l}=e[s];this.itemToInstances.has(l)||this.itemToInstances.set(l,new Set);const c=this.itemToInstances.get(l);this.ids.add(l);for(let h=0;h<o.length;h++){const d=o[h],u=this.mesh.count;if(this.mesh.setMatrixAt(u,d),a){const f=a[h];this.mesh.setColorAt(u,f)}c.add(u),this.instanceToItem.set(u,l),this.mesh.count++}}this.update()}remove(e){if(this.mesh.count!==0){for(const t of e){const i=this.itemToInstances.get(t);if(i===void 0)throw new Error("Instances not found!");for(const n of i){if(this.mesh.count===0)throw new Error("Error with mesh count!");this.putLast(n),this.instanceToItem.delete(n),this.mesh.count--}this.itemToInstances.delete(t),this.ids.delete(t)}this.update()}}clear(){this.hiddenItems.clear(),this.ids.clear(),this.instanceToItem.clear(),this.itemToInstances.clear(),this.mesh.count=0}setVisibility(e,t=this.ids){if(!this._settingVisibility){if(this._settingVisibility=!0,e)for(const i of t){if(!this.ids.has(i)||!this.hiddenItems.has(i))continue;const n=this.itemToInstances.get(i);if(!n)throw new Error("Instances not found!");for(const s of new Set(n))this.mesh.count++,this.putLast(s);this.hiddenItems.delete(i)}else for(const i of t){if(!this.ids.has(i)||this.hiddenItems.has(i))continue;const n=this.itemToInstances.get(i);if(!n)throw new Error("Instances not found!");for(const s of new Set(n))this.putLast(s),this.mesh.count--;this.hiddenItems.add(i)}this.update(),this._settingVisibility=!1}}setColor(e,t=this.ids,i=!1){if(!this.mesh.instanceColor)throw new Error("This fragment doesn't have color per instance!");for(const n of t){if(!this.ids.has(n))continue;const s=this.itemToInstances.get(n);if(!s)throw new Error("Instances not found!");const o=this._originalColors.has(n);o||this._originalColors.set(n,new Map);const a=this._originalColors.get(n);for(const l of new Set(s)){if(!o){const c=new Fe;this.mesh.getColorAt(l,c),a.set(l,c)}this.mesh.setColorAt(l,e),i&&a.set(l,e)}}this.mesh.instanceColor.needsUpdate=!0}resetColor(e=this.ids){if(!this.mesh.instanceColor)throw new Error("This fragment doesn't have color per instance!");for(const t of e){if(!this.ids.has(t))continue;const i=this.itemToInstances.get(t);if(!i)throw new Error("Instances not found!");const n=this._originalColors.get(t);if(n)for(const s of new Set(i)){const o=n.get(s);if(!o)throw new Error("Original color not found!");this.mesh.setColorAt(s,o)}}this.mesh.instanceColor.needsUpdate=!0}applyTransform(e,t){const i=new fe;for(const n of e){const s=this.getInstancesIDs(n);if(s!==null)for(const o of s)this.mesh.getMatrixAt(o,i),i.premultiply(t),this.mesh.setMatrixAt(o,i)}this.update()}exportData(){const e=this.mesh.exportData(),t=Array.from(this.ids),i=this.id;return{...e,ids:t,id:i}}clone(e=this.ids){const t=new RE(this.mesh.geometry,this.mesh.material,this.capacity),i=[];for(const n of e){const s=this.getInstancesIDs(n);if(s===null)continue;const o=[],a=[];for(const l of s){const c=new fe,h=new Fe;this.mesh.getMatrixAt(l,c),this.mesh.getColorAt(l,h),o.push(c),a.push(h)}i.push({id:n,transforms:o,colors:a})}return t.add(i),t}putLast(e){if(this.mesh.count===0)return;const t=this.instanceToItem.get(e),i=this.mesh.count-1;if(i===e)return;const n=this.instanceToItem.get(i);if(t===void 0||n===void 0)throw new Error("Keys not found");if(t!==n){const a=this.itemToInstances.get(t),l=this.itemToInstances.get(n);if(!a||!l)throw new Error("Instances not found");if(!a.has(e)||!l.has(i))throw new Error("Malformed fragment structure");a.delete(e),l.delete(i),a.add(i),l.add(e),this.instanceToItem.set(e,n),this.instanceToItem.set(i,t)}const s=new fe,o=new fe;if(this.mesh.getMatrixAt(e,s),this.mesh.getMatrixAt(i,o),this.mesh.setMatrixAt(e,o),this.mesh.setMatrixAt(i,s),this.mesh.instanceColor!==null){const a=new Fe,l=new Fe;this.mesh.getColorAt(e,a),this.mesh.getColorAt(i,l),this.mesh.setColorAt(e,l),this.mesh.setColorAt(i,a);const c=this._originalColors.get(t);if(c){const d=c.get(e);d&&(c.delete(e),c.set(i,d))}const h=this._originalColors.get(n);if(h){const d=h.get(i);d&&(h.delete(i),h.set(e,d))}}}};const qh=2,bn=4,Hn=4,Vi=4,Is=new Int32Array(2),Lm=new Float32Array(Is.buffer),Om=new Float64Array(Is.buffer),Rl=new Uint16Array(new Uint8Array([1,0]).buffer)[0]===1;var Wu;(function(r){r[r.UTF8_BYTES=1]="UTF8_BYTES",r[r.UTF16_STRING=2]="UTF16_STRING"})(Wu||(Wu={}));class or{constructor(e){this.bytes_=e,this.position_=0,this.text_decoder_=new TextDecoder}static allocate(e){return new or(new Uint8Array(e))}clear(){this.position_=0}bytes(){return this.bytes_}position(){return this.position_}setPosition(e){this.position_=e}capacity(){return this.bytes_.length}readInt8(e){return this.readUint8(e)<<24>>24}readUint8(e){return this.bytes_[e]}readInt16(e){return this.readUint16(e)<<16>>16}readUint16(e){return this.bytes_[e]|this.bytes_[e+1]<<8}readInt32(e){return this.bytes_[e]|this.bytes_[e+1]<<8|this.bytes_[e+2]<<16|this.bytes_[e+3]<<24}readUint32(e){return this.readInt32(e)>>>0}readInt64(e){return BigInt.asIntN(64,BigInt(this.readUint32(e))+(BigInt(this.readUint32(e+4))<<BigInt(32)))}readUint64(e){return BigInt.asUintN(64,BigInt(this.readUint32(e))+(BigInt(this.readUint32(e+4))<<BigInt(32)))}readFloat32(e){return Is[0]=this.readInt32(e),Lm[0]}readFloat64(e){return Is[Rl?0:1]=this.readInt32(e),Is[Rl?1:0]=this.readInt32(e+4),Om[0]}writeInt8(e,t){this.bytes_[e]=t}writeUint8(e,t){this.bytes_[e]=t}writeInt16(e,t){this.bytes_[e]=t,this.bytes_[e+1]=t>>8}writeUint16(e,t){this.bytes_[e]=t,this.bytes_[e+1]=t>>8}writeInt32(e,t){this.bytes_[e]=t,this.bytes_[e+1]=t>>8,this.bytes_[e+2]=t>>16,this.bytes_[e+3]=t>>24}writeUint32(e,t){this.bytes_[e]=t,this.bytes_[e+1]=t>>8,this.bytes_[e+2]=t>>16,this.bytes_[e+3]=t>>24}writeInt64(e,t){this.writeInt32(e,Number(BigInt.asIntN(32,t))),this.writeInt32(e+4,Number(BigInt.asIntN(32,t>>BigInt(32))))}writeUint64(e,t){this.writeUint32(e,Number(BigInt.asUintN(32,t))),this.writeUint32(e+4,Number(BigInt.asUintN(32,t>>BigInt(32))))}writeFloat32(e,t){Lm[0]=t,this.writeInt32(e,Is[0])}writeFloat64(e,t){Om[0]=t,this.writeInt32(e,Is[Rl?0:1]),this.writeInt32(e+4,Is[Rl?1:0])}getBufferIdentifier(){if(this.bytes_.length<this.position_+bn+Hn)throw new Error("FlatBuffers: ByteBuffer is too short to contain an identifier.");let e="";for(let t=0;t<Hn;t++)e+=String.fromCharCode(this.readInt8(this.position_+bn+t));return e}__offset(e,t){const i=e-this.readInt32(e);return t<this.readInt16(i)?this.readInt16(i+t):0}__union(e,t){return e.bb_pos=t+this.readInt32(t),e.bb=this,e}__string(e,t){e+=this.readInt32(e);const i=this.readInt32(e);e+=bn;const n=this.bytes_.subarray(e,e+i);return t===Wu.UTF8_BYTES?n:this.text_decoder_.decode(n)}__union_with_string(e,t){return typeof e=="string"?this.__string(t):this.__union(e,t)}__indirect(e){return e+this.readInt32(e)}__vector(e){return e+this.readInt32(e)+bn}__vector_len(e){return this.readInt32(e+this.readInt32(e))}__has_identifier(e){if(e.length!=Hn)throw new Error("FlatBuffers: file identifier must be length "+Hn);for(let t=0;t<Hn;t++)if(e.charCodeAt(t)!=this.readInt8(this.position()+bn+t))return!1;return!0}createScalarList(e,t){const i=[];for(let n=0;n<t;++n){const s=e(n);s!==null&&i.push(s)}return i}createObjList(e,t){const i=[];for(let n=0;n<t;++n){const s=e(n);s!==null&&i.push(s.unpack())}return i}}class Fa{constructor(e){this.minalign=1,this.vtable=null,this.vtable_in_use=0,this.isNested=!1,this.object_start=0,this.vtables=[],this.vector_num_elems=0,this.force_defaults=!1,this.string_maps=null,this.text_encoder=new TextEncoder;let t;e?t=e:t=1024,this.bb=or.allocate(t),this.space=t}clear(){this.bb.clear(),this.space=this.bb.capacity(),this.minalign=1,this.vtable=null,this.vtable_in_use=0,this.isNested=!1,this.object_start=0,this.vtables=[],this.vector_num_elems=0,this.force_defaults=!1,this.string_maps=null}forceDefaults(e){this.force_defaults=e}dataBuffer(){return this.bb}asUint8Array(){return this.bb.bytes().subarray(this.bb.position(),this.bb.position()+this.offset())}prep(e,t){e>this.minalign&&(this.minalign=e);const i=~(this.bb.capacity()-this.space+t)+1&e-1;for(;this.space<i+e+t;){const n=this.bb.capacity();this.bb=Fa.growByteBuffer(this.bb),this.space+=this.bb.capacity()-n}this.pad(i)}pad(e){for(let t=0;t<e;t++)this.bb.writeInt8(--this.space,0)}writeInt8(e){this.bb.writeInt8(this.space-=1,e)}writeInt16(e){this.bb.writeInt16(this.space-=2,e)}writeInt32(e){this.bb.writeInt32(this.space-=4,e)}writeInt64(e){this.bb.writeInt64(this.space-=8,e)}writeFloat32(e){this.bb.writeFloat32(this.space-=4,e)}writeFloat64(e){this.bb.writeFloat64(this.space-=8,e)}addInt8(e){this.prep(1,0),this.writeInt8(e)}addInt16(e){this.prep(2,0),this.writeInt16(e)}addInt32(e){this.prep(4,0),this.writeInt32(e)}addInt64(e){this.prep(8,0),this.writeInt64(e)}addFloat32(e){this.prep(4,0),this.writeFloat32(e)}addFloat64(e){this.prep(8,0),this.writeFloat64(e)}addFieldInt8(e,t,i){(this.force_defaults||t!=i)&&(this.addInt8(t),this.slot(e))}addFieldInt16(e,t,i){(this.force_defaults||t!=i)&&(this.addInt16(t),this.slot(e))}addFieldInt32(e,t,i){(this.force_defaults||t!=i)&&(this.addInt32(t),this.slot(e))}addFieldInt64(e,t,i){(this.force_defaults||t!==i)&&(this.addInt64(t),this.slot(e))}addFieldFloat32(e,t,i){(this.force_defaults||t!=i)&&(this.addFloat32(t),this.slot(e))}addFieldFloat64(e,t,i){(this.force_defaults||t!=i)&&(this.addFloat64(t),this.slot(e))}addFieldOffset(e,t,i){(this.force_defaults||t!=i)&&(this.addOffset(t),this.slot(e))}addFieldStruct(e,t,i){t!=i&&(this.nested(t),this.slot(e))}nested(e){if(e!=this.offset())throw new Error("FlatBuffers: struct must be serialized inline.")}notNested(){if(this.isNested)throw new Error("FlatBuffers: object serialization must not be nested.")}slot(e){this.vtable!==null&&(this.vtable[e]=this.offset())}offset(){return this.bb.capacity()-this.space}static growByteBuffer(e){const t=e.capacity();if(t&3221225472)throw new Error("FlatBuffers: cannot grow buffer beyond 2 gigabytes.");const i=t<<1,n=or.allocate(i);return n.setPosition(i-t),n.bytes().set(e.bytes(),i-t),n}addOffset(e){this.prep(bn,0),this.writeInt32(this.offset()-e+bn)}startObject(e){this.notNested(),this.vtable==null&&(this.vtable=[]),this.vtable_in_use=e;for(let t=0;t<e;t++)this.vtable[t]=0;this.isNested=!0,this.object_start=this.offset()}endObject(){if(this.vtable==null||!this.isNested)throw new Error("FlatBuffers: endObject called without startObject");this.addInt32(0);const e=this.offset();let t=this.vtable_in_use-1;for(;t>=0&&this.vtable[t]==0;t--);const i=t+1;for(;t>=0;t--)this.addInt16(this.vtable[t]!=0?e-this.vtable[t]:0);const n=2;this.addInt16(e-this.object_start);const s=(i+n)*qh;this.addInt16(s);let o=0;const a=this.space;e:for(t=0;t<this.vtables.length;t++){const l=this.bb.capacity()-this.vtables[t];if(s==this.bb.readInt16(l)){for(let c=qh;c<s;c+=qh)if(this.bb.readInt16(a+c)!=this.bb.readInt16(l+c))continue e;o=this.vtables[t];break}}return o?(this.space=this.bb.capacity()-e,this.bb.writeInt32(this.space,o-e)):(this.vtables.push(this.offset()),this.bb.writeInt32(this.bb.capacity()-e,this.offset()-e)),this.isNested=!1,e}finish(e,t,i){const n=i?Vi:0;if(t){const s=t;if(this.prep(this.minalign,bn+Hn+n),s.length!=Hn)throw new Error("FlatBuffers: file identifier must be length "+Hn);for(let o=Hn-1;o>=0;o--)this.writeInt8(s.charCodeAt(o))}this.prep(this.minalign,bn+n),this.addOffset(e),n&&this.addInt32(this.bb.capacity()-this.space),this.bb.setPosition(this.space)}finishSizePrefixed(e,t){this.finish(e,t,!0)}requiredField(e,t){const i=this.bb.capacity()-e,n=i-this.bb.readInt32(i);if(!(t<this.bb.readInt16(n)&&this.bb.readInt16(n+t)!=0))throw new Error("FlatBuffers: field "+t+" must be set")}startVector(e,t,i){this.notNested(),this.vector_num_elems=t,this.prep(bn,e*t),this.prep(i,e*t)}endVector(){return this.writeInt32(this.vector_num_elems),this.offset()}createSharedString(e){if(!e)return 0;if(this.string_maps||(this.string_maps=new Map),this.string_maps.has(e))return this.string_maps.get(e);const t=this.createString(e);return this.string_maps.set(e,t),t}createString(e){if(e==null)return 0;let t;e instanceof Uint8Array?t=e:t=this.text_encoder.encode(e),this.addInt8(0),this.startVector(1,t.length,1),this.bb.setPosition(this.space-=t.length);for(let i=0,n=this.space,s=this.bb.bytes();i<t.length;i++)s[n++]=t[i];return this.endVector()}createObjectOffset(e){return e===null?0:typeof e=="string"?this.createString(e):e.pack(this)}createObjectOffsetList(e){const t=[];for(let i=0;i<e.length;++i){const n=e[i];if(n!==null)t.push(this.createObjectOffset(n));else throw new Error("FlatBuffers: Argument for createObjectOffsetList cannot contain null.")}return t}createStructOffsetList(e,t){return t(this,e.length),this.createObjectOffsetList(e.slice().reverse()),this.endVector()}}let fc=class Ws{constructor(){we(this,"bb",null),we(this,"bb_pos",0)}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsCivilCurve(e,t){return(t||new Ws).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsCivilCurve(e,t){return e.setPosition(e.position()+Vi),(t||new Ws).__init(e.readInt32(e.position())+e.position(),e)}points(e){const t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readFloat32(this.bb.__vector(this.bb_pos+t)+e*4):0}pointsLength(){const e=this.bb.__offset(this.bb_pos,4);return e?this.bb.__vector_len(this.bb_pos+e):0}pointsArray(){const e=this.bb.__offset(this.bb_pos,4);return e?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}data(e){const t=this.bb.__offset(this.bb_pos,6);return t?this.bb.__string(this.bb_pos+t,e):null}static startCivilCurve(e){e.startObject(2)}static addPoints(e,t){e.addFieldOffset(0,t,0)}static createPointsVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addFloat32(t[i]);return e.endVector()}static startPointsVector(e,t){e.startVector(4,t,4)}static addData(e,t){e.addFieldOffset(1,t,0)}static endCivilCurve(e){return e.endObject()}static createCivilCurve(e,t,i){return Ws.startCivilCurve(e),Ws.addPoints(e,t),Ws.addData(e,i),Ws.endCivilCurve(e)}},ME=class Un{constructor(){we(this,"bb",null),we(this,"bb_pos",0)}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsAlignment(e,t){return(t||new Un).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsAlignment(e,t){return e.setPosition(e.position()+Vi),(t||new Un).__init(e.readInt32(e.position())+e.position(),e)}vertical(e,t){const i=this.bb.__offset(this.bb_pos,4);return i?(t||new fc).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+i)+e*4),this.bb):null}verticalLength(){const e=this.bb.__offset(this.bb_pos,4);return e?this.bb.__vector_len(this.bb_pos+e):0}horizontal(e,t){const i=this.bb.__offset(this.bb_pos,6);return i?(t||new fc).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+i)+e*4),this.bb):null}horizontalLength(){const e=this.bb.__offset(this.bb_pos,6);return e?this.bb.__vector_len(this.bb_pos+e):0}absolute(e,t){const i=this.bb.__offset(this.bb_pos,8);return i?(t||new fc).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+i)+e*4),this.bb):null}absoluteLength(){const e=this.bb.__offset(this.bb_pos,8);return e?this.bb.__vector_len(this.bb_pos+e):0}initialPk(){const e=this.bb.__offset(this.bb_pos,10);return e?this.bb.readFloat32(this.bb_pos+e):0}static startAlignment(e){e.startObject(4)}static addVertical(e,t){e.addFieldOffset(0,t,0)}static createVerticalVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addOffset(t[i]);return e.endVector()}static startVerticalVector(e,t){e.startVector(4,t,4)}static addHorizontal(e,t){e.addFieldOffset(1,t,0)}static createHorizontalVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addOffset(t[i]);return e.endVector()}static startHorizontalVector(e,t){e.startVector(4,t,4)}static addAbsolute(e,t){e.addFieldOffset(2,t,0)}static createAbsoluteVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addOffset(t[i]);return e.endVector()}static startAbsoluteVector(e,t){e.startVector(4,t,4)}static addInitialPk(e,t){e.addFieldFloat32(3,t,0)}static endAlignment(e){return e.endObject()}static createAlignment(e,t,i,n,s){return Un.startAlignment(e),Un.addVertical(e,t),Un.addHorizontal(e,i),Un.addAbsolute(e,n),Un.addInitialPk(e,s),Un.endAlignment(e)}},FE=class Ys{constructor(){we(this,"bb",null),we(this,"bb_pos",0)}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsCivilData(e,t){return(t||new Ys).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsCivilData(e,t){return e.setPosition(e.position()+Vi),(t||new Ys).__init(e.readInt32(e.position())+e.position(),e)}alignments(e,t){const i=this.bb.__offset(this.bb_pos,4);return i?(t||new ME).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+i)+e*4),this.bb):null}alignmentsLength(){const e=this.bb.__offset(this.bb_pos,4);return e?this.bb.__vector_len(this.bb_pos+e):0}coordinationMatrix(e){const t=this.bb.__offset(this.bb_pos,6);return t?this.bb.readFloat32(this.bb.__vector(this.bb_pos+t)+e*4):0}coordinationMatrixLength(){const e=this.bb.__offset(this.bb_pos,6);return e?this.bb.__vector_len(this.bb_pos+e):0}coordinationMatrixArray(){const e=this.bb.__offset(this.bb_pos,6);return e?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}static startCivilData(e){e.startObject(2)}static addAlignments(e,t){e.addFieldOffset(0,t,0)}static createAlignmentsVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addOffset(t[i]);return e.endVector()}static startAlignmentsVector(e,t){e.startVector(4,t,4)}static addCoordinationMatrix(e,t){e.addFieldOffset(1,t,0)}static createCoordinationMatrixVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addFloat32(t[i]);return e.endVector()}static startCoordinationMatrixVector(e,t){e.startVector(4,t,4)}static endCivilData(e){return e.endObject()}static createCivilData(e,t,i){return Ys.startCivilData(e),Ys.addAlignments(e,t),Ys.addCoordinationMatrix(e,i),Ys.endCivilData(e)}},Yu=class ei{constructor(){we(this,"bb",null),we(this,"bb_pos",0)}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsFragment(e,t){return(t||new ei).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsFragment(e,t){return e.setPosition(e.position()+Vi),(t||new ei).__init(e.readInt32(e.position())+e.position(),e)}position(e){const t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readFloat32(this.bb.__vector(this.bb_pos+t)+e*4):0}positionLength(){const e=this.bb.__offset(this.bb_pos,4);return e?this.bb.__vector_len(this.bb_pos+e):0}positionArray(){const e=this.bb.__offset(this.bb_pos,4);return e?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}normal(e){const t=this.bb.__offset(this.bb_pos,6);return t?this.bb.readFloat32(this.bb.__vector(this.bb_pos+t)+e*4):0}normalLength(){const e=this.bb.__offset(this.bb_pos,6);return e?this.bb.__vector_len(this.bb_pos+e):0}normalArray(){const e=this.bb.__offset(this.bb_pos,6);return e?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}index(e){const t=this.bb.__offset(this.bb_pos,8);return t?this.bb.readUint32(this.bb.__vector(this.bb_pos+t)+e*4):0}indexLength(){const e=this.bb.__offset(this.bb_pos,8);return e?this.bb.__vector_len(this.bb_pos+e):0}indexArray(){const e=this.bb.__offset(this.bb_pos,8);return e?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}groups(e){const t=this.bb.__offset(this.bb_pos,10);return t?this.bb.readFloat32(this.bb.__vector(this.bb_pos+t)+e*4):0}groupsLength(){const e=this.bb.__offset(this.bb_pos,10);return e?this.bb.__vector_len(this.bb_pos+e):0}groupsArray(){const e=this.bb.__offset(this.bb_pos,10);return e?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}materials(e){const t=this.bb.__offset(this.bb_pos,12);return t?this.bb.readFloat32(this.bb.__vector(this.bb_pos+t)+e*4):0}materialsLength(){const e=this.bb.__offset(this.bb_pos,12);return e?this.bb.__vector_len(this.bb_pos+e):0}materialsArray(){const e=this.bb.__offset(this.bb_pos,12);return e?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}matrices(e){const t=this.bb.__offset(this.bb_pos,14);return t?this.bb.readFloat32(this.bb.__vector(this.bb_pos+t)+e*4):0}matricesLength(){const e=this.bb.__offset(this.bb_pos,14);return e?this.bb.__vector_len(this.bb_pos+e):0}matricesArray(){const e=this.bb.__offset(this.bb_pos,14);return e?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}colors(e){const t=this.bb.__offset(this.bb_pos,16);return t?this.bb.readFloat32(this.bb.__vector(this.bb_pos+t)+e*4):0}colorsLength(){const e=this.bb.__offset(this.bb_pos,16);return e?this.bb.__vector_len(this.bb_pos+e):0}colorsArray(){const e=this.bb.__offset(this.bb_pos,16);return e?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}itemsSize(e){const t=this.bb.__offset(this.bb_pos,18);return t?this.bb.readUint32(this.bb.__vector(this.bb_pos+t)+e*4):0}itemsSizeLength(){const e=this.bb.__offset(this.bb_pos,18);return e?this.bb.__vector_len(this.bb_pos+e):0}itemsSizeArray(){const e=this.bb.__offset(this.bb_pos,18);return e?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}ids(e){const t=this.bb.__offset(this.bb_pos,20);return t?this.bb.readUint32(this.bb.__vector(this.bb_pos+t)+e*4):0}idsLength(){const e=this.bb.__offset(this.bb_pos,20);return e?this.bb.__vector_len(this.bb_pos+e):0}idsArray(){const e=this.bb.__offset(this.bb_pos,20);return e?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}id(e){const t=this.bb.__offset(this.bb_pos,22);return t?this.bb.__string(this.bb_pos+t,e):null}capacity(){const e=this.bb.__offset(this.bb_pos,24);return e?this.bb.readUint32(this.bb_pos+e):0}capacityOffset(){const e=this.bb.__offset(this.bb_pos,26);return e?this.bb.readUint32(this.bb_pos+e):0}static startFragment(e){e.startObject(12)}static addPosition(e,t){e.addFieldOffset(0,t,0)}static createPositionVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addFloat32(t[i]);return e.endVector()}static startPositionVector(e,t){e.startVector(4,t,4)}static addNormal(e,t){e.addFieldOffset(1,t,0)}static createNormalVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addFloat32(t[i]);return e.endVector()}static startNormalVector(e,t){e.startVector(4,t,4)}static addIndex(e,t){e.addFieldOffset(2,t,0)}static createIndexVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addInt32(t[i]);return e.endVector()}static startIndexVector(e,t){e.startVector(4,t,4)}static addGroups(e,t){e.addFieldOffset(3,t,0)}static createGroupsVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addFloat32(t[i]);return e.endVector()}static startGroupsVector(e,t){e.startVector(4,t,4)}static addMaterials(e,t){e.addFieldOffset(4,t,0)}static createMaterialsVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addFloat32(t[i]);return e.endVector()}static startMaterialsVector(e,t){e.startVector(4,t,4)}static addMatrices(e,t){e.addFieldOffset(5,t,0)}static createMatricesVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addFloat32(t[i]);return e.endVector()}static startMatricesVector(e,t){e.startVector(4,t,4)}static addColors(e,t){e.addFieldOffset(6,t,0)}static createColorsVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addFloat32(t[i]);return e.endVector()}static startColorsVector(e,t){e.startVector(4,t,4)}static addItemsSize(e,t){e.addFieldOffset(7,t,0)}static createItemsSizeVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addInt32(t[i]);return e.endVector()}static startItemsSizeVector(e,t){e.startVector(4,t,4)}static addIds(e,t){e.addFieldOffset(8,t,0)}static createIdsVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addInt32(t[i]);return e.endVector()}static startIdsVector(e,t){e.startVector(4,t,4)}static addId(e,t){e.addFieldOffset(9,t,0)}static addCapacity(e,t){e.addFieldInt32(10,t,0)}static addCapacityOffset(e,t){e.addFieldInt32(11,t,0)}static endFragment(e){return e.endObject()}static createFragment(e,t,i,n,s,o,a,l,c,h,d,u,f){return ei.startFragment(e),ei.addPosition(e,t),ei.addNormal(e,i),ei.addIndex(e,n),ei.addGroups(e,s),ei.addMaterials(e,o),ei.addMatrices(e,a),ei.addColors(e,l),ei.addItemsSize(e,c),ei.addIds(e,h),ei.addId(e,d),ei.addCapacity(e,u),ei.addCapacityOffset(e,f),ei.endFragment(e)}},Kh=class Xu{constructor(){we(this,"bb",null),we(this,"bb_pos",0)}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsFragmentsGroup(e,t){return(t||new Xu).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsFragmentsGroup(e,t){return e.setPosition(e.position()+Vi),(t||new Xu).__init(e.readInt32(e.position())+e.position(),e)}items(e,t){const i=this.bb.__offset(this.bb_pos,4);return i?(t||new Yu).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+i)+e*4),this.bb):null}itemsLength(){const e=this.bb.__offset(this.bb_pos,4);return e?this.bb.__vector_len(this.bb_pos+e):0}civil(e){const t=this.bb.__offset(this.bb_pos,6);return t?(e||new FE).__init(this.bb.__indirect(this.bb_pos+t),this.bb):null}coordinationMatrix(e){const t=this.bb.__offset(this.bb_pos,8);return t?this.bb.readFloat32(this.bb.__vector(this.bb_pos+t)+e*4):0}coordinationMatrixLength(){const e=this.bb.__offset(this.bb_pos,8);return e?this.bb.__vector_len(this.bb_pos+e):0}coordinationMatrixArray(){const e=this.bb.__offset(this.bb_pos,8);return e?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}ids(e){const t=this.bb.__offset(this.bb_pos,10);return t?this.bb.readUint32(this.bb.__vector(this.bb_pos+t)+e*4):0}idsLength(){const e=this.bb.__offset(this.bb_pos,10);return e?this.bb.__vector_len(this.bb_pos+e):0}idsArray(){const e=this.bb.__offset(this.bb_pos,10);return e?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}itemsKeys(e){const t=this.bb.__offset(this.bb_pos,12);return t?this.bb.readUint32(this.bb.__vector(this.bb_pos+t)+e*4):0}itemsKeysLength(){const e=this.bb.__offset(this.bb_pos,12);return e?this.bb.__vector_len(this.bb_pos+e):0}itemsKeysArray(){const e=this.bb.__offset(this.bb_pos,12);return e?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}itemsKeysIndices(e){const t=this.bb.__offset(this.bb_pos,14);return t?this.bb.readUint32(this.bb.__vector(this.bb_pos+t)+e*4):0}itemsKeysIndicesLength(){const e=this.bb.__offset(this.bb_pos,14);return e?this.bb.__vector_len(this.bb_pos+e):0}itemsKeysIndicesArray(){const e=this.bb.__offset(this.bb_pos,14);return e?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}itemsRels(e){const t=this.bb.__offset(this.bb_pos,16);return t?this.bb.readUint32(this.bb.__vector(this.bb_pos+t)+e*4):0}itemsRelsLength(){const e=this.bb.__offset(this.bb_pos,16);return e?this.bb.__vector_len(this.bb_pos+e):0}itemsRelsArray(){const e=this.bb.__offset(this.bb_pos,16);return e?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}itemsRelsIndices(e){const t=this.bb.__offset(this.bb_pos,18);return t?this.bb.readUint32(this.bb.__vector(this.bb_pos+t)+e*4):0}itemsRelsIndicesLength(){const e=this.bb.__offset(this.bb_pos,18);return e?this.bb.__vector_len(this.bb_pos+e):0}itemsRelsIndicesArray(){const e=this.bb.__offset(this.bb_pos,18);return e?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}fragmentKeys(e){const t=this.bb.__offset(this.bb_pos,20);return t?this.bb.__string(this.bb_pos+t,e):null}id(e){const t=this.bb.__offset(this.bb_pos,22);return t?this.bb.__string(this.bb_pos+t,e):null}name(e){const t=this.bb.__offset(this.bb_pos,24);return t?this.bb.__string(this.bb_pos+t,e):null}ifcName(e){const t=this.bb.__offset(this.bb_pos,26);return t?this.bb.__string(this.bb_pos+t,e):null}ifcDescription(e){const t=this.bb.__offset(this.bb_pos,28);return t?this.bb.__string(this.bb_pos+t,e):null}ifcSchema(e){const t=this.bb.__offset(this.bb_pos,30);return t?this.bb.__string(this.bb_pos+t,e):null}maxExpressId(){const e=this.bb.__offset(this.bb_pos,32);return e?this.bb.readUint32(this.bb_pos+e):0}boundingBox(e){const t=this.bb.__offset(this.bb_pos,34);return t?this.bb.readFloat32(this.bb.__vector(this.bb_pos+t)+e*4):0}boundingBoxLength(){const e=this.bb.__offset(this.bb_pos,34);return e?this.bb.__vector_len(this.bb_pos+e):0}boundingBoxArray(){const e=this.bb.__offset(this.bb_pos,34);return e?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}opaqueGeometriesIds(e){const t=this.bb.__offset(this.bb_pos,36);return t?this.bb.readInt32(this.bb.__vector(this.bb_pos+t)+e*4):0}opaqueGeometriesIdsLength(){const e=this.bb.__offset(this.bb_pos,36);return e?this.bb.__vector_len(this.bb_pos+e):0}opaqueGeometriesIdsArray(){const e=this.bb.__offset(this.bb_pos,36);return e?new Int32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}transparentGeometriesIds(e){const t=this.bb.__offset(this.bb_pos,38);return t?this.bb.readInt32(this.bb.__vector(this.bb_pos+t)+e*4):0}transparentGeometriesIdsLength(){const e=this.bb.__offset(this.bb_pos,38);return e?this.bb.__vector_len(this.bb_pos+e):0}transparentGeometriesIdsArray(){const e=this.bb.__offset(this.bb_pos,38);return e?new Int32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}static startFragmentsGroup(e){e.startObject(18)}static addItems(e,t){e.addFieldOffset(0,t,0)}static createItemsVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addOffset(t[i]);return e.endVector()}static startItemsVector(e,t){e.startVector(4,t,4)}static addCivil(e,t){e.addFieldOffset(1,t,0)}static addCoordinationMatrix(e,t){e.addFieldOffset(2,t,0)}static createCoordinationMatrixVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addFloat32(t[i]);return e.endVector()}static startCoordinationMatrixVector(e,t){e.startVector(4,t,4)}static addIds(e,t){e.addFieldOffset(3,t,0)}static createIdsVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addInt32(t[i]);return e.endVector()}static startIdsVector(e,t){e.startVector(4,t,4)}static addItemsKeys(e,t){e.addFieldOffset(4,t,0)}static createItemsKeysVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addInt32(t[i]);return e.endVector()}static startItemsKeysVector(e,t){e.startVector(4,t,4)}static addItemsKeysIndices(e,t){e.addFieldOffset(5,t,0)}static createItemsKeysIndicesVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addInt32(t[i]);return e.endVector()}static startItemsKeysIndicesVector(e,t){e.startVector(4,t,4)}static addItemsRels(e,t){e.addFieldOffset(6,t,0)}static createItemsRelsVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addInt32(t[i]);return e.endVector()}static startItemsRelsVector(e,t){e.startVector(4,t,4)}static addItemsRelsIndices(e,t){e.addFieldOffset(7,t,0)}static createItemsRelsIndicesVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addInt32(t[i]);return e.endVector()}static startItemsRelsIndicesVector(e,t){e.startVector(4,t,4)}static addFragmentKeys(e,t){e.addFieldOffset(8,t,0)}static addId(e,t){e.addFieldOffset(9,t,0)}static addName(e,t){e.addFieldOffset(10,t,0)}static addIfcName(e,t){e.addFieldOffset(11,t,0)}static addIfcDescription(e,t){e.addFieldOffset(12,t,0)}static addIfcSchema(e,t){e.addFieldOffset(13,t,0)}static addMaxExpressId(e,t){e.addFieldInt32(14,t,0)}static addBoundingBox(e,t){e.addFieldOffset(15,t,0)}static createBoundingBoxVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addFloat32(t[i]);return e.endVector()}static startBoundingBoxVector(e,t){e.startVector(4,t,4)}static addOpaqueGeometriesIds(e,t){e.addFieldOffset(16,t,0)}static createOpaqueGeometriesIdsVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addInt32(t[i]);return e.endVector()}static startOpaqueGeometriesIdsVector(e,t){e.startVector(4,t,4)}static addTransparentGeometriesIds(e,t){e.addFieldOffset(17,t,0)}static createTransparentGeometriesIdsVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addInt32(t[i]);return e.endVector()}static startTransparentGeometriesIdsVector(e,t){e.startVector(4,t,4)}static endFragmentsGroup(e){return e.endObject()}static finishFragmentsGroupBuffer(e,t){e.finish(t)}static finishSizePrefixedFragmentsGroupBuffer(e,t){e.finish(t,void 0,!0)}};class $x{constructor(){we(this,"version",1),we(this,"fragmentIDSeparator","|")}import(e){const t=new or(e),i=Kh.getRootAsFragmentsGroup(t),n=this.constructFragmentGroup(i),s=i.itemsLength();for(let o=0;o<s;o++){const a=i.items(o);if(!a)continue;const l=this.constructGeometry(a),c=this.constructMaterials(a),h=a.capacity(),d=new Co(l,c,h);d.capacityOffset=a.capacityOffset(),this.setInstances(a,d),this.setID(a,d),n.items.push(d),n.add(d.mesh)}return n}export(e){const t=new Fa(1024),i=[],n=Kh,s=Yu;let o=null;if(e.civilData){const W=[],Y=ME,q=FE;for(const[Ie,ve]of e.civilData.alignments){const{absolute:pe,horizontal:_e,vertical:Ee}=ve,Ae=this.saveCivilCurves(_e,t),ie=this.saveCivilCurves(Ee,t),$e=this.saveCivilCurves(pe,t),M=Y.createHorizontalVector(t,Ae),ee=Y.createVerticalVector(t,ie),K=Y.createAbsoluteVector(t,$e);Y.startAlignment(t),Y.addHorizontal(t,M),Y.addVertical(t,ee),Y.addAbsolute(t,K),Y.addInitialPk(t,ve.initialKP);const H=Y.endAlignment(t);W.push(H)}const Q=q.createAlignmentsVector(t,W),te=q.createCoordinationMatrixVector(t,e.coordinationMatrix.elements);q.startCivilData(t),q.addAlignments(t,Q),q.addCoordinationMatrix(t,te),o=q.endCivilData(t)}for(const W of e.items){const Y=W.exportData(),q=[];for(const ee of W.ids){const K=W.getInstancesIDs(ee);if(!K)throw new Error("Instances not found!");q.push(K.size)}const Q=s.createPositionVector(t,Y.position),te=s.createNormalVector(t,Y.normal),Ie=s.createIndexVector(t,Y.index),ve=s.createGroupsVector(t,Y.groups),pe=s.createMaterialsVector(t,Y.materials),_e=s.createMatricesVector(t,Y.matrices),Ee=s.createColorsVector(t,Y.colors),Ae=s.createIdsVector(t,Y.ids),ie=s.createItemsSizeVector(t,q),$e=t.createString(Y.id);s.startFragment(t),s.addPosition(t,Q),s.addNormal(t,te),s.addIndex(t,Ie),s.addGroups(t,ve),s.addMaterials(t,pe),s.addMatrices(t,_e),s.addColors(t,Ee),s.addIds(t,Ae),s.addItemsSize(t,ie),s.addId(t,$e),s.addCapacity(t,W.capacity),s.addCapacityOffset(t,W.capacityOffset);const M=Yu.endFragment(t);i.push(M)}const a=n.createItemsVector(t,i),l=n.createCoordinationMatrixVector(t,e.coordinationMatrix.elements);let c="";for(const W of e.keyFragments.values())c.length&&(c+=this.fragmentIDSeparator),c+=W;const h=t.createString(c),d=[],u=[],f=[],m=[],E=[];let g=0,p=0;for(const[W,[Y,q]]of e.data){d.push(g),f.push(p),E.push(W);for(const Q of Y)u.push(Q);for(const Q of q)m.push(Q);g+=Y.length,p+=q.length}const _=[],T=[];for(const[W,Y]of e.geometryIDs.opaque)_.push(W,Y);for(const[W,Y]of e.geometryIDs.transparent)T.push(W,Y);const I=t.createString(e.uuid),v=t.createString(e.name),b=t.createString(e.ifcMetadata.name),x=t.createString(e.ifcMetadata.description),A=t.createString(e.ifcMetadata.schema),y=n.createItemsKeysIndicesVector(t,d),S=n.createItemsKeysVector(t,u),O=n.createItemsRelsIndicesVector(t,f),w=n.createItemsRelsVector(t,m),N=n.createIdsVector(t,E),C=n.createOpaqueGeometriesIdsVector(t,_),U=n.createTransparentGeometriesIdsVector(t,T),{min:B,max:V}=e.boundingBox,j=[B.x,B.y,B.z,V.x,V.y,V.z],G=n.createBoundingBoxVector(t,j);n.startFragmentsGroup(t),n.addId(t,I),n.addName(t,v),n.addIfcName(t,b),n.addIfcDescription(t,x),n.addIfcSchema(t,A),n.addMaxExpressId(t,e.ifcMetadata.maxExpressID),n.addItems(t,a),n.addFragmentKeys(t,h),n.addIds(t,N),n.addItemsKeysIndices(t,y),n.addItemsKeys(t,S),n.addItemsRelsIndices(t,O),n.addItemsRels(t,w),n.addCoordinationMatrix(t,l),n.addBoundingBox(t,G),n.addOpaqueGeometriesIds(t,C),n.addTransparentGeometriesIds(t,U),o!==null&&n.addCivil(t,o);const se=Kh.endFragmentsGroup(t);return t.finish(se),t.asUint8Array()}setID(e,t){const i=e.id();i&&(t.id=i,t.mesh.uuid=i)}setInstances(e,t){const i=e.matricesArray(),n=e.colorsArray(),s=e.idsArray(),o=e.itemsSizeArray();if(!i||!s||!o)throw new Error("Error: Can't load empty fragment!");const a=[];let l=0;for(let c=0;c<o.length;c++){const h=s[c],d=o[c],u=[],f=[];for(let E=0;E<d;E++){const g=l*16,p=i.subarray(g,g+17),_=new fe().fromArray(p);if(u.push(_),n){const T=l*3,[I,v,b]=n.subarray(T,T+4),x=new Fe(I,v,b);f.push(x)}l++}const m=f.length?f:void 0;a.push({id:h,transforms:u,colors:m})}t.add(a)}constructMaterials(e){const t=e.materialsArray(),i=[];if(!t)return i;for(let n=0;n<t.length;n+=5){const s=t[n],o=!!t[n+1],a=t[n+2],l=t[n+3],c=t[n+4],h=new Fe(a,l,c),d=new vo({color:h,opacity:s,transparent:o});i.push(d)}return i}constructFragmentGroup(e){const t=new hn,i=e.civil();if(i){const A=i.coordinationMatrixArray(),y=new fe;A&&y.fromArray(A),t.civilData={alignments:new Map,coordinationMatrix:y};const S=i.alignmentsLength();for(let O=0;O<S;O++){const w=new pn({color:16777215}),N=new rf,C=i.alignments(O);if(!C)throw new Error("Alignment not found!");const U=C.horizontalLength();N.horizontal=this.constructCivilCurves(C,N,"horizontal",U,w);const B=C.verticalLength();N.vertical=this.constructCivilCurves(C,N,"vertical",B,w);const V=C.horizontalLength();N.absolute=this.constructCivilCurves(C,N,"absolute",V,w),N.initialKP=C.initialPk(),t.civilData.alignments.set(O,N)}}t.uuid=e.id()||t.uuid,t.name=e.name()||"",t.ifcMetadata={name:e.ifcName()||"",description:e.ifcDescription()||"",schema:e.ifcSchema()||"IFC2X3",maxExpressID:e.maxExpressId()||0};const n=new fe().elements,s=e.coordinationMatrixArray()||n,o=e.idsArray()||new Uint32Array,a=e.itemsKeysIndicesArray()||new Uint32Array,l=e.itemsKeysArray()||new Uint32Array,c=e.itemsRelsArray()||new Uint32Array,h=e.itemsRelsIndicesArray()||new Uint32Array,u=(e.fragmentKeys()||"").split(this.fragmentIDSeparator);this.setGroupData(t,o,a,l,0),this.setGroupData(t,o,h,c,1);const f=e.opaqueGeometriesIdsArray()||new Uint32Array,m=e.transparentGeometriesIdsArray()||new Uint32Array,E=new Map;for(let A=0;A<f.length-1;A+=2){const y=f[A],S=f[A+1];E.set(y,S)}const g=new Map;for(let A=0;A<m.length-1;A+=2){const y=m[A],S=m[A+1];g.set(y,S)}t.geometryIDs={opaque:E,transparent:g};const p=e.boundingBoxArray()||[0,0,0,0,0,0],[_,T,I,v,b,x]=p;t.boundingBox.min.set(_,T,I),t.boundingBox.max.set(v,b,x);for(let A=0;A<u.length;A++)t.keyFragments.set(A,u[A]);return s.length===16&&t.coordinationMatrix.fromArray(s),t}setGroupData(e,t,i,n,s){for(let o=0;o<i.length;o++){const a=t[o],l=i[o],c=i[o+1]||n.length,h=[];for(let u=l;u<c;u++)h.push(n[u]);e.data.has(a)||e.data.set(a,[[],[]]);const d=e.data.get(a);d&&(d[s]=h)}}constructGeometry(e){const t=e.positionArray()||new Float32Array,i=e.normalArray()||new Float32Array,n=e.indexArray(),s=e.groupsArray();if(!n)throw new Error("Index not found!");const o=new Ve;if(o.setIndex(Array.from(n)),o.setAttribute("position",new ot(t,3)),o.setAttribute("normal",new ot(i,3)),s)for(let a=0;a<s.length;a+=3){const l=s[a],c=s[a+1],h=s[a+2];o.addGroup(l,c,h)}return o}constructCivilCurves(e,t,i,n,s){const o=[];for(let a=0;a<n;a++){const l=e[i](a);if(!l)throw new Error("Curve not found!");const c=l.pointsArray();if(c===null)throw new Error("Curve points not found!");let h={};const d=l.data();d&&(h=JSON.parse(d));const u=new Jd,f=new ot(c,3);u.setAttribute("position",f);const m=[];for(let g=0;g<c.length/3-1;g++)m.push(g,g+1);u.setIndex(m);const E=new of(a,h,t,u,s);o.push(E.curve)}return o}saveCivilCurves(e,t){const i=fc,n=[];for(const s of e){const a=s.mesh.geometry.attributes.position.array,l=i.createPointsVector(t,a),c=t.createString(JSON.stringify(s.data));i.startCivilCurve(t),i.addPoints(t,l),i.addData(t,c);const h=i.endCivilCurve(t);n.push(h)}return n}}let pc=class Xs{constructor(){we(this,"bb",null),we(this,"bb_pos",0)}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsCivilCurve(e,t){return(t||new Xs).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsCivilCurve(e,t){return e.setPosition(e.position()+Vi),(t||new Xs).__init(e.readInt32(e.position())+e.position(),e)}points(e){const t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readFloat32(this.bb.__vector(this.bb_pos+t)+e*4):0}pointsLength(){const e=this.bb.__offset(this.bb_pos,4);return e?this.bb.__vector_len(this.bb_pos+e):0}pointsArray(){const e=this.bb.__offset(this.bb_pos,4);return e?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}data(e){const t=this.bb.__offset(this.bb_pos,6);return t?this.bb.__string(this.bb_pos+t,e):null}static startCivilCurve(e){e.startObject(2)}static addPoints(e,t){e.addFieldOffset(0,t,0)}static createPointsVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addFloat32(t[i]);return e.endVector()}static startPointsVector(e,t){e.startVector(4,t,4)}static addData(e,t){e.addFieldOffset(1,t,0)}static endCivilCurve(e){return e.endObject()}static createCivilCurve(e,t,i){return Xs.startCivilCurve(e),Xs.addPoints(e,t),Xs.addData(e,i),Xs.endCivilCurve(e)}},PE=class Bn{constructor(){we(this,"bb",null),we(this,"bb_pos",0)}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsAlignment(e,t){return(t||new Bn).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsAlignment(e,t){return e.setPosition(e.position()+Vi),(t||new Bn).__init(e.readInt32(e.position())+e.position(),e)}vertical(e,t){const i=this.bb.__offset(this.bb_pos,4);return i?(t||new pc).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+i)+e*4),this.bb):null}verticalLength(){const e=this.bb.__offset(this.bb_pos,4);return e?this.bb.__vector_len(this.bb_pos+e):0}horizontal(e,t){const i=this.bb.__offset(this.bb_pos,6);return i?(t||new pc).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+i)+e*4),this.bb):null}horizontalLength(){const e=this.bb.__offset(this.bb_pos,6);return e?this.bb.__vector_len(this.bb_pos+e):0}absolute(e,t){const i=this.bb.__offset(this.bb_pos,8);return i?(t||new pc).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+i)+e*4),this.bb):null}absoluteLength(){const e=this.bb.__offset(this.bb_pos,8);return e?this.bb.__vector_len(this.bb_pos+e):0}initialPk(){const e=this.bb.__offset(this.bb_pos,10);return e?this.bb.readFloat32(this.bb_pos+e):0}static startAlignment(e){e.startObject(4)}static addVertical(e,t){e.addFieldOffset(0,t,0)}static createVerticalVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addOffset(t[i]);return e.endVector()}static startVerticalVector(e,t){e.startVector(4,t,4)}static addHorizontal(e,t){e.addFieldOffset(1,t,0)}static createHorizontalVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addOffset(t[i]);return e.endVector()}static startHorizontalVector(e,t){e.startVector(4,t,4)}static addAbsolute(e,t){e.addFieldOffset(2,t,0)}static createAbsoluteVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addOffset(t[i]);return e.endVector()}static startAbsoluteVector(e,t){e.startVector(4,t,4)}static addInitialPk(e,t){e.addFieldFloat32(3,t,0)}static endAlignment(e){return e.endObject()}static createAlignment(e,t,i,n,s){return Bn.startAlignment(e),Bn.addVertical(e,t),Bn.addHorizontal(e,i),Bn.addAbsolute(e,n),Bn.addInitialPk(e,s),Bn.endAlignment(e)}};class Gn{constructor(){we(this,"bb",null),we(this,"bb_pos",0)}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsCivilData(e,t){return(t||new Gn).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsCivilData(e,t){return e.setPosition(e.position()+Vi),(t||new Gn).__init(e.readInt32(e.position())+e.position(),e)}alignments(e,t){const i=this.bb.__offset(this.bb_pos,4);return i?(t||new PE).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+i)+e*4),this.bb):null}alignmentsLength(){const e=this.bb.__offset(this.bb_pos,4);return e?this.bb.__vector_len(this.bb_pos+e):0}coordinationMatrix(e){const t=this.bb.__offset(this.bb_pos,6);return t?this.bb.readFloat32(this.bb.__vector(this.bb_pos+t)+e*4):0}coordinationMatrixLength(){const e=this.bb.__offset(this.bb_pos,6);return e?this.bb.__vector_len(this.bb_pos+e):0}coordinationMatrixArray(){const e=this.bb.__offset(this.bb_pos,6);return e?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}static startCivilData(e){e.startObject(2)}static addAlignments(e,t){e.addFieldOffset(0,t,0)}static createAlignmentsVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addOffset(t[i]);return e.endVector()}static startAlignmentsVector(e,t){e.startVector(4,t,4)}static addCoordinationMatrix(e,t){e.addFieldOffset(1,t,0)}static createCoordinationMatrixVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addFloat32(t[i]);return e.endVector()}static startCoordinationMatrixVector(e,t){e.startVector(4,t,4)}static endCivilData(e){return e.endObject()}static createCivilData(e,t,i){return Gn.startCivilData(e),Gn.addAlignments(e,t),Gn.addCoordinationMatrix(e,i),Gn.endCivilData(e)}}class Vt{constructor(){we(this,"bb",null),we(this,"bb_pos",0)}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsFragment(e,t){return(t||new Vt).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsFragment(e,t){return e.setPosition(e.position()+Vi),(t||new Vt).__init(e.readInt32(e.position())+e.position(),e)}position(e){const t=this.bb.__offset(this.bb_pos,4);return t?this.bb.readFloat32(this.bb.__vector(this.bb_pos+t)+e*4):0}positionLength(){const e=this.bb.__offset(this.bb_pos,4);return e?this.bb.__vector_len(this.bb_pos+e):0}positionArray(){const e=this.bb.__offset(this.bb_pos,4);return e?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}normal(e){const t=this.bb.__offset(this.bb_pos,6);return t?this.bb.readFloat32(this.bb.__vector(this.bb_pos+t)+e*4):0}normalLength(){const e=this.bb.__offset(this.bb_pos,6);return e?this.bb.__vector_len(this.bb_pos+e):0}normalArray(){const e=this.bb.__offset(this.bb_pos,6);return e?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}index(e){const t=this.bb.__offset(this.bb_pos,8);return t?this.bb.readUint32(this.bb.__vector(this.bb_pos+t)+e*4):0}indexLength(){const e=this.bb.__offset(this.bb_pos,8);return e?this.bb.__vector_len(this.bb_pos+e):0}indexArray(){const e=this.bb.__offset(this.bb_pos,8);return e?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}groups(e){const t=this.bb.__offset(this.bb_pos,10);return t?this.bb.readFloat32(this.bb.__vector(this.bb_pos+t)+e*4):0}groupsLength(){const e=this.bb.__offset(this.bb_pos,10);return e?this.bb.__vector_len(this.bb_pos+e):0}groupsArray(){const e=this.bb.__offset(this.bb_pos,10);return e?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}materials(e){const t=this.bb.__offset(this.bb_pos,12);return t?this.bb.readFloat32(this.bb.__vector(this.bb_pos+t)+e*4):0}materialsLength(){const e=this.bb.__offset(this.bb_pos,12);return e?this.bb.__vector_len(this.bb_pos+e):0}materialsArray(){const e=this.bb.__offset(this.bb_pos,12);return e?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}matrices(e){const t=this.bb.__offset(this.bb_pos,14);return t?this.bb.readFloat32(this.bb.__vector(this.bb_pos+t)+e*4):0}matricesLength(){const e=this.bb.__offset(this.bb_pos,14);return e?this.bb.__vector_len(this.bb_pos+e):0}matricesArray(){const e=this.bb.__offset(this.bb_pos,14);return e?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}colors(e){const t=this.bb.__offset(this.bb_pos,16);return t?this.bb.readFloat32(this.bb.__vector(this.bb_pos+t)+e*4):0}colorsLength(){const e=this.bb.__offset(this.bb_pos,16);return e?this.bb.__vector_len(this.bb_pos+e):0}colorsArray(){const e=this.bb.__offset(this.bb_pos,16);return e?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}itemsSize(e){const t=this.bb.__offset(this.bb_pos,18);return t?this.bb.readUint32(this.bb.__vector(this.bb_pos+t)+e*4):0}itemsSizeLength(){const e=this.bb.__offset(this.bb_pos,18);return e?this.bb.__vector_len(this.bb_pos+e):0}itemsSizeArray(){const e=this.bb.__offset(this.bb_pos,18);return e?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}ids(e){const t=this.bb.__offset(this.bb_pos,20);return t?this.bb.readUint32(this.bb.__vector(this.bb_pos+t)+e*4):0}idsLength(){const e=this.bb.__offset(this.bb_pos,20);return e?this.bb.__vector_len(this.bb_pos+e):0}idsArray(){const e=this.bb.__offset(this.bb_pos,20);return e?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}id(e){const t=this.bb.__offset(this.bb_pos,22);return t?this.bb.__string(this.bb_pos+t,e):null}capacity(){const e=this.bb.__offset(this.bb_pos,24);return e?this.bb.readUint32(this.bb_pos+e):0}capacityOffset(){const e=this.bb.__offset(this.bb_pos,26);return e?this.bb.readUint32(this.bb_pos+e):0}static startFragment(e){e.startObject(12)}static addPosition(e,t){e.addFieldOffset(0,t,0)}static createPositionVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addFloat32(t[i]);return e.endVector()}static startPositionVector(e,t){e.startVector(4,t,4)}static addNormal(e,t){e.addFieldOffset(1,t,0)}static createNormalVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addFloat32(t[i]);return e.endVector()}static startNormalVector(e,t){e.startVector(4,t,4)}static addIndex(e,t){e.addFieldOffset(2,t,0)}static createIndexVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addInt32(t[i]);return e.endVector()}static startIndexVector(e,t){e.startVector(4,t,4)}static addGroups(e,t){e.addFieldOffset(3,t,0)}static createGroupsVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addFloat32(t[i]);return e.endVector()}static startGroupsVector(e,t){e.startVector(4,t,4)}static addMaterials(e,t){e.addFieldOffset(4,t,0)}static createMaterialsVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addFloat32(t[i]);return e.endVector()}static startMaterialsVector(e,t){e.startVector(4,t,4)}static addMatrices(e,t){e.addFieldOffset(5,t,0)}static createMatricesVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addFloat32(t[i]);return e.endVector()}static startMatricesVector(e,t){e.startVector(4,t,4)}static addColors(e,t){e.addFieldOffset(6,t,0)}static createColorsVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addFloat32(t[i]);return e.endVector()}static startColorsVector(e,t){e.startVector(4,t,4)}static addItemsSize(e,t){e.addFieldOffset(7,t,0)}static createItemsSizeVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addInt32(t[i]);return e.endVector()}static startItemsSizeVector(e,t){e.startVector(4,t,4)}static addIds(e,t){e.addFieldOffset(8,t,0)}static createIdsVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addInt32(t[i]);return e.endVector()}static startIdsVector(e,t){e.startVector(4,t,4)}static addId(e,t){e.addFieldOffset(9,t,0)}static addCapacity(e,t){e.addFieldInt32(10,t,0)}static addCapacityOffset(e,t){e.addFieldInt32(11,t,0)}static endFragment(e){return e.endObject()}static createFragment(e,t,i,n,s,o,a,l,c,h,d,u,f){return Vt.startFragment(e),Vt.addPosition(e,t),Vt.addNormal(e,i),Vt.addIndex(e,n),Vt.addGroups(e,s),Vt.addMaterials(e,o),Vt.addMatrices(e,a),Vt.addColors(e,l),Vt.addItemsSize(e,c),Vt.addIds(e,h),Vt.addId(e,d),Vt.addCapacity(e,u),Vt.addCapacityOffset(e,f),Vt.endFragment(e)}}let Qh=class Zu{constructor(){we(this,"bb",null),we(this,"bb_pos",0)}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsFragmentsGroup(e,t){return(t||new Zu).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsFragmentsGroup(e,t){return e.setPosition(e.position()+Vi),(t||new Zu).__init(e.readInt32(e.position())+e.position(),e)}items(e,t){const i=this.bb.__offset(this.bb_pos,4);return i?(t||new Vt).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+i)+e*4),this.bb):null}itemsLength(){const e=this.bb.__offset(this.bb_pos,4);return e?this.bb.__vector_len(this.bb_pos+e):0}civil(e){const t=this.bb.__offset(this.bb_pos,6);return t?(e||new Gn).__init(this.bb.__indirect(this.bb_pos+t),this.bb):null}coordinationMatrix(e){const t=this.bb.__offset(this.bb_pos,8);return t?this.bb.readFloat32(this.bb.__vector(this.bb_pos+t)+e*4):0}coordinationMatrixLength(){const e=this.bb.__offset(this.bb_pos,8);return e?this.bb.__vector_len(this.bb_pos+e):0}coordinationMatrixArray(){const e=this.bb.__offset(this.bb_pos,8);return e?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}ids(e){const t=this.bb.__offset(this.bb_pos,10);return t?this.bb.readUint32(this.bb.__vector(this.bb_pos+t)+e*4):0}idsLength(){const e=this.bb.__offset(this.bb_pos,10);return e?this.bb.__vector_len(this.bb_pos+e):0}idsArray(){const e=this.bb.__offset(this.bb_pos,10);return e?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}itemsKeys(e){const t=this.bb.__offset(this.bb_pos,12);return t?this.bb.readUint32(this.bb.__vector(this.bb_pos+t)+e*4):0}itemsKeysLength(){const e=this.bb.__offset(this.bb_pos,12);return e?this.bb.__vector_len(this.bb_pos+e):0}itemsKeysArray(){const e=this.bb.__offset(this.bb_pos,12);return e?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}itemsKeysIndices(e){const t=this.bb.__offset(this.bb_pos,14);return t?this.bb.readUint32(this.bb.__vector(this.bb_pos+t)+e*4):0}itemsKeysIndicesLength(){const e=this.bb.__offset(this.bb_pos,14);return e?this.bb.__vector_len(this.bb_pos+e):0}itemsKeysIndicesArray(){const e=this.bb.__offset(this.bb_pos,14);return e?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}itemsRels(e){const t=this.bb.__offset(this.bb_pos,16);return t?this.bb.readUint32(this.bb.__vector(this.bb_pos+t)+e*4):0}itemsRelsLength(){const e=this.bb.__offset(this.bb_pos,16);return e?this.bb.__vector_len(this.bb_pos+e):0}itemsRelsArray(){const e=this.bb.__offset(this.bb_pos,16);return e?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}itemsRelsIndices(e){const t=this.bb.__offset(this.bb_pos,18);return t?this.bb.readUint32(this.bb.__vector(this.bb_pos+t)+e*4):0}itemsRelsIndicesLength(){const e=this.bb.__offset(this.bb_pos,18);return e?this.bb.__vector_len(this.bb_pos+e):0}itemsRelsIndicesArray(){const e=this.bb.__offset(this.bb_pos,18);return e?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}fragmentKeys(e){const t=this.bb.__offset(this.bb_pos,20);return t?this.bb.__string(this.bb_pos+t,e):null}globalIds(e){const t=this.bb.__offset(this.bb_pos,22);return t?this.bb.__string(this.bb_pos+t,e):null}id(e){const t=this.bb.__offset(this.bb_pos,24);return t?this.bb.__string(this.bb_pos+t,e):null}name(e){const t=this.bb.__offset(this.bb_pos,26);return t?this.bb.__string(this.bb_pos+t,e):null}ifcName(e){const t=this.bb.__offset(this.bb_pos,28);return t?this.bb.__string(this.bb_pos+t,e):null}ifcDescription(e){const t=this.bb.__offset(this.bb_pos,30);return t?this.bb.__string(this.bb_pos+t,e):null}ifcSchema(e){const t=this.bb.__offset(this.bb_pos,32);return t?this.bb.__string(this.bb_pos+t,e):null}maxExpressId(){const e=this.bb.__offset(this.bb_pos,34);return e?this.bb.readUint32(this.bb_pos+e):0}boundingBox(e){const t=this.bb.__offset(this.bb_pos,36);return t?this.bb.readFloat32(this.bb.__vector(this.bb_pos+t)+e*4):0}boundingBoxLength(){const e=this.bb.__offset(this.bb_pos,36);return e?this.bb.__vector_len(this.bb_pos+e):0}boundingBoxArray(){const e=this.bb.__offset(this.bb_pos,36);return e?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}opaqueGeometriesIds(e){const t=this.bb.__offset(this.bb_pos,38);return t?this.bb.readInt32(this.bb.__vector(this.bb_pos+t)+e*4):0}opaqueGeometriesIdsLength(){const e=this.bb.__offset(this.bb_pos,38);return e?this.bb.__vector_len(this.bb_pos+e):0}opaqueGeometriesIdsArray(){const e=this.bb.__offset(this.bb_pos,38);return e?new Int32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}transparentGeometriesIds(e){const t=this.bb.__offset(this.bb_pos,40);return t?this.bb.readInt32(this.bb.__vector(this.bb_pos+t)+e*4):0}transparentGeometriesIdsLength(){const e=this.bb.__offset(this.bb_pos,40);return e?this.bb.__vector_len(this.bb_pos+e):0}transparentGeometriesIdsArray(){const e=this.bb.__offset(this.bb_pos,40);return e?new Int32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}static startFragmentsGroup(e){e.startObject(19)}static addItems(e,t){e.addFieldOffset(0,t,0)}static createItemsVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addOffset(t[i]);return e.endVector()}static startItemsVector(e,t){e.startVector(4,t,4)}static addCivil(e,t){e.addFieldOffset(1,t,0)}static addCoordinationMatrix(e,t){e.addFieldOffset(2,t,0)}static createCoordinationMatrixVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addFloat32(t[i]);return e.endVector()}static startCoordinationMatrixVector(e,t){e.startVector(4,t,4)}static addIds(e,t){e.addFieldOffset(3,t,0)}static createIdsVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addInt32(t[i]);return e.endVector()}static startIdsVector(e,t){e.startVector(4,t,4)}static addItemsKeys(e,t){e.addFieldOffset(4,t,0)}static createItemsKeysVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addInt32(t[i]);return e.endVector()}static startItemsKeysVector(e,t){e.startVector(4,t,4)}static addItemsKeysIndices(e,t){e.addFieldOffset(5,t,0)}static createItemsKeysIndicesVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addInt32(t[i]);return e.endVector()}static startItemsKeysIndicesVector(e,t){e.startVector(4,t,4)}static addItemsRels(e,t){e.addFieldOffset(6,t,0)}static createItemsRelsVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addInt32(t[i]);return e.endVector()}static startItemsRelsVector(e,t){e.startVector(4,t,4)}static addItemsRelsIndices(e,t){e.addFieldOffset(7,t,0)}static createItemsRelsIndicesVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addInt32(t[i]);return e.endVector()}static startItemsRelsIndicesVector(e,t){e.startVector(4,t,4)}static addFragmentKeys(e,t){e.addFieldOffset(8,t,0)}static addGlobalIds(e,t){e.addFieldOffset(9,t,0)}static addId(e,t){e.addFieldOffset(10,t,0)}static addName(e,t){e.addFieldOffset(11,t,0)}static addIfcName(e,t){e.addFieldOffset(12,t,0)}static addIfcDescription(e,t){e.addFieldOffset(13,t,0)}static addIfcSchema(e,t){e.addFieldOffset(14,t,0)}static addMaxExpressId(e,t){e.addFieldInt32(15,t,0)}static addBoundingBox(e,t){e.addFieldOffset(16,t,0)}static createBoundingBoxVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addFloat32(t[i]);return e.endVector()}static startBoundingBoxVector(e,t){e.startVector(4,t,4)}static addOpaqueGeometriesIds(e,t){e.addFieldOffset(17,t,0)}static createOpaqueGeometriesIdsVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addInt32(t[i]);return e.endVector()}static startOpaqueGeometriesIdsVector(e,t){e.startVector(4,t,4)}static addTransparentGeometriesIds(e,t){e.addFieldOffset(18,t,0)}static createTransparentGeometriesIdsVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addInt32(t[i]);return e.endVector()}static startTransparentGeometriesIdsVector(e,t){e.startVector(4,t,4)}static endFragmentsGroup(e){return e.endObject()}static finishFragmentsGroupBuffer(e,t){e.finish(t)}static finishSizePrefixedFragmentsGroupBuffer(e,t){e.finish(t,void 0,!0)}};class ew{constructor(){we(this,"version",2),we(this,"separator","|")}import(e){const t=new or(e),i=Qh.getRootAsFragmentsGroup(t),n=this.constructFragmentGroup(i),s=i.itemsLength();for(let o=0;o<s;o++){const a=i.items(o);if(!a)continue;const l=this.constructGeometry(a),c=this.constructMaterials(a),h=a.capacity(),d=new Co(l,c,h);d.capacityOffset=a.capacityOffset(),this.setInstances(a,d),this.setID(a,d),n.items.push(d),n.add(d.mesh)}return n}export(e){const t=new Fa(1024),i=[],n=Qh,s=Vt;let o=null;if(e.civilData){const q=[],Q=PE,te=Gn;for(const[pe,_e]of e.civilData.alignments){const{absolute:Ee,horizontal:Ae,vertical:ie}=_e,$e=this.saveCivilCurves(Ae,t),M=this.saveCivilCurves(ie,t),ee=this.saveCivilCurves(Ee,t),K=Q.createHorizontalVector(t,$e),H=Q.createVerticalVector(t,M),z=Q.createAbsoluteVector(t,ee);Q.startAlignment(t),Q.addHorizontal(t,K),Q.addVertical(t,H),Q.addAbsolute(t,z),Q.addInitialPk(t,_e.initialKP);const P=Q.endAlignment(t);q.push(P)}const Ie=te.createAlignmentsVector(t,q),ve=te.createCoordinationMatrixVector(t,e.coordinationMatrix.elements);te.startCivilData(t),te.addAlignments(t,Ie),te.addCoordinationMatrix(t,ve),o=te.endCivilData(t)}for(const q of e.items){const Q=q.exportData(),te=[];for(const H of q.ids){const z=q.getInstancesIDs(H);if(!z)throw new Error("Instances not found!");te.push(z.size)}const Ie=s.createPositionVector(t,Q.position),ve=s.createNormalVector(t,Q.normal),pe=s.createIndexVector(t,Q.index),_e=s.createGroupsVector(t,Q.groups),Ee=s.createMaterialsVector(t,Q.materials),Ae=s.createMatricesVector(t,Q.matrices),ie=s.createColorsVector(t,Q.colors),$e=s.createIdsVector(t,Q.ids),M=s.createItemsSizeVector(t,te),ee=t.createString(Q.id);s.startFragment(t),s.addPosition(t,Ie),s.addNormal(t,ve),s.addIndex(t,pe),s.addGroups(t,_e),s.addMaterials(t,Ee),s.addMatrices(t,Ae),s.addColors(t,ie),s.addIds(t,$e),s.addItemsSize(t,M),s.addId(t,ee),s.addCapacity(t,q.capacity),s.addCapacityOffset(t,q.capacityOffset);const K=Vt.endFragment(t);i.push(K)}const a=n.createItemsVector(t,i),l=n.createCoordinationMatrixVector(t,e.coordinationMatrix.elements);let c="";for(const q of e.keyFragments.values())c.length&&(c+=this.separator),c+=q;let h="";for(const[q]of e.globalToExpressIDs)h.length&&(h+=this.separator),h+=q;const d=t.createString(c),u=t.createString(h),f=[],m=[],E=[],g=[],p=[];let _=0,T=0;for(const[q,[Q,te]]of e.data){f.push(_),E.push(T),p.push(q);for(const Ie of Q)m.push(Ie);for(const Ie of te)g.push(Ie);_+=Q.length,T+=te.length}const I=[],v=[];for(const[q,Q]of e.geometryIDs.opaque)I.push(q,Q);for(const[q,Q]of e.geometryIDs.transparent)v.push(q,Q);const b=t.createString(e.uuid),x=t.createString(e.name),A=t.createString(e.ifcMetadata.name),y=t.createString(e.ifcMetadata.description),S=t.createString(e.ifcMetadata.schema),O=n.createItemsKeysIndicesVector(t,f),w=n.createItemsKeysVector(t,m),N=n.createItemsRelsIndicesVector(t,E),C=n.createItemsRelsVector(t,g),U=n.createIdsVector(t,p),B=n.createOpaqueGeometriesIdsVector(t,I),V=n.createTransparentGeometriesIdsVector(t,v),{min:j,max:G}=e.boundingBox,se=[j.x,j.y,j.z,G.x,G.y,G.z],W=n.createBoundingBoxVector(t,se);n.startFragmentsGroup(t),n.addId(t,b),n.addName(t,x),n.addIfcName(t,A),n.addIfcDescription(t,y),n.addIfcSchema(t,S),n.addMaxExpressId(t,e.ifcMetadata.maxExpressID),n.addItems(t,a),n.addFragmentKeys(t,d),n.addGlobalIds(t,u),n.addIds(t,U),n.addItemsKeysIndices(t,O),n.addItemsKeys(t,w),n.addItemsRelsIndices(t,N),n.addItemsRels(t,C),n.addCoordinationMatrix(t,l),n.addBoundingBox(t,W),n.addOpaqueGeometriesIds(t,B),n.addTransparentGeometriesIds(t,V),o!==null&&n.addCivil(t,o);const Y=Qh.endFragmentsGroup(t);return t.finish(Y),t.asUint8Array()}setID(e,t){const i=e.id();i&&(t.id=i,t.mesh.uuid=i)}setInstances(e,t){const i=e.matricesArray(),n=e.colorsArray(),s=e.idsArray(),o=e.itemsSizeArray();if(!i||!s||!o)throw new Error("Error: Can't load empty fragment!");const a=[];let l=0;for(let c=0;c<o.length;c++){const h=s[c],d=o[c],u=[],f=[];for(let E=0;E<d;E++){const g=l*16,p=i.subarray(g,g+17),_=new fe().fromArray(p);if(u.push(_),n){const T=l*3,[I,v,b]=n.subarray(T,T+4),x=new Fe(I,v,b);f.push(x)}l++}const m=f.length?f:void 0;a.push({id:h,transforms:u,colors:m})}t.add(a)}constructMaterials(e){const t=e.materialsArray(),i=[];if(!t)return i;for(let n=0;n<t.length;n+=5){const s=t[n],o=!!t[n+1],a=t[n+2],l=t[n+3],c=t[n+4],h=new Fe(a,l,c),d=new vo({color:h,opacity:s,transparent:o});i.push(d)}return i}constructFragmentGroup(e){const t=new hn,i=e.civil();if(i){const S=i.coordinationMatrixArray(),O=new fe;S&&O.fromArray(S),t.civilData={alignments:new Map,coordinationMatrix:O};const w=i.alignmentsLength();for(let N=0;N<w;N++){const C=new pn({color:16777215}),U=new rf,B=i.alignments(N);if(!B)throw new Error("Alignment not found!");const V=B.horizontalLength();U.horizontal=this.constructCivilCurves(B,U,"horizontal",V,C);const j=B.verticalLength();U.vertical=this.constructCivilCurves(B,U,"vertical",j,C);const G=B.horizontalLength();U.absolute=this.constructCivilCurves(B,U,"absolute",G,C),U.initialKP=B.initialPk(),t.civilData.alignments.set(N,U)}}t.uuid=e.id()||t.uuid,t.name=e.name()||"",t.ifcMetadata={name:e.ifcName()||"",description:e.ifcDescription()||"",schema:e.ifcSchema()||"IFC2X3",maxExpressID:e.maxExpressId()||0};const n=new fe().elements,s=e.coordinationMatrixArray()||n,o=e.idsArray()||new Uint32Array,a=e.itemsKeysIndicesArray()||new Uint32Array,l=e.itemsKeysArray()||new Uint32Array,c=e.itemsRelsArray()||new Uint32Array,h=e.itemsRelsIndicesArray()||new Uint32Array,u=(e.fragmentKeys()||"").split(this.separator),m=(e.globalIds()||"").split(this.separator);this.setGroupData(t,o,a,l,0),this.setGroupData(t,o,h,c,1);const E=e.opaqueGeometriesIdsArray()||new Uint32Array,g=e.transparentGeometriesIdsArray()||new Uint32Array,p=new Map;for(let S=0;S<E.length-1;S+=2){const O=E[S],w=E[S+1];p.set(O,w)}const _=new Map;for(let S=0;S<g.length-1;S+=2){const O=g[S],w=g[S+1];_.set(O,w)}t.geometryIDs={opaque:p,transparent:_};const T=e.boundingBoxArray()||[0,0,0,0,0,0],[I,v,b,x,A,y]=T;t.boundingBox.min.set(I,v,b),t.boundingBox.max.set(x,A,y);for(let S=0;S<u.length;S++)t.keyFragments.set(S,u[S]);s.length===16&&t.coordinationMatrix.fromArray(s);for(let S=0;S<o.length;S++)t.globalToExpressIDs.set(m[S],o[S]);return t}setGroupData(e,t,i,n,s){for(let o=0;o<i.length;o++){const a=t[o],l=i[o],c=i[o+1],h=c===void 0?n.length:c,d=[];for(let f=l;f<h;f++)d.push(n[f]);e.data.has(a)||e.data.set(a,[[],[]]);const u=e.data.get(a);u&&(u[s]=d)}}constructGeometry(e){const t=e.positionArray()||new Float32Array,i=e.normalArray()||new Float32Array,n=e.indexArray(),s=e.groupsArray();if(!n)throw new Error("Index not found!");const o=new Ve;if(o.setIndex(Array.from(n)),o.setAttribute("position",new ot(t,3)),o.setAttribute("normal",new ot(i,3)),s)for(let a=0;a<s.length;a+=3){const l=s[a],c=s[a+1],h=s[a+2];o.addGroup(l,c,h)}return o}constructCivilCurves(e,t,i,n,s){const o=[];for(let a=0;a<n;a++){const l=e[i](a);if(!l)throw new Error("Curve not found!");const c=l.pointsArray();if(c===null)throw new Error("Curve points not found!");let h={};const d=l.data();d&&(h=JSON.parse(d));const u=new Jd,f=new ot(c,3);u.setAttribute("position",f);const m=[];for(let g=0;g<c.length/3-1;g++)m.push(g,g+1);u.setIndex(m);const E=new of(a,h,t,u,s);o.push(E.curve)}return o}saveCivilCurves(e,t){const i=pc,n=[];for(const s of e){const a=s.mesh.geometry.attributes.position.array,l=i.createPointsVector(t,a),c=t.createString(JSON.stringify(s.data));i.startCivilCurve(t),i.addPoints(t,l),i.addData(t,c);const h=i.endCivilCurve(t);n.push(h)}return n}}class LE{constructor(){we(this,"parsers",[new ew,new $x]),we(this,"version","auto")}import(e){const t=this.parsers.length;if(this.version==="auto"){for(let o=0;o<this.parsers.length;o++){const l=this.parsers[o].import(e);if(Object.keys(l).length!==0){if(o!==0){const c=this.parsers.length-o;this.warnVersion(c,t)}return l}}throw new Error("No valid parser found for this file")}this.checkCurrentVersionValid(this.version);const i=this.parsers.length-this.version,s=this.parsers[i].import(e);if(Object.keys(s).length===0)throw new Error(`The given version ${this.version} doesn't match to the given file. Try using "auto" in the version property to handle versions automatically.`);return s}export(e){if(this.version==="auto")return this.parsers[0].export(e);this.checkCurrentVersionValid(this.version);const t=this.parsers.length-this.version;return this.parsers[t].export(e)}checkCurrentVersionValid(e){if(this.version==="auto")return;if(this.version!==e&&this.warnVersion(this.version,e),!Number.isInteger(this.version))throw new Error("Invalid version. Non-automatic versions must an integer.");if(this.version<1||this.version>e)throw new Error(`Invalid version. Versions range from 1 to ${e}.`)}warnVersion(e,t){console.warn(`This fragment file version is ${e}. The latest version is ${t}. To avoid issues, please consider updating your fragments. You can do so by regenerating your fragments from the original IFC file.`)}}class OE{constructor(e){we(this,"baseDirectory"),we(this,"maxDeadTime",6e4),we(this,"mode","buffer"),we(this,"_memoryCleanTime",1e4),we(this,"_intervalID",null),we(this,"_isCleaningMemory",!1),we(this,"cleanMemory",async()=>{if(this._isCleaningMemory)return;this._isCleaningMemory=!0;const t=await this.getDir(this.baseDirectory),i=new Set,n=new Date().getTime();for await(const s of t.values()){const o=localStorage.getItem(s.name)||"0",a=parseInt(o,10);n-a>this.maxDeadTime&&(i.add(s.name),localStorage.removeItem(s.name))}for(const s of i)t.removeEntry(s);this._isCleaningMemory=!1}),this.baseDirectory=e,this.setupMemoryCleanup()}get memoryCleanTime(){return this._memoryCleanTime}set memoryCleanTime(e){this._memoryCleanTime=e,this.dispose(),this.setupMemoryCleanup()}isCached(e){const t=this.encodeName(e);return localStorage.getItem(t)!==null}async get(e){const t=this.encodeName(e),i=await this.getDir(this.baseDirectory);try{const s=await(await i.getFileHandle(t)).getFile();return this.updateLastAccessTime(t),s}catch{return null}}async add(e,t){const i=this.encodeName(e),o=await(await(await this.getDir(this.baseDirectory)).getFileHandle(i,{create:!0})).createWritable();await o.write(t),await o.close(),this.updateLastAccessTime(i)}async clear(){const e=await this.getDir(this.baseDirectory);for await(const[t]of e.entries())await e.removeEntry(t)}dispose(){this._intervalID!==null&&window.clearInterval(this._intervalID)}setupMemoryCleanup(){this._intervalID=window.setInterval(this.cleanMemory,this.memoryCleanTime)}async getDir(e){return(await navigator.storage.getDirectory()).getDirectoryHandle(e,{create:!0})}encodeName(e){const t=/[\\/:*?"<>|]/g;return e.replace(t,"ñ")}updateLastAccessTime(e){const t=new Date().getTime().toString();localStorage.setItem(e,t)}}const ar=class hi extends Zn{constructor(){super(...arguments),we(this,"items",[]),we(this,"boundingBox",new je),we(this,"coordinationMatrix",new fe),we(this,"keyFragments",new Map),we(this,"globalToExpressIDs",new Map),we(this,"data",new Map),we(this,"geometryIDs",{opaque:new Map,transparent:new Map}),we(this,"ifcMetadata",{name:"",description:"",schema:"IFC2X3",maxExpressID:0}),we(this,"civilData"),we(this,"streamSettings",{baseFileName:"",ids:new Map,types:new Map}),we(this,"isStreamed",!1),we(this,"_properties")}get hasProperties(){const e=this._properties!==void 0,t=this.streamSettings.ids.size!==0;return e||t}getFragmentMap(e=this.data.keys()){const t={};for(const i of e){const n=this.data.get(i);if(n)for(const s of n[0]){const o=this.keyFragments.get(s);o!==void 0&&(t[o]||(t[o]=new Set),t[o].add(i))}}return t}getItemVertices(e){const t=[],i=this.getFragmentMap([e]);for(const n in i){const s=this.items.find(a=>a.id===n);if(!s)continue;const o=s.getInstancesIDs(e);if(o)for(const a of o){const l=new fe;s.mesh.getMatrixAt(a,l);for(const c of s.uniqueVertices){const h=c.clone().applyMatrix4(l);t.push(h)}}}return t}static setPropertiesDB(e){e?hi.propertiesDB||(hi.propertiesDB=new OE("that-open-company-streaming-properties")):e||hi.propertiesDB&&hi.propertiesDB.dispose()}dispose(e=!0){for(const t of this.items)t.dispose(e);if(this.coordinationMatrix=new fe,this.keyFragments.clear(),this.data.clear(),this._properties={},this.removeFromParent(),this.items=[],this.civilData){const{alignments:t}=this.civilData;for(const[i,n]of t)this.disposeAlignment(n.vertical),this.disposeAlignment(n.horizontal),this.disposeAlignment(n.absolute)}this.civilData=void 0}setLocalProperties(e){this._properties=e}getLocalProperties(){return this._properties}getAllPropertiesIDs(){return this._properties?Object.keys(this._properties).map(e=>parseInt(e,10)):Array.from(this.streamSettings.ids.keys())}getAllPropertiesTypes(){if(this._properties){const e=new Set;for(const t in this._properties){const i=this._properties[t];i.type!==void 0&&e.add(i.type)}return Array.from(e)}return Array.from(this.streamSettings.types.keys())}async getProperties(e){if(this._properties)return this._properties[e]||null;const t=this.getPropsURL(e),i=await this.getPropertiesData(t);return i?i[e]:null}async setProperties(e,t){if(this._properties){t!==null?this._properties[e]=t:delete this._properties[e];return}throw new Error("Writing streamed properties not supported yet!")}async getAllPropertiesOfType(e){if(this._properties){const s={};let o=!1;for(const a in this._properties){const l=this._properties[a];l.type===e&&(s[l.expressID]=l,o=!0)}return o?s:null}const{types:t}=this.streamSettings,i=t.get(e);if(i===void 0)return null;const n={};for(const s of i){const o=this.constructFileName(s),a=await this.getPropertiesData(o);for(const l in a)n[parseInt(l,10)]=a[l]}return n}clone(e){throw new Error("Use FragmentsGroup.cloneGroup instead!")}cloneGroup(e){const t=new hi;t.coordinationMatrix=this.coordinationMatrix,t.position.copy(this.position),t.rotation.copy(this.rotation),t.scale.copy(this.scale),t.updateMatrix(),t.ifcMetadata={...this.ifcMetadata},e||(e=this.getFragmentMap(this.data.keys()));const i=new Set,n=new Map;for(const s of this.items){if(!e[s.id])continue;const o=e[s.id],a=s.clone(o);n.set(s.id,a.id),t.items.push(a),t.add(a.mesh);for(const l of o)i.add(l)}for(const s of i){const o=this.data.get(s);o&&t.data.set(s,o)}for(const[s,o]of this.keyFragments)if(n.has(o)){const a=n.get(o);if(a===void 0)throw new Error("Malformed fragment ID map during clone!");t.keyFragments.set(s,a)}for(const[s,o]of this.globalToExpressIDs)i.has(o)&&t.globalToExpressIDs.set(s,o);return this.civilData&&(t.civilData={coordinationMatrix:this.coordinationMatrix,alignments:new Map}),t}getPropsURL(e){const{ids:t}=this.streamSettings,i=t.get(e);if(i===void 0)throw new Error("ID not found");return this.constructFileName(i)}async getPropertiesData(e){var t;(t=this.streamSettings.baseUrl)!=null&&t.length&&(console.warn("streamSettings.baseUrl is deprecated. Use FragmentsGroup.url instead."),hi.url=this.streamSettings.baseUrl);let i;if(hi.useCache){let n=null;if(hi.propertiesDB&&(n=await hi.propertiesDB.get(e)),n)i=await n.text();else if(i=await(await hi.fetch(e)).text(),hi.propertiesDB){const a=new TextEncoder().encode(i);await hi.propertiesDB.add(e,a)}}else i=await(await hi.fetch(e)).text();return JSON.parse(i)}constructFileName(e){if(hi.constructFileName)return hi.constructFileName(e);const{baseFileName:t}=this.streamSettings;return`${t}-${e}`}disposeAlignment(e){for(const t of e)if(t.mesh.geometry.dispose(),Array.isArray(t.mesh.material))for(const i of t.mesh.material)i.dispose();else t.mesh.material.dispose();e.length=0}};we(ar,"fetch",async r=>fetch(`${ar.url}${r}`));we(ar,"constructFileName",null);we(ar,"url","");we(ar,"useCache",!0);we(ar,"propertiesDB",null);let hn=ar;class rf{constructor(){we(this,"vertical",[]),we(this,"horizontal",[]),we(this,"absolute",[]),we(this,"initialKP",0)}getLength(e){let t=0;for(const i of this[e])t+=i.getLength();return t}getPointAt(e,t){const i=this.getCurveAt(e,t);return i.curve.getPointAt(i.percentage)}getPercentageAt(e,t,i=.01){const n=this[t];let s=0;for(const o of n){const a=o.getPercentageAt(e,i),l=o.getLength();if(a!==null){const c=s+a*l,h=this.getLength(t);return c/h}s+=l}return null}getCurveAt(e,t){e<0?e=0:e>1&&(e=1);const i=this[t],s=this.getLength(t)*e;let o=0;for(const a of i){const l=a.getLength();if(o+l>=s){const h=(s-o)/l;return{curve:a,percentage:h}}o+=l}throw new Error("Could not compute point!")}}class tw{constructor(e,t,i,n){we(this,"index"),we(this,"mesh"),we(this,"data"),we(this,"alignment"),this.index=e,this.mesh=t,this.data=i,this.alignment=n}get _index(){return this.mesh.geometry.index}get _pos(){return this.mesh.geometry.attributes.position.array}getLength(){let e=0;for(let t=0;t<this._index.array.length-1;t+=2){const{startPoint:i,endPoint:n}=this.getSegment(t);e+=i.distanceTo(n)}return e}getPointAt(e){const{startPoint:t,endPoint:i,distanceToStart:n}=this.getSegmentAt(e),s=i.clone();return s.sub(t),s.normalize(),s.multiplyScalar(n),s.add(t),s}getSegmentAt(e){e<0?e=0:e>1&&(e=1);const i=this.getLength()*e;let n=0;for(let s=0;s<this._index.array.length-1;s+=2){const{startPoint:o,endPoint:a}=this.getSegment(s),l=o.distanceTo(a);if(n+l>=i)return{distanceToStart:i-n,index:s,startPoint:o,endPoint:a};n+=l}throw new Error("Could not compute point")}getPercentageAt(e,t=.01){let i=0;for(let n=0;n<this._index.array.length-1;n+=2){const{startPoint:s,endPoint:o}=this.getSegment(n),a=s.distanceTo(o),l=e.distanceTo(s),c=e.distanceTo(o);if(l+c-a<=t){const u=i+l,f=this.getLength();return u/f}i+=a}return null}getSegment(e){const t=this._index.array[e]*3,i=this._index.array[e+1]*3,n=new F(this._pos[t],this._pos[t+1],this._pos[t+2]),s=new F(this._pos[i],this._pos[i+1],this._pos[i+2]);return{startPoint:n,endPoint:s}}}class of extends EE{constructor(e,t,i,n,s){super(n,s),we(this,"curve"),this.curve=new tw(e,this,t,i)}}class ln{constructor(){we(this,"bb",null),we(this,"bb_pos",0)}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsStreamedGeometry(e,t){return(t||new ln).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsStreamedGeometry(e,t){return e.setPosition(e.position()+Vi),(t||new ln).__init(e.readInt32(e.position())+e.position(),e)}geometryId(){const e=this.bb.__offset(this.bb_pos,4);return e?this.bb.readUint32(this.bb_pos+e):0}position(e){const t=this.bb.__offset(this.bb_pos,6);return t?this.bb.readFloat32(this.bb.__vector(this.bb_pos+t)+e*4):0}positionLength(){const e=this.bb.__offset(this.bb_pos,6);return e?this.bb.__vector_len(this.bb_pos+e):0}positionArray(){const e=this.bb.__offset(this.bb_pos,6);return e?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}normal(e){const t=this.bb.__offset(this.bb_pos,8);return t?this.bb.readFloat32(this.bb.__vector(this.bb_pos+t)+e*4):0}normalLength(){const e=this.bb.__offset(this.bb_pos,8);return e?this.bb.__vector_len(this.bb_pos+e):0}normalArray(){const e=this.bb.__offset(this.bb_pos,8);return e?new Float32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}index(e){const t=this.bb.__offset(this.bb_pos,10);return t?this.bb.readUint32(this.bb.__vector(this.bb_pos+t)+e*4):0}indexLength(){const e=this.bb.__offset(this.bb_pos,10);return e?this.bb.__vector_len(this.bb_pos+e):0}indexArray(){const e=this.bb.__offset(this.bb_pos,10);return e?new Uint32Array(this.bb.bytes().buffer,this.bb.bytes().byteOffset+this.bb.__vector(this.bb_pos+e),this.bb.__vector_len(this.bb_pos+e)):null}static startStreamedGeometry(e){e.startObject(4)}static addGeometryId(e,t){e.addFieldInt32(0,t,0)}static addPosition(e,t){e.addFieldOffset(1,t,0)}static createPositionVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addFloat32(t[i]);return e.endVector()}static startPositionVector(e,t){e.startVector(4,t,4)}static addNormal(e,t){e.addFieldOffset(2,t,0)}static createNormalVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addFloat32(t[i]);return e.endVector()}static startNormalVector(e,t){e.startVector(4,t,4)}static addIndex(e,t){e.addFieldOffset(3,t,0)}static createIndexVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addInt32(t[i]);return e.endVector()}static startIndexVector(e,t){e.startVector(4,t,4)}static endStreamedGeometry(e){return e.endObject()}static createStreamedGeometry(e,t,i,n,s){return ln.startStreamedGeometry(e),ln.addGeometryId(e,t),ln.addPosition(e,i),ln.addNormal(e,n),ln.addIndex(e,s),ln.endStreamedGeometry(e)}}class Ts{constructor(){we(this,"bb",null),we(this,"bb_pos",0)}__init(e,t){return this.bb_pos=e,this.bb=t,this}static getRootAsStreamedGeometries(e,t){return(t||new Ts).__init(e.readInt32(e.position())+e.position(),e)}static getSizePrefixedRootAsStreamedGeometries(e,t){return e.setPosition(e.position()+Vi),(t||new Ts).__init(e.readInt32(e.position())+e.position(),e)}geometries(e,t){const i=this.bb.__offset(this.bb_pos,4);return i?(t||new ln).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos+i)+e*4),this.bb):null}geometriesLength(){const e=this.bb.__offset(this.bb_pos,4);return e?this.bb.__vector_len(this.bb_pos+e):0}static startStreamedGeometries(e){e.startObject(1)}static addGeometries(e,t){e.addFieldOffset(0,t,0)}static createGeometriesVector(e,t){e.startVector(4,t.length,4);for(let i=t.length-1;i>=0;i--)e.addOffset(t[i]);return e.endVector()}static startGeometriesVector(e,t){e.startVector(4,t,4)}static endStreamedGeometries(e){return e.endObject()}static finishStreamedGeometriesBuffer(e,t){e.finish(t)}static finishSizePrefixedStreamedGeometriesBuffer(e,t){e.finish(t,void 0,!0)}static createStreamedGeometries(e,t){return Ts.startStreamedGeometries(e),Ts.addGeometries(e,t),Ts.endStreamedGeometries(e)}}class NE{import(e){const t=new or(e),i=Ts.getRootAsStreamedGeometries(t),n=new Map,s=i.geometriesLength();for(let o=0;o<s;o++){const a=i.geometries(o);if(!a)continue;const l=a.geometryId();if(l===null)throw new Error("Error finding ID!");const c=a.positionArray(),h=a.normalArray(),d=a.indexArray();!c||!h||!d||n.set(l,{position:c,normal:h,index:d})}return n}export(e){const t=new Fa(1024),i=[],n=Ts,s=ln;for(const[l,{index:c,position:h,normal:d}]of e){const u=s.createIndexVector(t,c),f=s.createPositionVector(t,h),m=s.createNormalVector(t,d);s.startStreamedGeometry(t),s.addGeometryId(t,l),s.addIndex(t,u),s.addPosition(t,f),s.addNormal(t,m);const E=s.endStreamedGeometry(t);i.push(E)}const o=n.createGeometriesVector(t,i);n.startStreamedGeometries(t),n.addGeometries(t,o);const a=n.endStreamedGeometries(t);return t.finish(a),t.asUint8Array()}}class yo{static combine(e){if(e.length===0)return{};if(e.length===1)return e[0];const t={};for(const i of e)for(const n in i){t[n]||(t[n]=new Set);for(const s of i[n])t[n].add(s)}return t}static intersect(e){if(e.length===0)return{};if(e.length===1)return e[0];const t=new Map;let i=0;for(const s of e){i++;for(const o in s){t.has(o)||t.set(o,{count:0,ids:new Map});const a=t.get(o);a.count++;for(const l of s[o]){const c=a.ids.get(l)||0;a.ids.set(l,c+1)}}}const n={};for(const[s,{count:o,ids:a}]of t)if(o===i)for(const[l,c]of a)c===i&&(n[s]||(n[s]=new Set),n[s].add(l));return n}static copy(e){const t={};for(const i in e)t[i]=new Set(e[i]);return t}static export(e){const t={};for(const i in e)t[i]=Array.from(e[i]);return t}static import(e){const t={};for(const i in e)t[i]=new Set(e[i]);return t}}var iw=Object.defineProperty,nw=(r,e,t)=>e in r?iw(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,D=(r,e,t)=>(nw(r,typeof e!="symbol"?e+"":e,t),t),sw=Object.defineProperty,rw=(r,e,t)=>e in r?sw(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,R=(r,e,t)=>(rw(r,typeof e!="symbol"?e+"":e,t),t);const DE=0,ow=1,aw=2,Nm=2,Jh=1.25,Dm=1,mc=6*4+4+4,Xc=65535,lw=Math.pow(2,-24),$h=Symbol("SKIP_GENERATION");function cw(r){return r.index?r.index.count:r.attributes.position.count}function Mo(r){return cw(r)/3}function hw(r,e=ArrayBuffer){return r>65535?new Uint32Array(new e(4*r)):new Uint16Array(new e(2*r))}function uw(r,e){if(!r.index){const t=r.attributes.position.count,i=e.useSharedArrayBuffer?SharedArrayBuffer:ArrayBuffer,n=hw(t,i);r.setIndex(new ot(n,1));for(let s=0;s<t;s++)n[s]=s}}function UE(r){const e=Mo(r),t=r.drawRange,i=t.start/3,n=(t.start+t.count)/3,s=Math.max(0,i),o=Math.min(e,n)-s;return[{offset:Math.floor(s),count:Math.floor(o)}]}function BE(r){if(!r.groups||!r.groups.length)return UE(r);const e=[],t=new Set,i=r.drawRange,n=i.start/3,s=(i.start+i.count)/3;for(const a of r.groups){const l=a.start/3,c=(a.start+a.count)/3;t.add(Math.max(n,l)),t.add(Math.min(s,c))}const o=Array.from(t.values()).sort((a,l)=>a-l);for(let a=0;a<o.length-1;a++){const l=o[a],c=o[a+1];e.push({offset:Math.floor(l),count:Math.floor(c-l)})}return e}function dw(r){if(r.groups.length===0)return!1;const e=Mo(r),t=BE(r).sort((s,o)=>s.offset-o.offset),i=t[t.length-1];i.count=Math.min(e-i.offset,i.count);let n=0;return t.forEach(({count:s})=>n+=s),e!==n}function Rt(r,e,t){return t.min.x=e[r],t.min.y=e[r+1],t.min.z=e[r+2],t.max.x=e[r+3],t.max.y=e[r+4],t.max.z=e[r+5],t}function fw(r){r[0]=r[1]=r[2]=1/0,r[3]=r[4]=r[5]=-1/0}function Um(r){let e=-1,t=-1/0;for(let i=0;i<3;i++){const n=r[i+3]-r[i];n>t&&(t=n,e=i)}return e}function Bm(r,e){e.set(r)}function zm(r,e,t){let i,n;for(let s=0;s<3;s++){const o=s+3;i=r[s],n=e[s],t[s]=i<n?i:n,i=r[o],n=e[o],t[o]=i>n?i:n}}function Ml(r,e,t){for(let i=0;i<3;i++){const n=e[r+2*i],s=e[r+2*i+1],o=n-s,a=n+s;o<t[i]&&(t[i]=o),a>t[i+3]&&(t[i+3]=a)}}function Xo(r){const e=r[3]-r[0],t=r[4]-r[1],i=r[5]-r[2];return 2*(e*t+t*i+i*e)}function eu(r,e,t,i,n=null){let s=1/0,o=1/0,a=1/0,l=-1/0,c=-1/0,h=-1/0,d=1/0,u=1/0,f=1/0,m=-1/0,E=-1/0,g=-1/0;const p=n!==null;for(let _=e*6,T=(e+t)*6;_<T;_+=6){const I=r[_+0],v=r[_+1],b=I-v,x=I+v;b<s&&(s=b),x>l&&(l=x),p&&I<d&&(d=I),p&&I>m&&(m=I);const A=r[_+2],y=r[_+3],S=A-y,O=A+y;S<o&&(o=S),O>c&&(c=O),p&&A<u&&(u=A),p&&A>E&&(E=A);const w=r[_+4],N=r[_+5],C=w-N,U=w+N;C<a&&(a=C),U>h&&(h=U),p&&w<f&&(f=w),p&&w>g&&(g=w)}i[0]=s,i[1]=o,i[2]=a,i[3]=l,i[4]=c,i[5]=h,p&&(n[0]=d,n[1]=u,n[2]=f,n[3]=m,n[4]=E,n[5]=g)}function pw(r,e,t,i){let n=1/0,s=1/0,o=1/0,a=-1/0,l=-1/0,c=-1/0;for(let h=e*6,d=(e+t)*6;h<d;h+=6){const u=r[h+0];u<n&&(n=u),u>a&&(a=u);const f=r[h+2];f<s&&(s=f),f>l&&(l=f);const m=r[h+4];m<o&&(o=m),m>c&&(c=m)}i[0]=n,i[1]=s,i[2]=o,i[3]=a,i[4]=l,i[5]=c}function mw(r,e){fw(e);const t=r.attributes.position,i=r.index?r.index.array:null,n=Mo(r),s=new Float32Array(n*6),o=t.normalized,a=t.array,l=t.offset||0;let c=3;t.isInterleavedBufferAttribute&&(c=t.data.stride);const h=["getX","getY","getZ"];for(let d=0;d<n;d++){const u=d*3,f=d*6;let m=u+0,E=u+1,g=u+2;i&&(m=i[m],E=i[E],g=i[g]),o||(m=m*c+l,E=E*c+l,g=g*c+l);for(let p=0;p<3;p++){let _,T,I;o?(_=t[h[p]](m),T=t[h[p]](E),I=t[h[p]](g)):(_=a[m+p],T=a[E+p],I=a[g+p]);let v=_;T<v&&(v=T),I<v&&(v=I);let b=_;T>b&&(b=T),I>b&&(b=I);const x=(b-v)/2,A=p*2;s[f+A+0]=v+x,s[f+A+1]=x+(Math.abs(v)+x)*lw,v<e[p]&&(e[p]=v),b>e[p+3]&&(e[p+3]=b)}}return s}const zn=32,gw=(r,e)=>r.candidate-e.candidate,ds=new Array(zn).fill().map(()=>({count:0,bounds:new Float32Array(6),rightCacheBounds:new Float32Array(6),leftCacheBounds:new Float32Array(6),candidate:0})),Fl=new Float32Array(6);function Ew(r,e,t,i,n,s){let o=-1,a=0;if(s===DE)o=Um(e),o!==-1&&(a=(e[o]+e[o+3])/2);else if(s===ow)o=Um(r),o!==-1&&(a=Iw(t,i,n,o));else if(s===aw){const l=Xo(r);let c=Jh*n;const h=i*6,d=(i+n)*6;for(let u=0;u<3;u++){const f=e[u],m=(e[u+3]-f)/zn;if(n<zn/4){const E=[...ds];E.length=n;let g=0;for(let _=h;_<d;_+=6,g++){const T=E[g];T.candidate=t[_+2*u],T.count=0;const{bounds:I,leftCacheBounds:v,rightCacheBounds:b}=T;for(let x=0;x<3;x++)b[x]=1/0,b[x+3]=-1/0,v[x]=1/0,v[x+3]=-1/0,I[x]=1/0,I[x+3]=-1/0;Ml(_,t,I)}E.sort(gw);let p=n;for(let _=0;_<p;_++){const T=E[_];for(;_+1<p&&E[_+1].candidate===T.candidate;)E.splice(_+1,1),p--}for(let _=h;_<d;_+=6){const T=t[_+2*u];for(let I=0;I<p;I++){const v=E[I];T>=v.candidate?Ml(_,t,v.rightCacheBounds):(Ml(_,t,v.leftCacheBounds),v.count++)}}for(let _=0;_<p;_++){const T=E[_],I=T.count,v=n-T.count,b=T.leftCacheBounds,x=T.rightCacheBounds;let A=0;I!==0&&(A=Xo(b)/l);let y=0;v!==0&&(y=Xo(x)/l);const S=Dm+Jh*(A*I+y*v);S<c&&(o=u,c=S,a=T.candidate)}}else{for(let p=0;p<zn;p++){const _=ds[p];_.count=0,_.candidate=f+m+p*m;const T=_.bounds;for(let I=0;I<3;I++)T[I]=1/0,T[I+3]=-1/0}for(let p=h;p<d;p+=6){let _=~~((t[p+2*u]-f)/m);_>=zn&&(_=zn-1);const T=ds[_];T.count++,Ml(p,t,T.bounds)}const E=ds[zn-1];Bm(E.bounds,E.rightCacheBounds);for(let p=zn-2;p>=0;p--){const _=ds[p],T=ds[p+1];zm(_.bounds,T.rightCacheBounds,_.rightCacheBounds)}let g=0;for(let p=0;p<zn-1;p++){const _=ds[p],T=_.count,I=_.bounds,v=ds[p+1].rightCacheBounds;T!==0&&(g===0?Bm(I,Fl):zm(I,Fl,Fl)),g+=T;let b=0,x=0;g!==0&&(b=Xo(Fl)/l);const A=n-g;A!==0&&(x=Xo(v)/l);const y=Dm+Jh*(b*g+x*A);y<c&&(o=u,c=y,a=_.candidate)}}}}else console.warn(`MeshBVH: Invalid build strategy value ${s} used.`);return{axis:o,pos:a}}function Iw(r,e,t,i){let n=0;for(let s=e,o=e+t;s<o;s++)n+=r[s*6+i*2];return n/t}class Pl{constructor(){}}function _w(r,e,t,i,n,s){let o=i,a=i+n-1;const l=s.pos,c=s.axis*2;for(;;){for(;o<=a&&t[o*6+c]<l;)o++;for(;o<=a&&t[a*6+c]>=l;)a--;if(o<a){for(let h=0;h<3;h++){let d=e[o*3+h];e[o*3+h]=e[a*3+h],e[a*3+h]=d}for(let h=0;h<6;h++){let d=t[o*6+h];t[o*6+h]=t[a*6+h],t[a*6+h]=d}o++,a--}else return o}}function Tw(r,e,t,i,n,s){let o=i,a=i+n-1;const l=s.pos,c=s.axis*2;for(;;){for(;o<=a&&t[o*6+c]<l;)o++;for(;o<=a&&t[a*6+c]>=l;)a--;if(o<a){let h=r[o];r[o]=r[a],r[a]=h;for(let d=0;d<6;d++){let u=t[o*6+d];t[o*6+d]=t[a*6+d],t[a*6+d]=u}o++,a--}else return o}}function vw(r,e){const t=(r.index?r.index.count:r.attributes.position.count)/3,i=t>2**16,n=i?4:2,s=e?new SharedArrayBuffer(t*n):new ArrayBuffer(t*n),o=i?new Uint32Array(s):new Uint16Array(s);for(let a=0,l=o.length;a<l;a++)o[a]=a;return o}function Cw(r,e){const t=r.geometry,i=t.index?t.index.array:null,n=e.maxDepth,s=e.verbose,o=e.maxLeafTris,a=e.strategy,l=e.onProgress,c=Mo(t),h=r._indirectBuffer;let d=!1;const u=new Float32Array(6),f=new Float32Array(6),m=mw(t,u),E=e.indirect?Tw:_w,g=[],p=e.indirect?UE(t):BE(t);if(p.length===1){const I=p[0],v=new Pl;v.boundingData=u,pw(m,I.offset,I.count,f),T(v,I.offset,I.count,f),g.push(v)}else for(let I of p){const v=new Pl;v.boundingData=new Float32Array(6),eu(m,I.offset,I.count,v.boundingData,f),T(v,I.offset,I.count,f),g.push(v)}return g;function _(I){l&&l(I/c)}function T(I,v,b,x=null,A=0){if(!d&&A>=n&&(d=!0,s&&(console.warn(`MeshBVH: Max depth of ${n} reached when generating BVH. Consider increasing maxDepth.`),console.warn(t))),b<=o||A>=n)return _(v+b),I.offset=v,I.count=b,I;const y=Ew(I.boundingData,x,m,v,b,a);if(y.axis===-1)return _(v+b),I.offset=v,I.count=b,I;const S=E(h,i,m,v,b,y);if(S===v||S===v+b)_(v+b),I.offset=v,I.count=b;else{I.splitAxis=y.axis;const O=new Pl,w=v,N=S-v;I.left=O,O.boundingData=new Float32Array(6),eu(m,w,N,O.boundingData,f),T(O,w,N,f,A+1);const C=new Pl,U=S,B=b-N;I.right=C,C.boundingData=new Float32Array(6),eu(m,U,B,C.boundingData,f),T(C,U,B,f,A+1)}return I}}function yw(r,e){const t=r.geometry;e.indirect&&(r._indirectBuffer=vw(t,e.useSharedArrayBuffer),dw(t)&&!e.verbose&&console.warn('MeshBVH: Provided geometry contains groups that do not fully span the vertex contents while using the "indirect" option. BVH may incorrectly report intersections on unrendered portions of the geometry.')),r._indirectBuffer||uw(t,e);const i=Cw(r,e);let n,s,o;const a=[],l=e.useSharedArrayBuffer?SharedArrayBuffer:ArrayBuffer;for(let d=0;d<i.length;d++){const u=i[d];let f=c(u);const m=new l(mc*f);n=new Float32Array(m),s=new Uint32Array(m),o=new Uint16Array(m),h(0,u),a.push(m)}r._roots=a;return;function c(d){return d.count?1:1+c(d.left)+c(d.right)}function h(d,u){const f=d/4,m=d/2,E=!!u.count,g=u.boundingData;for(let p=0;p<6;p++)n[f+p]=g[p];if(E){const p=u.offset,_=u.count;return s[f+6]=p,o[m+14]=_,o[m+15]=Xc,d+mc}else{const p=u.left,_=u.right,T=u.splitAxis;let I;if(I=h(d+mc,p),I/4>Math.pow(2,32))throw new Error("MeshBVH: Cannot store child pointer greater than 32 bits.");return s[f+6]=I/4,I=h(I,_),s[f+7]=T,I}}}class ss{constructor(){this.min=1/0,this.max=-1/0}setFromPointsField(e,t){let i=1/0,n=-1/0;for(let s=0,o=e.length;s<o;s++){const a=e[s][t];i=a<i?a:i,n=a>n?a:n}this.min=i,this.max=n}setFromPoints(e,t){let i=1/0,n=-1/0;for(let s=0,o=t.length;s<o;s++){const a=t[s],l=e.dot(a);i=l<i?l:i,n=l>n?l:n}this.min=i,this.max=n}isSeparated(e){return this.min>e.max||e.min>this.max}}ss.prototype.setFromBox=function(){const r=new F;return function(e,t){const i=t.min,n=t.max;let s=1/0,o=-1/0;for(let a=0;a<=1;a++)for(let l=0;l<=1;l++)for(let c=0;c<=1;c++){r.x=i.x*a+n.x*(1-a),r.y=i.y*l+n.y*(1-l),r.z=i.z*c+n.z*(1-c);const h=e.dot(r);s=Math.min(h,s),o=Math.max(h,o)}this.min=s,this.max=o}}();const bw=function(){const r=new F,e=new F,t=new F;return function(i,n,s){const o=i.start,a=r,l=n.start,c=e;t.subVectors(o,l),r.subVectors(i.end,i.start),e.subVectors(n.end,n.start);const h=t.dot(c),d=c.dot(a),u=c.dot(c),f=t.dot(a),m=a.dot(a)*u-d*d;let E,g;m!==0?E=(h*d-f*u)/m:E=0,g=(h+E*d)/u,s.x=E,s.y=g}}(),af=function(){const r=new Re,e=new F,t=new F;return function(i,n,s,o){bw(i,n,r);let a=r.x,l=r.y;if(a>=0&&a<=1&&l>=0&&l<=1){i.at(a,s),n.at(l,o);return}else if(a>=0&&a<=1){l<0?n.at(0,o):n.at(1,o),i.closestPointToPoint(o,!0,s);return}else if(l>=0&&l<=1){a<0?i.at(0,s):i.at(1,s),n.closestPointToPoint(s,!0,o);return}else{let c;a<0?c=i.start:c=i.end;let h;l<0?h=n.start:h=n.end;const d=e,u=t;if(i.closestPointToPoint(h,!0,e),n.closestPointToPoint(c,!0,t),d.distanceToSquared(h)<=u.distanceToSquared(c)){s.copy(d),o.copy(h);return}else{s.copy(c),o.copy(u);return}}}}(),Sw=function(){const r=new F,e=new F,t=new Kt,i=new Ot;return function(n,s){const{radius:o,center:a}=n,{a:l,b:c,c:h}=s;if(i.start=l,i.end=c,i.closestPointToPoint(a,!0,r).distanceTo(a)<=o||(i.start=l,i.end=h,i.closestPointToPoint(a,!0,r).distanceTo(a)<=o)||(i.start=c,i.end=h,i.closestPointToPoint(a,!0,r).distanceTo(a)<=o))return!0;const d=s.getPlane(t);if(Math.abs(d.distanceToPoint(a))<=o){const u=d.projectPoint(a,e);if(s.containsPoint(u))return!0}return!1}}(),xw=1e-15;function tu(r){return Math.abs(r)<xw}class dn extends yt{constructor(...e){super(...e),this.isExtendedTriangle=!0,this.satAxes=new Array(4).fill().map(()=>new F),this.satBounds=new Array(4).fill().map(()=>new ss),this.points=[this.a,this.b,this.c],this.sphere=new vi,this.plane=new Kt,this.needsUpdate=!0}intersectsSphere(e){return Sw(e,this)}update(){const e=this.a,t=this.b,i=this.c,n=this.points,s=this.satAxes,o=this.satBounds,a=s[0],l=o[0];this.getNormal(a),l.setFromPoints(a,n);const c=s[1],h=o[1];c.subVectors(e,t),h.setFromPoints(c,n);const d=s[2],u=o[2];d.subVectors(t,i),u.setFromPoints(d,n);const f=s[3],m=o[3];f.subVectors(i,e),m.setFromPoints(f,n),this.sphere.setFromPoints(this.points),this.plane.setFromNormalAndCoplanarPoint(a,e),this.needsUpdate=!1}}dn.prototype.closestPointToSegment=function(){const r=new F,e=new F,t=new Ot;return function(i,n=null,s=null){const{start:o,end:a}=i,l=this.points;let c,h=1/0;for(let d=0;d<3;d++){const u=(d+1)%3;t.start.copy(l[d]),t.end.copy(l[u]),af(t,i,r,e),c=r.distanceToSquared(e),c<h&&(h=c,n&&n.copy(r),s&&s.copy(e))}return this.closestPointToPoint(o,r),c=o.distanceToSquared(r),c<h&&(h=c,n&&n.copy(r),s&&s.copy(o)),this.closestPointToPoint(a,r),c=a.distanceToSquared(r),c<h&&(h=c,n&&n.copy(r),s&&s.copy(a)),Math.sqrt(h)}}();dn.prototype.intersectsTriangle=function(){const r=new dn,e=new Array(3),t=new Array(3),i=new ss,n=new ss,s=new F,o=new F,a=new F,l=new F,c=new F,h=new Ot,d=new Ot,u=new Ot,f=new F;function m(E,g,p){const _=E.points;let T=0,I=-1;for(let v=0;v<3;v++){const{start:b,end:x}=h;b.copy(_[v]),x.copy(_[(v+1)%3]),h.delta(o);const A=tu(g.distanceToPoint(b));if(tu(g.normal.dot(o))&&A){p.copy(h),T=2;break}const y=g.intersectLine(h,f);if(!y&&A&&f.copy(b),(y||A)&&!tu(f.distanceTo(x))){if(T<=1)(T===1?p.start:p.end).copy(f),A&&(I=T);else if(T>=2){(I===1?p.start:p.end).copy(f),T=2;break}if(T++,T===2&&I===-1)break}}return T}return function(E,g=null,p=!1){this.needsUpdate&&this.update(),E.isExtendedTriangle?E.needsUpdate&&E.update():(r.copy(E),r.update(),E=r);const _=this.plane,T=E.plane;if(Math.abs(_.normal.dot(T.normal))>1-1e-10){const I=this.satBounds,v=this.satAxes;t[0]=E.a,t[1]=E.b,t[2]=E.c;for(let A=0;A<4;A++){const y=I[A],S=v[A];if(i.setFromPoints(S,t),y.isSeparated(i))return!1}const b=E.satBounds,x=E.satAxes;e[0]=this.a,e[1]=this.b,e[2]=this.c;for(let A=0;A<4;A++){const y=b[A],S=x[A];if(i.setFromPoints(S,e),y.isSeparated(i))return!1}for(let A=0;A<4;A++){const y=v[A];for(let S=0;S<4;S++){const O=x[S];if(s.crossVectors(y,O),i.setFromPoints(s,e),n.setFromPoints(s,t),i.isSeparated(n))return!1}}return g&&(p||console.warn("ExtendedTriangle.intersectsTriangle: Triangles are coplanar which does not support an output edge. Setting edge to 0, 0, 0."),g.start.set(0,0,0),g.end.set(0,0,0)),!0}else{const I=m(this,T,d);if(I===1&&E.containsPoint(d.end))return g&&(g.start.copy(d.end),g.end.copy(d.end)),!0;if(I!==2)return!1;const v=m(E,_,u);if(v===1&&this.containsPoint(u.end))return g&&(g.start.copy(u.end),g.end.copy(u.end)),!0;if(v!==2)return!1;if(d.delta(a),u.delta(l),a.dot(l)<0){let w=u.start;u.start=u.end,u.end=w}const b=d.start.dot(a),x=d.end.dot(a),A=u.start.dot(a),y=u.end.dot(a),S=x<A,O=b<y;return b!==y&&A!==x&&S===O?!1:(g&&(c.subVectors(d.start,u.start),c.dot(a)>0?g.start.copy(d.start):g.start.copy(u.start),c.subVectors(d.end,u.end),c.dot(a)<0?g.end.copy(d.end):g.end.copy(u.end)),!0)}}}();dn.prototype.distanceToPoint=function(){const r=new F;return function(e){return this.closestPointToPoint(e,r),e.distanceTo(r)}}();dn.prototype.distanceToTriangle=function(){const r=new F,e=new F,t=["a","b","c"],i=new Ot,n=new Ot;return function(s,o=null,a=null){const l=o||a?i:null;if(this.intersectsTriangle(s,l))return(o||a)&&(o&&l.getCenter(o),a&&l.getCenter(a)),0;let c=1/0;for(let h=0;h<3;h++){let d;const u=t[h],f=s[u];this.closestPointToPoint(f,r),d=f.distanceToSquared(r),d<c&&(c=d,o&&o.copy(r),a&&a.copy(f));const m=this[u];s.closestPointToPoint(m,r),d=m.distanceToSquared(r),d<c&&(c=d,o&&o.copy(m),a&&a.copy(r))}for(let h=0;h<3;h++){const d=t[h],u=t[(h+1)%3];i.set(this[d],this[u]);for(let f=0;f<3;f++){const m=t[f],E=t[(f+1)%3];n.set(s[m],s[E]),af(i,n,r,e);const g=r.distanceToSquared(e);g<c&&(c=g,o&&o.copy(r),a&&a.copy(e))}}return Math.sqrt(c)}}();class yi{constructor(e,t,i){this.isOrientedBox=!0,this.min=new F,this.max=new F,this.matrix=new fe,this.invMatrix=new fe,this.points=new Array(8).fill().map(()=>new F),this.satAxes=new Array(3).fill().map(()=>new F),this.satBounds=new Array(3).fill().map(()=>new ss),this.alignedSatBounds=new Array(3).fill().map(()=>new ss),this.needsUpdate=!1,e&&this.min.copy(e),t&&this.max.copy(t),i&&this.matrix.copy(i)}set(e,t,i){this.min.copy(e),this.max.copy(t),this.matrix.copy(i),this.needsUpdate=!0}copy(e){this.min.copy(e.min),this.max.copy(e.max),this.matrix.copy(e.matrix),this.needsUpdate=!0}}yi.prototype.update=function(){return function(){const r=this.matrix,e=this.min,t=this.max,i=this.points;for(let l=0;l<=1;l++)for(let c=0;c<=1;c++)for(let h=0;h<=1;h++){const d=1*l|2*c|4*h,u=i[d];u.x=l?t.x:e.x,u.y=c?t.y:e.y,u.z=h?t.z:e.z,u.applyMatrix4(r)}const n=this.satBounds,s=this.satAxes,o=i[0];for(let l=0;l<3;l++){const c=s[l],h=n[l],d=1<<l,u=i[d];c.subVectors(o,u),h.setFromPoints(c,i)}const a=this.alignedSatBounds;a[0].setFromPointsField(i,"x"),a[1].setFromPointsField(i,"y"),a[2].setFromPointsField(i,"z"),this.invMatrix.copy(this.matrix).invert(),this.needsUpdate=!1}}();yi.prototype.intersectsBox=function(){const r=new ss;return function(e){this.needsUpdate&&this.update();const t=e.min,i=e.max,n=this.satBounds,s=this.satAxes,o=this.alignedSatBounds;if(r.min=t.x,r.max=i.x,o[0].isSeparated(r)||(r.min=t.y,r.max=i.y,o[1].isSeparated(r))||(r.min=t.z,r.max=i.z,o[2].isSeparated(r)))return!1;for(let a=0;a<3;a++){const l=s[a],c=n[a];if(r.setFromBox(l,e),c.isSeparated(r))return!1}return!0}}();yi.prototype.intersectsTriangle=function(){const r=new dn,e=new Array(3),t=new ss,i=new ss,n=new F;return function(s){this.needsUpdate&&this.update(),s.isExtendedTriangle?s.needsUpdate&&s.update():(r.copy(s),r.update(),s=r);const o=this.satBounds,a=this.satAxes;e[0]=s.a,e[1]=s.b,e[2]=s.c;for(let d=0;d<3;d++){const u=o[d],f=a[d];if(t.setFromPoints(f,e),u.isSeparated(t))return!1}const l=s.satBounds,c=s.satAxes,h=this.points;for(let d=0;d<3;d++){const u=l[d],f=c[d];if(t.setFromPoints(f,h),u.isSeparated(t))return!1}for(let d=0;d<3;d++){const u=a[d];for(let f=0;f<4;f++){const m=c[f];if(n.crossVectors(u,m),t.setFromPoints(n,e),i.setFromPoints(n,h),t.isSeparated(i))return!1}}return!0}}();yi.prototype.closestPointToPoint=function(){return function(r,e){return this.needsUpdate&&this.update(),e.copy(r).applyMatrix4(this.invMatrix).clamp(this.min,this.max).applyMatrix4(this.matrix),e}}();yi.prototype.distanceToPoint=function(){const r=new F;return function(e){return this.closestPointToPoint(e,r),e.distanceTo(r)}}();yi.prototype.distanceToBox=function(){const r=["x","y","z"],e=new Array(12).fill().map(()=>new Ot),t=new Array(12).fill().map(()=>new Ot),i=new F,n=new F;return function(s,o=0,a=null,l=null){if(this.needsUpdate&&this.update(),this.intersectsBox(s))return(a||l)&&(s.getCenter(n),this.closestPointToPoint(n,i),s.closestPointToPoint(i,n),a&&a.copy(i),l&&l.copy(n)),0;const c=o*o,h=s.min,d=s.max,u=this.points;let f=1/0;for(let E=0;E<8;E++){const g=u[E];n.copy(g).clamp(h,d);const p=g.distanceToSquared(n);if(p<f&&(f=p,a&&a.copy(g),l&&l.copy(n),p<c))return Math.sqrt(p)}let m=0;for(let E=0;E<3;E++)for(let g=0;g<=1;g++)for(let p=0;p<=1;p++){const _=(E+1)%3,T=(E+2)%3,I=g<<_|p<<T,v=1<<E|g<<_|p<<T,b=u[I],x=u[v];e[m].set(b,x);const A=r[E],y=r[_],S=r[T],O=t[m],w=O.start,N=O.end;w[A]=h[A],w[y]=g?h[y]:d[y],w[S]=p?h[S]:d[y],N[A]=d[A],N[y]=g?h[y]:d[y],N[S]=p?h[S]:d[y],m++}for(let E=0;E<=1;E++)for(let g=0;g<=1;g++)for(let p=0;p<=1;p++){n.x=E?d.x:h.x,n.y=g?d.y:h.y,n.z=p?d.z:h.z,this.closestPointToPoint(n,i);const _=n.distanceToSquared(i);if(_<f&&(f=_,a&&a.copy(i),l&&l.copy(n),_<c))return Math.sqrt(_)}for(let E=0;E<12;E++){const g=e[E];for(let p=0;p<12;p++){const _=t[p];af(g,_,i,n);const T=i.distanceToSquared(n);if(T<f&&(f=T,a&&a.copy(i),l&&l.copy(n),T<c))return Math.sqrt(T)}}return Math.sqrt(f)}}();class lf{constructor(e){this._getNewPrimitive=e,this._primitives=[]}getPrimitive(){const e=this._primitives;return e.length===0?this._getNewPrimitive():e.pop()}releasePrimitive(e){this._primitives.push(e)}}class ww extends lf{constructor(){super(()=>new dn)}}const ji=new ww;function Ni(r,e){return e[r+15]===65535}function Ui(r,e){return e[r+6]}function qi(r,e){return e[r+14]}function Ki(r){return r+8}function Qi(r,e){return e[r+6]}function zE(r,e){return e[r+7]}class Aw{constructor(){this.float32Array=null,this.uint16Array=null,this.uint32Array=null;const e=[];let t=null;this.setBuffer=i=>{t&&e.push(t),t=i,this.float32Array=new Float32Array(i),this.uint16Array=new Uint16Array(i),this.uint32Array=new Uint32Array(i)},this.clearBuffer=()=>{t=null,this.float32Array=null,this.uint16Array=null,this.uint32Array=null,e.length!==0&&this.setBuffer(e.pop())}}}const Tt=new Aw;let ys,lo;const kr=[],Ll=new lf(()=>new je);function Rw(r,e,t,i,n,s){ys=Ll.getPrimitive(),lo=Ll.getPrimitive(),kr.push(ys,lo),Tt.setBuffer(r._roots[e]);const o=ju(0,r.geometry,t,i,n,s);Tt.clearBuffer(),Ll.releasePrimitive(ys),Ll.releasePrimitive(lo),kr.pop(),kr.pop();const a=kr.length;return a>0&&(lo=kr[a-1],ys=kr[a-2]),o}function ju(r,e,t,i,n=null,s=0,o=0){const{float32Array:a,uint16Array:l,uint32Array:c}=Tt;let h=r*2;if(Ni(h,l)){const d=Ui(r,c),u=qi(h,l);return Rt(r,a,ys),i(d,u,!1,o,s+r,ys)}else{let d=function(O){const{uint16Array:w,uint32Array:N}=Tt;let C=O*2;for(;!Ni(C,w);)O=Ki(O),C=O*2;return Ui(O,N)},u=function(O){const{uint16Array:w,uint32Array:N}=Tt;let C=O*2;for(;!Ni(C,w);)O=Qi(O,N),C=O*2;return Ui(O,N)+qi(C,w)};const f=Ki(r),m=Qi(r,c);let E=f,g=m,p,_,T,I;if(n&&(T=ys,I=lo,Rt(E,a,T),Rt(g,a,I),p=n(T),_=n(I),_<p)){E=m,g=f;const O=p;p=_,_=O,T=I}T||(T=ys,Rt(E,a,T));const v=Ni(E*2,l),b=t(T,v,p,o+1,s+E);let x;if(b===Nm){const O=d(E),w=u(E)-O;x=i(O,w,!0,o+1,s+E,T)}else x=b&&ju(E,e,t,i,n,s,o+1);if(x)return!0;I=lo,Rt(g,a,I);const A=Ni(g*2,l),y=t(I,A,_,o+1,s+g);let S;if(y===Nm){const O=d(g),w=u(g)-O;S=i(O,w,!0,o+1,s+g,I)}else S=y&&ju(g,e,t,i,n,s,o+1);return!!S}}const Zo=new F,iu=new F;function Mw(r,e,t={},i=0,n=1/0){const s=i*i,o=n*n;let a=1/0,l=null;if(r.shapecast({boundsTraverseOrder:h=>(Zo.copy(e).clamp(h.min,h.max),Zo.distanceToSquared(e)),intersectsBounds:(h,d,u)=>u<a&&u<o,intersectsTriangle:(h,d)=>{h.closestPointToPoint(e,Zo);const u=e.distanceToSquared(Zo);return u<a&&(iu.copy(Zo),a=u,l=d),u<s}}),a===1/0)return null;const c=Math.sqrt(a);return t.point?t.point.copy(iu):t.point=iu.clone(),t.distance=c,t.faceIndex=l,t}const Gr=new F,Hr=new F,Wr=new F,Ol=new Re,Nl=new Re,Dl=new Re,Vm=new F,km=new F,Gm=new F,Ul=new F;function Fw(r,e,t,i,n,s){let o;return s===di?o=r.intersectTriangle(i,t,e,!0,n):o=r.intersectTriangle(e,t,i,s!==_i,n),o===null?null:{distance:r.origin.distanceTo(n),point:n.clone()}}function Pw(r,e,t,i,n,s,o,a,l){Gr.fromBufferAttribute(e,s),Hr.fromBufferAttribute(e,o),Wr.fromBufferAttribute(e,a);const c=Fw(r,Gr,Hr,Wr,Ul,l);if(c){i&&(Ol.fromBufferAttribute(i,s),Nl.fromBufferAttribute(i,o),Dl.fromBufferAttribute(i,a),c.uv=yt.getInterpolation(Ul,Gr,Hr,Wr,Ol,Nl,Dl,new Re)),n&&(Ol.fromBufferAttribute(n,s),Nl.fromBufferAttribute(n,o),Dl.fromBufferAttribute(n,a),c.uv1=yt.getInterpolation(Ul,Gr,Hr,Wr,Ol,Nl,Dl,new Re)),t&&(Vm.fromBufferAttribute(t,s),km.fromBufferAttribute(t,o),Gm.fromBufferAttribute(t,a),c.normal=yt.getInterpolation(Ul,Gr,Hr,Wr,Vm,km,Gm,new F),c.normal.dot(r.direction)>0&&c.normal.multiplyScalar(-1));const h={a:s,b:o,c:a,normal:new F,materialIndex:0};yt.getNormal(Gr,Hr,Wr,h.normal),c.face=h,c.faceIndex=s}return c}function Zc(r,e,t,i,n){const s=i*3;let o=s+0,a=s+1,l=s+2;const c=r.index;r.index&&(o=c.getX(o),a=c.getX(a),l=c.getX(l));const{position:h,normal:d,uv:u,uv1:f}=r.attributes,m=Pw(t,h,d,u,f,o,a,l,e);return m?(m.faceIndex=i,n&&n.push(m),m):null}function Ht(r,e,t,i){const n=r.a,s=r.b,o=r.c;let a=e,l=e+1,c=e+2;t&&(a=t.getX(a),l=t.getX(l),c=t.getX(c)),n.x=i.getX(a),n.y=i.getY(a),n.z=i.getZ(a),s.x=i.getX(l),s.y=i.getY(l),s.z=i.getZ(l),o.x=i.getX(c),o.y=i.getY(c),o.z=i.getZ(c)}function Lw(r,e,t,i,n,s){const{geometry:o,_indirectBuffer:a}=r;for(let l=i,c=i+n;l<c;l++)Zc(o,e,t,l,s)}function Ow(r,e,t,i,n){const{geometry:s,_indirectBuffer:o}=r;let a=1/0,l=null;for(let c=i,h=i+n;c<h;c++){let d;d=Zc(s,e,t,c),d&&d.distance<a&&(l=d,a=d.distance)}return l}function Nw(r,e,t,i,n,s,o){const{geometry:a}=t,{index:l}=a,c=a.attributes.position;for(let h=r,d=e+r;h<d;h++){let u;if(u=h,Ht(o,u*3,l,c),o.needsUpdate=!0,i(o,u,n,s))return!0}return!1}function Dw(r,e=null){e&&Array.isArray(e)&&(e=new Set(e));const t=r.geometry,i=t.index?t.index.array:null,n=t.attributes.position;let s,o,a,l,c=0;const h=r._roots;for(let u=0,f=h.length;u<f;u++)s=h[u],o=new Uint32Array(s),a=new Uint16Array(s),l=new Float32Array(s),d(0,c),c+=s.byteLength;function d(u,f,m=!1){const E=u*2;if(a[E+15]===Xc){const g=o[u+6],p=a[E+14];let _=1/0,T=1/0,I=1/0,v=-1/0,b=-1/0,x=-1/0;for(let A=3*g,y=3*(g+p);A<y;A++){let S=i[A];const O=n.getX(S),w=n.getY(S),N=n.getZ(S);O<_&&(_=O),O>v&&(v=O),w<T&&(T=w),w>b&&(b=w),N<I&&(I=N),N>x&&(x=N)}return l[u+0]!==_||l[u+1]!==T||l[u+2]!==I||l[u+3]!==v||l[u+4]!==b||l[u+5]!==x?(l[u+0]=_,l[u+1]=T,l[u+2]=I,l[u+3]=v,l[u+4]=b,l[u+5]=x,!0):!1}else{const g=u+8,p=o[u+6],_=g+f,T=p+f;let I=m,v=!1,b=!1;e?I||(v=e.has(_),b=e.has(T),I=!v&&!b):(v=!0,b=!0);const x=I||v,A=I||b;let y=!1;x&&(y=d(g,f,I));let S=!1;A&&(S=d(p,f,I));const O=y||S;if(O)for(let w=0;w<3;w++){const N=g+w,C=p+w,U=l[N],B=l[N+3],V=l[C],j=l[C+3];l[u+w]=U<V?U:V,l[u+w+3]=B>j?B:j}return O}}}const Hm=new je;function Rs(r,e,t,i){return Rt(r,e,Hm),t.intersectBox(Hm,i)}function Uw(r,e,t,i,n,s){const{geometry:o,_indirectBuffer:a}=r;for(let l=i,c=i+n;l<c;l++){let h=a?a[l]:l;Zc(o,e,t,h,s)}}function Bw(r,e,t,i,n){const{geometry:s,_indirectBuffer:o}=r;let a=1/0,l=null;for(let c=i,h=i+n;c<h;c++){let d;d=Zc(s,e,t,o?o[c]:c),d&&d.distance<a&&(l=d,a=d.distance)}return l}function zw(r,e,t,i,n,s,o){const{geometry:a}=t,{index:l}=a,c=a.attributes.position;for(let h=r,d=e+r;h<d;h++){let u;if(u=t.resolveTriangleIndex(h),Ht(o,u*3,l,c),o.needsUpdate=!0,i(o,u,n,s))return!0}return!1}const Wm=new F;function Vw(r,e,t,i,n){Tt.setBuffer(r._roots[e]),qu(0,r,t,i,n),Tt.clearBuffer()}function qu(r,e,t,i,n){const{float32Array:s,uint16Array:o,uint32Array:a}=Tt,l=r*2;if(Ni(l,o)){const c=Ui(r,a),h=qi(l,o);Lw(e,t,i,c,h,n)}else{const c=Ki(r);Rs(c,s,i,Wm)&&qu(c,e,t,i,n);const h=Qi(r,a);Rs(h,s,i,Wm)&&qu(h,e,t,i,n)}}const Ym=new F,kw=["x","y","z"];function Gw(r,e,t,i){Tt.setBuffer(r._roots[e]);const n=Ku(0,r,t,i);return Tt.clearBuffer(),n}function Ku(r,e,t,i){const{float32Array:n,uint16Array:s,uint32Array:o}=Tt;let a=r*2;if(Ni(a,s)){const l=Ui(r,o),c=qi(a,s);return Ow(e,t,i,l,c)}else{const l=zE(r,o),c=kw[l],h=i.direction[c]>=0;let d,u;h?(d=Ki(r),u=Qi(r,o)):(d=Qi(r,o),u=Ki(r));const f=Rs(d,n,i,Ym)?Ku(d,e,t,i):null;if(f){const E=f.point[c];if(h?E<=n[u+l]:E>=n[u+l+3])return f}const m=Rs(u,n,i,Ym)?Ku(u,e,t,i):null;return f&&m?f.distance<=m.distance?f:m:f||m||null}}const Bl=new je,Yr=new dn,Xr=new dn,jo=new fe,Xm=new yi,zl=new yi;function Hw(r,e,t,i){Tt.setBuffer(r._roots[e]);const n=Qu(0,r,t,i);return Tt.clearBuffer(),n}function Qu(r,e,t,i,n=null){const{float32Array:s,uint16Array:o,uint32Array:a}=Tt;let l=r*2;if(n===null&&(t.boundingBox||t.computeBoundingBox(),Xm.set(t.boundingBox.min,t.boundingBox.max,i),n=Xm),Ni(l,o)){const c=e.geometry,h=c.index,d=c.attributes.position,u=t.index,f=t.attributes.position,m=Ui(r,a),E=qi(l,o);if(jo.copy(i).invert(),t.boundsTree)return Rt(r,s,zl),zl.matrix.copy(jo),zl.needsUpdate=!0,t.boundsTree.shapecast({intersectsBounds:g=>zl.intersectsBox(g),intersectsTriangle:g=>{g.a.applyMatrix4(i),g.b.applyMatrix4(i),g.c.applyMatrix4(i),g.needsUpdate=!0;for(let p=m*3,_=(E+m)*3;p<_;p+=3)if(Ht(Xr,p,h,d),Xr.needsUpdate=!0,g.intersectsTriangle(Xr))return!0;return!1}});for(let g=m*3,p=(E+m)*3;g<p;g+=3){Ht(Yr,g,h,d),Yr.a.applyMatrix4(jo),Yr.b.applyMatrix4(jo),Yr.c.applyMatrix4(jo),Yr.needsUpdate=!0;for(let _=0,T=u.count;_<T;_+=3)if(Ht(Xr,_,u,f),Xr.needsUpdate=!0,Yr.intersectsTriangle(Xr))return!0}}else{const c=r+8,h=a[r+6];return Rt(c,s,Bl),!!(n.intersectsBox(Bl)&&Qu(c,e,t,i,n)||(Rt(h,s,Bl),n.intersectsBox(Bl)&&Qu(h,e,t,i,n)))}}const Vl=new fe,nu=new yi,qo=new yi,Ww=new F,Yw=new F,Xw=new F,Zw=new F;function jw(r,e,t,i={},n={},s=0,o=1/0){e.boundingBox||e.computeBoundingBox(),nu.set(e.boundingBox.min,e.boundingBox.max,t),nu.needsUpdate=!0;const a=r.geometry,l=a.attributes.position,c=a.index,h=e.attributes.position,d=e.index,u=ji.getPrimitive(),f=ji.getPrimitive();let m=Ww,E=Yw,g=null,p=null;n&&(g=Xw,p=Zw);let _=1/0,T=null,I=null;return Vl.copy(t).invert(),qo.matrix.copy(Vl),r.shapecast({boundsTraverseOrder:v=>nu.distanceToBox(v),intersectsBounds:(v,b,x)=>x<_&&x<o?(b&&(qo.min.copy(v.min),qo.max.copy(v.max),qo.needsUpdate=!0),!0):!1,intersectsRange:(v,b)=>{if(e.boundsTree)return e.boundsTree.shapecast({boundsTraverseOrder:x=>qo.distanceToBox(x),intersectsBounds:(x,A,y)=>y<_&&y<o,intersectsRange:(x,A)=>{for(let y=x,S=x+A;y<S;y++){Ht(f,3*y,d,h),f.a.applyMatrix4(t),f.b.applyMatrix4(t),f.c.applyMatrix4(t),f.needsUpdate=!0;for(let O=v,w=v+b;O<w;O++){Ht(u,3*O,c,l),u.needsUpdate=!0;const N=u.distanceToTriangle(f,m,g);if(N<_&&(E.copy(m),p&&p.copy(g),_=N,T=O,I=y),N<s)return!0}}}});{const x=Mo(e);for(let A=0,y=x;A<y;A++){Ht(f,3*A,d,h),f.a.applyMatrix4(t),f.b.applyMatrix4(t),f.c.applyMatrix4(t),f.needsUpdate=!0;for(let S=v,O=v+b;S<O;S++){Ht(u,3*S,c,l),u.needsUpdate=!0;const w=u.distanceToTriangle(f,m,g);if(w<_&&(E.copy(m),p&&p.copy(g),_=w,T=S,I=A),w<s)return!0}}}}}),ji.releasePrimitive(u),ji.releasePrimitive(f),_===1/0?null:(i.point?i.point.copy(E):i.point=E.clone(),i.distance=_,i.faceIndex=T,n&&(n.point?n.point.copy(p):n.point=p.clone(),n.point.applyMatrix4(Vl),E.applyMatrix4(Vl),n.distance=E.sub(n.point).length(),n.faceIndex=I),i)}function qw(r,e=null){e&&Array.isArray(e)&&(e=new Set(e));const t=r.geometry,i=t.index?t.index.array:null,n=t.attributes.position;let s,o,a,l,c=0;const h=r._roots;for(let u=0,f=h.length;u<f;u++)s=h[u],o=new Uint32Array(s),a=new Uint16Array(s),l=new Float32Array(s),d(0,c),c+=s.byteLength;function d(u,f,m=!1){const E=u*2;if(a[E+15]===Xc){const g=o[u+6],p=a[E+14];let _=1/0,T=1/0,I=1/0,v=-1/0,b=-1/0,x=-1/0;for(let A=g,y=g+p;A<y;A++){const S=3*r.resolveTriangleIndex(A);for(let O=0;O<3;O++){let w=S+O;w=i?i[w]:w;const N=n.getX(w),C=n.getY(w),U=n.getZ(w);N<_&&(_=N),N>v&&(v=N),C<T&&(T=C),C>b&&(b=C),U<I&&(I=U),U>x&&(x=U)}}return l[u+0]!==_||l[u+1]!==T||l[u+2]!==I||l[u+3]!==v||l[u+4]!==b||l[u+5]!==x?(l[u+0]=_,l[u+1]=T,l[u+2]=I,l[u+3]=v,l[u+4]=b,l[u+5]=x,!0):!1}else{const g=u+8,p=o[u+6],_=g+f,T=p+f;let I=m,v=!1,b=!1;e?I||(v=e.has(_),b=e.has(T),I=!v&&!b):(v=!0,b=!0);const x=I||v,A=I||b;let y=!1;x&&(y=d(g,f,I));let S=!1;A&&(S=d(p,f,I));const O=y||S;if(O)for(let w=0;w<3;w++){const N=g+w,C=p+w,U=l[N],B=l[N+3],V=l[C],j=l[C+3];l[u+w]=U<V?U:V,l[u+w+3]=B>j?B:j}return O}}}const Zm=new F;function Kw(r,e,t,i,n){Tt.setBuffer(r._roots[e]),Ju(0,r,t,i,n),Tt.clearBuffer()}function Ju(r,e,t,i,n){const{float32Array:s,uint16Array:o,uint32Array:a}=Tt,l=r*2;if(Ni(l,o)){const c=Ui(r,a),h=qi(l,o);Uw(e,t,i,c,h,n)}else{const c=Ki(r);Rs(c,s,i,Zm)&&Ju(c,e,t,i,n);const h=Qi(r,a);Rs(h,s,i,Zm)&&Ju(h,e,t,i,n)}}const jm=new F,Qw=["x","y","z"];function Jw(r,e,t,i){Tt.setBuffer(r._roots[e]);const n=$u(0,r,t,i);return Tt.clearBuffer(),n}function $u(r,e,t,i){const{float32Array:n,uint16Array:s,uint32Array:o}=Tt;let a=r*2;if(Ni(a,s)){const l=Ui(r,o),c=qi(a,s);return Bw(e,t,i,l,c)}else{const l=zE(r,o),c=Qw[l],h=i.direction[c]>=0;let d,u;h?(d=Ki(r),u=Qi(r,o)):(d=Qi(r,o),u=Ki(r));const f=Rs(d,n,i,jm)?$u(d,e,t,i):null;if(f){const E=f.point[c];if(h?E<=n[u+l]:E>=n[u+l+3])return f}const m=Rs(u,n,i,jm)?$u(u,e,t,i):null;return f&&m?f.distance<=m.distance?f:m:f||m||null}}const kl=new je,Zr=new dn,jr=new dn,Ko=new fe,qm=new yi,Gl=new yi;function $w(r,e,t,i){Tt.setBuffer(r._roots[e]);const n=ed(0,r,t,i);return Tt.clearBuffer(),n}function ed(r,e,t,i,n=null){const{float32Array:s,uint16Array:o,uint32Array:a}=Tt;let l=r*2;if(n===null&&(t.boundingBox||t.computeBoundingBox(),qm.set(t.boundingBox.min,t.boundingBox.max,i),n=qm),Ni(l,o)){const c=e.geometry,h=c.index,d=c.attributes.position,u=t.index,f=t.attributes.position,m=Ui(r,a),E=qi(l,o);if(Ko.copy(i).invert(),t.boundsTree)return Rt(r,s,Gl),Gl.matrix.copy(Ko),Gl.needsUpdate=!0,t.boundsTree.shapecast({intersectsBounds:g=>Gl.intersectsBox(g),intersectsTriangle:g=>{g.a.applyMatrix4(i),g.b.applyMatrix4(i),g.c.applyMatrix4(i),g.needsUpdate=!0;for(let p=m,_=E+m;p<_;p++)if(Ht(jr,3*e.resolveTriangleIndex(p),h,d),jr.needsUpdate=!0,g.intersectsTriangle(jr))return!0;return!1}});for(let g=m,p=E+m;g<p;g++){const _=e.resolveTriangleIndex(g);Ht(Zr,3*_,h,d),Zr.a.applyMatrix4(Ko),Zr.b.applyMatrix4(Ko),Zr.c.applyMatrix4(Ko),Zr.needsUpdate=!0;for(let T=0,I=u.count;T<I;T+=3)if(Ht(jr,T,u,f),jr.needsUpdate=!0,Zr.intersectsTriangle(jr))return!0}}else{const c=r+8,h=a[r+6];return Rt(c,s,kl),!!(n.intersectsBox(kl)&&ed(c,e,t,i,n)||(Rt(h,s,kl),n.intersectsBox(kl)&&ed(h,e,t,i,n)))}}const Hl=new fe,su=new yi,Qo=new yi,eA=new F,tA=new F,iA=new F,nA=new F;function sA(r,e,t,i={},n={},s=0,o=1/0){e.boundingBox||e.computeBoundingBox(),su.set(e.boundingBox.min,e.boundingBox.max,t),su.needsUpdate=!0;const a=r.geometry,l=a.attributes.position,c=a.index,h=e.attributes.position,d=e.index,u=ji.getPrimitive(),f=ji.getPrimitive();let m=eA,E=tA,g=null,p=null;n&&(g=iA,p=nA);let _=1/0,T=null,I=null;return Hl.copy(t).invert(),Qo.matrix.copy(Hl),r.shapecast({boundsTraverseOrder:v=>su.distanceToBox(v),intersectsBounds:(v,b,x)=>x<_&&x<o?(b&&(Qo.min.copy(v.min),Qo.max.copy(v.max),Qo.needsUpdate=!0),!0):!1,intersectsRange:(v,b)=>{if(e.boundsTree){const x=e.boundsTree;return x.shapecast({boundsTraverseOrder:A=>Qo.distanceToBox(A),intersectsBounds:(A,y,S)=>S<_&&S<o,intersectsRange:(A,y)=>{for(let S=A,O=A+y;S<O;S++){const w=x.resolveTriangleIndex(S);Ht(f,3*w,d,h),f.a.applyMatrix4(t),f.b.applyMatrix4(t),f.c.applyMatrix4(t),f.needsUpdate=!0;for(let N=v,C=v+b;N<C;N++){const U=r.resolveTriangleIndex(N);Ht(u,3*U,c,l),u.needsUpdate=!0;const B=u.distanceToTriangle(f,m,g);if(B<_&&(E.copy(m),p&&p.copy(g),_=B,T=N,I=S),B<s)return!0}}}})}else{const x=Mo(e);for(let A=0,y=x;A<y;A++){Ht(f,3*A,d,h),f.a.applyMatrix4(t),f.b.applyMatrix4(t),f.c.applyMatrix4(t),f.needsUpdate=!0;for(let S=v,O=v+b;S<O;S++){const w=r.resolveTriangleIndex(S);Ht(u,3*w,c,l),u.needsUpdate=!0;const N=u.distanceToTriangle(f,m,g);if(N<_&&(E.copy(m),p&&p.copy(g),_=N,T=S,I=A),N<s)return!0}}}}}),ji.releasePrimitive(u),ji.releasePrimitive(f),_===1/0?null:(i.point?i.point.copy(E):i.point=E.clone(),i.distance=_,i.faceIndex=T,n&&(n.point?n.point.copy(p):n.point=p.clone(),n.point.applyMatrix4(Hl),E.applyMatrix4(Hl),n.distance=E.sub(n.point).length(),n.faceIndex=I),i)}function rA(){return typeof SharedArrayBuffer<"u"}const pa=new Tt.constructor,Mc=new Tt.constructor,_s=new lf(()=>new je),qr=new je,Kr=new je,ru=new je,ou=new je;let au=!1;function oA(r,e,t,i){if(au)throw new Error("MeshBVH: Recursive calls to bvhcast not supported.");au=!0;const n=r._roots,s=e._roots;let o,a=0,l=0;const c=new fe().copy(t).invert();for(let h=0,d=n.length;h<d;h++){pa.setBuffer(n[h]),l=0;const u=_s.getPrimitive();Rt(0,pa.float32Array,u),u.applyMatrix4(c);for(let f=0,m=s.length;f<m&&(Mc.setBuffer(s[h]),o=rn(0,0,t,c,i,a,l,0,0,u),Mc.clearBuffer(),l+=s[f].length,!o);f++);if(_s.releasePrimitive(u),pa.clearBuffer(),a+=n[h].length,o)break}return au=!1,o}function rn(r,e,t,i,n,s=0,o=0,a=0,l=0,c=null,h=!1){let d,u;h?(d=Mc,u=pa):(d=pa,u=Mc);const f=d.float32Array,m=d.uint32Array,E=d.uint16Array,g=u.float32Array,p=u.uint32Array,_=u.uint16Array,T=r*2,I=e*2,v=Ni(T,E),b=Ni(I,_);let x=!1;if(b&&v)h?x=n(Ui(e,p),qi(e*2,_),Ui(r,m),qi(r*2,E),l,o+e,a,s+r):x=n(Ui(r,m),qi(r*2,E),Ui(e,p),qi(e*2,_),a,s+r,l,o+e);else if(b){const A=_s.getPrimitive();Rt(e,g,A),A.applyMatrix4(t);const y=Ki(r),S=Qi(r,m);Rt(y,f,qr),Rt(S,f,Kr);const O=A.intersectsBox(qr),w=A.intersectsBox(Kr);x=O&&rn(e,y,i,t,n,o,s,l,a+1,A,!h)||w&&rn(e,S,i,t,n,o,s,l,a+1,A,!h),_s.releasePrimitive(A)}else{const A=Ki(e),y=Qi(e,p);Rt(A,g,ru),Rt(y,g,ou);const S=c.intersectsBox(ru),O=c.intersectsBox(ou);if(S&&O)x=rn(r,A,t,i,n,s,o,a,l+1,c,h)||rn(r,y,t,i,n,s,o,a,l+1,c,h);else if(S)if(v)x=rn(r,A,t,i,n,s,o,a,l+1,c,h);else{const w=_s.getPrimitive();w.copy(ru).applyMatrix4(t);const N=Ki(r),C=Qi(r,m);Rt(N,f,qr),Rt(C,f,Kr);const U=w.intersectsBox(qr),B=w.intersectsBox(Kr);x=U&&rn(A,N,i,t,n,o,s,l,a+1,w,!h)||B&&rn(A,C,i,t,n,o,s,l,a+1,w,!h),_s.releasePrimitive(w)}else if(O)if(v)x=rn(r,y,t,i,n,s,o,a,l+1,c,h);else{const w=_s.getPrimitive();w.copy(ou).applyMatrix4(t);const N=Ki(r),C=Qi(r,m);Rt(N,f,qr),Rt(C,f,Kr);const U=w.intersectsBox(qr),B=w.intersectsBox(Kr);x=U&&rn(y,N,i,t,n,o,s,l,a+1,w,!h)||B&&rn(y,C,i,t,n,o,s,l,a+1,w,!h),_s.releasePrimitive(w)}}return x}const Wl=new yi,Km=new je;class cf{static serialize(e,t={}){t={cloneBuffers:!0,...t};const i=e.geometry,n=e._roots,s=e._indirectBuffer,o=i.getIndex();let a;return t.cloneBuffers?a={roots:n.map(l=>l.slice()),index:o.array.slice(),indirectBuffer:s?s.slice():null}:a={roots:n,index:o.array,indirectBuffer:s},a}static deserialize(e,t,i={}){i={setIndex:!0,indirect:!!e.indirectBuffer,...i};const{index:n,roots:s,indirectBuffer:o}=e,a=new cf(t,{...i,[$h]:!0});if(a._roots=s,a._indirectBuffer=o||null,i.setIndex){const l=t.getIndex();if(l===null){const c=new ot(e.index,1,!1);t.setIndex(c)}else l.array!==n&&(l.array.set(n),l.needsUpdate=!0)}return a}get indirect(){return!!this._indirectBuffer}constructor(e,t={}){if(e.isBufferGeometry){if(e.index&&e.index.isInterleavedBufferAttribute)throw new Error("MeshBVH: InterleavedBufferAttribute is not supported for the index attribute.")}else throw new Error("MeshBVH: Only BufferGeometries are supported.");if(t=Object.assign({strategy:DE,maxDepth:40,maxLeafTris:10,verbose:!0,useSharedArrayBuffer:!1,setBoundingBox:!0,onProgress:null,indirect:!1,[$h]:!1},t),t.useSharedArrayBuffer&&!rA())throw new Error("MeshBVH: SharedArrayBuffer is not available.");this.geometry=e,this._roots=null,this._indirectBuffer=null,t[$h]||(yw(this,t),!e.boundingBox&&t.setBoundingBox&&(e.boundingBox=this.getBoundingBox(new je)));const{_indirectBuffer:i}=this;this.resolveTriangleIndex=t.indirect?n=>i[n]:n=>n}refit(e=null){return(this.indirect?qw:Dw)(this,e)}traverse(e,t=0){const i=this._roots[t],n=new Uint32Array(i),s=new Uint16Array(i);o(0);function o(a,l=0){const c=a*2,h=s[c+15]===Xc;if(h){const d=n[a+6],u=s[c+14];e(l,h,new Float32Array(i,a*4,6),d,u)}else{const d=a+mc/4,u=n[a+6],f=n[a+7];e(l,h,new Float32Array(i,a*4,6),f)||(o(d,l+1),o(u,l+1))}}}raycast(e,t=$i){const i=this._roots,n=this.geometry,s=[],o=t.isMaterial,a=Array.isArray(t),l=n.groups,c=o?t.side:t,h=this.indirect?Kw:Vw;for(let d=0,u=i.length;d<u;d++){const f=a?t[l[d].materialIndex].side:c,m=s.length;if(h(this,d,f,e,s),a){const E=l[d].materialIndex;for(let g=m,p=s.length;g<p;g++)s[g].face.materialIndex=E}}return s}raycastFirst(e,t=$i){const i=this._roots,n=this.geometry,s=t.isMaterial,o=Array.isArray(t);let a=null;const l=n.groups,c=s?t.side:t,h=this.indirect?Jw:Gw;for(let d=0,u=i.length;d<u;d++){const f=o?t[l[d].materialIndex].side:c,m=h(this,d,f,e);m!=null&&(a==null||m.distance<a.distance)&&(a=m,o&&(m.face.materialIndex=l[d].materialIndex))}return a}intersectsGeometry(e,t){let i=!1;const n=this._roots,s=this.indirect?$w:Hw;for(let o=0,a=n.length;o<a&&(i=s(this,o,e,t),!i);o++);return i}shapecast(e){const t=ji.getPrimitive(),i=this.indirect?zw:Nw;let{boundsTraverseOrder:n,intersectsBounds:s,intersectsRange:o,intersectsTriangle:a}=e;if(o&&a){const d=o;o=(u,f,m,E,g)=>d(u,f,m,E,g)?!0:i(u,f,this,a,m,E,t)}else o||(a?o=(d,u,f,m)=>i(d,u,this,a,f,m,t):o=(d,u,f)=>f);let l=!1,c=0;const h=this._roots;for(let d=0,u=h.length;d<u;d++){const f=h[d];if(l=Rw(this,d,s,o,n,c),l)break;c+=f.byteLength}return ji.releasePrimitive(t),l}bvhcast(e,t,i){let{intersectsRanges:n,intersectsTriangles:s}=i;const o=ji.getPrimitive(),a=this.geometry.index,l=this.geometry.attributes.position,c=this.indirect?m=>{const E=this.resolveTriangleIndex(m);Ht(o,E*3,a,l)}:m=>{Ht(o,m*3,a,l)},h=ji.getPrimitive(),d=e.geometry.index,u=e.geometry.attributes.position,f=e.indirect?m=>{const E=e.resolveTriangleIndex(m);Ht(h,E*3,d,u)}:m=>{Ht(h,m*3,d,u)};if(s){const m=(E,g,p,_,T,I,v,b)=>{for(let x=p,A=p+_;x<A;x++){f(x),h.a.applyMatrix4(t),h.b.applyMatrix4(t),h.c.applyMatrix4(t),h.needsUpdate=!0;for(let y=E,S=E+g;y<S;y++)if(c(y),o.needsUpdate=!0,s(o,h,y,x,T,I,v,b))return!0}return!1};if(n){const E=n;n=function(g,p,_,T,I,v,b,x){return E(g,p,_,T,I,v,b,x)?!0:m(g,p,_,T,I,v,b,x)}}else n=m}return oA(this,e,t,n)}intersectsBox(e,t){return Wl.set(e.min,e.max,t),Wl.needsUpdate=!0,this.shapecast({intersectsBounds:i=>Wl.intersectsBox(i),intersectsTriangle:i=>Wl.intersectsTriangle(i)})}intersectsSphere(e){return this.shapecast({intersectsBounds:t=>e.intersectsBox(t),intersectsTriangle:t=>t.intersectsSphere(e)})}closestPointToGeometry(e,t,i={},n={},s=0,o=1/0){return(this.indirect?sA:jw)(this,e,t,i,n,s,o)}closestPointToPoint(e,t={},i=0,n=1/0){return Mw(this,e,t,i,n)}getBoundingBox(e){return e.makeEmpty(),this._roots.forEach(t=>{Rt(0,new Float32Array(t),Km),e.union(Km)}),e}}function Qm(r,e,t){return r===null||(r.point.applyMatrix4(e.matrixWorld),r.distance=r.point.distanceTo(t.ray.origin),r.object=e,r.distance<t.near||r.distance>t.far)?null:r}const lu=new xo,Jm=new fe,aA=ge.prototype.raycast;function lA(r,e){if(this.geometry.boundsTree){if(this.material===void 0)return;Jm.copy(this.matrixWorld).invert(),lu.copy(r.ray).applyMatrix4(Jm);const t=this.geometry.boundsTree;if(r.firstHitOnly===!0){const i=Qm(t.raycastFirst(lu,this.material),this,r);i&&e.push(i)}else{const i=t.raycast(lu,this.material);for(let n=0,s=i.length;n<s;n++){const o=Qm(i[n],this,r);o&&e.push(o)}}}else aA.call(this,r,e)}function cA(r){return this.boundsTree=new cf(this,r),this.boundsTree}function hA(){this.boundsTree=null}let oe=class{constructor(){R(this,"enabled",!0),R(this,"trigger",r=>{if(!this.enabled)return;const e=this.handlers.slice(0);for(const t of e)t(r)}),R(this,"handlers",[])}add(r){this.handlers.push(r)}remove(r){this.handlers=this.handlers.filter(e=>e!==r)}reset(){this.handlers.length=0}};class jn{constructor(){R(this,"enabled",!0),R(this,"trigger",async e=>{if(!this.enabled)return;const t=this.handlers.slice(0);for(const i of t)await i(e)}),R(this,"handlers",[])}add(e){this.handlers.push(e)}remove(e){this.handlers=this.handlers.filter(t=>t!==e)}reset(){this.handlers.length=0}}class hf{constructor(e){R(this,"isDisposeable",()=>"dispose"in this&&"onDisposed"in this),R(this,"isResizeable",()=>"resize"in this&&"getSize"in this),R(this,"isUpdateable",()=>"onAfterUpdate"in this&&"onBeforeUpdate"in this&&"update"in this),R(this,"isHideable",()=>"visible"in this),R(this,"isConfigurable",()=>"setup"in this&&"config"in this&&"onSetup"in this),this.components=e}}class We extends hf{}class VE extends hf{constructor(e){super(e),R(this,"worlds",new Map),R(this,"onWorldChanged",new oe),R(this,"currentWorld",null),this.onWorldChanged.add(({world:t,action:i})=>{i==="removed"&&this.worlds.delete(t.uuid)})}}class uA extends VE{constructor(){super(...arguments),R(this,"hasCameraControls",()=>"controls"in this)}}class dA extends VE{constructor(){super(...arguments),R(this,"onAfterUpdate",new oe),R(this,"onBeforeUpdate",new oe),R(this,"onDisposed",new oe),R(this,"onResize",new oe),R(this,"onClippingPlanesUpdated",new oe),R(this,"clippingPlanes",[])}updateClippingPlanes(){this.onClippingPlanesUpdated.trigger()}setPlane(e,t,i){t.isLocal=i;const n=this.clippingPlanes.indexOf(t);e&&n===-1?this.clippingPlanes.push(t):!e&&n>-1&&this.clippingPlanes.splice(n,1),this.three.clippingPlanes=this.clippingPlanes.filter(s=>!s.isLocal)}}const kE=class td extends We{constructor(e){super(e),R(this,"_disposedComponents",new Set),R(this,"enabled",!0),e.add(td.uuid,this)}get(){return this._disposedComponents}destroy(e,t=!0,i=!0){e.removeFromParent();const n=e;n.dispose&&n.dispose(),this.disposeGeometryAndMaterials(e,t),i&&n.children&&n.children.length&&this.disposeChildren(n),e.children.length=0}disposeGeometry(e){e.boundsTree&&e.disposeBoundsTree&&e.disposeBoundsTree(),e.dispose()}disposeGeometryAndMaterials(e,t){const i=e;i.geometry&&this.disposeGeometry(i.geometry),t&&i.material&&td.disposeMaterial(i),i.material=[],i.geometry=null}disposeChildren(e){for(const t of e.children)this.destroy(t)}static disposeMaterial(e){if(e.material)if(Array.isArray(e.material))for(const t of e.material)t.dispose();else e.material.dispose()}};R(kE,"uuid","76e9cd8e-ad8f-4753-9ef6-cbc60f7247fe");let xn=kE;class xs extends Set{constructor(e){super(e),R(this,"onItemAdded",new oe),R(this,"onItemDeleted",new oe),R(this,"onCleared",new oe),R(this,"guard",()=>!0)}clear(){super.clear(),this.onCleared.trigger()}add(...e){for(const t of e)this.has(t)||!this.guard(t)||(super.add(t),this.onItemAdded||(this.onItemAdded=new oe),this.onItemAdded.trigger(t));return this}delete(e){const t=super.delete(e);return t&&this.onItemDeleted.trigger(),t}dispose(){this.clear(),this.onItemAdded.reset(),this.onItemDeleted.reset(),this.onCleared.reset()}}class fn extends Map{constructor(e){super(e),R(this,"onItemSet",new oe),R(this,"onItemUpdated",new oe),R(this,"onItemDeleted",new oe),R(this,"onCleared",new oe),R(this,"guard",()=>!0)}clear(){super.clear(),this.onCleared.trigger()}set(e,t){const i=this.has(e);if(!(this.guard??(()=>!0))(e,t))return this;const n=super.set(e,t);return i?(this.onItemUpdated||(this.onItemUpdated=new oe),this.onItemUpdated.trigger({key:e,value:t})):(this.onItemSet||(this.onItemSet=new oe),this.onItemSet.trigger({key:e,value:t})),n}delete(e){const t=super.delete(e);return t&&this.onItemDeleted.trigger(e),t}dispose(){this.clear(),this.onItemSet.reset(),this.onItemDeleted.reset(),this.onCleared.reset()}}class cu{static isEntry(e){return new Set(["Boolean","Color","Text","Number","Select","Vector3","TextSet","None"]).has(e.type)}static copySchema(e,t={}){for(const i in e){const n=e[i];this.isEntry(n)?t[i]=this.copyEntry(n):(t[i]={},this.copySchema(n,t[i]))}return t}static copyEntry(e){if(e.type==="Boolean"){const t=e;return{type:t.type,value:t.value}}if(e.type==="Color"){const t=e;return{type:t.type,value:t.value.clone()}}if(e.type==="Text"){const t=e;return{type:t.type,value:t.value}}if(e.type==="Number"){const t=e;return{type:t.type,value:t.value,min:t.min,max:t.max,interpolable:t.interpolable}}if(e.type==="Select"){const t=e;return{type:t.type,value:t.value,multiple:t.multiple,options:new Set(t.options)}}if(e.type==="Vector3"){const t=e;return{type:t.type,value:t.value.clone()}}if(e.type==="TextSet"){const t=e;return{type:t.type,value:new Set(t.value)}}if(e.type==="None"){const t=e;return{type:t.type,value:t.value}}throw new Error("Invalid entry!")}}class fA{constructor(){R(this,"list",new Set)}add(e){for(const t of e)this.list.add(t)}remove(e){for(const t of e)this.list.delete(t)}set(e){for(const t of this.list)t.enabled=e}reset(){for(const e of this.list)e.reset()}}const gc=0,pA=1,mA=new F,$m=new Ot,hu=new Kt,eg=new F,Yl=new yt;class gA{constructor(){this.tolerance=-1,this.faces=[],this.newFaces=[],this.assigned=new tg,this.unassigned=new tg,this.vertices=[]}setFromPoints(e){if(e.length>=4){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.vertices.push(new EA(e[t]));this.compute()}return this}setFromObject(e){const t=[];return e.updateMatrixWorld(!0),e.traverse(function(i){const n=i.geometry;if(n!==void 0){const s=n.attributes.position;if(s!==void 0)for(let o=0,a=s.count;o<a;o++){const l=new F;l.fromBufferAttribute(s,o).applyMatrix4(i.matrixWorld),t.push(l)}}}),this.setFromPoints(t)}containsPoint(e){const t=this.faces;for(let i=0,n=t.length;i<n;i++)if(t[i].distanceToPoint(e)>this.tolerance)return!1;return!0}intersectRay(e,t){const i=this.faces;let n=-1/0,s=1/0;for(let o=0,a=i.length;o<a;o++){const l=i[o],c=l.distanceToPoint(e.origin),h=l.normal.dot(e.direction);if(c>0&&h>=0)return null;const d=h!==0?-c/h:0;if(!(d<=0)&&(h>0?s=Math.min(d,s):n=Math.max(d,n),n>s))return null}return n!==-1/0?e.at(n,t):e.at(s,t),t}intersectsRay(e){return this.intersectRay(e,mA)!==null}makeEmpty(){return this.faces=[],this.vertices=[],this}addVertexToFace(e,t){return e.face=t,t.outside===null?this.assigned.append(e):this.assigned.insertBefore(t.outside,e),t.outside=e,this}removeVertexFromFace(e,t){return e===t.outside&&(e.next!==null&&e.next.face===t?t.outside=e.next:t.outside=null),this.assigned.remove(e),this}removeAllVerticesFromFace(e){if(e.outside!==null){const t=e.outside;let i=e.outside;for(;i.next!==null&&i.next.face===e;)i=i.next;return this.assigned.removeSubList(t,i),t.prev=i.next=null,e.outside=null,t}}deleteFaceVertices(e,t){const i=this.removeAllVerticesFromFace(e);if(i!==void 0)if(t===void 0)this.unassigned.appendChain(i);else{let n=i;do{const s=n.next;t.distanceToPoint(n.point)>this.tolerance?this.addVertexToFace(n,t):this.unassigned.append(n),n=s}while(n!==null)}return this}resolveUnassignedPoints(e){if(this.unassigned.isEmpty()===!1){let t=this.unassigned.first();do{const i=t.next;let n=this.tolerance,s=null;for(let o=0;o<e.length;o++){const a=e[o];if(a.mark===gc){const l=a.distanceToPoint(t.point);if(l>n&&(n=l,s=a),n>1e3*this.tolerance)break}}s!==null&&this.addVertexToFace(t,s),t=i}while(t!==null)}return this}computeExtremes(){const e=new F,t=new F,i=[],n=[];for(let s=0;s<3;s++)i[s]=n[s]=this.vertices[0];e.copy(this.vertices[0].point),t.copy(this.vertices[0].point);for(let s=0,o=this.vertices.length;s<o;s++){const a=this.vertices[s],l=a.point;for(let c=0;c<3;c++)l.getComponent(c)<e.getComponent(c)&&(e.setComponent(c,l.getComponent(c)),i[c]=a);for(let c=0;c<3;c++)l.getComponent(c)>t.getComponent(c)&&(t.setComponent(c,l.getComponent(c)),n[c]=a)}return this.tolerance=3*Number.EPSILON*(Math.max(Math.abs(e.x),Math.abs(t.x))+Math.max(Math.abs(e.y),Math.abs(t.y))+Math.max(Math.abs(e.z),Math.abs(t.z))),{min:i,max:n}}computeInitialHull(){const e=this.vertices,t=this.computeExtremes(),i=t.min,n=t.max;let s=0,o=0;for(let u=0;u<3;u++){const f=n[u].point.getComponent(u)-i[u].point.getComponent(u);f>s&&(s=f,o=u)}const a=i[o],l=n[o];let c,h;s=0,$m.set(a.point,l.point);for(let u=0,f=this.vertices.length;u<f;u++){const m=e[u];if(m!==a&&m!==l){$m.closestPointToPoint(m.point,!0,eg);const E=eg.distanceToSquared(m.point);E>s&&(s=E,c=m)}}s=-1,hu.setFromCoplanarPoints(a.point,l.point,c.point);for(let u=0,f=this.vertices.length;u<f;u++){const m=e[u];if(m!==a&&m!==l&&m!==c){const E=Math.abs(hu.distanceToPoint(m.point));E>s&&(s=E,h=m)}}const d=[];if(hu.distanceToPoint(h.point)<0){d.push(an.create(a,l,c),an.create(h,l,a),an.create(h,c,l),an.create(h,a,c));for(let u=0;u<3;u++){const f=(u+1)%3;d[u+1].getEdge(2).setTwin(d[0].getEdge(f)),d[u+1].getEdge(1).setTwin(d[f+1].getEdge(0))}}else{d.push(an.create(a,c,l),an.create(h,a,l),an.create(h,l,c),an.create(h,c,a));for(let u=0;u<3;u++){const f=(u+1)%3;d[u+1].getEdge(2).setTwin(d[0].getEdge((3-u)%3)),d[u+1].getEdge(0).setTwin(d[f+1].getEdge(1))}}for(let u=0;u<4;u++)this.faces.push(d[u]);for(let u=0,f=e.length;u<f;u++){const m=e[u];if(m!==a&&m!==l&&m!==c&&m!==h){s=this.tolerance;let E=null;for(let g=0;g<4;g++){const p=this.faces[g].distanceToPoint(m.point);p>s&&(s=p,E=this.faces[g])}E!==null&&this.addVertexToFace(m,E)}}return this}reindexFaces(){const e=[];for(let t=0;t<this.faces.length;t++){const i=this.faces[t];i.mark===gc&&e.push(i)}return this.faces=e,this}nextVertexToAdd(){if(this.assigned.isEmpty()===!1){let e,t=0;const i=this.assigned.first().face;let n=i.outside;do{const s=i.distanceToPoint(n.point);s>t&&(t=s,e=n),n=n.next}while(n!==null&&n.face===i);return e}}computeHorizon(e,t,i,n){this.deleteFaceVertices(i),i.mark=pA;let s;t===null?s=t=i.getEdge(0):s=t.next;do{const o=s.twin,a=o.face;a.mark===gc&&(a.distanceToPoint(e)>this.tolerance?this.computeHorizon(e,o,a,n):n.push(s)),s=s.next}while(s!==t);return this}addAdjoiningFace(e,t){const i=an.create(e,t.tail(),t.head());return this.faces.push(i),i.getEdge(-1).setTwin(t.twin),i.getEdge(0)}addNewFaces(e,t){this.newFaces=[];let i=null,n=null;for(let s=0;s<t.length;s++){const o=t[s],a=this.addAdjoiningFace(e,o);i===null?i=a:a.next.setTwin(n),this.newFaces.push(a.face),n=a}return i.next.setTwin(n),this}addVertexToHull(e){const t=[];return this.unassigned.clear(),this.removeVertexFromFace(e,e.face),this.computeHorizon(e.point,null,e.face,t),this.addNewFaces(e,t),this.resolveUnassignedPoints(this.newFaces),this}cleanup(){return this.assigned.clear(),this.unassigned.clear(),this.newFaces=[],this}compute(){let e;for(this.computeInitialHull();(e=this.nextVertexToAdd())!==void 0;)this.addVertexToHull(e);return this.reindexFaces(),this.cleanup(),this}}class an{constructor(){this.normal=new F,this.midpoint=new F,this.area=0,this.constant=0,this.outside=null,this.mark=gc,this.edge=null}static create(e,t,i){const n=new an,s=new uu(e,n),o=new uu(t,n),a=new uu(i,n);return s.next=a.prev=o,o.next=s.prev=a,a.next=o.prev=s,n.edge=s,n.compute()}getEdge(e){let t=this.edge;for(;e>0;)t=t.next,e--;for(;e<0;)t=t.prev,e++;return t}compute(){const e=this.edge.tail(),t=this.edge.head(),i=this.edge.next.head();return Yl.set(e.point,t.point,i.point),Yl.getNormal(this.normal),Yl.getMidpoint(this.midpoint),this.area=Yl.getArea(),this.constant=this.normal.dot(this.midpoint),this}distanceToPoint(e){return this.normal.dot(e)-this.constant}}class uu{constructor(e,t){this.vertex=e,this.prev=null,this.next=null,this.twin=null,this.face=t}head(){return this.vertex}tail(){return this.prev?this.prev.vertex:null}length(){const e=this.head(),t=this.tail();return t!==null?t.point.distanceTo(e.point):-1}lengthSquared(){const e=this.head(),t=this.tail();return t!==null?t.point.distanceToSquared(e.point):-1}setTwin(e){return this.twin=e,e.twin=this,this}}class EA{constructor(e){this.point=e,this.prev=null,this.next=null,this.face=null}}class tg{constructor(){this.head=null,this.tail=null}first(){return this.head}last(){return this.tail}clear(){return this.head=this.tail=null,this}insertBefore(e,t){return t.prev=e.prev,t.next=e,t.prev===null?this.head=t:t.prev.next=t,e.prev=t,this}insertAfter(e,t){return t.prev=e,t.next=e.next,t.next===null?this.tail=t:t.next.prev=t,e.next=t,this}append(e){return this.head===null?this.head=e:this.tail.next=e,e.prev=this.tail,e.next=null,this.tail=e,this}appendChain(e){for(this.head===null?this.head=e:this.tail.next=e,e.prev=this.tail;e.next!==null;)e=e.next;return this.tail=e,this}remove(e){return e.prev===null?this.head=e.next:e.prev.next=e.next,e.next===null?this.tail=e.prev:e.next.prev=e.prev,this}removeSubList(e,t){return e.prev===null?this.head=t.next:e.prev.next=t.next,t.next===null?this.tail=e.prev:t.next.prev=e.prev,this}isEmpty(){return this.head===null}}const id=[2,2,1],nd=[1,0,0];function Cn(r,e){return r*3+e}function IA(r){const e=r.elements;let t=0;for(let i=0;i<9;i++)t+=e[i]*e[i];return Math.sqrt(t)}function _A(r){const e=r.elements;let t=0;for(let i=0;i<3;i++){const n=e[Cn(id[i],nd[i])];t+=2*n*n}return Math.sqrt(t)}function TA(r,e){let t=0,i=1;const n=r.elements;for(let c=0;c<3;c++){const h=Math.abs(n[Cn(id[c],nd[c])]);h>t&&(t=h,i=c)}let s=1,o=0;const a=nd[i],l=id[i];if(Math.abs(n[Cn(l,a)])>Number.EPSILON){const c=n[Cn(l,l)],h=n[Cn(a,a)],d=n[Cn(l,a)],u=(c-h)/2/d;let f;u<0?f=-1/(-u+Math.sqrt(1+u*u)):f=1/(u+Math.sqrt(1+u*u)),s=1/Math.sqrt(1+f*f),o=f*s}return e.identity(),e.elements[Cn(a,a)]=s,e.elements[Cn(l,l)]=s,e.elements[Cn(l,a)]=o,e.elements[Cn(a,l)]=-o,e}function vA(r,e){let t=0,i=0;const n=10;e.unitary.identity(),e.diagonal.copy(r);const s=e.unitary,o=e.diagonal,a=new Xe,l=new Xe,c=Number.EPSILON*IA(o);for(;i<n&&_A(o)>c;)TA(o,a),l.copy(a).transpose(),o.multiply(a),o.premultiply(l),s.multiply(a),++t>2&&(i++,t=0);return e}function CA(r){const e=[];for(let pe=0;pe<r.length-2;pe+=3){const _e=r[pe],Ee=r[pe+1],Ae=r[pe+2];e.push(new F(_e,Ee,Ae))}const t=new gA;t.setFromPoints(e);const i={unitary:new Xe,diagonal:new Xe},n=t.faces,s=[],o=[];for(let pe=0,_e=n.length;pe<_e;pe++){const Ee=n[pe];let Ae=Ee.edge;s.length=0;do s.push(Ae),Ae=Ae.next;while(Ae!==Ee.edge);const ie=s.length-2;for(let $e=1,M=ie;$e<=M;$e++){const ee=s[0].vertex,K=s[$e+0].vertex,H=s[$e+1].vertex;o.push(ee.point.x,ee.point.y,ee.point.z),o.push(K.point.x,K.point.y,K.point.z),o.push(H.point.x,H.point.y,H.point.z)}}const a=new F,l=new F,c=new F,h=new F,d=new F,u=new F,f=new F,m=new F;let E=0,g=0,p=0,_=0,T=0,I=0,v=0;for(let pe=0,_e=o.length;pe<_e;pe+=9){a.fromArray(o,pe),l.fromArray(o,pe+3),c.fromArray(o,pe+6),f.set(0,0,0),f.add(a).add(l).add(c).divideScalar(3),h.subVectors(l,a),d.subVectors(c,a);const Ee=u.crossVectors(h,d).length()/2;m.add(u.copy(f).multiplyScalar(Ee)),E+=Ee,g+=(9*f.x*f.x+a.x*a.x+l.x*l.x+c.x*c.x)*(Ee/12),p+=(9*f.x*f.y+a.x*a.y+l.x*l.y+c.x*c.y)*(Ee/12),_+=(9*f.x*f.z+a.x*a.z+l.x*l.z+c.x*c.z)*(Ee/12),T+=(9*f.y*f.y+a.y*a.y+l.y*l.y+c.y*c.y)*(Ee/12),I+=(9*f.y*f.z+a.y*a.z+l.y*l.z+c.y*c.z)*(Ee/12),v+=(9*f.z*f.z+a.z*a.z+l.z*l.z+c.z*c.z)*(Ee/12)}m.divideScalar(E),g/=E,p/=E,_/=E,T/=E,I/=E,v/=E,g-=m.x*m.x,p-=m.x*m.y,_-=m.x*m.z,T-=m.y*m.y,I-=m.y*m.z,v-=m.z*m.z;const b=new Xe;b.elements[0]=g,b.elements[1]=p,b.elements[2]=_,b.elements[3]=p,b.elements[4]=T,b.elements[5]=I,b.elements[6]=_,b.elements[7]=I,b.elements[8]=v,vA(b,i);const x=i.unitary,A=new F,y=new F,S=new F;x.extractBasis(A,y,S);let O=-1/0,w=-1/0,N=-1/0,C=1/0,U=1/0,B=1/0;for(let pe=0,_e=e.length;pe<_e;pe++){const Ee=e[pe];O=Math.max(A.dot(Ee),O),w=Math.max(y.dot(Ee),w),N=Math.max(S.dot(Ee),N),C=Math.min(A.dot(Ee),C),U=Math.min(y.dot(Ee),U),B=Math.min(S.dot(Ee),B)}A.multiplyScalar(.5*(C+O)),y.multiplyScalar(.5*(U+w)),S.multiplyScalar(.5*(B+N));const V=new F,j=new F,G=new Xe;V.add(A).add(y).add(S),j.x=O-C,j.y=w-U,j.z=N-B,j.multiplyScalar(.5),G.copy(x);const{x:se,y:W,z:Y}=j,q=new fe;q.makeScale(se*2,W*2,Y*2);const Q=new fe;Q.makeTranslation(-se,-W,-Y);const te=new fe;te.makeTranslation(V.x,V.y,V.z);const Ie=new fe;Ie.setFromMatrix3(G);const ve=new fe;return ve.multiply(te),ve.multiply(Ie),ve.multiply(Q),ve.multiply(q),{center:V,halfSizes:j,rotation:G,transformation:ve}}class ig{static isTransparent(e){return e.transparent&&e.opacity<1}}const uf=class qt{static create(){const e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,i=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return`${qt._lut[e&255]+qt._lut[e>>8&255]+qt._lut[e>>16&255]+qt._lut[e>>24&255]}-${qt._lut[t&255]}${qt._lut[t>>8&255]}-${qt._lut[t>>16&15|64]}${qt._lut[t>>24&255]}-${qt._lut[i&63|128]}${qt._lut[i>>8&255]}-${qt._lut[i>>16&255]}${qt._lut[i>>24&255]}${qt._lut[n&255]}${qt._lut[n>>8&255]}${qt._lut[n>>16&255]}${qt._lut[n>>24&255]}`.toLowerCase()}static validate(e){if(!qt._pattern.test(e))throw new Error(`${e} is not a valid UUID v4.

- If you're the tool creator, you can take one from https://www.uuidgenerator.net/.

- If you're using a platform tool, verify the uuid isn't misspelled or contact the tool creator.`)}};R(uf,"_pattern",/^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$/);R(uf,"_lut",["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"]);let rs=uf;class yA extends We{constructor(e,t){super(e),R(this,"onDisposed",new oe),R(this,"onVertexFound",new oe),R(this,"onVertexLost",new oe),R(this,"onEnabled",new oe),R(this,"components"),R(this,"workingPlane",null),R(this,"_pickedPoint",null),R(this,"_config"),R(this,"_enabled",!1),this.components=e,this.config={snapDistance:.25,showOnlyVertex:!1,...t},this.enabled=!1}set enabled(e){this._enabled=e,e||(this._pickedPoint=null),this.onEnabled.trigger(e)}get enabled(){return this._enabled}set config(e){this._config={...this._config,...e}}get config(){return this._config}dispose(){this.onVertexFound.reset(),this.onVertexLost.reset(),this.components=null,this.onDisposed.trigger(),this.onDisposed.reset()}get(e){if(!this.enabled)return this._pickedPoint;const t=this.components.get(Ji).get(e).castRay();if(!t)return this._pickedPoint!==null&&(this.onVertexLost.trigger(),this._pickedPoint=null),this._pickedPoint;const i=this.getClosestVertex(t);return i?!this.workingPlane||Math.abs(this.workingPlane.distanceToPoint(i))<.001?((this._pickedPoint===null||!this._pickedPoint.equals(i))&&(this._pickedPoint=i.clone(),this.onVertexFound.trigger(this._pickedPoint)),this._pickedPoint):(this._pickedPoint=null,this._pickedPoint):(this._pickedPoint!==null&&(this.onVertexLost.trigger(),this._pickedPoint=null),this._pickedPoint)}getClosestVertex(e){let t=new F,i=!1,n=Number.MAX_SAFE_INTEGER;const s=this.getVertices(e);if(s===null)return null;for(const o of s){if(!o)continue;const a=e.point.distanceTo(o);a>n||a>this._config.snapDistance||(i=!0,t=o,n=e.point.distanceTo(o))}return i?t:this.config.showOnlyVertex?null:e.point}getVertices(e){const t=e.object;if(!e.face||!t)return null;const i=t.geometry,n=new fe,{instanceId:s}=e,o=s!==void 0,a=t instanceof Bi;return a&&o&&t.getMatrixAt(s,n),[this.getVertex(e.face.a,i),this.getVertex(e.face.b,i),this.getVertex(e.face.c,i)].map(l=>(l&&(a&&o&&l.applyMatrix4(n),l.applyMatrix4(t.matrixWorld)),l))}getVertex(e,t){if(e===void 0)return null;const i=t.attributes.position;return new F(i.getX(e),i.getY(e),i.getZ(e))}}var Xl=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function GE(r){return r&&r.__esModule&&Object.prototype.hasOwnProperty.call(r,"default")?r.default:r}var df={exports:{}};df.exports=jc;df.exports.default=jc;function jc(r,e,t){t=t||2;var i=e&&e.length,n=i?e[0]*t:r.length,s=HE(r,0,n,t,!0),o=[];if(!s||s.next===s.prev)return o;var a,l,c,h,d,u,f;if(i&&(s=AA(r,e,s,t)),r.length>80*t){a=c=r[0],l=h=r[1];for(var m=t;m<n;m+=t)d=r[m],u=r[m+1],d<a&&(a=d),u<l&&(l=u),d>c&&(c=d),u>h&&(h=u);f=Math.max(c-a,h-l),f=f!==0?32767/f:0}return ya(s,o,t,a,l,f,0),o}function HE(r,e,t,i,n){var s,o;if(n===od(r,e,t,i)>0)for(s=e;s<t;s+=i)o=ng(s,r[s],r[s+1],o);else for(s=t-i;s>=e;s-=i)o=ng(s,r[s],r[s+1],o);return o&&qc(o,o.next)&&(Sa(o),o=o.next),o}function lr(r,e){if(!r)return r;e||(e=r);var t=r,i;do if(i=!1,!t.steiner&&(qc(t,t.next)||Pt(t.prev,t,t.next)===0)){if(Sa(t),t=e=t.prev,t===t.next)break;i=!0}else t=t.next;while(i||t!==e);return e}function ya(r,e,t,i,n,s,o){if(r){!o&&s&&LA(r,i,n,s);for(var a=r,l,c;r.prev!==r.next;){if(l=r.prev,c=r.next,s?SA(r,i,n,s):bA(r)){e.push(l.i/t|0),e.push(r.i/t|0),e.push(c.i/t|0),Sa(r),r=c.next,a=c.next;continue}if(r=c,r===a){o?o===1?(r=xA(lr(r),e,t),ya(r,e,t,i,n,s,2)):o===2&&wA(r,e,t,i,n,s):ya(lr(r),e,t,i,n,s,1);break}}}}function bA(r){var e=r.prev,t=r,i=r.next;if(Pt(e,t,i)>=0)return!1;for(var n=e.x,s=t.x,o=i.x,a=e.y,l=t.y,c=i.y,h=n<s?n<o?n:o:s<o?s:o,d=a<l?a<c?a:c:l<c?l:c,u=n>s?n>o?n:o:s>o?s:o,f=a>l?a>c?a:c:l>c?l:c,m=i.next;m!==e;){if(m.x>=h&&m.x<=u&&m.y>=d&&m.y<=f&&co(n,a,s,l,o,c,m.x,m.y)&&Pt(m.prev,m,m.next)>=0)return!1;m=m.next}return!0}function SA(r,e,t,i){var n=r.prev,s=r,o=r.next;if(Pt(n,s,o)>=0)return!1;for(var a=n.x,l=s.x,c=o.x,h=n.y,d=s.y,u=o.y,f=a<l?a<c?a:c:l<c?l:c,m=h<d?h<u?h:u:d<u?d:u,E=a>l?a>c?a:c:l>c?l:c,g=h>d?h>u?h:u:d>u?d:u,p=sd(f,m,e,t,i),_=sd(E,g,e,t,i),T=r.prevZ,I=r.nextZ;T&&T.z>=p&&I&&I.z<=_;){if(T.x>=f&&T.x<=E&&T.y>=m&&T.y<=g&&T!==n&&T!==o&&co(a,h,l,d,c,u,T.x,T.y)&&Pt(T.prev,T,T.next)>=0||(T=T.prevZ,I.x>=f&&I.x<=E&&I.y>=m&&I.y<=g&&I!==n&&I!==o&&co(a,h,l,d,c,u,I.x,I.y)&&Pt(I.prev,I,I.next)>=0))return!1;I=I.nextZ}for(;T&&T.z>=p;){if(T.x>=f&&T.x<=E&&T.y>=m&&T.y<=g&&T!==n&&T!==o&&co(a,h,l,d,c,u,T.x,T.y)&&Pt(T.prev,T,T.next)>=0)return!1;T=T.prevZ}for(;I&&I.z<=_;){if(I.x>=f&&I.x<=E&&I.y>=m&&I.y<=g&&I!==n&&I!==o&&co(a,h,l,d,c,u,I.x,I.y)&&Pt(I.prev,I,I.next)>=0)return!1;I=I.nextZ}return!0}function xA(r,e,t){var i=r;do{var n=i.prev,s=i.next.next;!qc(n,s)&&WE(n,i,i.next,s)&&ba(n,s)&&ba(s,n)&&(e.push(n.i/t|0),e.push(i.i/t|0),e.push(s.i/t|0),Sa(i),Sa(i.next),i=r=s),i=i.next}while(i!==r);return lr(i)}function wA(r,e,t,i,n,s){var o=r;do{for(var a=o.next.next;a!==o.prev;){if(o.i!==a.i&&DA(o,a)){var l=YE(o,a);o=lr(o,o.next),l=lr(l,l.next),ya(o,e,t,i,n,s,0),ya(l,e,t,i,n,s,0);return}a=a.next}o=o.next}while(o!==r)}function AA(r,e,t,i){var n=[],s,o,a,l,c;for(s=0,o=e.length;s<o;s++)a=e[s]*i,l=s<o-1?e[s+1]*i:r.length,c=HE(r,a,l,i,!1),c===c.next&&(c.steiner=!0),n.push(NA(c));for(n.sort(RA),s=0;s<n.length;s++)t=MA(n[s],t);return t}function RA(r,e){return r.x-e.x}function MA(r,e){var t=FA(r,e);if(!t)return e;var i=YE(t,r);return lr(i,i.next),lr(t,t.next)}function FA(r,e){var t=e,i=r.x,n=r.y,s=-1/0,o;do{if(n<=t.y&&n>=t.next.y&&t.next.y!==t.y){var a=t.x+(n-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(a<=i&&a>s&&(s=a,o=t.x<t.next.x?t:t.next,a===i))return o}t=t.next}while(t!==e);if(!o)return null;var l=o,c=o.x,h=o.y,d=1/0,u;t=o;do i>=t.x&&t.x>=c&&i!==t.x&&co(n<h?i:s,n,c,h,n<h?s:i,n,t.x,t.y)&&(u=Math.abs(n-t.y)/(i-t.x),ba(t,r)&&(u<d||u===d&&(t.x>o.x||t.x===o.x&&PA(o,t)))&&(o=t,d=u)),t=t.next;while(t!==l);return o}function PA(r,e){return Pt(r.prev,r,e.prev)<0&&Pt(e.next,r,r.next)<0}function LA(r,e,t,i){var n=r;do n.z===0&&(n.z=sd(n.x,n.y,e,t,i)),n.prevZ=n.prev,n.nextZ=n.next,n=n.next;while(n!==r);n.prevZ.nextZ=null,n.prevZ=null,OA(n)}function OA(r){var e,t,i,n,s,o,a,l,c=1;do{for(t=r,r=null,s=null,o=0;t;){for(o++,i=t,a=0,e=0;e<c&&(a++,i=i.nextZ,!!i);e++);for(l=c;a>0||l>0&&i;)a!==0&&(l===0||!i||t.z<=i.z)?(n=t,t=t.nextZ,a--):(n=i,i=i.nextZ,l--),s?s.nextZ=n:r=n,n.prevZ=s,s=n;t=i}s.nextZ=null,c*=2}while(o>1);return r}function sd(r,e,t,i,n){return r=(r-t)*n|0,e=(e-i)*n|0,r=(r|r<<8)&16711935,r=(r|r<<4)&252645135,r=(r|r<<2)&858993459,r=(r|r<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,r|e<<1}function NA(r){var e=r,t=r;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==r);return t}function co(r,e,t,i,n,s,o,a){return(n-o)*(e-a)>=(r-o)*(s-a)&&(r-o)*(i-a)>=(t-o)*(e-a)&&(t-o)*(s-a)>=(n-o)*(i-a)}function DA(r,e){return r.next.i!==e.i&&r.prev.i!==e.i&&!UA(r,e)&&(ba(r,e)&&ba(e,r)&&BA(r,e)&&(Pt(r.prev,r,e.prev)||Pt(r,e.prev,e))||qc(r,e)&&Pt(r.prev,r,r.next)>0&&Pt(e.prev,e,e.next)>0)}function Pt(r,e,t){return(e.y-r.y)*(t.x-e.x)-(e.x-r.x)*(t.y-e.y)}function qc(r,e){return r.x===e.x&&r.y===e.y}function WE(r,e,t,i){var n=jl(Pt(r,e,t)),s=jl(Pt(r,e,i)),o=jl(Pt(t,i,r)),a=jl(Pt(t,i,e));return!!(n!==s&&o!==a||n===0&&Zl(r,t,e)||s===0&&Zl(r,i,e)||o===0&&Zl(t,r,i)||a===0&&Zl(t,e,i))}function Zl(r,e,t){return e.x<=Math.max(r.x,t.x)&&e.x>=Math.min(r.x,t.x)&&e.y<=Math.max(r.y,t.y)&&e.y>=Math.min(r.y,t.y)}function jl(r){return r>0?1:r<0?-1:0}function UA(r,e){var t=r;do{if(t.i!==r.i&&t.next.i!==r.i&&t.i!==e.i&&t.next.i!==e.i&&WE(t,t.next,r,e))return!0;t=t.next}while(t!==r);return!1}function ba(r,e){return Pt(r.prev,r,r.next)<0?Pt(r,e,r.next)>=0&&Pt(r,r.prev,e)>=0:Pt(r,e,r.prev)<0||Pt(r,r.next,e)<0}function BA(r,e){var t=r,i=!1,n=(r.x+e.x)/2,s=(r.y+e.y)/2;do t.y>s!=t.next.y>s&&t.next.y!==t.y&&n<(t.next.x-t.x)*(s-t.y)/(t.next.y-t.y)+t.x&&(i=!i),t=t.next;while(t!==r);return i}function YE(r,e){var t=new rd(r.i,r.x,r.y),i=new rd(e.i,e.x,e.y),n=r.next,s=e.prev;return r.next=e,e.prev=r,t.next=n,n.prev=t,i.next=t,t.prev=i,s.next=i,i.prev=s,i}function ng(r,e,t,i){var n=new rd(r,e,t);return i?(n.next=i.next,n.prev=i,i.next.prev=n,i.next=n):(n.prev=n,n.next=n),n}function Sa(r){r.next.prev=r.prev,r.prev.next=r.next,r.prevZ&&(r.prevZ.nextZ=r.nextZ),r.nextZ&&(r.nextZ.prevZ=r.prevZ)}function rd(r,e,t){this.i=r,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}jc.deviation=function(r,e,t,i){var n=e&&e.length,s=n?e[0]*t:r.length,o=Math.abs(od(r,0,s,t));if(n)for(var a=0,l=e.length;a<l;a++){var c=e[a]*t,h=a<l-1?e[a+1]*t:r.length;o-=Math.abs(od(r,c,h,t))}var d=0;for(a=0;a<i.length;a+=3){var u=i[a]*t,f=i[a+1]*t,m=i[a+2]*t;d+=Math.abs((r[u]-r[m])*(r[f+1]-r[u+1])-(r[u]-r[f])*(r[m+1]-r[u+1]))}return o===0&&d===0?0:Math.abs((d-o)/o)};function od(r,e,t,i){for(var n=0,s=e,o=t-i;s<t;s+=i)n+=(r[o]-r[s])*(r[s+1]+r[o+1]),o=s;return n}jc.flatten=function(r){for(var e=r[0][0].length,t={vertices:[],holes:[],dimensions:e},i=0,n=0;n<r.length;n++){for(var s=0;s<r[n].length;s++)for(var o=0;o<e;o++)t.vertices.push(r[n][s][o]);n>0&&(i+=r[n-1].length,t.holes.push(i))}return t};var zA=df.exports;const VA=GE(zA);class kA extends We{constructor(){super(...arguments),R(this,"enabled",!0),R(this,"_inverseMatrix",new fe),R(this,"_localPlane",new Kt),R(this,"_tempLine",new Ot),R(this,"_tempVector",new F),R(this,"_plane"),R(this,"_plane2DCoordinateSystem",new fe),R(this,"_precission",1e4),R(this,"_planeAxis")}get plane(){if(!this._plane)throw new Error("Plane not set");return this._plane}set plane(e){this._plane=e}createEdges(e){const{meshes:t,posAttr:i}=e;let n=0;i.array.fill(0);const s=[];let o=0;const a=new ge;for(const l of t)if(l.geometry){if(l.geometry.boundsTree||l.geometry.computeBoundsTree(),!l.geometry.boundsTree)throw new Error("Bounds tree not found for edges generation.");if(l instanceof Bi){if(l.count===0)continue;const c=l;for(let h=0;h<c.count;h++){a.geometry=l.geometry,a.matrix.copy(l.matrix);const d=new fe;c.getMatrixAt(h,d),a.applyMatrix4(d),a.applyMatrix4(l.matrixWorld),a.updateMatrix(),a.updateMatrixWorld(),this._inverseMatrix.copy(a.matrixWorld).invert(),this._localPlane.copy(this.plane).applyMatrix4(this._inverseMatrix),n=this.shapecast(a,i,n),n!==o&&(s.push(n),o=n)}}else this._inverseMatrix.copy(l.matrixWorld).invert(),this._localPlane.copy(this.plane).applyMatrix4(this._inverseMatrix),n=this.shapecast(l,i,n),n!==o&&(s.push(n),o=n)}return{indexes:s,index:n}}createFills(e,t){this.updatePlane2DCoordinateSystem();const i=[];let n=0;for(let s=0;s<t.length;s++){const o=t[s],a=[];for(let c=n;c<o;c+=2)a.push(c*3);const l=this.computeFill(a,e);for(const c of l)i.push(c);n=o}return i}computeFill(e,t){const i=new Map,n={},s=new Map;let o=0;const a=new Map,l=new Map,c=new Set,h=this._precission;for(let u=0;u<e.length;u++){const f=e[u];let m=0,E=0,g=0,p=0;const _=t[f],T=t[f+1],I=t[f+2],v=t[f+3],b=t[f+4],x=t[f+5];if(this._tempVector.set(_,T,I),this._tempVector.applyMatrix4(this._plane2DCoordinateSystem),m=Math.trunc(this._tempVector.x*h)/h,E=Math.trunc(this._tempVector.y*h)/h,this._tempVector.set(v,b,x),this._tempVector.applyMatrix4(this._plane2DCoordinateSystem),g=Math.trunc(this._tempVector.x*h)/h,p=Math.trunc(this._tempVector.y*h)/h,m===g&&E===p)continue;const A=`${m}|${E}`,y=`${g}|${p}`;i.has(A)||i.set(A,f/3),i.has(y)||i.set(y,f/3+1);const S=i.get(A),O=i.get(y);n[S]=[m,E],n[O]=[g,p];const w=l.has(S),N=a.has(S),C=l.has(O),U=a.has(O);if(!w&&!N&&!C&&!U)l.set(S,o),a.set(O,o),c.add(o),s.set(o,[S,O]),o++;else if(w&&U){const B=l.get(S),V=a.get(O);if(B!==V){const j=s.get(V),G=s.get(B);if(!j||!G)continue;s.delete(B),c.delete(B),a.set(G[G.length-1],V),a.delete(j[j.length-1]);for(const se of G)j.push(se)}else c.delete(V);l.delete(S),a.delete(O)}else if(N&&C){const B=l.get(O),V=a.get(S);if(B!==V){const j=s.get(V),G=s.get(B);if(!j||!G)continue;s.delete(B),c.delete(B),a.set(G[G.length-1],V),a.delete(j[j.length-1]);for(const se of G)j.push(se)}else c.delete(V);l.delete(O),a.delete(S)}else if(w&&C){const B=l.get(O),V=l.get(S),j=s.get(V),G=s.get(B);if(!j||!G)continue;s.delete(B),c.delete(B),l.delete(j[0]),l.delete(G[0]),a.delete(G[G.length-1]),l.set(G[G.length-1],V),G.reverse(),j.splice(0,0,...G)}else if(N&&U){const B=a.get(O),V=a.get(S),j=s.get(V),G=s.get(B);if(!j||!G)continue;s.delete(B),c.delete(B),a.delete(j[j.length-1]),a.delete(G[G.length-1]),l.delete(G[0]),a.set(G[0],V),G.reverse(),j.push(...G)}else if(w){const B=l.get(S),V=s.get(B);if(!V)continue;V.unshift(O),l.delete(S),l.set(O,B)}else if(N){const B=a.get(S),V=s.get(B);if(!V)continue;V.push(O),a.delete(S),a.set(O,B)}else if(C){const B=l.get(O),V=s.get(B);if(!V)continue;V.unshift(S),l.delete(O),l.set(S,B)}else if(U){const B=a.get(O),V=s.get(B);if(!V)continue;V.push(S),a.delete(O),a.set(S,B)}}const d=[];for(const[u,f]of s){if(c.has(u))continue;const m=[],E=new Map;let g=0;for(const _ of f){const T=n[_];m.push(T[0],T[1]),E.set(g++,_)}const p=VA(m);for(const _ of p){const T=E.get(_);if(T===void 0)throw new Error("Map error!");d.push(T)}}return d}updatePlane2DCoordinateSystem(){this._plane2DCoordinateSystem=new fe;const e=new F(1,0,0),t=new F(0,1,0),i=this.plane.normal,n=new F;this.plane.coplanarPoint(n),this._planeAxis==="x"?e.crossVectors(t,i):this._planeAxis==="y"?t.crossVectors(i,e):this._planeAxis==="z"||(e.crossVectors(t,i).normalize(),t.crossVectors(i,e)),this._plane2DCoordinateSystem.fromArray([e.x,e.y,e.z,0,t.x,t.y,t.z,0,i.x,i.y,i.z,0,n.x,n.y,n.z,1]),this._plane2DCoordinateSystem.invert()}shapecast(e,t,i){return e.geometry.boundsTree.shapecast({intersectsBounds:n=>this._localPlane.intersectsBox(n),intersectsTriangle:n=>{let s=0;if(this._tempLine.start.copy(n.a),this._tempLine.end.copy(n.b),this._localPlane.intersectLine(this._tempLine,this._tempVector)){const o=this._tempVector.applyMatrix4(e.matrixWorld);t.setXYZ(i,o.x,o.y,o.z),s++,i++}if(this._tempLine.start.copy(n.b),this._tempLine.end.copy(n.c),this._localPlane.intersectLine(this._tempLine,this._tempVector)){const o=this._tempVector.applyMatrix4(e.matrixWorld);t.setXYZ(i,o.x,o.y,o.z),s++,i++}if(this._tempLine.start.copy(n.c),this._tempLine.end.copy(n.a),this._localPlane.intersectLine(this._tempLine,this._tempVector)){const o=this._tempVector.applyMatrix4(e.matrixWorld);t.setXYZ(i,o.x,o.y,o.z),s++,i++}s!==2&&(i-=s)}}),i}}R(kA,"uuid","1a193b87-6376-46c8-9e65-62a1576fdb64");const XE=class ZE{constructor(){R(this,"onDisposed",new oe),R(this,"list",new Map),R(this,"enabled",!1),R(this,"_clock"),R(this,"onInit",new oe),R(this,"update",()=>{if(!this.enabled)return;const e=this._clock.getDelta();for(const[t,i]of this.list)i.enabled&&i.isUpdateable()&&i.update(e);requestAnimationFrame(this.update)}),this._clock=new yE,ZE.setupBVH()}add(e,t){if(this.list.has(e))throw new Error("You're trying to add a component that already exists in the components instance. Use Components.get() instead.");rs.validate(e),this.list.set(e,t)}get(e){const t=e.uuid;if(!this.list.has(t)){const i=new e(this);return this.list.has(t)||this.add(t,i),i}return this.list.get(t)}init(){this.enabled=!0,this._clock.start(),this.update(),this.onInit.trigger()}dispose(){this.enabled=!1;for(const[e,t]of this.list)t.enabled=!1,t.isDisposeable()&&t.dispose();this._clock.stop(),this.onDisposed.trigger(),this.onDisposed.reset()}static setupBVH(){Ve.prototype.computeBoundsTree=cA,Ve.prototype.disposeBoundsTree=hA,ge.prototype.raycast=lA}};R(XE,"release","2.4.4");let jE=XE;class GA extends hf{constructor(){super(...arguments),R(this,"meshes",new Set),R(this,"onAfterUpdate",new oe),R(this,"onBeforeUpdate",new oe),R(this,"onDisposed",new oe),R(this,"isDisposing",!1),R(this,"enabled",!0),R(this,"uuid",rs.create()),R(this,"name"),R(this,"_scene"),R(this,"_camera"),R(this,"_renderer",null)}get scene(){if(!this._scene)throw new Error("No scene initialized!");return this._scene}set scene(e){this._scene=e,e.worlds.set(this.uuid,this),e.currentWorld=this,e.onWorldChanged.trigger({world:this,action:"added"})}get camera(){if(!this._camera)throw new Error("No camera initialized!");return this._camera}set camera(e){this._camera=e,e.worlds.set(this.uuid,this),e.currentWorld=this,e.onWorldChanged.trigger({world:this,action:"added"})}get renderer(){return this._renderer}set renderer(e){this._renderer=e,e&&(e.worlds.set(this.uuid,this),e.currentWorld=this,e.onWorldChanged.trigger({world:this,action:"added"}))}update(e){this.enabled&&(!this._scene||!this._camera||(this.scene.currentWorld=this,this.camera.currentWorld=this,this.renderer&&(this.renderer.currentWorld=this),this.onBeforeUpdate.trigger(),this.scene.isUpdateable()&&this.scene.update(e),this.camera.isUpdateable()&&this.camera.update(e),this.renderer&&this.renderer.update(e),this.onAfterUpdate.trigger()))}dispose(e=!0){if(this.enabled=!1,this.isDisposing=!0,this.scene.onWorldChanged.trigger({world:this,action:"removed"}),this.camera.onWorldChanged.trigger({world:this,action:"removed"}),this.renderer&&this.renderer.onWorldChanged.trigger({world:this,action:"removed"}),e){const t=this.components.get(xn);this.scene.dispose(),this.camera.isDisposeable()&&this.camera.dispose(),this.renderer&&this.renderer.dispose();for(const i of this.meshes)t.destroy(i);this.meshes.clear()}this._scene=null,this._camera=null,this._renderer=null,this.components.get(tI).list.delete(this.uuid),this.onDisposed.trigger(),this.onDisposed.reset()}}class Fo{constructor(e,t,i,n){R(this,"_component"),R(this,"name"),R(this,"uuid"),this._component=e,this.name=i,this.uuid=n??rs.create(),t.get(Kc).list.set(this.uuid,this)}get controls(){return cu.copySchema(this._config)}set(e){for(const t in e)if(t in this){const i=t;this[i]=e[t].value}}export(e=this._config,t={}){for(const i in e){const n=e[i];if(cu.isEntry(n))if(n.type==="Color"){const{r:s,g:o,b:a}=n.value;t[i]={...n,value:{r:s,g:o,b:a}}}else if(n.type==="Vector3"){const{x:s,y:o,z:a}=n.value;t[i]={...n,value:{x:s,y:o,z:a}}}else if(n.type==="TextSet"){const s=Array.from(n.value);t[i]={...n,value:s}}else if(n.type==="Select"){const s=Array.from(n.options);t[i]={...n,options:s}}else t[i]={...n};else t[i]={},this.export(n,t[i])}return t}import(e,t={},i=!0){for(const n in e){const s=e[n];if(cu.isEntry(s))if(s.type==="Color"){const{r:o,g:a,b:l}=s.value;t[n]={...s,value:new Fe(o,a,l)}}else if(s.type==="Vector3"){const{x:o,y:a,z:l}=s.value;t[n]={...s,value:new F(o,a,l)}}else s.type==="TextSet"?t[n]={...s,value:new Set(s.value)}:s.type==="Select"?t[n]={...s,options:new Set(s.options)}:t[n]={...s};else t[n]={},this.import(s,t[n],!1)}i&&this.set(t)}}const qE=class KE extends We{constructor(e){super(e),R(this,"list",new fn),R(this,"enabled",!0),e.add(KE.uuid,this)}};R(qE,"uuid","b8c764e0-6b24-4e77-9a32-35fa728ee5b4");let Kc=qE;class HA extends dA{constructor(e,t,i){super(e),R(this,"enabled",!0),R(this,"container"),R(this,"three"),R(this,"_canvas"),R(this,"_parameters"),R(this,"_resizeObserver",null),R(this,"onContainerUpdated",new oe),R(this,"_resizing",!1),R(this,"resize",o=>{if(this._resizing)return;this._resizing=!0,this.onContainerUpdated.trigger();const a=o?o.x:this.container.clientWidth,l=o?o.y:this.container.clientHeight;this.three.setSize(a,l),this.onResize.trigger(new Re(a,l)),this._resizing=!1}),R(this,"resizeEvent",()=>{this.resize()}),R(this,"onContextLost",o=>{o.preventDefault(),this.enabled=!1}),R(this,"onContextBack",()=>{this.three.setRenderTarget(null),this.three.dispose(),this.three=new _a({canvas:this._canvas,antialias:!0,alpha:!0,...this._parameters}),this.enabled=!0}),this.container=t,this._parameters=i,this.three=new _a({antialias:!0,alpha:!0,...i}),this.three.setPixelRatio(Math.min(window.devicePixelRatio,2)),this.setupRenderer(),this.setupEvents(!0),this.resize(),this._canvas=this.three.domElement;const n=this.three.getContext(),{canvas:s}=n;s.addEventListener("webglcontextlost",this.onContextLost,!1),s.addEventListener("webglcontextrestored",this.onContextBack,!1)}update(){if(!this.enabled||!this.currentWorld)return;this.onBeforeUpdate.trigger(this);const e=this.currentWorld.scene.three,t=this.currentWorld.camera.three;this.three.render(e,t),this.onAfterUpdate.trigger(this)}dispose(){this.enabled=!1,this.setupEvents(!1),this.three.domElement.remove(),this.three.forceContextLoss(),this.three.dispose(),this.onResize.reset(),this.onAfterUpdate.reset(),this.onBeforeUpdate.reset(),this.onDisposed.trigger(),this.onDisposed.reset()}getSize(){return new Re(this.three.domElement.clientWidth,this.three.domElement.clientHeight)}setupEvents(e){const t=this.three.domElement.parentElement;if(!t)throw new Error("This renderer needs to have an HTML container!");this._resizeObserver&&(this._resizeObserver.disconnect(),this._resizeObserver=null),window.removeEventListener("resize",this.resizeEvent),e&&(this._resizeObserver=new ResizeObserver(this.resizeEvent),this._resizeObserver.observe(t),window.addEventListener("resize",this.resizeEvent))}setupRenderer(){this.three.localClippingEnabled=!0,this.container&&this.container.appendChild(this.three.domElement),this.onContainerUpdated.trigger()}}/*!
 * camera-controls
 * https://github.com/yomotsu/camera-controls
 * (c) 2017 @yomotsu
 * Released under the MIT License.
 */const Ge={LEFT:1,RIGHT:2,MIDDLE:4},ue=Object.freeze({NONE:0,ROTATE:1,TRUCK:2,OFFSET:4,DOLLY:8,ZOOM:16,TOUCH_ROTATE:32,TOUCH_TRUCK:64,TOUCH_OFFSET:128,TOUCH_DOLLY:256,TOUCH_ZOOM:512,TOUCH_DOLLY_TRUCK:1024,TOUCH_DOLLY_OFFSET:2048,TOUCH_DOLLY_ROTATE:4096,TOUCH_ZOOM_TRUCK:8192,TOUCH_ZOOM_OFFSET:16384,TOUCH_ZOOM_ROTATE:32768}),Qr={NONE:0,IN:1,OUT:-1};function zs(r){return r.isPerspectiveCamera}function ps(r){return r.isOrthographicCamera}const Jr=Math.PI*2,sg=Math.PI/2,QE=1e-5,Jo=Math.PI/180;function on(r,e,t){return Math.max(e,Math.min(t,r))}function gt(r,e=QE){return Math.abs(r)<e}function ct(r,e,t=QE){return gt(r-e,t)}function rg(r,e){return Math.round(r/e)*e}function $o(r){return isFinite(r)?r:r<0?-Number.MAX_VALUE:Number.MAX_VALUE}function ea(r){return Math.abs(r)<Number.MAX_VALUE?r:r*(1/0)}function ql(r,e,t,i,n=1/0,s){i=Math.max(1e-4,i);const o=2/i,a=o*s,l=1/(1+a+.48*a*a+.235*a*a*a);let c=r-e;const h=e,d=n*i;c=on(c,-d,d),e=r-c;const u=(t.value+o*c)*s;t.value=(t.value-o*u)*l;let f=e+(c+u)*l;return h-r>0==f>h&&(f=h,t.value=(f-h)/s),f}function og(r,e,t,i,n=1/0,s,o){i=Math.max(1e-4,i);const a=2/i,l=a*s,c=1/(1+l+.48*l*l+.235*l*l*l);let h=e.x,d=e.y,u=e.z,f=r.x-h,m=r.y-d,E=r.z-u;const g=h,p=d,_=u,T=n*i,I=T*T,v=f*f+m*m+E*E;if(v>I){const U=Math.sqrt(v);f=f/U*T,m=m/U*T,E=E/U*T}h=r.x-f,d=r.y-m,u=r.z-E;const b=(t.x+a*f)*s,x=(t.y+a*m)*s,A=(t.z+a*E)*s;t.x=(t.x-a*b)*c,t.y=(t.y-a*x)*c,t.z=(t.z-a*A)*c,o.x=h+(f+b)*c,o.y=d+(m+x)*c,o.z=u+(E+A)*c;const y=g-r.x,S=p-r.y,O=_-r.z,w=o.x-g,N=o.y-p,C=o.z-_;return y*w+S*N+O*C>0&&(o.x=g,o.y=p,o.z=_,t.x=(o.x-g)/s,t.y=(o.y-p)/s,t.z=(o.z-_)/s),o}function du(r,e){e.set(0,0),r.forEach(t=>{e.x+=t.clientX,e.y+=t.clientY}),e.x/=r.length,e.y/=r.length}function fu(r,e){return ps(r)?(console.warn(`${e} is not supported in OrthographicCamera`),!0):!1}class WA{constructor(){this._listeners={}}addEventListener(e,t){const i=this._listeners;i[e]===void 0&&(i[e]=[]),i[e].indexOf(t)===-1&&i[e].push(t)}hasEventListener(e,t){const i=this._listeners;return i[e]!==void 0&&i[e].indexOf(t)!==-1}removeEventListener(e,t){const i=this._listeners[e];if(i!==void 0){const n=i.indexOf(t);n!==-1&&i.splice(n,1)}}removeAllEventListeners(e){if(!e){this._listeners={};return}Array.isArray(this._listeners[e])&&(this._listeners[e].length=0)}dispatchEvent(e){const t=this._listeners[e.type];if(t!==void 0){e.target=this;const i=t.slice(0);for(let n=0,s=i.length;n<s;n++)i[n].call(this,e)}}}const YA="2.7.3",Kl=1/8,JE=typeof window<"u",XA=JE&&/Mac/.test(navigator.platform),ZA=!(JE&&"PointerEvent"in window);let ze,ag,Ql,pu,bi,Je,lt,$r,ta,gn,En,Vs,lg,cg,Hi,ia,eo,hg,mu,ug,gu,Eu,Jl;class kt extends WA{static install(e){ze=e.THREE,ag=Object.freeze(new ze.Vector3(0,0,0)),Ql=Object.freeze(new ze.Vector3(0,1,0)),pu=Object.freeze(new ze.Vector3(0,0,1)),bi=new ze.Vector2,Je=new ze.Vector3,lt=new ze.Vector3,$r=new ze.Vector3,ta=new ze.Vector3,gn=new ze.Vector3,En=new ze.Vector3,Vs=new ze.Vector3,lg=new ze.Vector3,cg=new ze.Vector3,Hi=new ze.Spherical,ia=new ze.Spherical,eo=new ze.Box3,hg=new ze.Box3,mu=new ze.Sphere,ug=new ze.Quaternion,gu=new ze.Quaternion,Eu=new ze.Matrix4,Jl=new ze.Raycaster}static get ACTION(){return ue}constructor(e,t){super(),this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.minDistance=Number.EPSILON,this.maxDistance=1/0,this.infinityDolly=!1,this.minZoom=.01,this.maxZoom=1/0,this.smoothTime=.25,this.draggingSmoothTime=.125,this.maxSpeed=1/0,this.azimuthRotateSpeed=1,this.polarRotateSpeed=1,this.dollySpeed=1,this.dollyDragInverted=!1,this.truckSpeed=2,this.dollyToCursor=!1,this.dragToOffset=!1,this.verticalDragToForward=!1,this.boundaryFriction=0,this.restThreshold=.01,this.colliderMeshes=[],this.cancel=()=>{},this._enabled=!0,this._state=ue.NONE,this._viewport=null,this._changedDolly=0,this._changedZoom=0,this._hasRested=!0,this._boundaryEnclosesCamera=!1,this._needsUpdate=!0,this._updatedLastTime=!1,this._elementRect=new DOMRect,this._isDragging=!1,this._dragNeedsUpdate=!0,this._activePointers=[],this._lockedPointer=null,this._interactiveArea=new DOMRect(0,0,1,1),this._isUserControllingRotate=!1,this._isUserControllingDolly=!1,this._isUserControllingTruck=!1,this._isUserControllingOffset=!1,this._isUserControllingZoom=!1,this._lastDollyDirection=Qr.NONE,this._thetaVelocity={value:0},this._phiVelocity={value:0},this._radiusVelocity={value:0},this._targetVelocity=new ze.Vector3,this._focalOffsetVelocity=new ze.Vector3,this._zoomVelocity={value:0},this._truckInternal=(I,v,b)=>{let x,A;if(zs(this._camera)){const y=Je.copy(this._camera.position).sub(this._target),S=this._camera.getEffectiveFOV()*Jo,O=y.length()*Math.tan(S*.5);x=this.truckSpeed*I*O/this._elementRect.height,A=this.truckSpeed*v*O/this._elementRect.height}else if(ps(this._camera)){const y=this._camera;x=I*(y.right-y.left)/y.zoom/this._elementRect.width,A=v*(y.top-y.bottom)/y.zoom/this._elementRect.height}else return;this.verticalDragToForward?(b?this.setFocalOffset(this._focalOffsetEnd.x+x,this._focalOffsetEnd.y,this._focalOffsetEnd.z,!0):this.truck(x,0,!0),this.forward(-A,!0)):b?this.setFocalOffset(this._focalOffsetEnd.x+x,this._focalOffsetEnd.y+A,this._focalOffsetEnd.z,!0):this.truck(x,A,!0)},this._rotateInternal=(I,v)=>{const b=Jr*this.azimuthRotateSpeed*I/this._elementRect.height,x=Jr*this.polarRotateSpeed*v/this._elementRect.height;this.rotate(b,x,!0)},this._dollyInternal=(I,v,b)=>{const x=Math.pow(.95,-I*this.dollySpeed),A=this._sphericalEnd.radius,y=this._sphericalEnd.radius*x,S=on(y,this.minDistance,this.maxDistance),O=S-y;this.infinityDolly&&this.dollyToCursor?this._dollyToNoClamp(y,!0):this.infinityDolly&&!this.dollyToCursor?(this.dollyInFixed(O,!0),this._dollyToNoClamp(S,!0)):this._dollyToNoClamp(S,!0),this.dollyToCursor&&(this._changedDolly+=(this.infinityDolly?y:S)-A,this._dollyControlCoord.set(v,b)),this._lastDollyDirection=Math.sign(-I)},this._zoomInternal=(I,v,b)=>{const x=Math.pow(.95,I*this.dollySpeed),A=this._zoom,y=this._zoom*x;this.zoomTo(y,!0),this.dollyToCursor&&(this._changedZoom+=y-A,this._dollyControlCoord.set(v,b))},typeof ze>"u"&&console.error("camera-controls: `THREE` is undefined. You must first run `CameraControls.install( { THREE: THREE } )`. Check the docs for further information."),this._camera=e,this._yAxisUpSpace=new ze.Quaternion().setFromUnitVectors(this._camera.up,Ql),this._yAxisUpSpaceInverse=this._yAxisUpSpace.clone().invert(),this._state=ue.NONE,this._target=new ze.Vector3,this._targetEnd=this._target.clone(),this._focalOffset=new ze.Vector3,this._focalOffsetEnd=this._focalOffset.clone(),this._spherical=new ze.Spherical().setFromVector3(Je.copy(this._camera.position).applyQuaternion(this._yAxisUpSpace)),this._sphericalEnd=this._spherical.clone(),this._lastDistance=this._spherical.radius,this._zoom=this._camera.zoom,this._zoomEnd=this._zoom,this._lastZoom=this._zoom,this._nearPlaneCorners=[new ze.Vector3,new ze.Vector3,new ze.Vector3,new ze.Vector3],this._updateNearPlaneCorners(),this._boundary=new ze.Box3(new ze.Vector3(-1/0,-1/0,-1/0),new ze.Vector3(1/0,1/0,1/0)),this._cameraUp0=this._camera.up.clone(),this._target0=this._target.clone(),this._position0=this._camera.position.clone(),this._zoom0=this._zoom,this._focalOffset0=this._focalOffset.clone(),this._dollyControlCoord=new ze.Vector2,this.mouseButtons={left:ue.ROTATE,middle:ue.DOLLY,right:ue.TRUCK,wheel:zs(this._camera)?ue.DOLLY:ps(this._camera)?ue.ZOOM:ue.NONE},this.touches={one:ue.TOUCH_ROTATE,two:zs(this._camera)?ue.TOUCH_DOLLY_TRUCK:ps(this._camera)?ue.TOUCH_ZOOM_TRUCK:ue.NONE,three:ue.TOUCH_TRUCK};const i=new ze.Vector2,n=new ze.Vector2,s=new ze.Vector2,o=I=>{if(!this._enabled||!this._domElement)return;if(this._interactiveArea.left!==0||this._interactiveArea.top!==0||this._interactiveArea.width!==1||this._interactiveArea.height!==1){const x=this._domElement.getBoundingClientRect(),A=I.clientX/x.width,y=I.clientY/x.height;if(A<this._interactiveArea.left||A>this._interactiveArea.right||y<this._interactiveArea.top||y>this._interactiveArea.bottom)return}const v=I.pointerType!=="mouse"?null:(I.buttons&Ge.LEFT)===Ge.LEFT?Ge.LEFT:(I.buttons&Ge.MIDDLE)===Ge.MIDDLE?Ge.MIDDLE:(I.buttons&Ge.RIGHT)===Ge.RIGHT?Ge.RIGHT:null;if(v!==null){const x=this._findPointerByMouseButton(v);x&&this._disposePointer(x)}if((I.buttons&Ge.LEFT)===Ge.LEFT&&this._lockedPointer)return;const b={pointerId:I.pointerId,clientX:I.clientX,clientY:I.clientY,deltaX:0,deltaY:0,mouseButton:v};this._activePointers.push(b),this._domElement.ownerDocument.removeEventListener("pointermove",l,{passive:!1}),this._domElement.ownerDocument.removeEventListener("pointerup",h),this._domElement.ownerDocument.addEventListener("pointermove",l,{passive:!1}),this._domElement.ownerDocument.addEventListener("pointerup",h),this._isDragging=!0,E(I)},a=I=>{if(!this._enabled||!this._domElement||this._lockedPointer)return;if(this._interactiveArea.left!==0||this._interactiveArea.top!==0||this._interactiveArea.width!==1||this._interactiveArea.height!==1){const x=this._domElement.getBoundingClientRect(),A=I.clientX/x.width,y=I.clientY/x.height;if(A<this._interactiveArea.left||A>this._interactiveArea.right||y<this._interactiveArea.top||y>this._interactiveArea.bottom)return}const v=(I.buttons&Ge.LEFT)===Ge.LEFT?Ge.LEFT:(I.buttons&Ge.MIDDLE)===Ge.MIDDLE?Ge.MIDDLE:(I.buttons&Ge.RIGHT)===Ge.RIGHT?Ge.RIGHT:null;if(v!==null){const x=this._findPointerByMouseButton(v);x&&this._disposePointer(x)}const b={pointerId:1,clientX:I.clientX,clientY:I.clientY,deltaX:0,deltaY:0,mouseButton:(I.buttons&Ge.LEFT)===Ge.LEFT?Ge.LEFT:(I.buttons&Ge.MIDDLE)===Ge.LEFT?Ge.MIDDLE:(I.buttons&Ge.RIGHT)===Ge.LEFT?Ge.RIGHT:null};this._activePointers.push(b),this._domElement.ownerDocument.removeEventListener("mousemove",c),this._domElement.ownerDocument.removeEventListener("mouseup",d),this._domElement.ownerDocument.addEventListener("mousemove",c),this._domElement.ownerDocument.addEventListener("mouseup",d),this._isDragging=!0,E(I)},l=I=>{I.cancelable&&I.preventDefault();const v=I.pointerId,b=this._lockedPointer||this._findPointerById(v);if(b){if(b.clientX=I.clientX,b.clientY=I.clientY,b.deltaX=I.movementX,b.deltaY=I.movementY,this._state=0,I.pointerType==="touch")switch(this._activePointers.length){case 1:this._state=this.touches.one;break;case 2:this._state=this.touches.two;break;case 3:this._state=this.touches.three;break}else(!this._isDragging&&this._lockedPointer||this._isDragging&&(I.buttons&Ge.LEFT)===Ge.LEFT)&&(this._state=this._state|this.mouseButtons.left),this._isDragging&&(I.buttons&Ge.MIDDLE)===Ge.MIDDLE&&(this._state=this._state|this.mouseButtons.middle),this._isDragging&&(I.buttons&Ge.RIGHT)===Ge.RIGHT&&(this._state=this._state|this.mouseButtons.right);g()}},c=I=>{const v=this._lockedPointer||this._findPointerById(1);v&&(v.clientX=I.clientX,v.clientY=I.clientY,v.deltaX=I.movementX,v.deltaY=I.movementY,this._state=0,(this._lockedPointer||(I.buttons&Ge.LEFT)===Ge.LEFT)&&(this._state=this._state|this.mouseButtons.left),(I.buttons&Ge.MIDDLE)===Ge.MIDDLE&&(this._state=this._state|this.mouseButtons.middle),(I.buttons&Ge.RIGHT)===Ge.RIGHT&&(this._state=this._state|this.mouseButtons.right),g())},h=I=>{const v=this._findPointerById(I.pointerId);if(!(v&&v===this._lockedPointer)){if(v&&this._disposePointer(v),I.pointerType==="touch")switch(this._activePointers.length){case 0:this._state=ue.NONE;break;case 1:this._state=this.touches.one;break;case 2:this._state=this.touches.two;break;case 3:this._state=this.touches.three;break}else this._state=ue.NONE;p()}},d=()=>{const I=this._findPointerById(1);I&&I===this._lockedPointer||(I&&this._disposePointer(I),this._state=ue.NONE,p())};let u=-1;const f=I=>{if(!this._domElement||!this._enabled||this.mouseButtons.wheel===ue.NONE)return;if(this._interactiveArea.left!==0||this._interactiveArea.top!==0||this._interactiveArea.width!==1||this._interactiveArea.height!==1){const y=this._domElement.getBoundingClientRect(),S=I.clientX/y.width,O=I.clientY/y.height;if(S<this._interactiveArea.left||S>this._interactiveArea.right||O<this._interactiveArea.top||O>this._interactiveArea.bottom)return}if(I.preventDefault(),this.dollyToCursor||this.mouseButtons.wheel===ue.ROTATE||this.mouseButtons.wheel===ue.TRUCK){const y=performance.now();u-y<1e3&&this._getClientRect(this._elementRect),u=y}const v=XA?-1:-3,b=I.deltaMode===1?I.deltaY/v:I.deltaY/(v*10),x=this.dollyToCursor?(I.clientX-this._elementRect.x)/this._elementRect.width*2-1:0,A=this.dollyToCursor?(I.clientY-this._elementRect.y)/this._elementRect.height*-2+1:0;switch(this.mouseButtons.wheel){case ue.ROTATE:{this._rotateInternal(I.deltaX,I.deltaY),this._isUserControllingRotate=!0;break}case ue.TRUCK:{this._truckInternal(I.deltaX,I.deltaY,!1),this._isUserControllingTruck=!0;break}case ue.OFFSET:{this._truckInternal(I.deltaX,I.deltaY,!0),this._isUserControllingOffset=!0;break}case ue.DOLLY:{this._dollyInternal(-b,x,A),this._isUserControllingDolly=!0;break}case ue.ZOOM:{this._zoomInternal(-b,x,A),this._isUserControllingZoom=!0;break}}this.dispatchEvent({type:"control"})},m=I=>{if(!(!this._domElement||!this._enabled)){if(this.mouseButtons.right===kt.ACTION.NONE){const v=I instanceof PointerEvent?I.pointerId:0,b=this._findPointerById(v);b&&this._disposePointer(b),this._domElement.ownerDocument.removeEventListener("pointermove",l,{passive:!1}),this._domElement.ownerDocument.removeEventListener("pointerup",h),this._domElement.ownerDocument.removeEventListener("mousemove",c),this._domElement.ownerDocument.removeEventListener("mouseup",d);return}I.preventDefault()}},E=I=>{if(this._enabled){if(du(this._activePointers,bi),this._getClientRect(this._elementRect),i.copy(bi),n.copy(bi),this._activePointers.length>=2){const v=bi.x-this._activePointers[1].clientX,b=bi.y-this._activePointers[1].clientY,x=Math.sqrt(v*v+b*b);s.set(0,x);const A=(this._activePointers[0].clientX+this._activePointers[1].clientX)*.5,y=(this._activePointers[0].clientY+this._activePointers[1].clientY)*.5;n.set(A,y)}if(this._state=0,!I)this._lockedPointer&&(this._state=this._state|this.mouseButtons.left);else if("pointerType"in I&&I.pointerType==="touch")switch(this._activePointers.length){case 1:this._state=this.touches.one;break;case 2:this._state=this.touches.two;break;case 3:this._state=this.touches.three;break}else!this._lockedPointer&&(I.buttons&Ge.LEFT)===Ge.LEFT&&(this._state=this._state|this.mouseButtons.left),(I.buttons&Ge.MIDDLE)===Ge.MIDDLE&&(this._state=this._state|this.mouseButtons.middle),(I.buttons&Ge.RIGHT)===Ge.RIGHT&&(this._state=this._state|this.mouseButtons.right);((this._state&ue.ROTATE)===ue.ROTATE||(this._state&ue.TOUCH_ROTATE)===ue.TOUCH_ROTATE||(this._state&ue.TOUCH_DOLLY_ROTATE)===ue.TOUCH_DOLLY_ROTATE||(this._state&ue.TOUCH_ZOOM_ROTATE)===ue.TOUCH_ZOOM_ROTATE)&&(this._sphericalEnd.theta=this._spherical.theta,this._sphericalEnd.phi=this._spherical.phi,this._thetaVelocity.value=0,this._phiVelocity.value=0),((this._state&ue.TRUCK)===ue.TRUCK||(this._state&ue.TOUCH_TRUCK)===ue.TOUCH_TRUCK||(this._state&ue.TOUCH_DOLLY_TRUCK)===ue.TOUCH_DOLLY_TRUCK||(this._state&ue.TOUCH_ZOOM_TRUCK)===ue.TOUCH_ZOOM_TRUCK)&&(this._targetEnd.copy(this._target),this._targetVelocity.set(0,0,0)),((this._state&ue.DOLLY)===ue.DOLLY||(this._state&ue.TOUCH_DOLLY)===ue.TOUCH_DOLLY||(this._state&ue.TOUCH_DOLLY_TRUCK)===ue.TOUCH_DOLLY_TRUCK||(this._state&ue.TOUCH_DOLLY_OFFSET)===ue.TOUCH_DOLLY_OFFSET||(this._state&ue.TOUCH_DOLLY_ROTATE)===ue.TOUCH_DOLLY_ROTATE)&&(this._sphericalEnd.radius=this._spherical.radius,this._radiusVelocity.value=0),((this._state&ue.ZOOM)===ue.ZOOM||(this._state&ue.TOUCH_ZOOM)===ue.TOUCH_ZOOM||(this._state&ue.TOUCH_ZOOM_TRUCK)===ue.TOUCH_ZOOM_TRUCK||(this._state&ue.TOUCH_ZOOM_OFFSET)===ue.TOUCH_ZOOM_OFFSET||(this._state&ue.TOUCH_ZOOM_ROTATE)===ue.TOUCH_ZOOM_ROTATE)&&(this._zoomEnd=this._zoom,this._zoomVelocity.value=0),((this._state&ue.OFFSET)===ue.OFFSET||(this._state&ue.TOUCH_OFFSET)===ue.TOUCH_OFFSET||(this._state&ue.TOUCH_DOLLY_OFFSET)===ue.TOUCH_DOLLY_OFFSET||(this._state&ue.TOUCH_ZOOM_OFFSET)===ue.TOUCH_ZOOM_OFFSET)&&(this._focalOffsetEnd.copy(this._focalOffset),this._focalOffsetVelocity.set(0,0,0)),this.dispatchEvent({type:"controlstart"})}},g=()=>{if(!this._enabled||!this._dragNeedsUpdate)return;this._dragNeedsUpdate=!1,du(this._activePointers,bi);const I=this._domElement&&document.pointerLockElement===this._domElement?this._lockedPointer||this._activePointers[0]:null,v=I?-I.deltaX:n.x-bi.x,b=I?-I.deltaY:n.y-bi.y;if(n.copy(bi),((this._state&ue.ROTATE)===ue.ROTATE||(this._state&ue.TOUCH_ROTATE)===ue.TOUCH_ROTATE||(this._state&ue.TOUCH_DOLLY_ROTATE)===ue.TOUCH_DOLLY_ROTATE||(this._state&ue.TOUCH_ZOOM_ROTATE)===ue.TOUCH_ZOOM_ROTATE)&&(this._rotateInternal(v,b),this._isUserControllingRotate=!0),(this._state&ue.DOLLY)===ue.DOLLY||(this._state&ue.ZOOM)===ue.ZOOM){const x=this.dollyToCursor?(i.x-this._elementRect.x)/this._elementRect.width*2-1:0,A=this.dollyToCursor?(i.y-this._elementRect.y)/this._elementRect.height*-2+1:0,y=this.dollyDragInverted?-1:1;(this._state&ue.DOLLY)===ue.DOLLY?(this._dollyInternal(y*b*Kl,x,A),this._isUserControllingDolly=!0):(this._zoomInternal(y*b*Kl,x,A),this._isUserControllingZoom=!0)}if((this._state&ue.TOUCH_DOLLY)===ue.TOUCH_DOLLY||(this._state&ue.TOUCH_ZOOM)===ue.TOUCH_ZOOM||(this._state&ue.TOUCH_DOLLY_TRUCK)===ue.TOUCH_DOLLY_TRUCK||(this._state&ue.TOUCH_ZOOM_TRUCK)===ue.TOUCH_ZOOM_TRUCK||(this._state&ue.TOUCH_DOLLY_OFFSET)===ue.TOUCH_DOLLY_OFFSET||(this._state&ue.TOUCH_ZOOM_OFFSET)===ue.TOUCH_ZOOM_OFFSET||(this._state&ue.TOUCH_DOLLY_ROTATE)===ue.TOUCH_DOLLY_ROTATE||(this._state&ue.TOUCH_ZOOM_ROTATE)===ue.TOUCH_ZOOM_ROTATE){const x=bi.x-this._activePointers[1].clientX,A=bi.y-this._activePointers[1].clientY,y=Math.sqrt(x*x+A*A),S=s.y-y;s.set(0,y);const O=this.dollyToCursor?(n.x-this._elementRect.x)/this._elementRect.width*2-1:0,w=this.dollyToCursor?(n.y-this._elementRect.y)/this._elementRect.height*-2+1:0;(this._state&ue.TOUCH_DOLLY)===ue.TOUCH_DOLLY||(this._state&ue.TOUCH_DOLLY_ROTATE)===ue.TOUCH_DOLLY_ROTATE||(this._state&ue.TOUCH_DOLLY_TRUCK)===ue.TOUCH_DOLLY_TRUCK||(this._state&ue.TOUCH_DOLLY_OFFSET)===ue.TOUCH_DOLLY_OFFSET?(this._dollyInternal(S*Kl,O,w),this._isUserControllingDolly=!0):(this._zoomInternal(S*Kl,O,w),this._isUserControllingZoom=!0)}((this._state&ue.TRUCK)===ue.TRUCK||(this._state&ue.TOUCH_TRUCK)===ue.TOUCH_TRUCK||(this._state&ue.TOUCH_DOLLY_TRUCK)===ue.TOUCH_DOLLY_TRUCK||(this._state&ue.TOUCH_ZOOM_TRUCK)===ue.TOUCH_ZOOM_TRUCK)&&(this._truckInternal(v,b,!1),this._isUserControllingTruck=!0),((this._state&ue.OFFSET)===ue.OFFSET||(this._state&ue.TOUCH_OFFSET)===ue.TOUCH_OFFSET||(this._state&ue.TOUCH_DOLLY_OFFSET)===ue.TOUCH_DOLLY_OFFSET||(this._state&ue.TOUCH_ZOOM_OFFSET)===ue.TOUCH_ZOOM_OFFSET)&&(this._truckInternal(v,b,!0),this._isUserControllingOffset=!0),this.dispatchEvent({type:"control"})},p=()=>{du(this._activePointers,bi),n.copy(bi),this._dragNeedsUpdate=!1,(this._activePointers.length===0||this._activePointers.length===1&&this._activePointers[0]===this._lockedPointer)&&(this._isDragging=!1),this._activePointers.length===0&&this._domElement&&(this._domElement.ownerDocument.removeEventListener("pointermove",l,{passive:!1}),this._domElement.ownerDocument.removeEventListener("mousemove",c),this._domElement.ownerDocument.removeEventListener("pointerup",h),this._domElement.ownerDocument.removeEventListener("mouseup",d),this.dispatchEvent({type:"controlend"}))};this.lockPointer=()=>{!this._enabled||!this._domElement||(this.cancel(),this._lockedPointer={pointerId:-1,clientX:0,clientY:0,deltaX:0,deltaY:0,mouseButton:null},this._activePointers.push(this._lockedPointer),this._domElement.ownerDocument.removeEventListener("pointermove",l,{passive:!1}),this._domElement.ownerDocument.removeEventListener("pointerup",h),this._domElement.requestPointerLock(),this._domElement.ownerDocument.addEventListener("pointerlockchange",_),this._domElement.ownerDocument.addEventListener("pointerlockerror",T),this._domElement.ownerDocument.addEventListener("pointermove",l,{passive:!1}),this._domElement.ownerDocument.addEventListener("pointerup",h),E())},this.unlockPointer=()=>{this._lockedPointer!==null&&(this._disposePointer(this._lockedPointer),this._lockedPointer=null),document.exitPointerLock(),this.cancel(),this._domElement&&(this._domElement.ownerDocument.removeEventListener("pointerlockchange",_),this._domElement.ownerDocument.removeEventListener("pointerlockerror",T))};const _=()=>{this._domElement&&this._domElement.ownerDocument.pointerLockElement===this._domElement||this.unlockPointer()},T=()=>{this.unlockPointer()};this._addAllEventListeners=I=>{this._domElement=I,this._domElement.style.touchAction="none",this._domElement.style.userSelect="none",this._domElement.style.webkitUserSelect="none",this._domElement.addEventListener("pointerdown",o),ZA&&this._domElement.addEventListener("mousedown",a),this._domElement.addEventListener("pointercancel",h),this._domElement.addEventListener("wheel",f,{passive:!1}),this._domElement.addEventListener("contextmenu",m)},this._removeAllEventListeners=()=>{this._domElement&&(this._domElement.style.touchAction="",this._domElement.style.userSelect="",this._domElement.style.webkitUserSelect="",this._domElement.removeEventListener("pointerdown",o),this._domElement.removeEventListener("mousedown",a),this._domElement.removeEventListener("pointercancel",h),this._domElement.removeEventListener("wheel",f,{passive:!1}),this._domElement.removeEventListener("contextmenu",m),this._domElement.ownerDocument.removeEventListener("pointermove",l,{passive:!1}),this._domElement.ownerDocument.removeEventListener("mousemove",c),this._domElement.ownerDocument.removeEventListener("pointerup",h),this._domElement.ownerDocument.removeEventListener("mouseup",d),this._domElement.ownerDocument.removeEventListener("pointerlockchange",_),this._domElement.ownerDocument.removeEventListener("pointerlockerror",T))},this.cancel=()=>{this._state!==ue.NONE&&(this._state=ue.NONE,this._activePointers.length=0,p())},t&&this.connect(t),this.update(0)}get camera(){return this._camera}set camera(e){this._camera=e,this.updateCameraUp(),this._camera.updateProjectionMatrix(),this._updateNearPlaneCorners(),this._needsUpdate=!0}get enabled(){return this._enabled}set enabled(e){this._enabled=e,this._domElement&&(e?(this._domElement.style.touchAction="none",this._domElement.style.userSelect="none",this._domElement.style.webkitUserSelect="none"):(this.cancel(),this._domElement.style.touchAction="",this._domElement.style.userSelect="",this._domElement.style.webkitUserSelect=""))}get active(){return!this._hasRested}get currentAction(){return this._state}get distance(){return this._spherical.radius}set distance(e){this._spherical.radius===e&&this._sphericalEnd.radius===e||(this._spherical.radius=e,this._sphericalEnd.radius=e,this._needsUpdate=!0)}get azimuthAngle(){return this._spherical.theta}set azimuthAngle(e){this._spherical.theta===e&&this._sphericalEnd.theta===e||(this._spherical.theta=e,this._sphericalEnd.theta=e,this._needsUpdate=!0)}get polarAngle(){return this._spherical.phi}set polarAngle(e){this._spherical.phi===e&&this._sphericalEnd.phi===e||(this._spherical.phi=e,this._sphericalEnd.phi=e,this._needsUpdate=!0)}get boundaryEnclosesCamera(){return this._boundaryEnclosesCamera}set boundaryEnclosesCamera(e){this._boundaryEnclosesCamera=e,this._needsUpdate=!0}set interactiveArea(e){this._interactiveArea.width=on(e.width,0,1),this._interactiveArea.height=on(e.height,0,1),this._interactiveArea.x=on(e.x,0,1-this._interactiveArea.width),this._interactiveArea.y=on(e.y,0,1-this._interactiveArea.height)}addEventListener(e,t){super.addEventListener(e,t)}removeEventListener(e,t){super.removeEventListener(e,t)}rotate(e,t,i=!1){return this.rotateTo(this._sphericalEnd.theta+e,this._sphericalEnd.phi+t,i)}rotateAzimuthTo(e,t=!1){return this.rotateTo(e,this._sphericalEnd.phi,t)}rotatePolarTo(e,t=!1){return this.rotateTo(this._sphericalEnd.theta,e,t)}rotateTo(e,t,i=!1){this._isUserControllingRotate=!1;const n=on(e,this.minAzimuthAngle,this.maxAzimuthAngle),s=on(t,this.minPolarAngle,this.maxPolarAngle);this._sphericalEnd.theta=n,this._sphericalEnd.phi=s,this._sphericalEnd.makeSafe(),this._needsUpdate=!0,i||(this._spherical.theta=this._sphericalEnd.theta,this._spherical.phi=this._sphericalEnd.phi);const o=!i||ct(this._spherical.theta,this._sphericalEnd.theta,this.restThreshold)&&ct(this._spherical.phi,this._sphericalEnd.phi,this.restThreshold);return this._createOnRestPromise(o)}dolly(e,t=!1){return this.dollyTo(this._sphericalEnd.radius-e,t)}dollyTo(e,t=!1){return this._isUserControllingDolly=!1,this._lastDollyDirection=Qr.NONE,this._changedDolly=0,this._dollyToNoClamp(on(e,this.minDistance,this.maxDistance),t)}_dollyToNoClamp(e,t=!1){const i=this._sphericalEnd.radius;if(this.colliderMeshes.length>=1){const s=this._collisionTest(),o=ct(s,this._spherical.radius);if(!(i>e)&&o)return Promise.resolve();this._sphericalEnd.radius=Math.min(e,s)}else this._sphericalEnd.radius=e;this._needsUpdate=!0,t||(this._spherical.radius=this._sphericalEnd.radius);const n=!t||ct(this._spherical.radius,this._sphericalEnd.radius,this.restThreshold);return this._createOnRestPromise(n)}dollyInFixed(e,t=!1){this._targetEnd.add(this._getCameraDirection(ta).multiplyScalar(e)),t||this._target.copy(this._targetEnd);const i=!t||ct(this._target.x,this._targetEnd.x,this.restThreshold)&&ct(this._target.y,this._targetEnd.y,this.restThreshold)&&ct(this._target.z,this._targetEnd.z,this.restThreshold);return this._createOnRestPromise(i)}zoom(e,t=!1){return this.zoomTo(this._zoomEnd+e,t)}zoomTo(e,t=!1){this._isUserControllingZoom=!1,this._zoomEnd=on(e,this.minZoom,this.maxZoom),this._needsUpdate=!0,t||(this._zoom=this._zoomEnd);const i=!t||ct(this._zoom,this._zoomEnd,this.restThreshold);return this._changedZoom=0,this._createOnRestPromise(i)}pan(e,t,i=!1){return console.warn("`pan` has been renamed to `truck`"),this.truck(e,t,i)}truck(e,t,i=!1){this._camera.updateMatrix(),gn.setFromMatrixColumn(this._camera.matrix,0),En.setFromMatrixColumn(this._camera.matrix,1),gn.multiplyScalar(e),En.multiplyScalar(-t);const n=Je.copy(gn).add(En),s=lt.copy(this._targetEnd).add(n);return this.moveTo(s.x,s.y,s.z,i)}forward(e,t=!1){Je.setFromMatrixColumn(this._camera.matrix,0),Je.crossVectors(this._camera.up,Je),Je.multiplyScalar(e);const i=lt.copy(this._targetEnd).add(Je);return this.moveTo(i.x,i.y,i.z,t)}elevate(e,t=!1){return Je.copy(this._camera.up).multiplyScalar(e),this.moveTo(this._targetEnd.x+Je.x,this._targetEnd.y+Je.y,this._targetEnd.z+Je.z,t)}moveTo(e,t,i,n=!1){this._isUserControllingTruck=!1;const s=Je.set(e,t,i).sub(this._targetEnd);this._encloseToBoundary(this._targetEnd,s,this.boundaryFriction),this._needsUpdate=!0,n||this._target.copy(this._targetEnd);const o=!n||ct(this._target.x,this._targetEnd.x,this.restThreshold)&&ct(this._target.y,this._targetEnd.y,this.restThreshold)&&ct(this._target.z,this._targetEnd.z,this.restThreshold);return this._createOnRestPromise(o)}lookInDirectionOf(e,t,i,n=!1){const s=Je.set(e,t,i).sub(this._targetEnd).normalize().multiplyScalar(-this._sphericalEnd.radius);return this.setPosition(s.x,s.y,s.z,n)}fitToBox(e,t,{cover:i=!1,paddingLeft:n=0,paddingRight:s=0,paddingBottom:o=0,paddingTop:a=0}={}){const l=[],c=e.isBox3?eo.copy(e):eo.setFromObject(e);c.isEmpty()&&(console.warn("camera-controls: fitTo() cannot be used with an empty box. Aborting"),Promise.resolve());const h=rg(this._sphericalEnd.theta,sg),d=rg(this._sphericalEnd.phi,sg);l.push(this.rotateTo(h,d,t));const u=Je.setFromSpherical(this._sphericalEnd).normalize(),f=ug.setFromUnitVectors(u,pu),m=ct(Math.abs(u.y),1);m&&f.multiply(gu.setFromAxisAngle(Ql,h)),f.multiply(this._yAxisUpSpaceInverse);const E=hg.makeEmpty();lt.copy(c.min).applyQuaternion(f),E.expandByPoint(lt),lt.copy(c.min).setX(c.max.x).applyQuaternion(f),E.expandByPoint(lt),lt.copy(c.min).setY(c.max.y).applyQuaternion(f),E.expandByPoint(lt),lt.copy(c.max).setZ(c.min.z).applyQuaternion(f),E.expandByPoint(lt),lt.copy(c.min).setZ(c.max.z).applyQuaternion(f),E.expandByPoint(lt),lt.copy(c.max).setY(c.min.y).applyQuaternion(f),E.expandByPoint(lt),lt.copy(c.max).setX(c.min.x).applyQuaternion(f),E.expandByPoint(lt),lt.copy(c.max).applyQuaternion(f),E.expandByPoint(lt),E.min.x-=n,E.min.y-=o,E.max.x+=s,E.max.y+=a,f.setFromUnitVectors(pu,u),m&&f.premultiply(gu.invert()),f.premultiply(this._yAxisUpSpace);const g=E.getSize(Je),p=E.getCenter(lt).applyQuaternion(f);if(zs(this._camera)){const _=this.getDistanceToFitBox(g.x,g.y,g.z,i);l.push(this.moveTo(p.x,p.y,p.z,t)),l.push(this.dollyTo(_,t)),l.push(this.setFocalOffset(0,0,0,t))}else if(ps(this._camera)){const _=this._camera,T=_.right-_.left,I=_.top-_.bottom,v=i?Math.max(T/g.x,I/g.y):Math.min(T/g.x,I/g.y);l.push(this.moveTo(p.x,p.y,p.z,t)),l.push(this.zoomTo(v,t)),l.push(this.setFocalOffset(0,0,0,t))}return Promise.all(l)}fitToSphere(e,t){const i=[],n=e instanceof ze.Sphere?mu.copy(e):kt.createBoundingSphere(e,mu);if(i.push(this.moveTo(n.center.x,n.center.y,n.center.z,t)),zs(this._camera)){const s=this.getDistanceToFitSphere(n.radius);i.push(this.dollyTo(s,t))}else if(ps(this._camera)){const s=this._camera.right-this._camera.left,o=this._camera.top-this._camera.bottom,a=2*n.radius,l=Math.min(s/a,o/a);i.push(this.zoomTo(l,t))}return i.push(this.setFocalOffset(0,0,0,t)),Promise.all(i)}setLookAt(e,t,i,n,s,o,a=!1){this._isUserControllingRotate=!1,this._isUserControllingDolly=!1,this._isUserControllingTruck=!1,this._lastDollyDirection=Qr.NONE,this._changedDolly=0;const l=lt.set(n,s,o),c=Je.set(e,t,i);this._targetEnd.copy(l),this._sphericalEnd.setFromVector3(c.sub(l).applyQuaternion(this._yAxisUpSpace)),this.normalizeRotations(),this._needsUpdate=!0,a||(this._target.copy(this._targetEnd),this._spherical.copy(this._sphericalEnd));const h=!a||ct(this._target.x,this._targetEnd.x,this.restThreshold)&&ct(this._target.y,this._targetEnd.y,this.restThreshold)&&ct(this._target.z,this._targetEnd.z,this.restThreshold)&&ct(this._spherical.theta,this._sphericalEnd.theta,this.restThreshold)&&ct(this._spherical.phi,this._sphericalEnd.phi,this.restThreshold)&&ct(this._spherical.radius,this._sphericalEnd.radius,this.restThreshold);return this._createOnRestPromise(h)}lerpLookAt(e,t,i,n,s,o,a,l,c,h,d,u,f,m=!1){this._isUserControllingRotate=!1,this._isUserControllingDolly=!1,this._isUserControllingTruck=!1,this._lastDollyDirection=Qr.NONE,this._changedDolly=0;const E=Je.set(n,s,o),g=lt.set(e,t,i);Hi.setFromVector3(g.sub(E).applyQuaternion(this._yAxisUpSpace));const p=$r.set(h,d,u),_=lt.set(a,l,c);ia.setFromVector3(_.sub(p).applyQuaternion(this._yAxisUpSpace)),this._targetEnd.copy(E.lerp(p,f));const T=ia.theta-Hi.theta,I=ia.phi-Hi.phi,v=ia.radius-Hi.radius;this._sphericalEnd.set(Hi.radius+v*f,Hi.phi+I*f,Hi.theta+T*f),this.normalizeRotations(),this._needsUpdate=!0,m||(this._target.copy(this._targetEnd),this._spherical.copy(this._sphericalEnd));const b=!m||ct(this._target.x,this._targetEnd.x,this.restThreshold)&&ct(this._target.y,this._targetEnd.y,this.restThreshold)&&ct(this._target.z,this._targetEnd.z,this.restThreshold)&&ct(this._spherical.theta,this._sphericalEnd.theta,this.restThreshold)&&ct(this._spherical.phi,this._sphericalEnd.phi,this.restThreshold)&&ct(this._spherical.radius,this._sphericalEnd.radius,this.restThreshold);return this._createOnRestPromise(b)}setPosition(e,t,i,n=!1){return this.setLookAt(e,t,i,this._targetEnd.x,this._targetEnd.y,this._targetEnd.z,n)}setTarget(e,t,i,n=!1){const s=this.getPosition(Je),o=this.setLookAt(s.x,s.y,s.z,e,t,i,n);return this._sphericalEnd.phi=on(this._sphericalEnd.phi,this.minPolarAngle,this.maxPolarAngle),o}setFocalOffset(e,t,i,n=!1){this._isUserControllingOffset=!1,this._focalOffsetEnd.set(e,t,i),this._needsUpdate=!0,n||this._focalOffset.copy(this._focalOffsetEnd);const s=!n||ct(this._focalOffset.x,this._focalOffsetEnd.x,this.restThreshold)&&ct(this._focalOffset.y,this._focalOffsetEnd.y,this.restThreshold)&&ct(this._focalOffset.z,this._focalOffsetEnd.z,this.restThreshold);return this._createOnRestPromise(s)}setOrbitPoint(e,t,i){this._camera.updateMatrixWorld(),gn.setFromMatrixColumn(this._camera.matrixWorldInverse,0),En.setFromMatrixColumn(this._camera.matrixWorldInverse,1),Vs.setFromMatrixColumn(this._camera.matrixWorldInverse,2);const n=Je.set(e,t,i),s=n.distanceTo(this._camera.position),o=n.sub(this._camera.position);gn.multiplyScalar(o.x),En.multiplyScalar(o.y),Vs.multiplyScalar(o.z),Je.copy(gn).add(En).add(Vs),Je.z=Je.z+s,this.dollyTo(s,!1),this.setFocalOffset(-Je.x,Je.y,-Je.z,!1),this.moveTo(e,t,i,!1)}setBoundary(e){if(!e){this._boundary.min.set(-1/0,-1/0,-1/0),this._boundary.max.set(1/0,1/0,1/0),this._needsUpdate=!0;return}this._boundary.copy(e),this._boundary.clampPoint(this._targetEnd,this._targetEnd),this._needsUpdate=!0}setViewport(e,t,i,n){if(e===null){this._viewport=null;return}this._viewport=this._viewport||new ze.Vector4,typeof e=="number"?this._viewport.set(e,t,i,n):this._viewport.copy(e)}getDistanceToFitBox(e,t,i,n=!1){if(fu(this._camera,"getDistanceToFitBox"))return this._spherical.radius;const s=e/t,o=this._camera.getEffectiveFOV()*Jo,a=this._camera.aspect;return((n?s>a:s<a)?t:e/a)*.5/Math.tan(o*.5)+i*.5}getDistanceToFitSphere(e){if(fu(this._camera,"getDistanceToFitSphere"))return this._spherical.radius;const t=this._camera.getEffectiveFOV()*Jo,i=Math.atan(Math.tan(t*.5)*this._camera.aspect)*2,n=1<this._camera.aspect?t:i;return e/Math.sin(n*.5)}getTarget(e,t=!0){return(e&&e.isVector3?e:new ze.Vector3).copy(t?this._targetEnd:this._target)}getPosition(e,t=!0){return(e&&e.isVector3?e:new ze.Vector3).setFromSpherical(t?this._sphericalEnd:this._spherical).applyQuaternion(this._yAxisUpSpaceInverse).add(t?this._targetEnd:this._target)}getSpherical(e,t=!0){return(e&&e instanceof ze.Spherical?e:new ze.Spherical).copy(t?this._sphericalEnd:this._spherical)}getFocalOffset(e,t=!0){return(e&&e.isVector3?e:new ze.Vector3).copy(t?this._focalOffsetEnd:this._focalOffset)}normalizeRotations(){this._sphericalEnd.theta=this._sphericalEnd.theta%Jr,this._sphericalEnd.theta<0&&(this._sphericalEnd.theta+=Jr),this._spherical.theta+=Jr*Math.round((this._sphericalEnd.theta-this._spherical.theta)/Jr)}reset(e=!1){if(!ct(this._camera.up.x,this._cameraUp0.x)||!ct(this._camera.up.y,this._cameraUp0.y)||!ct(this._camera.up.z,this._cameraUp0.z)){this._camera.up.copy(this._cameraUp0);const i=this.getPosition(Je);this.updateCameraUp(),this.setPosition(i.x,i.y,i.z)}const t=[this.setLookAt(this._position0.x,this._position0.y,this._position0.z,this._target0.x,this._target0.y,this._target0.z,e),this.setFocalOffset(this._focalOffset0.x,this._focalOffset0.y,this._focalOffset0.z,e),this.zoomTo(this._zoom0,e)];return Promise.all(t)}saveState(){this._cameraUp0.copy(this._camera.up),this.getTarget(this._target0),this.getPosition(this._position0),this._zoom0=this._zoom,this._focalOffset0.copy(this._focalOffset)}updateCameraUp(){this._yAxisUpSpace.setFromUnitVectors(this._camera.up,Ql),this._yAxisUpSpaceInverse.copy(this._yAxisUpSpace).invert()}applyCameraUp(){const e=Je.subVectors(this._target,this._camera.position).normalize(),t=lt.crossVectors(e,this._camera.up);this._camera.up.crossVectors(t,e).normalize(),this._camera.updateMatrixWorld();const i=this.getPosition(Je);this.updateCameraUp(),this.setPosition(i.x,i.y,i.z)}update(e){const t=this._sphericalEnd.theta-this._spherical.theta,i=this._sphericalEnd.phi-this._spherical.phi,n=this._sphericalEnd.radius-this._spherical.radius,s=lg.subVectors(this._targetEnd,this._target),o=cg.subVectors(this._focalOffsetEnd,this._focalOffset),a=this._zoomEnd-this._zoom;if(gt(t))this._thetaVelocity.value=0,this._spherical.theta=this._sphericalEnd.theta;else{const h=this._isUserControllingRotate?this.draggingSmoothTime:this.smoothTime;this._spherical.theta=ql(this._spherical.theta,this._sphericalEnd.theta,this._thetaVelocity,h,1/0,e),this._needsUpdate=!0}if(gt(i))this._phiVelocity.value=0,this._spherical.phi=this._sphericalEnd.phi;else{const h=this._isUserControllingRotate?this.draggingSmoothTime:this.smoothTime;this._spherical.phi=ql(this._spherical.phi,this._sphericalEnd.phi,this._phiVelocity,h,1/0,e),this._needsUpdate=!0}if(gt(n))this._radiusVelocity.value=0,this._spherical.radius=this._sphericalEnd.radius;else{const h=this._isUserControllingDolly?this.draggingSmoothTime:this.smoothTime;this._spherical.radius=ql(this._spherical.radius,this._sphericalEnd.radius,this._radiusVelocity,h,this.maxSpeed,e),this._needsUpdate=!0}if(gt(s.x)&&gt(s.y)&&gt(s.z))this._targetVelocity.set(0,0,0),this._target.copy(this._targetEnd);else{const h=this._isUserControllingTruck?this.draggingSmoothTime:this.smoothTime;og(this._target,this._targetEnd,this._targetVelocity,h,this.maxSpeed,e,this._target),this._needsUpdate=!0}if(gt(o.x)&&gt(o.y)&&gt(o.z))this._focalOffsetVelocity.set(0,0,0),this._focalOffset.copy(this._focalOffsetEnd);else{const h=this._isUserControllingOffset?this.draggingSmoothTime:this.smoothTime;og(this._focalOffset,this._focalOffsetEnd,this._focalOffsetVelocity,h,this.maxSpeed,e,this._focalOffset),this._needsUpdate=!0}if(gt(a))this._zoomVelocity.value=0,this._zoom=this._zoomEnd;else{const h=this._isUserControllingZoom?this.draggingSmoothTime:this.smoothTime;this._zoom=ql(this._zoom,this._zoomEnd,this._zoomVelocity,h,1/0,e)}if(this.dollyToCursor){if(zs(this._camera)&&this._changedDolly!==0){const h=this._spherical.radius-this._lastDistance,d=this._camera,u=this._getCameraDirection(ta),f=Je.copy(u).cross(d.up).normalize();f.lengthSq()===0&&(f.x=1);const m=lt.crossVectors(f,u),E=this._sphericalEnd.radius*Math.tan(d.getEffectiveFOV()*Jo*.5),g=(this._sphericalEnd.radius-h-this._sphericalEnd.radius)/this._sphericalEnd.radius,p=$r.copy(this._targetEnd).add(f.multiplyScalar(this._dollyControlCoord.x*E*d.aspect)).add(m.multiplyScalar(this._dollyControlCoord.y*E)),_=Je.copy(this._targetEnd).lerp(p,g),T=this._lastDollyDirection===Qr.IN&&this._spherical.radius<=this.minDistance,I=this._lastDollyDirection===Qr.OUT&&this.maxDistance<=this._spherical.radius;if(this.infinityDolly&&(T||I)){this._sphericalEnd.radius-=h,this._spherical.radius-=h;const b=lt.copy(u).multiplyScalar(-h);_.add(b)}this._boundary.clampPoint(_,_);const v=lt.subVectors(_,this._targetEnd);this._targetEnd.copy(_),this._target.add(v),this._changedDolly-=h,gt(this._changedDolly)&&(this._changedDolly=0)}else if(ps(this._camera)&&this._changedZoom!==0){const h=this._zoom-this._lastZoom,d=this._camera,u=Je.set(this._dollyControlCoord.x,this._dollyControlCoord.y,(d.near+d.far)/(d.near-d.far)).unproject(d),f=lt.set(0,0,-1).applyQuaternion(d.quaternion),m=$r.copy(u).add(f.multiplyScalar(-u.dot(d.up))),E=-(this._zoom-h-this._zoom)/this._zoom,g=this._getCameraDirection(ta),p=this._targetEnd.dot(g),_=Je.copy(this._targetEnd).lerp(m,E),T=_.dot(g),I=g.multiplyScalar(T-p);_.sub(I),this._boundary.clampPoint(_,_);const v=lt.subVectors(_,this._targetEnd);this._targetEnd.copy(_),this._target.add(v),this._changedZoom-=h,gt(this._changedZoom)&&(this._changedZoom=0)}}this._camera.zoom!==this._zoom&&(this._camera.zoom=this._zoom,this._camera.updateProjectionMatrix(),this._updateNearPlaneCorners(),this._needsUpdate=!0),this._dragNeedsUpdate=!0;const l=this._collisionTest();this._spherical.radius=Math.min(this._spherical.radius,l),this._spherical.makeSafe(),this._camera.position.setFromSpherical(this._spherical).applyQuaternion(this._yAxisUpSpaceInverse).add(this._target),this._camera.lookAt(this._target),(!gt(this._focalOffset.x)||!gt(this._focalOffset.y)||!gt(this._focalOffset.z))&&(this._camera.updateMatrixWorld(),gn.setFromMatrixColumn(this._camera.matrix,0),En.setFromMatrixColumn(this._camera.matrix,1),Vs.setFromMatrixColumn(this._camera.matrix,2),gn.multiplyScalar(this._focalOffset.x),En.multiplyScalar(-this._focalOffset.y),Vs.multiplyScalar(this._focalOffset.z),Je.copy(gn).add(En).add(Vs),this._camera.position.add(Je)),this._boundaryEnclosesCamera&&this._encloseToBoundary(this._camera.position.copy(this._target),Je.setFromSpherical(this._spherical).applyQuaternion(this._yAxisUpSpaceInverse),1);const c=this._needsUpdate;return c&&!this._updatedLastTime?(this._hasRested=!1,this.dispatchEvent({type:"wake"}),this.dispatchEvent({type:"update"})):c?(this.dispatchEvent({type:"update"}),gt(t,this.restThreshold)&&gt(i,this.restThreshold)&&gt(n,this.restThreshold)&&gt(s.x,this.restThreshold)&&gt(s.y,this.restThreshold)&&gt(s.z,this.restThreshold)&&gt(o.x,this.restThreshold)&&gt(o.y,this.restThreshold)&&gt(o.z,this.restThreshold)&&gt(a,this.restThreshold)&&!this._hasRested&&(this._hasRested=!0,this.dispatchEvent({type:"rest"}))):!c&&this._updatedLastTime&&this.dispatchEvent({type:"sleep"}),this._lastDistance=this._spherical.radius,this._lastZoom=this._zoom,this._updatedLastTime=c,this._needsUpdate=!1,c}toJSON(){return JSON.stringify({enabled:this._enabled,minDistance:this.minDistance,maxDistance:$o(this.maxDistance),minZoom:this.minZoom,maxZoom:$o(this.maxZoom),minPolarAngle:this.minPolarAngle,maxPolarAngle:$o(this.maxPolarAngle),minAzimuthAngle:$o(this.minAzimuthAngle),maxAzimuthAngle:$o(this.maxAzimuthAngle),smoothTime:this.smoothTime,draggingSmoothTime:this.draggingSmoothTime,dollySpeed:this.dollySpeed,truckSpeed:this.truckSpeed,dollyToCursor:this.dollyToCursor,verticalDragToForward:this.verticalDragToForward,target:this._targetEnd.toArray(),position:Je.setFromSpherical(this._sphericalEnd).add(this._targetEnd).toArray(),zoom:this._zoomEnd,focalOffset:this._focalOffsetEnd.toArray(),target0:this._target0.toArray(),position0:this._position0.toArray(),zoom0:this._zoom0,focalOffset0:this._focalOffset0.toArray()})}fromJSON(e,t=!1){const i=JSON.parse(e);this.enabled=i.enabled,this.minDistance=i.minDistance,this.maxDistance=ea(i.maxDistance),this.minZoom=i.minZoom,this.maxZoom=ea(i.maxZoom),this.minPolarAngle=i.minPolarAngle,this.maxPolarAngle=ea(i.maxPolarAngle),this.minAzimuthAngle=ea(i.minAzimuthAngle),this.maxAzimuthAngle=ea(i.maxAzimuthAngle),this.smoothTime=i.smoothTime,this.draggingSmoothTime=i.draggingSmoothTime,this.dollySpeed=i.dollySpeed,this.truckSpeed=i.truckSpeed,this.dollyToCursor=i.dollyToCursor,this.verticalDragToForward=i.verticalDragToForward,this._target0.fromArray(i.target0),this._position0.fromArray(i.position0),this._zoom0=i.zoom0,this._focalOffset0.fromArray(i.focalOffset0),this.moveTo(i.target[0],i.target[1],i.target[2],t),Hi.setFromVector3(Je.fromArray(i.position).sub(this._targetEnd).applyQuaternion(this._yAxisUpSpace)),this.rotateTo(Hi.theta,Hi.phi,t),this.dollyTo(Hi.radius,t),this.zoomTo(i.zoom,t),this.setFocalOffset(i.focalOffset[0],i.focalOffset[1],i.focalOffset[2],t),this._needsUpdate=!0}connect(e){if(this._domElement){console.warn("camera-controls is already connected.");return}e.setAttribute("data-camera-controls-version",YA),this._addAllEventListeners(e),this._getClientRect(this._elementRect)}disconnect(){this.cancel(),this._removeAllEventListeners(),this._domElement&&(this._domElement.removeAttribute("data-camera-controls-version"),this._domElement=void 0)}dispose(){this.removeAllEventListeners(),this.disconnect()}_getTargetDirection(e){return e.setFromSpherical(this._spherical).divideScalar(this._spherical.radius).applyQuaternion(this._yAxisUpSpaceInverse)}_getCameraDirection(e){return this._getTargetDirection(e).negate()}_findPointerById(e){return this._activePointers.find(t=>t.pointerId===e)}_findPointerByMouseButton(e){return this._activePointers.find(t=>t.mouseButton===e)}_disposePointer(e){this._activePointers.splice(this._activePointers.indexOf(e),1)}_encloseToBoundary(e,t,i){const n=t.lengthSq();if(n===0)return e;const s=lt.copy(t).add(e),o=this._boundary.clampPoint(s,$r).sub(s),a=o.lengthSq();if(a===0)return e.add(t);if(a===n)return e;if(i===0)return e.add(t).add(o);{const l=1+i*a/t.dot(o);return e.add(lt.copy(t).multiplyScalar(l)).add(o.multiplyScalar(1-i))}}_updateNearPlaneCorners(){if(zs(this._camera)){const e=this._camera,t=e.near,i=e.getEffectiveFOV()*Jo,n=Math.tan(i*.5)*t,s=n*e.aspect;this._nearPlaneCorners[0].set(-s,-n,0),this._nearPlaneCorners[1].set(s,-n,0),this._nearPlaneCorners[2].set(s,n,0),this._nearPlaneCorners[3].set(-s,n,0)}else if(ps(this._camera)){const e=this._camera,t=1/e.zoom,i=e.left*t,n=e.right*t,s=e.top*t,o=e.bottom*t;this._nearPlaneCorners[0].set(i,s,0),this._nearPlaneCorners[1].set(n,s,0),this._nearPlaneCorners[2].set(n,o,0),this._nearPlaneCorners[3].set(i,o,0)}}_collisionTest(){let e=1/0;if(!(this.colliderMeshes.length>=1)||fu(this._camera,"_collisionTest"))return e;const t=this._getTargetDirection(ta);Eu.lookAt(ag,t,this._camera.up);for(let i=0;i<4;i++){const n=lt.copy(this._nearPlaneCorners[i]);n.applyMatrix4(Eu);const s=$r.addVectors(this._target,n);Jl.set(s,t),Jl.far=this._spherical.radius+1;const o=Jl.intersectObjects(this.colliderMeshes);o.length!==0&&o[0].distance<e&&(e=o[0].distance)}return e}_getClientRect(e){if(!this._domElement)return;const t=this._domElement.getBoundingClientRect();return e.x=t.left,e.y=t.top,this._viewport?(e.x+=this._viewport.x,e.y+=t.height-this._viewport.w-this._viewport.y,e.width=this._viewport.z,e.height=this._viewport.w):(e.width=t.width,e.height=t.height),e}_createOnRestPromise(e){return e?Promise.resolve():(this._hasRested=!1,this.dispatchEvent({type:"transitionstart"}),new Promise(t=>{const i=()=>{this.removeEventListener("rest",i),t()};this.addEventListener("rest",i)}))}_addAllEventListeners(e){}_removeAllEventListeners(){}get dampingFactor(){return console.warn(".dampingFactor has been deprecated. use smoothTime (in seconds) instead."),0}set dampingFactor(e){console.warn(".dampingFactor has been deprecated. use smoothTime (in seconds) instead.")}get draggingDampingFactor(){return console.warn(".draggingDampingFactor has been deprecated. use draggingSmoothTime (in seconds) instead."),0}set draggingDampingFactor(e){console.warn(".draggingDampingFactor has been deprecated. use draggingSmoothTime (in seconds) instead.")}static createBoundingSphere(e,t=new ze.Sphere){const i=t,n=i.center;eo.makeEmpty(),e.traverseVisible(o=>{o.isMesh&&eo.expandByObject(o)}),eo.getCenter(n);let s=0;return e.traverseVisible(o=>{if(!o.isMesh)return;const a=o,l=a.geometry.clone();l.applyMatrix4(a.matrixWorld);const c=l.attributes.position;for(let h=0,d=c.count;h<d;h++)Je.fromBufferAttribute(c,h),s=Math.max(s,n.distanceToSquared(Je))}),i.radius=Math.sqrt(s),i}}class xa extends uA{constructor(e){super(e),R(this,"onBeforeUpdate",new oe),R(this,"onAfterUpdate",new oe),R(this,"onAspectUpdated",new oe),R(this,"onDisposed",new oe),R(this,"three"),R(this,"_allControls",new Map),R(this,"updateAspect",()=>{var t;if(!(!this.currentWorld||!this.currentWorld.renderer)){if(this.three instanceof wn){this.onAspectUpdated.trigger();return}if((t=this.currentWorld.renderer)!=null&&t.isResizeable()){const i=this.currentWorld.renderer.getSize();this.three.aspect=i.width/i.height,this.three.updateProjectionMatrix(),this.onAspectUpdated.trigger()}}}),this.three=this.setupCamera(),this.setupEvents(!0),this.onWorldChanged.add(({action:t,world:i})=>{if(t==="added"){const n=this.newCameraControls();this._allControls.set(i.uuid,n)}if(t==="removed"){const n=this._allControls.get(i.uuid);n&&(n.dispose(),this._allControls.delete(i.uuid))}})}get controls(){if(!this.currentWorld)throw new Error("This camera needs a world to work!");const e=this._allControls.get(this.currentWorld.uuid);if(!e)throw new Error("Controls not found!");return e}get enabled(){return this.currentWorld===null?!1:this.controls.enabled}set enabled(e){this.currentWorld!==null&&(this.controls.enabled=e)}dispose(){this.setupEvents(!1),this.onAspectUpdated.reset(),this.onBeforeUpdate.reset(),this.onAfterUpdate.reset(),this.three.removeFromParent(),this.onDisposed.trigger(),this.onDisposed.reset();for(const[e,t]of this._allControls)t.dispose()}update(e){this.enabled&&(this.onBeforeUpdate.trigger(this),this.controls.update(e),this.onAfterUpdate.trigger(this))}setupCamera(){const e=window.innerWidth/window.innerHeight,t=new Fi(60,e,1,1e3);return t.position.set(50,50,50),t.lookAt(new F(0,0,0)),t}newCameraControls(){if(!this.currentWorld)throw new Error("This camera needs a world to work!");if(!this.currentWorld.renderer)throw new Error("This camera needs a renderer to work!");kt.install({THREE:xa.getSubsetOfThree()});const{domElement:e}=this.currentWorld.renderer.three,t=new kt(this.three,e);return t.smoothTime=.2,t.dollyToCursor=!0,t.infinityDolly=!0,t.minDistance=6,t}setupEvents(e){e?window.addEventListener("resize",this.updateAspect):window.removeEventListener("resize",this.updateAspect)}static getSubsetOfThree(){return{MOUSE:t_,Vector2:Re,Vector3:F,Vector4:bt,Quaternion:si,Matrix4:fe,Spherical:YS,Box3:je,Sphere:vi,Raycaster:Hc,MathUtils:sr}}}const $E=class eI extends We{constructor(e){super(e),R(this,"onAfterUpdate",new oe),R(this,"onBeforeUpdate",new oe),R(this,"onDisposed",new oe),R(this,"list",new fn),R(this,"enabled",!0),e.add(eI.uuid,this)}create(){const e=new GA(this.components),t=e.uuid;if(this.list.has(t))throw new Error("There is already a world with this name!");return this.list.set(t,e),e}delete(e){if(!this.list.has(e.uuid))throw new Error("The provided world is not found in the list!");this.list.delete(e.uuid),e.dispose()}dispose(){this.enabled=!1;for(const[e,t]of this.list)t.dispose();this.list.clear(),this.onDisposed.trigger()}update(e){if(this.enabled)for(const[t,i]of this.list)i.update(e)}};R($E,"uuid","fdb61dc4-2ec1-4966-b83d-54ea795fad4a");let tI=$E;function jA(r,e,t,i){return new Promise((n,s)=>{function o(){const a=r.clientWaitSync(e,t,0);if(a===r.WAIT_FAILED){s();return}if(a===r.TIMEOUT_EXPIRED){setTimeout(o,i);return}n()}o()})}async function qA(r,e,t,i,n,s,o){const a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);r.flush(),await jA(r,a,0,10),r.deleteSync(a),r.bindBuffer(e,t),r.getBufferSubData(e,i,n,s,o),r.bindBuffer(e,null)}async function KA(r,e,t,i,n,s,o,a){const l=r.createBuffer();return r.bindBuffer(r.PIXEL_PACK_BUFFER,l),r.bufferData(r.PIXEL_PACK_BUFFER,a.byteLength,r.STREAM_READ),r.readPixels(e,t,i,n,s,o,0),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),await qA(r,r.PIXEL_PACK_BUFFER,l,0,a),r.deleteBuffer(l),a}class QA extends Fo{constructor(){super(...arguments),R(this,"_config",{enabled:{value:!0,type:"Boolean"},width:{type:"Number",interpolable:!0,value:512,min:32,max:1024},height:{type:"Number",interpolable:!0,value:512,min:32,max:1024},autoUpdate:{value:!0,type:"Boolean"},renderDebugFrame:{value:!1,type:"Boolean"},updateInterval:{type:"Number",interpolable:!0,value:1,min:0,max:1},threshold:{type:"Number",interpolable:!0,value:100,min:1,max:512}}),R(this,"_interval",null)}get enabled(){return this._config.enabled.value}set enabled(e){this._config.enabled.value=e,this._component.enabled=e}get width(){return this._config.width.value}set width(e){this.setWidthHeight(e,this.height)}get height(){return this._config.height.value}set height(e){this.setWidthHeight(this.width,e)}get autoUpdate(){return this._config.autoUpdate.value}set autoUpdate(e){this.setAutoAndInterval(e,this.updateInterval)}get updateInterval(){return this._config.updateInterval.value}set updateInterval(e){this.setAutoAndInterval(this.autoUpdate,e)}get renderDebugFrame(){return this._config.renderDebugFrame.value}set renderDebugFrame(e){this._config.renderDebugFrame.value=e}get threshold(){return this._config.threshold.value}set threshold(e){this._config.threshold.value=e}setWidthHeight(e,t){if(e<=0||t<=0)throw new Error("The width and height of the culler renderer must be more than 0!");this._config.width.value=e,this._config.height.value=t,this.resetRenderTarget()}setAutoAndInterval(e,t){if(t<=0)throw new Error("The updateInterval of the culler renderer must be more than 0!");this._config.autoUpdate.value=e,this._config.updateInterval.value=t,this.resetInterval(e)}resetRenderTarget(){this._component.renderTarget.dispose(),this._component.renderTarget=new Qt(this.width,this.height),this._component.bufferSize=this.width*this.height*4,this._component.buffer=new Uint8Array(this._component.bufferSize)}resetInterval(e){this._interval!==null&&window.clearInterval(this._interval),e&&(this._interval=window.setInterval(async()=>{this._component.preventUpdate||await this._component.updateVisibility()},this.updateInterval))}}class iI{constructor(e,t){if(R(this,"onSetup",new oe),R(this,"onDisposed",new oe),R(this,"onViewUpdated",new jn),R(this,"enabled",!0),R(this,"needsUpdate",!1),R(this,"components"),R(this,"renderTarget",new Qt),R(this,"bufferSize",1),R(this,"buffer",new Uint8Array),R(this,"preventUpdate",!1),R(this,"config"),R(this,"isSetup",!1),R(this,"world"),R(this,"renderer"),R(this,"_defaultConfig",{enabled:!0,height:512,width:512,updateInterval:1e3,autoUpdate:!0,renderDebugFrame:!1,threshold:100}),R(this,"worker"),R(this,"scene",new dr),R(this,"_availableColor",1),R(this,"_isWorkerBusy",!1),R(this,"updateVisibility",async s=>{if(!this.enabled||!this.needsUpdate&&!s||this._isWorkerBusy)return;this._isWorkerBusy=!0;const o=this.world.camera.three;o.updateMatrix();const{width:a,height:l}=this.config;this.renderer.setSize(a,l),this.renderer.setRenderTarget(this.renderTarget),this.renderer.render(this.scene,o);const c=this.renderer.getContext();await KA(c,0,0,a,l,c.RGBA,c.UNSIGNED_BYTE,this.buffer),this.renderer.setRenderTarget(null),this.config.renderDebugFrame&&this.renderer.render(this.scene,o),this.worker.postMessage({buffer:this.buffer}),this.needsUpdate=!1}),!t.renderer)throw new Error("The given world must have a renderer!");this.components=e,this.config=new QA(this,this.components,"Culler renderer"),this.world=t,this.renderer=new _a,this.renderer.clippingPlanes=t.renderer.clippingPlanes;const i=`
      addEventListener("message", (event) => {
        const { buffer } = event.data;
        const colors = new Map();
        for (let i = 0; i < buffer.length; i += 4) {
          const r = buffer[i];
          const g = buffer[i + 1];
          const b = buffer[i + 2];
          const code = "" + r + "-" + g + "-" + b;
          if(colors.has(code)) {
            colors.set(code, colors.get(code) + 1);
          } else {
            colors.set(code, 1);
          }
        }
        postMessage({ colors });
      });
    `,n=new Blob([i],{type:"application/javascript"});this.worker=new Worker(URL.createObjectURL(n)),this.setup()}dispose(){this.enabled=!1,this.config.autoUpdate=!1,this.components.get(Kc).list.delete(this.config.uuid);for(const e of this.scene.children)e.removeFromParent();this.onViewUpdated.reset(),this.worker.terminate(),this.renderer.forceContextLoss(),this.renderer.dispose(),this.renderTarget.dispose(),this.buffer=null,this.onDisposed.reset()}setup(e){const t={...this._defaultConfig,...e},{width:i,height:n}=t;this.config.setWidthHeight(i,n);const{updateInterval:s,autoUpdate:o}=t;this.config.setAutoAndInterval(o,s),this.config.threshold=t.threshold,this.isSetup=!0,this.onSetup.trigger()}getAvailableColor(){let e=BigInt(this._availableColor.toString());const t=[];do t.unshift(Number(e%256n)),e/=256n;while(e);for(;t.length!==3;)t.unshift(0);const[i,n,s]=t,o=`${i}-${n}-${s}`;return{r:i,g:n,b:s,code:o}}increaseColor(){if(this._availableColor===256*256*256){console.warn("Color can't be increased over 256 x 256 x 256!");return}this._availableColor++}decreaseColor(){if(this._availableColor===1){console.warn("Color can't be decreased under 0!");return}this._availableColor--}}class JA extends iI{constructor(e,t){super(e,t),R(this,"onViewUpdated",new oe),R(this,"colorMeshes",new Map),R(this,"_colorCodeMeshMap",new Map),R(this,"_meshIDColorCodeMap",new Map),R(this,"_currentVisibleMeshes",new Set),R(this,"_recentlyHiddenMeshes",new Set),R(this,"_transparentMat",new Ti({transparent:!0,opacity:0})),R(this,"handleWorkerMessage",async i=>{if(this.preventUpdate)return;const n=i.data.colors;this._recentlyHiddenMeshes=new Set(this._currentVisibleMeshes),this._currentVisibleMeshes.clear();for(const[s,o]of n){if(o<this.config.threshold)continue;const a=this._colorCodeMeshMap.get(s);a&&(this._currentVisibleMeshes.add(a),this._recentlyHiddenMeshes.delete(a))}this.onViewUpdated.trigger({seen:this._currentVisibleMeshes,unseen:this._recentlyHiddenMeshes}),this._isWorkerBusy=!1}),this.worker.addEventListener("message",this.handleWorkerMessage),this.onViewUpdated.add(({seen:i,unseen:n})=>{for(const s of i)s.visible=!0;for(const s of n)s.visible=!1})}get threshold(){return this.config.threshold}set threshold(e){this.config.threshold=e}dispose(){super.dispose(),this._currentVisibleMeshes.clear(),this._recentlyHiddenMeshes.clear(),this._meshIDColorCodeMap.clear(),this._transparentMat.dispose(),this._colorCodeMeshMap.clear();const e=this.components.get(xn);for(const t in this.colorMeshes){const i=this.colorMeshes.get(t);i&&e.destroy(i,!0)}this.colorMeshes.clear()}add(e){if(!this.enabled)return;if(this.preventUpdate){console.log("Culler processing not finished yet.");return}this.preventUpdate=!0;const t=e instanceof Bi,{geometry:i,material:n}=e,{colorMaterial:s,code:o}=this.getAvailableMaterial();let a;if(Array.isArray(n)){let h=!0;const d=[];for(const u of n)ig.isTransparent(u)?d.push(this._transparentMat):(h=!1,d.push(s));if(h){s.dispose(),this.preventUpdate=!1;return}a=d}else if(ig.isTransparent(n)){s.dispose(),this.preventUpdate=!1;return}else a=s;this._colorCodeMeshMap.set(o,e),this._meshIDColorCodeMap.set(e.uuid,o);const l=t?e.count:1,c=new Bi(i,a,l);t?c.instanceMatrix=e.instanceMatrix:c.setMatrixAt(0,new fe),e.visible=!1,e.updateWorldMatrix(!0,!1),c.applyMatrix4(e.matrixWorld),c.updateMatrix(),this.scene.add(c),this.colorMeshes.set(e.uuid,c),this.increaseColor(),this.preventUpdate=!1}remove(e){if(this.preventUpdate){console.log("Culler processing not finished yet.");return}this.preventUpdate=!0;const t=this.components.get(xn);this._currentVisibleMeshes.delete(e),this._recentlyHiddenMeshes.delete(e);const i=this.colorMeshes.get(e.uuid),n=this._meshIDColorCodeMap.get(e.uuid);if(!i||!n){this.preventUpdate=!1;return}this._colorCodeMeshMap.delete(n),this._meshIDColorCodeMap.delete(e.uuid),this.colorMeshes.delete(e.uuid),i.geometry=void 0,i.material=[],t.destroy(i,!0),this._recentlyHiddenMeshes.delete(e),this._currentVisibleMeshes.delete(e),this.preventUpdate=!1}updateInstanced(e){for(const t of e){const i=this.colorMeshes.get(t.uuid);i&&(i.count=t.count)}}getAvailableMaterial(){const{r:e,g:t,b:i,code:n}=this.getAvailableColor(),s=rt.enabled;rt.enabled=!1;const o=new Fe(`rgb(${e}, ${t}, ${i})`);if(!this.world.renderer)throw new Error("Renderer not found in the world!");const a=this.world.renderer.clippingPlanes,l=new Ti({color:o,clippingPlanes:a,side:_i});return rt.enabled=s,{colorMaterial:l,code:n}}}const nI=class ad extends We{constructor(e){super(e),R(this,"onDisposed",new oe),R(this,"_enabled",!0),R(this,"list",new Map),e.add(ad.uuid,this)}get enabled(){return this._enabled}set enabled(e){this._enabled=e;for(const[t,i]of this.list)i.enabled=e}create(e){if(this.list.has(e.uuid))return this.list.get(e.uuid);const t=new JA(this.components,e);return this.list.set(e.uuid,t),t}delete(e){const t=this.list.get(e.uuid);t&&t.dispose(),this.list.delete(e.uuid)}dispose(){this.enabled=!1,this.onDisposed.trigger(ad.uuid),this.onDisposed.reset();for(const[e,t]of this.list)t.dispose();this.list.clear()}updateInstanced(e){for(const[,t]of this.list)t.updateInstanced(e)}};R(nI,"uuid","69f2a50d-c266-44fc-b1bd-fa4d34be89e6");let $A=nI;class eR{constructor(e){R(this,"_event"),R(this,"_position",new Re),R(this,"onDisposed",new oe),R(this,"updateMouseInfo",t=>{this._event=t}),this.dom=e,this.setupEvents(!0)}get position(){if(this._event){const e=this.dom.getBoundingClientRect();this._position.x=this.getPositionX(e,this._event),this._position.y=this.getPositionY(e,this._event)}return this._position}dispose(){this.setupEvents(!1),this.onDisposed.trigger(),this.onDisposed.reset()}getPositionY(e,t){return-((this.getDataObject(t).clientY-e.top)/(e.bottom-e.top))*2+1}getPositionX(e,t){return(this.getDataObject(t).clientX-e.left)/(e.right-e.left)*2-1}getDataObject(e){return e instanceof MouseEvent?e:e.touches[0]}setupEvents(e){e?(this.dom.addEventListener("pointermove",this.updateMouseInfo),this.dom.addEventListener("touchstart",this.updateMouseInfo)):(this.dom.removeEventListener("pointermove",this.updateMouseInfo),this.dom.removeEventListener("touchstart",this.updateMouseInfo))}}class tR{constructor(e,t){R(this,"enabled",!0),R(this,"components"),R(this,"onDisposed",new oe),R(this,"mouse"),R(this,"three",new Hc),R(this,"world");const i=t.renderer;if(!i)throw new Error("A renderer is needed for the raycaster to work!");this.world=t,this.mouse=new eR(i.three.domElement),this.components=e}dispose(){this.mouse.dispose(),this.onDisposed.trigger(),this.onDisposed.reset()}castRay(e=Array.from(this.world.meshes),t=this.mouse.position){if(!this.world)throw new Error("A world is needed to cast rays!");const i=this.world.camera.three;return this.three.setFromCamera(t,i),this.intersect(e)}castRayFromVector(e,t,i=Array.from(this.world.meshes)){return this.three.set(e,t),this.intersect(i)}intersect(e=Array.from(this.world.meshes)){const t=this.three.intersectObjects(e),i=this.filterClippingPlanes(t);return i.length>0?i[0]:null}filterClippingPlanes(e){if(!this.world.renderer)throw new Error("Renderer not found!");const t=this.world.renderer.three;if(!t.clippingPlanes)return e;const i=t.clippingPlanes;return e.length<=0||!i||(i==null?void 0:i.length)<=0?e:e.filter(n=>i.every(s=>s.distanceToPoint(n.point)>0))}}const sI=class rI extends We{constructor(e){super(e),R(this,"enabled",!0),R(this,"list",new Map),R(this,"onDisposed",new oe),e.add(rI.uuid,this)}get(e){if(this.list.has(e.uuid))return this.list.get(e.uuid);const t=new tR(this.components,e);return this.list.set(e.uuid,t),e.onDisposed.add(()=>{this.delete(e)}),t}delete(e){const t=this.list.get(e.uuid);t&&t.dispose(),this.list.delete(e.uuid)}dispose(){for(const[e,t]of this.list)t.dispose();this.list.clear(),this.onDisposed.trigger()}};R(sI,"uuid","d5d8bdf0-db25-4952-b951-b643af207ace");let Ji=sI;class iR extends Fo{constructor(){super(...arguments),R(this,"_config",{visible:{value:!0,type:"Boolean"},color:{value:new Fe,type:"Color"},primarySize:{type:"Number",interpolable:!0,value:1,min:0,max:1e3},secondarySize:{type:"Number",interpolable:!0,value:10,min:0,max:1e3},distance:{type:"Number",interpolable:!0,value:500,min:0,max:500}})}get visible(){return this._config.visible.value}set visible(e){this._config.visible.value=e,this._component.visible=e}get color(){return this._config.color.value}set color(e){this._config.color.value=e,this._component.material.uniforms.uColor.value=e,this._component.material.uniformsNeedUpdate=!0}get primarySize(){return this._config.primarySize.value}set primarySize(e){this._config.primarySize.value=e,this._component.material.uniforms.uSize1.value=e,this._component.material.uniformsNeedUpdate=!0}get secondarySize(){return this._config.secondarySize.value}set secondarySize(e){this._config.secondarySize.value=e,this._component.material.uniforms.uSize2.value=e,this._component.material.uniformsNeedUpdate=!0}get distance(){return this._config.distance.value}set distance(e){this._config.distance.value=e,this._component.material.uniforms.uDistance.value=e,this._component.material.uniformsNeedUpdate=!0}}class nR{constructor(e,t){R(this,"onDisposed",new oe),R(this,"onSetup",new oe),R(this,"isSetup",!1),R(this,"world"),R(this,"components"),R(this,"config"),R(this,"_defaultConfig",{visible:!0,color:new Fe(12303291),primarySize:1,secondarySize:10,distance:500}),R(this,"three"),R(this,"_fade",3),R(this,"updateZoom",()=>{this.world.camera instanceof xa&&(this.material.uniforms.uZoom.value=this.world.camera.three.zoom)}),this.world=t;const{color:i,primarySize:n,secondarySize:s,distance:o}=this._defaultConfig;this.components=e,this.config=new iR(this,this.components,"Grid");const a=new ur(2,2,1,1),l=new Mt({side:_i,uniforms:{uSize1:{value:n},uSize2:{value:s},uColor:{value:i},uDistance:{value:o},uFade:{value:this._fade},uZoom:{value:1}},transparent:!0,vertexShader:`
            
            varying vec3 worldPosition;
            
            uniform float uDistance;
            
            void main() {
            
                    vec3 pos = position.xzy * uDistance;
                    pos.xz += cameraPosition.xz;
                    
                    worldPosition = pos;
                    
                    gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);
            
            }
            `,fragmentShader:`
            
            varying vec3 worldPosition;
            
            uniform float uZoom;
            uniform float uFade;
            uniform float uSize1;
            uniform float uSize2;
            uniform vec3 uColor;
            uniform float uDistance;
                
                
                
                float getGrid(float size) {
                
                    vec2 r = worldPosition.xz / size;
                    
                    
                    vec2 grid = abs(fract(r - 0.5) - 0.5) / fwidth(r);
                    float line = min(grid.x, grid.y);
                    
                
                    return 1.0 - min(line, 1.0);
                }
                
            void main() {
            
                    
                    float d = 1.0 - min(distance(cameraPosition.xz, worldPosition.xz) / uDistance, 1.0);
                    
                    float g1 = getGrid(uSize1);
                    float g2 = getGrid(uSize2);
                    
                    // Ortho camera fades the grid away when zooming out
                    float minZoom = step(0.2, uZoom);
                    float zoomFactor = pow(min(uZoom, 1.), 2.) * minZoom;
                    
                    gl_FragColor = vec4(uColor.rgb, mix(g2, g1, g1) * pow(d, uFade));
                    gl_FragColor.a = mix(0.5 * gl_FragColor.a, gl_FragColor.a, g2) * zoomFactor;
                    
                    if ( gl_FragColor.a <= 0.0 ) discard;
                    
            
            }
            
            `,extensions:{derivatives:!0}});this.three=new ge(a,l),this.three.frustumCulled=!1,t.scene.three.add(this.three),this.setupEvents(!0)}get visible(){return this.three.visible}set visible(e){e?this.world.scene.three.add(this.three):this.three.removeFromParent()}get material(){return this.three.material}get fade(){return this._fade===3}set fade(e){this._fade=e?3:0,this.material.uniforms.uFade.value=this._fade}setup(e){const t={...this._defaultConfig,...e};this.config.visible=!0,this.config.color=t.color,this.config.primarySize=t.primarySize,this.config.secondarySize=t.secondarySize,this.config.distance=t.distance,this.isSetup=!0,this.onSetup.trigger()}dispose(){this.setupEvents(!1),this.components.get(Kc).list.delete(this.config.uuid),this.components.get(xn).destroy(this.three),this.onDisposed.trigger(),this.onDisposed.reset(),this.world=null,this.components=null}setupEvents(e){if(this.world.isDisposing||!(this.world.camera instanceof xa))return;const t=this.world.camera.controls;e?t.addEventListener("update",this.updateZoom):t.removeEventListener("update",this.updateZoom)}}const sR=class oI extends We{constructor(e){super(e),R(this,"list",new Map),R(this,"onDisposed",new oe),R(this,"enabled",!0),e.add(oI.uuid,this)}create(e){if(this.list.has(e.uuid))throw new Error("This world already has a grid!");const t=new nR(this.components,e);return this.list.set(e.uuid,t),e.onDisposed.add(()=>{this.delete(e)}),t}delete(e){const t=this.list.get(e.uuid);t&&t.dispose(),this.list.delete(e.uuid)}dispose(){for(const[e,t]of this.list)t.dispose();this.list.clear(),this.onDisposed.trigger(),this.onDisposed.reset()}};R(sR,"uuid","d1e814d5-b81c-4452-87a2-f039375e0489");const ks=new Hc,ui=new F,fs=new F,Ct=new si,dg={X:new F(1,0,0),Y:new F(0,1,0),Z:new F(0,0,1)},Iu={type:"change"},fg={type:"mouseDown",mode:null},pg={type:"mouseUp",mode:null},mg={type:"objectChange"};class rR extends St{constructor(e,t){super(),t===void 0&&(console.warn('THREE.TransformControls: The second parameter "domElement" is now mandatory.'),t=document),this.isTransformControls=!0,this.visible=!1,this.domElement=t,this.domElement.style.touchAction="none";const i=new uR;this._gizmo=i,this.add(i);const n=new dR;this._plane=n,this.add(n);const s=this;function o(_,T){let I=T;Object.defineProperty(s,_,{get:function(){return I!==void 0?I:T},set:function(v){I!==v&&(I=v,n[_]=v,i[_]=v,s.dispatchEvent({type:_+"-changed",value:v}),s.dispatchEvent(Iu))}}),s[_]=T,n[_]=T,i[_]=T}o("camera",e),o("object",void 0),o("enabled",!0),o("axis",null),o("mode","translate"),o("translationSnap",null),o("rotationSnap",null),o("scaleSnap",null),o("space","world"),o("size",1),o("dragging",!1),o("showX",!0),o("showY",!0),o("showZ",!0);const a=new F,l=new F,c=new si,h=new si,d=new F,u=new si,f=new F,m=new F,E=new F,g=0,p=new F;o("worldPosition",a),o("worldPositionStart",l),o("worldQuaternion",c),o("worldQuaternionStart",h),o("cameraPosition",d),o("cameraQuaternion",u),o("pointStart",f),o("pointEnd",m),o("rotationAxis",E),o("rotationAngle",g),o("eye",p),this._offset=new F,this._startNorm=new F,this._endNorm=new F,this._cameraScale=new F,this._parentPosition=new F,this._parentQuaternion=new si,this._parentQuaternionInv=new si,this._parentScale=new F,this._worldScaleStart=new F,this._worldQuaternionInv=new si,this._worldScale=new F,this._positionStart=new F,this._quaternionStart=new si,this._scaleStart=new F,this._getPointer=oR.bind(this),this._onPointerDown=lR.bind(this),this._onPointerHover=aR.bind(this),this._onPointerMove=cR.bind(this),this._onPointerUp=hR.bind(this),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointermove",this._onPointerHover),this.domElement.addEventListener("pointerup",this._onPointerUp)}updateMatrixWorld(e){this.object!==void 0&&(this.object.updateMatrixWorld(),this.object.parent===null?console.error("TransformControls: The attached 3D object must be a part of the scene graph."):this.object.parent.matrixWorld.decompose(this._parentPosition,this._parentQuaternion,this._parentScale),this.object.matrixWorld.decompose(this.worldPosition,this.worldQuaternion,this._worldScale),this._parentQuaternionInv.copy(this._parentQuaternion).invert(),this._worldQuaternionInv.copy(this.worldQuaternion).invert()),this.camera.updateMatrixWorld(),this.camera.matrixWorld.decompose(this.cameraPosition,this.cameraQuaternion,this._cameraScale),this.camera.isOrthographicCamera?this.camera.getWorldDirection(this.eye).negate():this.eye.copy(this.cameraPosition).sub(this.worldPosition).normalize(),super.updateMatrixWorld(e)}pointerHover(e){if(this.object===void 0||this.dragging===!0)return;e!==null&&ks.setFromCamera(e,this.camera);const t=_u(this._gizmo.picker[this.mode],ks);t?this.axis=t.object.name:this.axis=null}pointerDown(e){if(!(this.object===void 0||this.dragging===!0||e!=null&&e.button!==0)&&this.axis!==null){e!==null&&ks.setFromCamera(e,this.camera);const t=_u(this._plane,ks,!0);t&&(this.object.updateMatrixWorld(),this.object.parent.updateMatrixWorld(),this._positionStart.copy(this.object.position),this._quaternionStart.copy(this.object.quaternion),this._scaleStart.copy(this.object.scale),this.object.matrixWorld.decompose(this.worldPositionStart,this.worldQuaternionStart,this._worldScaleStart),this.pointStart.copy(t.point).sub(this.worldPositionStart)),this.dragging=!0,fg.mode=this.mode,this.dispatchEvent(fg)}}pointerMove(e){const t=this.axis,i=this.mode,n=this.object;let s=this.space;if(i==="scale"?s="local":(t==="E"||t==="XYZE"||t==="XYZ")&&(s="world"),n===void 0||t===null||this.dragging===!1||e!==null&&e.button!==-1)return;e!==null&&ks.setFromCamera(e,this.camera);const o=_u(this._plane,ks,!0);if(o){if(this.pointEnd.copy(o.point).sub(this.worldPositionStart),i==="translate")this._offset.copy(this.pointEnd).sub(this.pointStart),s==="local"&&t!=="XYZ"&&this._offset.applyQuaternion(this._worldQuaternionInv),t.indexOf("X")===-1&&(this._offset.x=0),t.indexOf("Y")===-1&&(this._offset.y=0),t.indexOf("Z")===-1&&(this._offset.z=0),s==="local"&&t!=="XYZ"?this._offset.applyQuaternion(this._quaternionStart).divide(this._parentScale):this._offset.applyQuaternion(this._parentQuaternionInv).divide(this._parentScale),n.position.copy(this._offset).add(this._positionStart),this.translationSnap&&(s==="local"&&(n.position.applyQuaternion(Ct.copy(this._quaternionStart).invert()),t.search("X")!==-1&&(n.position.x=Math.round(n.position.x/this.translationSnap)*this.translationSnap),t.search("Y")!==-1&&(n.position.y=Math.round(n.position.y/this.translationSnap)*this.translationSnap),t.search("Z")!==-1&&(n.position.z=Math.round(n.position.z/this.translationSnap)*this.translationSnap),n.position.applyQuaternion(this._quaternionStart)),s==="world"&&(n.parent&&n.position.add(ui.setFromMatrixPosition(n.parent.matrixWorld)),t.search("X")!==-1&&(n.position.x=Math.round(n.position.x/this.translationSnap)*this.translationSnap),t.search("Y")!==-1&&(n.position.y=Math.round(n.position.y/this.translationSnap)*this.translationSnap),t.search("Z")!==-1&&(n.position.z=Math.round(n.position.z/this.translationSnap)*this.translationSnap),n.parent&&n.position.sub(ui.setFromMatrixPosition(n.parent.matrixWorld))));else if(i==="scale"){if(t.search("XYZ")!==-1){let a=this.pointEnd.length()/this.pointStart.length();this.pointEnd.dot(this.pointStart)<0&&(a*=-1),fs.set(a,a,a)}else ui.copy(this.pointStart),fs.copy(this.pointEnd),ui.applyQuaternion(this._worldQuaternionInv),fs.applyQuaternion(this._worldQuaternionInv),fs.divide(ui),t.search("X")===-1&&(fs.x=1),t.search("Y")===-1&&(fs.y=1),t.search("Z")===-1&&(fs.z=1);n.scale.copy(this._scaleStart).multiply(fs),this.scaleSnap&&(t.search("X")!==-1&&(n.scale.x=Math.round(n.scale.x/this.scaleSnap)*this.scaleSnap||this.scaleSnap),t.search("Y")!==-1&&(n.scale.y=Math.round(n.scale.y/this.scaleSnap)*this.scaleSnap||this.scaleSnap),t.search("Z")!==-1&&(n.scale.z=Math.round(n.scale.z/this.scaleSnap)*this.scaleSnap||this.scaleSnap))}else if(i==="rotate"){this._offset.copy(this.pointEnd).sub(this.pointStart);const a=20/this.worldPosition.distanceTo(ui.setFromMatrixPosition(this.camera.matrixWorld));let l=!1;t==="XYZE"?(this.rotationAxis.copy(this._offset).cross(this.eye).normalize(),this.rotationAngle=this._offset.dot(ui.copy(this.rotationAxis).cross(this.eye))*a):(t==="X"||t==="Y"||t==="Z")&&(this.rotationAxis.copy(dg[t]),ui.copy(dg[t]),s==="local"&&ui.applyQuaternion(this.worldQuaternion),ui.cross(this.eye),ui.length()===0?l=!0:this.rotationAngle=this._offset.dot(ui.normalize())*a),(t==="E"||l)&&(this.rotationAxis.copy(this.eye),this.rotationAngle=this.pointEnd.angleTo(this.pointStart),this._startNorm.copy(this.pointStart).normalize(),this._endNorm.copy(this.pointEnd).normalize(),this.rotationAngle*=this._endNorm.cross(this._startNorm).dot(this.eye)<0?1:-1),this.rotationSnap&&(this.rotationAngle=Math.round(this.rotationAngle/this.rotationSnap)*this.rotationSnap),s==="local"&&t!=="E"&&t!=="XYZE"?(n.quaternion.copy(this._quaternionStart),n.quaternion.multiply(Ct.setFromAxisAngle(this.rotationAxis,this.rotationAngle)).normalize()):(this.rotationAxis.applyQuaternion(this._parentQuaternionInv),n.quaternion.copy(Ct.setFromAxisAngle(this.rotationAxis,this.rotationAngle)),n.quaternion.multiply(this._quaternionStart).normalize())}this.dispatchEvent(Iu),this.dispatchEvent(mg)}}pointerUp(e){e!==null&&e.button!==0||(this.dragging&&this.axis!==null&&(pg.mode=this.mode,this.dispatchEvent(pg)),this.dragging=!1,this.axis=null)}dispose(){this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerHover),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.traverse(function(e){e.geometry&&e.geometry.dispose(),e.material&&e.material.dispose()})}attach(e){return this.object=e,this.visible=!0,this}detach(){return this.object=void 0,this.visible=!1,this.axis=null,this}reset(){this.enabled&&this.dragging&&(this.object.position.copy(this._positionStart),this.object.quaternion.copy(this._quaternionStart),this.object.scale.copy(this._scaleStart),this.dispatchEvent(Iu),this.dispatchEvent(mg),this.pointStart.copy(this.pointEnd))}getRaycaster(){return ks}getMode(){return this.mode}setMode(e){this.mode=e}setTranslationSnap(e){this.translationSnap=e}setRotationSnap(e){this.rotationSnap=e}setScaleSnap(e){this.scaleSnap=e}setSize(e){this.size=e}setSpace(e){this.space=e}}function oR(r){if(this.domElement.ownerDocument.pointerLockElement)return{x:0,y:0,button:r.button};{const e=this.domElement.getBoundingClientRect();return{x:(r.clientX-e.left)/e.width*2-1,y:-(r.clientY-e.top)/e.height*2+1,button:r.button}}}function aR(r){if(this.enabled)switch(r.pointerType){case"mouse":case"pen":this.pointerHover(this._getPointer(r));break}}function lR(r){this.enabled&&(document.pointerLockElement||this.domElement.setPointerCapture(r.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.pointerHover(this._getPointer(r)),this.pointerDown(this._getPointer(r)))}function cR(r){this.enabled&&this.pointerMove(this._getPointer(r))}function hR(r){this.enabled&&(this.domElement.releasePointerCapture(r.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.pointerUp(this._getPointer(r)))}function _u(r,e,t){const i=e.intersectObject(r,!0);for(let n=0;n<i.length;n++)if(i[n].object.visible||t)return i[n];return!1}const $l=new wo,dt=new F(0,1,0),gg=new F(0,0,0),Eg=new fe,ec=new si,Ec=new si,In=new F,Ig=new fe,la=new F(1,0,0),Zs=new F(0,1,0),ca=new F(0,0,1),tc=new F,na=new F,sa=new F;class uR extends St{constructor(){super(),this.isTransformControlsGizmo=!0,this.type="TransformControlsGizmo";const e=new Ti({depthTest:!1,depthWrite:!1,fog:!1,toneMapped:!1,transparent:!0}),t=new pn({depthTest:!1,depthWrite:!1,fog:!1,toneMapped:!1,transparent:!0}),i=e.clone();i.opacity=.15;const n=t.clone();n.opacity=.5;const s=e.clone();s.color.setHex(16711680);const o=e.clone();o.color.setHex(65280);const a=e.clone();a.color.setHex(255);const l=e.clone();l.color.setHex(16711680),l.opacity=.5;const c=e.clone();c.color.setHex(65280),c.opacity=.5;const h=e.clone();h.color.setHex(255),h.opacity=.5;const d=e.clone();d.opacity=.25;const u=e.clone();u.color.setHex(16776960),u.opacity=.25,e.clone().color.setHex(16776960);const f=e.clone();f.color.setHex(7895160);const m=new ti(0,.04,.1,12);m.translate(0,.05,0);const E=new wt(.08,.08,.08);E.translate(0,.04,0);const g=new Ve;g.setAttribute("position",new ht([0,0,0,1,0,0],3));const p=new ti(.0075,.0075,.5,3);p.translate(0,.25,0);function _(C,U){const B=new Qs(C,.0075,3,64,U*Math.PI*2);return B.rotateY(Math.PI/2),B.rotateX(Math.PI/2),B}function T(){const C=new Ve;return C.setAttribute("position",new ht([0,0,0,1,1,1],3)),C}const I={X:[[new ge(m,s),[.5,0,0],[0,0,-Math.PI/2]],[new ge(m,s),[-.5,0,0],[0,0,Math.PI/2]],[new ge(p,s),[0,0,0],[0,0,-Math.PI/2]]],Y:[[new ge(m,o),[0,.5,0]],[new ge(m,o),[0,-.5,0],[Math.PI,0,0]],[new ge(p,o)]],Z:[[new ge(m,a),[0,0,.5],[Math.PI/2,0,0]],[new ge(m,a),[0,0,-.5],[-Math.PI/2,0,0]],[new ge(p,a),null,[Math.PI/2,0,0]]],XYZ:[[new ge(new oo(.1,0),d.clone()),[0,0,0]]],XY:[[new ge(new wt(.15,.15,.01),h.clone()),[.15,.15,0]]],YZ:[[new ge(new wt(.15,.15,.01),l.clone()),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new ge(new wt(.15,.15,.01),c.clone()),[.15,0,.15],[-Math.PI/2,0,0]]]},v={X:[[new ge(new ti(.2,0,.6,4),i),[.3,0,0],[0,0,-Math.PI/2]],[new ge(new ti(.2,0,.6,4),i),[-.3,0,0],[0,0,Math.PI/2]]],Y:[[new ge(new ti(.2,0,.6,4),i),[0,.3,0]],[new ge(new ti(.2,0,.6,4),i),[0,-.3,0],[0,0,Math.PI]]],Z:[[new ge(new ti(.2,0,.6,4),i),[0,0,.3],[Math.PI/2,0,0]],[new ge(new ti(.2,0,.6,4),i),[0,0,-.3],[-Math.PI/2,0,0]]],XYZ:[[new ge(new oo(.2,0),i)]],XY:[[new ge(new wt(.2,.2,.01),i),[.15,.15,0]]],YZ:[[new ge(new wt(.2,.2,.01),i),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new ge(new wt(.2,.2,.01),i),[.15,0,.15],[-Math.PI/2,0,0]]]},b={START:[[new ge(new oo(.01,2),n),null,null,null,"helper"]],END:[[new ge(new oo(.01,2),n),null,null,null,"helper"]],DELTA:[[new Dt(T(),n),null,null,null,"helper"]],X:[[new Dt(g,n.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]],Y:[[new Dt(g,n.clone()),[0,-1e3,0],[0,0,Math.PI/2],[1e6,1,1],"helper"]],Z:[[new Dt(g,n.clone()),[0,0,-1e3],[0,-Math.PI/2,0],[1e6,1,1],"helper"]]},x={XYZE:[[new ge(_(.5,1),f),null,[0,Math.PI/2,0]]],X:[[new ge(_(.5,.5),s)]],Y:[[new ge(_(.5,.5),o),null,[0,0,-Math.PI/2]]],Z:[[new ge(_(.5,.5),a),null,[0,Math.PI/2,0]]],E:[[new ge(_(.75,1),u),null,[0,Math.PI/2,0]]]},A={AXIS:[[new Dt(g,n.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]]},y={XYZE:[[new ge(new ef(.25,10,8),i)]],X:[[new ge(new Qs(.5,.1,4,24),i),[0,0,0],[0,-Math.PI/2,-Math.PI/2]]],Y:[[new ge(new Qs(.5,.1,4,24),i),[0,0,0],[Math.PI/2,0,0]]],Z:[[new ge(new Qs(.5,.1,4,24),i),[0,0,0],[0,0,-Math.PI/2]]],E:[[new ge(new Qs(.75,.1,2,24),i)]]},S={X:[[new ge(E,s),[.5,0,0],[0,0,-Math.PI/2]],[new ge(p,s),[0,0,0],[0,0,-Math.PI/2]],[new ge(E,s),[-.5,0,0],[0,0,Math.PI/2]]],Y:[[new ge(E,o),[0,.5,0]],[new ge(p,o)],[new ge(E,o),[0,-.5,0],[0,0,Math.PI]]],Z:[[new ge(E,a),[0,0,.5],[Math.PI/2,0,0]],[new ge(p,a),[0,0,0],[Math.PI/2,0,0]],[new ge(E,a),[0,0,-.5],[-Math.PI/2,0,0]]],XY:[[new ge(new wt(.15,.15,.01),h),[.15,.15,0]]],YZ:[[new ge(new wt(.15,.15,.01),l),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new ge(new wt(.15,.15,.01),c),[.15,0,.15],[-Math.PI/2,0,0]]],XYZ:[[new ge(new wt(.1,.1,.1),d.clone())]]},O={X:[[new ge(new ti(.2,0,.6,4),i),[.3,0,0],[0,0,-Math.PI/2]],[new ge(new ti(.2,0,.6,4),i),[-.3,0,0],[0,0,Math.PI/2]]],Y:[[new ge(new ti(.2,0,.6,4),i),[0,.3,0]],[new ge(new ti(.2,0,.6,4),i),[0,-.3,0],[0,0,Math.PI]]],Z:[[new ge(new ti(.2,0,.6,4),i),[0,0,.3],[Math.PI/2,0,0]],[new ge(new ti(.2,0,.6,4),i),[0,0,-.3],[-Math.PI/2,0,0]]],XY:[[new ge(new wt(.2,.2,.01),i),[.15,.15,0]]],YZ:[[new ge(new wt(.2,.2,.01),i),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new ge(new wt(.2,.2,.01),i),[.15,0,.15],[-Math.PI/2,0,0]]],XYZ:[[new ge(new wt(.2,.2,.2),i),[0,0,0]]]},w={X:[[new Dt(g,n.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]],Y:[[new Dt(g,n.clone()),[0,-1e3,0],[0,0,Math.PI/2],[1e6,1,1],"helper"]],Z:[[new Dt(g,n.clone()),[0,0,-1e3],[0,-Math.PI/2,0],[1e6,1,1],"helper"]]};function N(C){const U=new St;for(const B in C)for(let V=C[B].length;V--;){const j=C[B][V][0].clone(),G=C[B][V][1],se=C[B][V][2],W=C[B][V][3],Y=C[B][V][4];j.name=B,j.tag=Y,G&&j.position.set(G[0],G[1],G[2]),se&&j.rotation.set(se[0],se[1],se[2]),W&&j.scale.set(W[0],W[1],W[2]),j.updateMatrix();const q=j.geometry.clone();q.applyMatrix4(j.matrix),j.geometry=q,j.renderOrder=1/0,j.position.set(0,0,0),j.rotation.set(0,0,0),j.scale.set(1,1,1),U.add(j)}return U}this.gizmo={},this.picker={},this.helper={},this.add(this.gizmo.translate=N(I)),this.add(this.gizmo.rotate=N(x)),this.add(this.gizmo.scale=N(S)),this.add(this.picker.translate=N(v)),this.add(this.picker.rotate=N(y)),this.add(this.picker.scale=N(O)),this.add(this.helper.translate=N(b)),this.add(this.helper.rotate=N(A)),this.add(this.helper.scale=N(w)),this.picker.translate.visible=!1,this.picker.rotate.visible=!1,this.picker.scale.visible=!1}updateMatrixWorld(e){const t=(this.mode==="scale"?"local":this.space)==="local"?this.worldQuaternion:Ec;this.gizmo.translate.visible=this.mode==="translate",this.gizmo.rotate.visible=this.mode==="rotate",this.gizmo.scale.visible=this.mode==="scale",this.helper.translate.visible=this.mode==="translate",this.helper.rotate.visible=this.mode==="rotate",this.helper.scale.visible=this.mode==="scale";let i=[];i=i.concat(this.picker[this.mode].children),i=i.concat(this.gizmo[this.mode].children),i=i.concat(this.helper[this.mode].children);for(let n=0;n<i.length;n++){const s=i[n];s.visible=!0,s.rotation.set(0,0,0),s.position.copy(this.worldPosition);let o;if(this.camera.isOrthographicCamera?o=(this.camera.top-this.camera.bottom)/this.camera.zoom:o=this.worldPosition.distanceTo(this.cameraPosition)*Math.min(1.9*Math.tan(Math.PI*this.camera.fov/360)/this.camera.zoom,7),s.scale.set(1,1,1).multiplyScalar(o*this.size/4),s.tag==="helper"){s.visible=!1,s.name==="AXIS"?(s.visible=!!this.axis,this.axis==="X"&&(Ct.setFromEuler($l.set(0,0,0)),s.quaternion.copy(t).multiply(Ct),Math.abs(dt.copy(la).applyQuaternion(t).dot(this.eye))>.9&&(s.visible=!1)),this.axis==="Y"&&(Ct.setFromEuler($l.set(0,0,Math.PI/2)),s.quaternion.copy(t).multiply(Ct),Math.abs(dt.copy(Zs).applyQuaternion(t).dot(this.eye))>.9&&(s.visible=!1)),this.axis==="Z"&&(Ct.setFromEuler($l.set(0,Math.PI/2,0)),s.quaternion.copy(t).multiply(Ct),Math.abs(dt.copy(ca).applyQuaternion(t).dot(this.eye))>.9&&(s.visible=!1)),this.axis==="XYZE"&&(Ct.setFromEuler($l.set(0,Math.PI/2,0)),dt.copy(this.rotationAxis),s.quaternion.setFromRotationMatrix(Eg.lookAt(gg,dt,Zs)),s.quaternion.multiply(Ct),s.visible=this.dragging),this.axis==="E"&&(s.visible=!1)):s.name==="START"?(s.position.copy(this.worldPositionStart),s.visible=this.dragging):s.name==="END"?(s.position.copy(this.worldPosition),s.visible=this.dragging):s.name==="DELTA"?(s.position.copy(this.worldPositionStart),s.quaternion.copy(this.worldQuaternionStart),ui.set(1e-10,1e-10,1e-10).add(this.worldPositionStart).sub(this.worldPosition).multiplyScalar(-1),ui.applyQuaternion(this.worldQuaternionStart.clone().invert()),s.scale.copy(ui),s.visible=this.dragging):(s.quaternion.copy(t),this.dragging?s.position.copy(this.worldPositionStart):s.position.copy(this.worldPosition),this.axis&&(s.visible=this.axis.search(s.name)!==-1));continue}s.quaternion.copy(t),this.mode==="translate"||this.mode==="scale"?(s.name==="X"&&Math.abs(dt.copy(la).applyQuaternion(t).dot(this.eye))>.99&&(s.scale.set(1e-10,1e-10,1e-10),s.visible=!1),s.name==="Y"&&Math.abs(dt.copy(Zs).applyQuaternion(t).dot(this.eye))>.99&&(s.scale.set(1e-10,1e-10,1e-10),s.visible=!1),s.name==="Z"&&Math.abs(dt.copy(ca).applyQuaternion(t).dot(this.eye))>.99&&(s.scale.set(1e-10,1e-10,1e-10),s.visible=!1),s.name==="XY"&&Math.abs(dt.copy(ca).applyQuaternion(t).dot(this.eye))<.2&&(s.scale.set(1e-10,1e-10,1e-10),s.visible=!1),s.name==="YZ"&&Math.abs(dt.copy(la).applyQuaternion(t).dot(this.eye))<.2&&(s.scale.set(1e-10,1e-10,1e-10),s.visible=!1),s.name==="XZ"&&Math.abs(dt.copy(Zs).applyQuaternion(t).dot(this.eye))<.2&&(s.scale.set(1e-10,1e-10,1e-10),s.visible=!1)):this.mode==="rotate"&&(ec.copy(t),dt.copy(this.eye).applyQuaternion(Ct.copy(t).invert()),s.name.search("E")!==-1&&s.quaternion.setFromRotationMatrix(Eg.lookAt(this.eye,gg,Zs)),s.name==="X"&&(Ct.setFromAxisAngle(la,Math.atan2(-dt.y,dt.z)),Ct.multiplyQuaternions(ec,Ct),s.quaternion.copy(Ct)),s.name==="Y"&&(Ct.setFromAxisAngle(Zs,Math.atan2(dt.x,dt.z)),Ct.multiplyQuaternions(ec,Ct),s.quaternion.copy(Ct)),s.name==="Z"&&(Ct.setFromAxisAngle(ca,Math.atan2(dt.y,dt.x)),Ct.multiplyQuaternions(ec,Ct),s.quaternion.copy(Ct))),s.visible=s.visible&&(s.name.indexOf("X")===-1||this.showX),s.visible=s.visible&&(s.name.indexOf("Y")===-1||this.showY),s.visible=s.visible&&(s.name.indexOf("Z")===-1||this.showZ),s.visible=s.visible&&(s.name.indexOf("E")===-1||this.showX&&this.showY&&this.showZ),s.material._color=s.material._color||s.material.color.clone(),s.material._opacity=s.material._opacity||s.material.opacity,s.material.color.copy(s.material._color),s.material.opacity=s.material._opacity,this.enabled&&this.axis&&(s.name===this.axis||this.axis.split("").some(function(a){return s.name===a}))&&(s.material.color.setHex(16776960),s.material.opacity=1)}super.updateMatrixWorld(e)}}class dR extends ge{constructor(){super(new ur(1e5,1e5,2,2),new Ti({visible:!1,wireframe:!0,side:_i,transparent:!0,opacity:.1,toneMapped:!1})),this.isTransformControlsPlane=!0,this.type="TransformControlsPlane"}updateMatrixWorld(e){let t=this.space;switch(this.position.copy(this.worldPosition),this.mode==="scale"&&(t="local"),tc.copy(la).applyQuaternion(t==="local"?this.worldQuaternion:Ec),na.copy(Zs).applyQuaternion(t==="local"?this.worldQuaternion:Ec),sa.copy(ca).applyQuaternion(t==="local"?this.worldQuaternion:Ec),dt.copy(na),this.mode){case"translate":case"scale":switch(this.axis){case"X":dt.copy(this.eye).cross(tc),In.copy(tc).cross(dt);break;case"Y":dt.copy(this.eye).cross(na),In.copy(na).cross(dt);break;case"Z":dt.copy(this.eye).cross(sa),In.copy(sa).cross(dt);break;case"XY":In.copy(sa);break;case"YZ":In.copy(tc);break;case"XZ":dt.copy(sa),In.copy(na);break;case"XYZ":case"E":In.set(0,0,0);break}break;case"rotate":default:In.set(0,0,0)}In.length()===0?this.quaternion.copy(this.cameraQuaternion):(Ig.lookAt(ui.set(0,0,0),In,dt),this.quaternion.setFromRotationMatrix(Ig)),super.updateMatrixWorld(e)}}class Qc{constructor(e,t,i,n,s,o=5,a=!0){if(R(this,"onDraggingStarted",new oe),R(this,"onDraggingEnded",new oe),R(this,"onDisposed",new oe),R(this,"normal"),R(this,"origin"),R(this,"three",new Kt),R(this,"components"),R(this,"world"),R(this,"type","default"),R(this,"_helper"),R(this,"_visible",!0),R(this,"_enabled",!0),R(this,"_controlsActive",!1),R(this,"_arrowBoundBox",new ge),R(this,"_planeMesh"),R(this,"_controls"),R(this,"_hiddenMaterial",new Ti({visible:!1})),R(this,"update",()=>{this._enabled&&this.three.setFromNormalAndCoplanarPoint(this.normal,this._helper.position)}),R(this,"changeDrag",l=>{this._visible=!l.value,this.preventCameraMovement(),this.notifyDraggingChanged(l)}),this.components=e,this.world=t,!t.renderer)throw new Error("The given world must have a renderer!");this.normal=n,this.origin=i,t.renderer.setPlane(!0,this.three),this._planeMesh=Qc.newPlaneMesh(o,s),this._helper=this.newHelper(),this._controls=this.newTransformControls(),this.three.setFromNormalAndCoplanarPoint(n,i),a&&this.toggleControls(!0)}get enabled(){return this._enabled}set enabled(e){if(!this.world.isDisposing){if(!this.world.renderer)throw new Error("No renderer found for clipping plane!");this._enabled=e,this.world.renderer.setPlane(e,this.three)}}get visible(){return this._visible}set visible(e){this._visible=e,this._controls.visible=e,this._helper.visible=e,this.toggleControls(e)}get meshes(){return[this._planeMesh,this._arrowBoundBox]}get planeMaterial(){return this._planeMesh.material}set planeMaterial(e){this._planeMesh.material=e}get size(){return this._planeMesh.scale.x}set size(e){this._planeMesh.scale.set(e,e,e)}get helper(){return this._helper}setFromNormalAndCoplanarPoint(e,t){this.reset(),this.normal.equals(e)||(this.normal.copy(e),this._helper.lookAt(e)),this.origin.copy(t),this._helper.position.copy(t),this._helper.updateMatrix(),this.update()}dispose(){this._enabled=!1,this.onDraggingStarted.reset(),this.onDraggingEnded.reset(),this._helper.removeFromParent(),this.world.renderer&&this.world.renderer.setPlane(!1,this.three),this._arrowBoundBox.removeFromParent(),this._arrowBoundBox.geometry.dispose(),this._planeMesh.geometry.dispose(),this._controls.removeFromParent(),this._controls.dispose(),this.onDisposed.trigger(),this.onDisposed.reset()}reset(){const e=new F(1,0,0),t=new F;this.normal.equals(e)||(this.normal.copy(e),this._helper.lookAt(e)),this.origin.copy(t),this._helper.position.copy(t),this._helper.updateMatrix()}toggleControls(e){if(e){if(this._controlsActive)return;this._controls.addEventListener("change",this.update),this._controls.addEventListener("dragging-changed",this.changeDrag)}else this._controls.removeEventListener("change",this.update),this._controls.removeEventListener("dragging-changed",this.changeDrag);this._controlsActive=e}newTransformControls(){if(!this.world.renderer)throw new Error("No renderer found for clipping plane!");const e=this.world.camera.three,t=this.world.renderer.three.domElement,i=new rR(e,t);return this.initializeControls(i),this.world.scene.three.add(i),i}initializeControls(e){e.attach(this._helper),e.showX=!1,e.showY=!1,e.setSpace("local"),this.createArrowBoundingBox(),e.children[0].children[0].add(this._arrowBoundBox)}createArrowBoundingBox(){this._arrowBoundBox.geometry=new ti(.18,.18,1.2),this._arrowBoundBox.material=this._hiddenMaterial,this._arrowBoundBox.rotateX(Math.PI/2),this._arrowBoundBox.updateMatrix(),this._arrowBoundBox.geometry.applyMatrix4(this._arrowBoundBox.matrix)}notifyDraggingChanged(e){e.value?this.onDraggingStarted.trigger():this.onDraggingEnded.trigger()}preventCameraMovement(){this.world.camera.enabled=this._visible}newHelper(){const e=new St;return e.lookAt(this.normal),e.position.copy(this.origin),this._planeMesh.position.z+=.01,e.add(this._planeMesh),this.world.scene.three.add(e),e}static newPlaneMesh(e,t){const i=new ur(1),n=new ge(i,t);return n.scale.set(e,e,e),n}}class fR extends Fo{constructor(){super(...arguments),R(this,"_config",{enabled:{value:!0,type:"Boolean"},visible:{value:!0,type:"Boolean"},color:{value:new Fe,type:"Color"},opacity:{type:"Number",interpolable:!0,value:1,min:0,max:1},size:{type:"Number",interpolable:!0,value:2,min:0,max:100}})}get enabled(){return this._config.enabled.value}set enabled(e){this._config.enabled.value=e,this._component.enabled=e}get visible(){return this._config.visible.value}set visible(e){this._config.visible.value=e,this._component.visible=e}get color(){return this._config.color.value}set color(e){this._config.color.value=e,this._component.material.color.copy(e)}get opacity(){return this._config.opacity.value}set opacity(e){this._config.opacity.value=e,this._component.material.opacity=e}get size(){return this._config.size.value}set size(e){this._config.size.value=e,this._component.size=e}}const aI=class Ic extends We{constructor(e){super(e),R(this,"onSetup",new oe),R(this,"onBeforeDrag",new oe),R(this,"onAfterDrag",new oe),R(this,"onBeforeCreate",new oe),R(this,"onBeforeCancel",new oe),R(this,"onAfterCancel",new oe),R(this,"onBeforeDelete",new oe),R(this,"onAfterCreate",new oe),R(this,"onAfterDelete",new oe),R(this,"onDisposed",new oe),R(this,"isSetup",!1),R(this,"orthogonalY",!1),R(this,"toleranceOrthogonalY",.7),R(this,"Type",Qc),R(this,"list",[]),R(this,"config",new fR(this,this.components,"Clipper",Ic.uuid)),R(this,"_defaultConfig",{color:new Fe(12255487),opacity:.2,size:2}),R(this,"_material",new Ti({color:12255487,side:_i,transparent:!0,opacity:.2})),R(this,"_size",5),R(this,"_enabled",!1),R(this,"_visible",!0),R(this,"_onStartDragging",()=>{this.onBeforeDrag.trigger()}),R(this,"_onEndDragging",()=>{this.onAfterDrag.trigger()}),this.components.add(Ic.uuid,this)}get enabled(){return this._enabled}set enabled(e){this._enabled=e;for(const t of this.list)t.enabled=e;this.updateMaterialsAndPlanes()}get visible(){return this._visible}set visible(e){this._visible=e;for(const t of this.list)t.visible=e}get material(){return this._material}set material(e){this._material=e;for(const t of this.list)t.planeMaterial=e}get size(){return this._size}set size(e){this._size=e;for(const t of this.list)t.size=e}dispose(){this._enabled=!1,this.components.get(Kc).list.delete(this.config.uuid);for(const e of this.list)e.dispose();this.list.length=0,this._material.dispose(),this.onBeforeCreate.reset(),this.onBeforeCancel.reset(),this.onBeforeDelete.reset(),this.onBeforeDrag.reset(),this.onAfterCreate.reset(),this.onAfterCancel.reset(),this.onAfterDelete.reset(),this.onAfterDrag.reset(),this.onDisposed.trigger(Ic.uuid),this.onDisposed.reset()}create(e){const t=this.components.get(Ji).get(e).castRay();return t?this.createPlaneFromIntersection(e,t):null}createFromNormalAndCoplanarPoint(e,t,i){const n=this.newPlane(e,i,t);return this.updateMaterialsAndPlanes(),n}delete(e,t){t||(t=this.pickPlane(e)),t&&this.deletePlane(t)}deleteAll(e){const t=[...this.list];for(const i of t)if(!e||e.has(i.type)){this.delete(i.world,i);const n=this.list.indexOf(i);n!==-1&&this.list.splice(n,1)}}setup(e){const t={...this._defaultConfig,...e};this.config.color=t.color,this.config.opacity=t.opacity,this.config.size=t.size,this.isSetup=!0,this.onSetup.trigger()}deletePlane(e){const t=this.list.indexOf(e);if(t!==-1){if(this.list.splice(t,1),!e.world.renderer)throw new Error("Renderer not found for this plane's world!");e.world.renderer.setPlane(!1,e.three),e.dispose(),this.updateMaterialsAndPlanes(),this.onAfterDelete.trigger(e)}}pickPlane(e){const t=this.components.get(Ji).get(e),i=this.getAllPlaneMeshes(),n=t.castRay(i);if(n){const s=n.object;return this.list.find(o=>o.meshes.includes(s))}}getAllPlaneMeshes(){const e=[];for(const t of this.list)e.push(...t.meshes);return e}createPlaneFromIntersection(e,t){var i;if(!e.renderer)throw new Error("The given world must have a renderer!");const n=t.point.distanceTo(new F(0,0,0)),s=(i=t.face)==null?void 0:i.normal;if(!n||!s)return null;const o=this.getWorldNormal(t,s),a=this.newPlane(e,t.point,o.negate());return a.visible=this._visible,a.size=this._size,e.renderer.setPlane(!0,a.three),this.updateMaterialsAndPlanes(),a}getWorldNormal(e,t){const i=e.object;let n=e.object.matrixWorld.clone();if(i instanceof Bi&&e.instanceId!==void 0){const a=new fe;i.getMatrixAt(e.instanceId,a),n=a.multiply(n)}const s=new Xe().getNormalMatrix(n),o=t.clone().applyMatrix3(s).normalize();return this.normalizePlaneDirectionY(o),o}normalizePlaneDirectionY(e){this.orthogonalY&&(e.y>this.toleranceOrthogonalY&&(e.x=0,e.y=1,e.z=0),e.y<-this.toleranceOrthogonalY&&(e.x=0,e.y=-1,e.z=0))}newPlane(e,t,i){const n=new this.Type(this.components,e,t,i,this._material);return n.onDraggingStarted.add(this._onStartDragging),n.onDraggingEnded.add(this._onEndDragging),this.list.push(n),this.onAfterCreate.trigger(n),n}updateMaterialsAndPlanes(){const e=this.components.get(tI);for(const[t,i]of e.list){if(!i.renderer)continue;i.renderer.updateClippingPlanes();const{clippingPlanes:n}=i.renderer;for(const s of i.meshes)if(s.material)if(Array.isArray(s.material))for(const o of s.material)o.clippingPlanes=n;else s.material.clippingPlanes=n}}};R(aI,"uuid","66290bc5-18c4-4cd1-9379-2e17a0617611");let bo=aI;class pR{constructor(e){R(this,"enabled",!1),R(this,"id","FirstPerson"),this.camera=e}set(e){if(this.enabled=e,e){if(this.camera.projection.current!=="Perspective"){this.camera.set("Orbit");return}this.setupFirstPersonCamera()}}setupFirstPersonCamera(){const e=this.camera.controls,t=new F;e.distance--,e.getPosition(t),e.minDistance=1,e.maxDistance=1,e.distance=1,e.moveTo(t.x,t.y,t.z),e.truckSpeed=50,e.mouseButtons.wheel=kt.ACTION.DOLLY,e.touches.two=kt.ACTION.TOUCH_ZOOM_TRUCK}}class mR{constructor(e){R(this,"enabled",!0),R(this,"id","Orbit"),this.camera=e,this.activateOrbitControls()}set(e){this.enabled=e,e&&this.activateOrbitControls()}activateOrbitControls(){const e=this.camera.controls;e.minDistance=1,e.maxDistance=300;const t=new F;e.getPosition(t);const i=t.length();e.distance=i,e.truckSpeed=2;const{rotation:n}=this.camera.three,s=new F(0,0,-1).applyEuler(n),o=t.addScaledVector(s,i);e.moveTo(o.x,o.y,o.z)}}class gR{constructor(e){R(this,"enabled",!1),R(this,"id","Plan"),R(this,"mouseAction1"),R(this,"mouseAction2"),R(this,"mouseInitialized",!1),R(this,"defaultAzimuthSpeed"),R(this,"defaultPolarSpeed"),this.camera=e,this.defaultAzimuthSpeed=e.controls.azimuthRotateSpeed,this.defaultPolarSpeed=e.controls.polarRotateSpeed}set(e){this.enabled=e;const t=this.camera.controls;t.azimuthRotateSpeed=e?0:this.defaultAzimuthSpeed,t.polarRotateSpeed=e?0:this.defaultPolarSpeed,this.mouseInitialized||(this.mouseAction1=t.touches.one,this.mouseAction2=t.touches.two,this.mouseInitialized=!0),e?(t.mouseButtons.left=kt.ACTION.TRUCK,t.touches.one=kt.ACTION.TOUCH_TRUCK,t.touches.two=kt.ACTION.TOUCH_ZOOM):(t.mouseButtons.left=kt.ACTION.ROTATE,t.touches.one=this.mouseAction1,t.touches.two=this.mouseAction2)}}class ER{constructor(e){R(this,"onChanged",new oe),R(this,"current","Perspective"),R(this,"camera"),R(this,"matchOrthoDistanceEnabled",!1),R(this,"_component"),R(this,"_previousDistance",-1),this._component=e,this.camera=e.three}async set(e){this.current!==e&&(e==="Orthographic"?this.setOrthoCamera():await this.setPerspectiveCamera(),this.onChanged.trigger(this.camera))}async toggle(){const e=this.current==="Perspective"?"Orthographic":"Perspective";await this.set(e)}setOrthoCamera(){if(this._component.mode===null||this._component.mode.id==="FirstPerson")return;this._previousDistance=this._component.controls.distance,this._component.controls.distance=200;const e=this.getPerspectiveDims();if(!e)return;const{width:t,height:i}=e;this.setupOrthoCamera(i,t),this.camera=this._component.threeOrtho,this.current="Orthographic"}getPerspectiveDims(){const e=this._component.currentWorld;if(!e||!e.renderer)return null;const t=new F;this._component.threePersp.getWorldDirection(t);const i=new F;this._component.controls.getTarget(i);const n=i.clone().sub(this._component.threePersp.position).dot(t),s=e.renderer.getSize(),o=s.x/s.y,a=this._component.threePersp,l=n*2*Math.atan(a.fov*(Math.PI/180)/2);return{width:l*o,height:l}}setupOrthoCamera(e,t){this._component.controls.mouseButtons.wheel=kt.ACTION.ZOOM,this._component.controls.mouseButtons.middle=kt.ACTION.ZOOM,this._component.controls.touches.two=kt.ACTION.TOUCH_ZOOM_TRUCK,this._component.controls.touches.three=kt.ACTION.TOUCH_ZOOM_TRUCK,this._component.controls.dollySpeed=5;const i=this._component.threePersp,n=this._component.threeOrtho;n.zoom=1,n.left=t/-2,n.right=t/2,n.top=e/2,n.bottom=e/-2,n.updateProjectionMatrix(),n.position.copy(i.position),n.quaternion.copy(i.quaternion),this._component.controls.camera=n}getDistance(){const e=this._component.threePersp,t=this._component.threeOrtho;return(t.top-t.bottom)/t.zoom/(2*Math.atan(e.fov*(Math.PI/180)/2))}async setPerspectiveCamera(){this._component.controls.mouseButtons.wheel=kt.ACTION.DOLLY,this._component.controls.mouseButtons.middle=kt.ACTION.DOLLY;const e=this._component.threePersp,t=this._component.threeOrtho;e.position.copy(t.position),e.quaternion.copy(t.quaternion),this._component.controls.mouseButtons.wheel=kt.ACTION.DOLLY,this._component.controls.touches.two=kt.ACTION.TOUCH_DOLLY_TRUCK,this._component.controls.touches.three=kt.ACTION.TOUCH_DOLLY_TRUCK,this._component.controls.dollySpeed=5,this.matchOrthoDistanceEnabled?this._component.controls.distance=this.getDistance():this._component.controls.distance=this._previousDistance,await this._component.controls.zoomTo(1),e.updateProjectionMatrix(),this._component.controls.camera=e,this.camera=e,this.current="Perspective"}}class IR extends xa{constructor(e){super(e),R(this,"projection"),R(this,"threeOrtho"),R(this,"threePersp"),R(this,"_userInputButtons",{}),R(this,"_frustumSize",50),R(this,"_navigationModes",new Map),R(this,"_mode",null),R(this,"previousSize",null),this.threePersp=this.three,this.threeOrtho=this.newOrthoCamera(),this.projection=new ER(this),this.onAspectUpdated.add(()=>{this.setOrthoPerspCameraAspect()}),this.projection.onChanged.add(t=>{this.three=t,this.updateAspect()}),this.onWorldChanged.add(({action:t})=>{t==="added"&&(this._navigationModes.clear(),this._navigationModes.set("Orbit",new mR(this)),this._navigationModes.set("FirstPerson",new pR(this)),this._navigationModes.set("Plan",new gR(this)),this._mode=this._navigationModes.get("Orbit"),this.mode.set(!0,{preventTargetAdjustment:!0}),this.currentWorld&&this.currentWorld.renderer&&(this.previousSize=this.currentWorld.renderer.getSize().clone()))})}get mode(){if(!this._mode)throw new Error("Mode not found, camera not initialized");return this._mode}dispose(){super.dispose(),this.threeOrtho.removeFromParent()}set(e){if(this.mode!==null&&this.mode.id!==e){if(this.mode.set(!1),!this._navigationModes.has(e))throw new Error("The specified mode does not exist!");this._mode=this._navigationModes.get(e),this.mode.set(!0)}}async fit(e,t=1.5){if(!this.enabled)return;const i=Number.MAX_VALUE,n=Number.MIN_VALUE,s=new F(i,i,i),o=new F(n,n,n);for(const u of e){const f=new je().setFromObject(u);f.min.x<s.x&&(s.x=f.min.x),f.min.y<s.y&&(s.y=f.min.y),f.min.z<s.z&&(s.z=f.min.z),f.max.x>o.x&&(o.x=f.max.x),f.max.y>o.y&&(o.y=f.max.y),f.max.z>o.z&&(o.z=f.max.z)}const a=new je(s,o),l=new F;a.getSize(l);const c=new F;a.getCenter(c);const h=Math.max(l.x,l.y,l.z)*t,d=new vi(c,h);await this.controls.fitToSphere(d,!0)}setUserInput(e){e?this.enableUserInput():this.disableUserInput()}disableUserInput(){this._userInputButtons.left=this.controls.mouseButtons.left,this._userInputButtons.right=this.controls.mouseButtons.right,this._userInputButtons.middle=this.controls.mouseButtons.middle,this._userInputButtons.wheel=this.controls.mouseButtons.wheel,this.controls.mouseButtons.left=0,this.controls.mouseButtons.right=0,this.controls.mouseButtons.middle=0,this.controls.mouseButtons.wheel=0}enableUserInput(){Object.keys(this._userInputButtons).length!==0&&(this.controls.mouseButtons.left=this._userInputButtons.left,this.controls.mouseButtons.right=this._userInputButtons.right,this.controls.mouseButtons.middle=this._userInputButtons.middle,this.controls.mouseButtons.wheel=this._userInputButtons.wheel)}newOrthoCamera(){const e=window.innerWidth/window.innerHeight;return new wn(this._frustumSize*e/-2,this._frustumSize*e/2,this._frustumSize/2,this._frustumSize/-2,.1,1e3)}setOrthoPerspCameraAspect(){if(!this.currentWorld||!this.currentWorld.renderer||!this.previousSize)return;const e=this.currentWorld.renderer.getSize(),t=this.threeOrtho.top,i=this.threeOrtho.right,n=e.y/this.previousSize.y,s=e.x/this.previousSize.x,o=t*n,a=i*s;this.threeOrtho.left=-a,this.threeOrtho.right=a,this.threeOrtho.top=o,this.threeOrtho.bottom=-o,this.threeOrtho.updateProjectionMatrix(),this.previousSize.copy(e)}}const _g=new Map([[Nc,{forRelated:"Decomposes",forRelating:"IsDecomposedBy"}],[Sd,{forRelated:"HasAssociations",forRelating:"AssociatedTo"}],[xd,{forRelated:"HasAssociations",forRelating:"ClassificationForObjects"}],[wd,{forRelated:"HasAssignments",forRelating:"IsGroupedBy"}],[Ma,{forRelated:"IsDefinedBy",forRelating:"DefinesOcurrence"}],[Ad,{forRelated:"IsTypedBy",forRelating:"Types"}],[Rd,{forRelated:"IsDefinedBy",forRelating:"Defines"}],[Dc,{forRelated:"ContainedInStructure",forRelating:"ContainsElements"}],[Md,{forRelated:"AssignedToFlowElement",forRelating:"HasControlElements"}],[Fd,{forRelated:"ConnectedFrom",forRelating:"ConnectedTo"}],[Pd,{forRelated:"HasAssignments",forRelating:"ReferencedBy"}],[Ld,{forRelated:"HasContext",forRelating:"Declares"}],[Od,{forRelated:"HasAssignments",forRelating:"Controls"}],[Nd,{forRelated:"Nests",forRelating:"IsNestedBy"}],[Dd,{forRelated:"HasAssociations",forRelating:"DocumentRefForObjects"}]]),Fc={950732822:"IFCURIREFERENCE",4075327185:"IFCTIME",1209108979:"IFCTEMPERATURERATEOFCHANGEMEASURE",3457685358:"IFCSOUNDPRESSURELEVELMEASURE",4157543285:"IFCSOUNDPOWERLEVELMEASURE",2798247006:"IFCPROPERTYSETDEFINITIONSET",1790229001:"IFCPOSITIVEINTEGER",525895558:"IFCNONNEGATIVELENGTHMEASURE",1774176899:"IFCLINEINDEX",1275358634:"IFCLANGUAGEID",2541165894:"IFCDURATION",3701338814:"IFCDAYINWEEKNUMBER",2195413836:"IFCDATETIME",937566702:"IFCDATE",1683019596:"IFCCARDINALPOINTREFERENCE",2314439260:"IFCBINARY",1500781891:"IFCAREADENSITYMEASURE",3683503648:"IFCARCINDEX",4065007721:"IFCYEARNUMBER",1718600412:"IFCWARPINGMOMENTMEASURE",51269191:"IFCWARPINGCONSTANTMEASURE",2593997549:"IFCVOLUMETRICFLOWRATEMEASURE",3458127941:"IFCVOLUMEMEASURE",3345633955:"IFCVAPORPERMEABILITYMEASURE",1278329552:"IFCTORQUEMEASURE",2591213694:"IFCTIMESTAMP",2726807636:"IFCTIMEMEASURE",743184107:"IFCTHERMODYNAMICTEMPERATUREMEASURE",2016195849:"IFCTHERMALTRANSMITTANCEMEASURE",857959152:"IFCTHERMALRESISTANCEMEASURE",2281867870:"IFCTHERMALEXPANSIONCOEFFICIENTMEASURE",2645777649:"IFCTHERMALCONDUCTIVITYMEASURE",232962298:"IFCTHERMALADMITTANCEMEASURE",296282323:"IFCTEXTTRANSFORMATION",603696268:"IFCTEXTFONTNAME",3490877962:"IFCTEXTDECORATION",1460886941:"IFCTEXTALIGNMENT",2801250643:"IFCTEXT",58845555:"IFCTEMPERATUREGRADIENTMEASURE",361837227:"IFCSPECULARROUGHNESS",2757832317:"IFCSPECULAREXPONENT",3477203348:"IFCSPECIFICHEATCAPACITYMEASURE",993287707:"IFCSOUNDPRESSUREMEASURE",846465480:"IFCSOUNDPOWERMEASURE",3471399674:"IFCSOLIDANGLEMEASURE",408310005:"IFCSHEARMODULUSMEASURE",2190458107:"IFCSECTIONALAREAINTEGRALMEASURE",3467162246:"IFCSECTIONMODULUSMEASURE",2766185779:"IFCSECONDINMINUTE",3211557302:"IFCROTATIONALSTIFFNESSMEASURE",1755127002:"IFCROTATIONALMASSMEASURE",2133746277:"IFCROTATIONALFREQUENCYMEASURE",200335297:"IFCREAL",96294661:"IFCRATIOMEASURE",3972513137:"IFCRADIOACTIVITYMEASURE",3665567075:"IFCPRESSUREMEASURE",2169031380:"IFCPRESENTABLETEXT",1364037233:"IFCPOWERMEASURE",1245737093:"IFCPOSITIVERATIOMEASURE",3054510233:"IFCPOSITIVEPLANEANGLEMEASURE",2815919920:"IFCPOSITIVELENGTHMEASURE",4042175685:"IFCPLANEANGLEMEASURE",2642773653:"IFCPLANARFORCEMEASURE",2260317790:"IFCPARAMETERVALUE",929793134:"IFCPHMEASURE",2395907400:"IFCNUMERICMEASURE",2095195183:"IFCNORMALISEDRATIOMEASURE",765770214:"IFCMONTHINYEARNUMBER",2615040989:"IFCMONETARYMEASURE",3114022597:"IFCMOMENTOFINERTIAMEASURE",1648970520:"IFCMOLECULARWEIGHTMEASURE",3177669450:"IFCMOISTUREDIFFUSIVITYMEASURE",1753493141:"IFCMODULUSOFSUBGRADEREACTIONMEASURE",1052454078:"IFCMODULUSOFROTATIONALSUBGRADEREACTIONMEASURE",2173214787:"IFCMODULUSOFLINEARSUBGRADEREACTIONMEASURE",3341486342:"IFCMODULUSOFELASTICITYMEASURE",102610177:"IFCMINUTEINHOUR",3531705166:"IFCMASSPERLENGTHMEASURE",3124614049:"IFCMASSMEASURE",4017473158:"IFCMASSFLOWRATEMEASURE",1477762836:"IFCMASSDENSITYMEASURE",2486716878:"IFCMAGNETICFLUXMEASURE",286949696:"IFCMAGNETICFLUXDENSITYMEASURE",151039812:"IFCLUMINOUSINTENSITYMEASURE",2755797622:"IFCLUMINOUSINTENSITYDISTRIBUTIONMEASURE",2095003142:"IFCLUMINOUSFLUXMEASURE",503418787:"IFCLOGICAL",3086160713:"IFCLINEARVELOCITYMEASURE",1307019551:"IFCLINEARSTIFFNESSMEASURE",2128979029:"IFCLINEARMOMENTMEASURE",191860431:"IFCLINEARFORCEMEASURE",1243674935:"IFCLENGTHMEASURE",3258342251:"IFCLABEL",2054016361:"IFCKINEMATICVISCOSITYMEASURE",3192672207:"IFCISOTHERMALMOISTURECAPACITYMEASURE",3686016028:"IFCIONCONCENTRATIONMEASURE",3809634241:"IFCINTEGERCOUNTRATEMEASURE",1939436016:"IFCINTEGER",2679005408:"IFCINDUCTANCEMEASURE",3358199106:"IFCILLUMINANCEMEASURE",983778844:"IFCIDENTIFIER",2589826445:"IFCHOURINDAY",1158859006:"IFCHEATINGVALUEMEASURE",3113092358:"IFCHEATFLUXDENSITYMEASURE",3064340077:"IFCGLOBALLYUNIQUEID",3044325142:"IFCFREQUENCYMEASURE",1361398929:"IFCFORCEMEASURE",2590844177:"IFCFONTWEIGHT",2715512545:"IFCFONTVARIANT",1102727119:"IFCFONTSTYLE",2078135608:"IFCENERGYMEASURE",2506197118:"IFCELECTRICVOLTAGEMEASURE",2951915441:"IFCELECTRICRESISTANCEMEASURE",3790457270:"IFCELECTRICCURRENTMEASURE",2093906313:"IFCELECTRICCONDUCTANCEMEASURE",3818826038:"IFCELECTRICCHARGEMEASURE",1827137117:"IFCELECTRICCAPACITANCEMEASURE",69416015:"IFCDYNAMICVISCOSITYMEASURE",524656162:"IFCDOSEEQUIVALENTMEASURE",4134073009:"IFCDIMENSIONCOUNT",1514641115:"IFCDESCRIPTIVEMEASURE",300323983:"IFCDAYLIGHTSAVINGHOUR",86635668:"IFCDAYINMONTHNUMBER",94842927:"IFCCURVATUREMEASURE",1778710042:"IFCCOUNTMEASURE",3238673880:"IFCCONTEXTDEPENDENTMEASURE",3812528620:"IFCCOMPOUNDPLANEANGLEMEASURE",2991860651:"IFCCOMPLEXNUMBER",1867003952:"IFCBOXALIGNMENT",2735952531:"IFCBOOLEAN",2650437152:"IFCAREAMEASURE",632304761:"IFCANGULARVELOCITYMEASURE",360377573:"IFCAMOUNTOFSUBSTANCEMEASURE",4182062534:"IFCACCELERATIONMEASURE",3699917729:"IFCABSORBEDDOSEMEASURE",1971632696:"IFCGEOSLICE",2680139844:"IFCGEOMODEL",24726584:"IFCELECTRICFLOWTREATMENTDEVICE",3693000487:"IFCDISTRIBUTIONBOARD",3460952963:"IFCCONVEYORSEGMENT",3999819293:"IFCCAISSONFOUNDATION",3314249567:"IFCBOREHOLE",4196446775:"IFCBEARING",325726236:"IFCALIGNMENT",3425753595:"IFCTRACKELEMENT",991950508:"IFCSIGNAL",3798194928:"IFCREINFORCEDSOIL",3290496277:"IFCRAIL",1383356374:"IFCPAVEMENT",2182337498:"IFCNAVIGATIONELEMENT",234836483:"IFCMOORINGDEVICE",2078563270:"IFCMOBILETELECOMMUNICATIONSAPPLIANCE",1638804497:"IFCLIQUIDTERMINAL",1154579445:"IFCLINEARPOSITIONINGELEMENT",2696325953:"IFCKERB",2713699986:"IFCGEOTECHNICALASSEMBLY",2142170206:"IFCELECTRICFLOWTREATMENTDEVICETYPE",3376911765:"IFCEARTHWORKSFILL",1077100507:"IFCEARTHWORKSELEMENT",3071239417:"IFCEARTHWORKSCUT",479945903:"IFCDISTRIBUTIONBOARDTYPE",3426335179:"IFCDEEPFOUNDATION",1502416096:"IFCCOURSE",2940368186:"IFCCONVEYORSEGMENTTYPE",3203706013:"IFCCAISSONFOUNDATIONTYPE",3862327254:"IFCBUILTSYSTEM",1876633798:"IFCBUILTELEMENT",963979645:"IFCBRIDGEPART",644574406:"IFCBRIDGE",3649138523:"IFCBEARINGTYPE",1662888072:"IFCALIGNMENTVERTICAL",317615605:"IFCALIGNMENTSEGMENT",1545765605:"IFCALIGNMENTHORIZONTAL",4266260250:"IFCALIGNMENTCANT",3956297820:"IFCVIBRATIONDAMPERTYPE",1530820697:"IFCVIBRATIONDAMPER",840318589:"IFCVEHICLE",1953115116:"IFCTRANSPORTATIONDEVICE",618700268:"IFCTRACKELEMENTTYPE",2281632017:"IFCTENDONCONDUITTYPE",3663046924:"IFCTENDONCONDUIT",42703149:"IFCSINESPIRAL",1894708472:"IFCSIGNALTYPE",3599934289:"IFCSIGNTYPE",33720170:"IFCSIGN",1027922057:"IFCSEVENTHORDERPOLYNOMIALSPIRAL",544395925:"IFCSEGMENTEDREFERENCECURVE",3649235739:"IFCSECONDORDERPOLYNOMIALSPIRAL",550521510:"IFCROADPART",146592293:"IFCROAD",3818125796:"IFCRELADHERESTOELEMENT",4021432810:"IFCREFERENT",1891881377:"IFCRAILWAYPART",3992365140:"IFCRAILWAY",1763565496:"IFCRAILTYPE",1946335990:"IFCPOSITIONINGELEMENT",514975943:"IFCPAVEMENTTYPE",506776471:"IFCNAVIGATIONELEMENTTYPE",710110818:"IFCMOORINGDEVICETYPE",1950438474:"IFCMOBILETELECOMMUNICATIONSAPPLIANCETYPE",976884017:"IFCMARINEPART",525669439:"IFCMARINEFACILITY",1770583370:"IFCLIQUIDTERMINALTYPE",2176059722:"IFCLINEARELEMENT",679976338:"IFCKERBTYPE",3948183225:"IFCIMPACTPROTECTIONDEVICETYPE",2568555532:"IFCIMPACTPROTECTIONDEVICE",2898700619:"IFCGRADIENTCURVE",1594536857:"IFCGEOTECHNICALSTRATUM",4230923436:"IFCGEOTECHNICALELEMENT",4228831410:"IFCFACILITYPARTCOMMON",1310830890:"IFCFACILITYPART",24185140:"IFCFACILITY",4234616927:"IFCDIRECTRIXDERIVEDREFERENCESWEPTAREASOLID",1306400036:"IFCDEEPFOUNDATIONTYPE",4189326743:"IFCCOURSETYPE",2000195564:"IFCCOSINESPIRAL",3497074424:"IFCCLOTHOID",1626504194:"IFCBUILTELEMENTTYPE",3651464721:"IFCVEHICLETYPE",1229763772:"IFCTRIANGULATEDIRREGULARNETWORK",3665877780:"IFCTRANSPORTATIONDEVICETYPE",782932809:"IFCTHIRDORDERPOLYNOMIALSPIRAL",2735484536:"IFCSPIRAL",1356537516:"IFCSECTIONEDSURFACE",1290935644:"IFCSECTIONEDSOLIDHORIZONTAL",1862484736:"IFCSECTIONEDSOLID",1441486842:"IFCRELPOSITIONS",1033248425:"IFCRELASSOCIATESPROFILEDEF",3381221214:"IFCPOLYNOMIALCURVE",2485787929:"IFCOFFSETCURVEBYDISTANCES",590820931:"IFCOFFSETCURVE",3465909080:"IFCINDEXEDPOLYGONALTEXTUREMAP",593015953:"IFCDIRECTRIXCURVESWEPTAREASOLID",4212018352:"IFCCURVESEGMENT",3425423356:"IFCAXIS2PLACEMENTLINEAR",823603102:"IFCSEGMENT",2165702409:"IFCPOINTBYDISTANCEEXPRESSION",182550632:"IFCOPENCROSSPROFILEDEF",388784114:"IFCLINEARPLACEMENT",536804194:"IFCALIGNMENTHORIZONTALSEGMENT",3752311538:"IFCALIGNMENTCANTSEGMENT",1010789467:"IFCTEXTURECOORDINATEINDICESWITHVOIDS",222769930:"IFCTEXTURECOORDINATEINDICES",2691318326:"IFCQUANTITYNUMBER",3633395639:"IFCALIGNMENTVERTICALSEGMENT",2879124712:"IFCALIGNMENTPARAMETERSEGMENT",25142252:"IFCCONTROLLER",3087945054:"IFCALARM",4288193352:"IFCACTUATOR",630975310:"IFCUNITARYCONTROLELEMENT",4086658281:"IFCSENSOR",2295281155:"IFCPROTECTIVEDEVICETRIPPINGUNIT",182646315:"IFCFLOWINSTRUMENT",1426591983:"IFCFIRESUPPRESSIONTERMINAL",819412036:"IFCFILTER",3415622556:"IFCFAN",1003880860:"IFCELECTRICTIMECONTROL",402227799:"IFCELECTRICMOTOR",264262732:"IFCELECTRICGENERATOR",3310460725:"IFCELECTRICFLOWSTORAGEDEVICE",862014818:"IFCELECTRICDISTRIBUTIONBOARD",1904799276:"IFCELECTRICAPPLIANCE",1360408905:"IFCDUCTSILENCER",3518393246:"IFCDUCTSEGMENT",342316401:"IFCDUCTFITTING",562808652:"IFCDISTRIBUTIONCIRCUIT",4074379575:"IFCDAMPER",3640358203:"IFCCOOLINGTOWER",4136498852:"IFCCOOLEDBEAM",2272882330:"IFCCONDENSER",3571504051:"IFCCOMPRESSOR",3221913625:"IFCCOMMUNICATIONSAPPLIANCE",639361253:"IFCCOIL",3902619387:"IFCCHILLER",4217484030:"IFCCABLESEGMENT",1051757585:"IFCCABLEFITTING",3758799889:"IFCCABLECARRIERSEGMENT",635142910:"IFCCABLECARRIERFITTING",2938176219:"IFCBURNER",32344328:"IFCBOILER",2906023776:"IFCBEAMSTANDARDCASE",277319702:"IFCAUDIOVISUALAPPLIANCE",2056796094:"IFCAIRTOAIRHEATRECOVERY",177149247:"IFCAIRTERMINALBOX",1634111441:"IFCAIRTERMINAL",486154966:"IFCWINDOWSTANDARDCASE",4237592921:"IFCWASTETERMINAL",4156078855:"IFCWALLELEMENTEDCASE",4207607924:"IFCVALVE",4292641817:"IFCUNITARYEQUIPMENT",3179687236:"IFCUNITARYCONTROLELEMENTTYPE",3026737570:"IFCTUBEBUNDLE",3825984169:"IFCTRANSFORMER",812556717:"IFCTANK",1162798199:"IFCSWITCHINGDEVICE",385403989:"IFCSTRUCTURALLOADCASE",1404847402:"IFCSTACKTERMINAL",1999602285:"IFCSPACEHEATER",3420628829:"IFCSOLARDEVICE",3027962421:"IFCSLABSTANDARDCASE",3127900445:"IFCSLABELEMENTEDCASE",1329646415:"IFCSHADINGDEVICE",3053780830:"IFCSANITARYTERMINAL",2572171363:"IFCREINFORCINGBARTYPE",1232101972:"IFCRATIONALBSPLINECURVEWITHKNOTS",90941305:"IFCPUMP",655969474:"IFCPROTECTIVEDEVICETRIPPINGUNITTYPE",738039164:"IFCPROTECTIVEDEVICE",1156407060:"IFCPLATESTANDARDCASE",3612865200:"IFCPIPESEGMENT",310824031:"IFCPIPEFITTING",3694346114:"IFCOUTLET",144952367:"IFCOUTERBOUNDARYCURVE",2474470126:"IFCMOTORCONNECTION",1911478936:"IFCMEMBERSTANDARDCASE",1437502449:"IFCMEDICALDEVICE",629592764:"IFCLIGHTFIXTURE",76236018:"IFCLAMP",2176052936:"IFCJUNCTIONBOX",4175244083:"IFCINTERCEPTOR",2068733104:"IFCHUMIDIFIER",3319311131:"IFCHEATEXCHANGER",2188021234:"IFCFLOWMETER",1209101575:"IFCEXTERNALSPATIALELEMENT",484807127:"IFCEVAPORATOR",3747195512:"IFCEVAPORATIVECOOLER",2814081492:"IFCENGINE",2417008758:"IFCELECTRICDISTRIBUTIONBOARDTYPE",3242481149:"IFCDOORSTANDARDCASE",3205830791:"IFCDISTRIBUTIONSYSTEM",400855858:"IFCCOMMUNICATIONSAPPLIANCETYPE",905975707:"IFCCOLUMNSTANDARDCASE",1677625105:"IFCCIVILELEMENT",3296154744:"IFCCHIMNEY",2674252688:"IFCCABLEFITTINGTYPE",2188180465:"IFCBURNERTYPE",1177604601:"IFCBUILDINGSYSTEM",39481116:"IFCBUILDINGELEMENTPARTTYPE",1136057603:"IFCBOUNDARYCURVE",2461110595:"IFCBSPLINECURVEWITHKNOTS",1532957894:"IFCAUDIOVISUALAPPLIANCETYPE",4088093105:"IFCWORKCALENDAR",4009809668:"IFCWINDOWTYPE",926996030:"IFCVOIDINGFEATURE",2391383451:"IFCVIBRATIONISOLATOR",2415094496:"IFCTENDONTYPE",3081323446:"IFCTENDONANCHORTYPE",413509423:"IFCSYSTEMFURNITUREELEMENT",3101698114:"IFCSURFACEFEATURE",3657597509:"IFCSTRUCTURALSURFACEACTION",2757150158:"IFCSTRUCTURALCURVEREACTION",1004757350:"IFCSTRUCTURALCURVEACTION",338393293:"IFCSTAIRTYPE",1072016465:"IFCSOLARDEVICETYPE",4074543187:"IFCSHADINGDEVICETYPE",2157484638:"IFCSEAMCURVE",2781568857:"IFCROOFTYPE",2310774935:"IFCREINFORCINGMESHTYPE",964333572:"IFCREINFORCINGELEMENTTYPE",683857671:"IFCRATIONALBSPLINESURFACEWITHKNOTS",1469900589:"IFCRAMPTYPE",2839578677:"IFCPOLYGONALFACESET",1158309216:"IFCPILETYPE",3079942009:"IFCOPENINGSTANDARDCASE",1114901282:"IFCMEDICALDEVICETYPE",3113134337:"IFCINTERSECTIONCURVE",3946677679:"IFCINTERCEPTORTYPE",2571569899:"IFCINDEXEDPOLYCURVE",3493046030:"IFCGEOGRAPHICELEMENT",1509553395:"IFCFURNITURE",1893162501:"IFCFOOTINGTYPE",2853485674:"IFCEXTERNALSPATIALSTRUCTUREELEMENT",4148101412:"IFCEVENT",132023988:"IFCENGINETYPE",2397081782:"IFCELEMENTASSEMBLYTYPE",2323601079:"IFCDOORTYPE",1213902940:"IFCCYLINDRICALSURFACE",1525564444:"IFCCONSTRUCTIONPRODUCTRESOURCETYPE",4105962743:"IFCCONSTRUCTIONMATERIALRESOURCETYPE",2185764099:"IFCCONSTRUCTIONEQUIPMENTRESOURCETYPE",15328376:"IFCCOMPOSITECURVEONSURFACE",3875453745:"IFCCOMPLEXPROPERTYTEMPLATE",3893394355:"IFCCIVILELEMENTTYPE",2197970202:"IFCCHIMNEYTYPE",167062518:"IFCBSPLINESURFACEWITHKNOTS",2887950389:"IFCBSPLINESURFACE",2603310189:"IFCADVANCEDBREPWITHVOIDS",1635779807:"IFCADVANCEDBREP",2916149573:"IFCTRIANGULATEDFACESET",1935646853:"IFCTOROIDALSURFACE",2387106220:"IFCTESSELLATEDFACESET",3206491090:"IFCTASKTYPE",699246055:"IFCSURFACECURVE",4095615324:"IFCSUBCONTRACTRESOURCETYPE",603775116:"IFCSTRUCTURALSURFACEREACTION",4015995234:"IFCSPHERICALSURFACE",2481509218:"IFCSPATIALZONETYPE",463610769:"IFCSPATIALZONE",710998568:"IFCSPATIALELEMENTTYPE",1412071761:"IFCSPATIALELEMENT",3663146110:"IFCSIMPLEPROPERTYTEMPLATE",3243963512:"IFCREVOLVEDAREASOLIDTAPERED",816062949:"IFCREPARAMETRISEDCOMPOSITECURVESEGMENT",1521410863:"IFCRELSPACEBOUNDARY2NDLEVEL",3523091289:"IFCRELSPACEBOUNDARY1STLEVEL",427948657:"IFCRELINTERFERESELEMENTS",307848117:"IFCRELDEFINESBYTEMPLATE",1462361463:"IFCRELDEFINESBYOBJECT",2565941209:"IFCRELDECLARES",1027710054:"IFCRELASSIGNSTOGROUPBYFACTOR",3521284610:"IFCPROPERTYTEMPLATE",492091185:"IFCPROPERTYSETTEMPLATE",653396225:"IFCPROJECTLIBRARY",569719735:"IFCPROCEDURETYPE",3967405729:"IFCPREDEFINEDPROPERTYSET",1682466193:"IFCPCURVE",428585644:"IFCLABORRESOURCETYPE",2294589976:"IFCINDEXEDPOLYGONALFACEWITHVOIDS",178912537:"IFCINDEXEDPOLYGONALFACE",4095422895:"IFCGEOGRAPHICELEMENTTYPE",2652556860:"IFCFIXEDREFERENCESWEPTAREASOLID",2804161546:"IFCEXTRUDEDAREASOLIDTAPERED",4024345920:"IFCEVENTTYPE",2629017746:"IFCCURVEBOUNDEDSURFACE",1815067380:"IFCCREWRESOURCETYPE",3419103109:"IFCCONTEXT",2574617495:"IFCCONSTRUCTIONRESOURCETYPE",2059837836:"IFCCARTESIANPOINTLIST3D",1675464909:"IFCCARTESIANPOINTLIST2D",574549367:"IFCCARTESIANPOINTLIST",3406155212:"IFCADVANCEDFACE",3698973494:"IFCTYPERESOURCE",3736923433:"IFCTYPEPROCESS",901063453:"IFCTESSELLATEDITEM",1096409881:"IFCSWEPTDISKSOLIDPOLYGONAL",1042787934:"IFCRESOURCETIME",1608871552:"IFCRESOURCECONSTRAINTRELATIONSHIP",2943643501:"IFCRESOURCEAPPROVALRELATIONSHIP",2090586900:"IFCQUANTITYSET",1482703590:"IFCPROPERTYTEMPLATEDEFINITION",3778827333:"IFCPREDEFINEDPROPERTIES",2998442950:"IFCMIRROREDPROFILEDEF",853536259:"IFCMATERIALRELATIONSHIP",3404854881:"IFCMATERIALPROFILESETUSAGETAPERING",3079605661:"IFCMATERIALPROFILESETUSAGE",2852063980:"IFCMATERIALCONSTITUENTSET",3708119e3:"IFCMATERIALCONSTITUENT",1585845231:"IFCLAGTIME",2133299955:"IFCINDEXEDTRIANGLETEXTUREMAP",1437953363:"IFCINDEXEDTEXTUREMAP",3570813810:"IFCINDEXEDCOLOURMAP",1437805879:"IFCEXTERNALREFERENCERELATIONSHIP",297599258:"IFCEXTENDEDPROPERTIES",211053100:"IFCEVENTTIME",2713554722:"IFCCONVERSIONBASEDUNITWITHOFFSET",3285139300:"IFCCOLOURRGBLIST",1236880293:"IFCWORKTIME",1199560280:"IFCTIMEPERIOD",3611470254:"IFCTEXTUREVERTEXLIST",2771591690:"IFCTASKTIMERECURRING",1549132990:"IFCTASKTIME",2043862942:"IFCTABLECOLUMN",2934153892:"IFCSURFACEREINFORCEMENTAREA",609421318:"IFCSTRUCTURALLOADORRESULT",3478079324:"IFCSTRUCTURALLOADCONFIGURATION",1054537805:"IFCSCHEDULINGTIME",2439245199:"IFCRESOURCELEVELRELATIONSHIP",2433181523:"IFCREFERENCE",3915482550:"IFCRECURRENCEPATTERN",986844984:"IFCPROPERTYABSTRACTION",3843373140:"IFCPROJECTEDCRS",677532197:"IFCPRESENTATIONITEM",1507914824:"IFCMATERIALUSAGEDEFINITION",552965576:"IFCMATERIALPROFILEWITHOFFSETS",164193824:"IFCMATERIALPROFILESET",2235152071:"IFCMATERIALPROFILE",1847252529:"IFCMATERIALLAYERWITHOFFSETS",760658860:"IFCMATERIALDEFINITION",3057273783:"IFCMAPCONVERSION",4294318154:"IFCEXTERNALINFORMATION",1466758467:"IFCCOORDINATEREFERENCESYSTEM",1785450214:"IFCCOORDINATEOPERATION",775493141:"IFCCONNECTIONVOLUMEGEOMETRY",979691226:"IFCREINFORCINGBAR",3700593921:"IFCELECTRICDISTRIBUTIONPOINT",1062813311:"IFCDISTRIBUTIONCONTROLELEMENT",1052013943:"IFCDISTRIBUTIONCHAMBERELEMENT",578613899:"IFCCONTROLLERTYPE",2454782716:"IFCCHAMFEREDGEFEATURE",753842376:"IFCBEAM",3001207471:"IFCALARMTYPE",2874132201:"IFCACTUATORTYPE",3304561284:"IFCWINDOW",3512223829:"IFCWALLSTANDARDCASE",2391406946:"IFCWALL",3313531582:"IFCVIBRATIONISOLATORTYPE",2347447852:"IFCTENDONANCHOR",3824725483:"IFCTENDON",2515109513:"IFCSTRUCTURALANALYSISMODEL",4252922144:"IFCSTAIRFLIGHT",331165859:"IFCSTAIR",1529196076:"IFCSLAB",1783015770:"IFCSENSORTYPE",1376911519:"IFCROUNDEDEDGEFEATURE",2016517767:"IFCROOF",2320036040:"IFCREINFORCINGMESH",3027567501:"IFCREINFORCINGELEMENT",3055160366:"IFCRATIONALBEZIERCURVE",3283111854:"IFCRAMPFLIGHT",3024970846:"IFCRAMP",2262370178:"IFCRAILING",3171933400:"IFCPLATE",1687234759:"IFCPILE",1073191201:"IFCMEMBER",900683007:"IFCFOOTING",3508470533:"IFCFLOWTREATMENTDEVICE",2223149337:"IFCFLOWTERMINAL",707683696:"IFCFLOWSTORAGEDEVICE",987401354:"IFCFLOWSEGMENT",3132237377:"IFCFLOWMOVINGDEVICE",4037862832:"IFCFLOWINSTRUMENTTYPE",4278956645:"IFCFLOWFITTING",2058353004:"IFCFLOWCONTROLLER",4222183408:"IFCFIRESUPPRESSIONTERMINALTYPE",1810631287:"IFCFILTERTYPE",346874300:"IFCFANTYPE",1658829314:"IFCENERGYCONVERSIONDEVICE",857184966:"IFCELECTRICALELEMENT",1634875225:"IFCELECTRICALCIRCUIT",712377611:"IFCELECTRICTIMECONTROLTYPE",1217240411:"IFCELECTRICMOTORTYPE",1365060375:"IFCELECTRICHEATERTYPE",1534661035:"IFCELECTRICGENERATORTYPE",3277789161:"IFCELECTRICFLOWSTORAGEDEVICETYPE",663422040:"IFCELECTRICAPPLIANCETYPE",855621170:"IFCEDGEFEATURE",2030761528:"IFCDUCTSILENCERTYPE",3760055223:"IFCDUCTSEGMENTTYPE",869906466:"IFCDUCTFITTINGTYPE",395920057:"IFCDOOR",3041715199:"IFCDISTRIBUTIONPORT",3040386961:"IFCDISTRIBUTIONFLOWELEMENT",1945004755:"IFCDISTRIBUTIONELEMENT",2063403501:"IFCDISTRIBUTIONCONTROLELEMENTTYPE",1599208980:"IFCDISTRIBUTIONCHAMBERELEMENTTYPE",2635815018:"IFCDISCRETEACCESSORYTYPE",1335981549:"IFCDISCRETEACCESSORY",4147604152:"IFCDIAMETERDIMENSION",3961806047:"IFCDAMPERTYPE",3495092785:"IFCCURTAINWALL",1973544240:"IFCCOVERING",2954562838:"IFCCOOLINGTOWERTYPE",335055490:"IFCCOOLEDBEAMTYPE",488727124:"IFCCONSTRUCTIONPRODUCTRESOURCE",1060000209:"IFCCONSTRUCTIONMATERIALRESOURCE",3898045240:"IFCCONSTRUCTIONEQUIPMENTRESOURCE",1163958913:"IFCCONDITIONCRITERION",2188551683:"IFCCONDITION",2816379211:"IFCCONDENSERTYPE",3850581409:"IFCCOMPRESSORTYPE",843113511:"IFCCOLUMN",2301859152:"IFCCOILTYPE",2611217952:"IFCCIRCLE",2951183804:"IFCCHILLERTYPE",1285652485:"IFCCABLESEGMENTTYPE",3293546465:"IFCCABLECARRIERSEGMENTTYPE",395041908:"IFCCABLECARRIERFITTINGTYPE",1909888760:"IFCBUILDINGELEMENTPROXYTYPE",1095909175:"IFCBUILDINGELEMENTPROXY",2979338954:"IFCBUILDINGELEMENTPART",52481810:"IFCBUILDINGELEMENTCOMPONENT",3299480353:"IFCBUILDINGELEMENT",231477066:"IFCBOILERTYPE",1916977116:"IFCBEZIERCURVE",819618141:"IFCBEAMTYPE",1967976161:"IFCBSPLINECURVE",3460190687:"IFCASSET",2470393545:"IFCANGULARDIMENSION",1871374353:"IFCAIRTOAIRHEATRECOVERYTYPE",3352864051:"IFCAIRTERMINALTYPE",1411407467:"IFCAIRTERMINALBOXTYPE",3821786052:"IFCACTIONREQUEST",1213861670:"IFC2DCOMPOSITECURVE",1033361043:"IFCZONE",3342526732:"IFCWORKSCHEDULE",4218914973:"IFCWORKPLAN",1028945134:"IFCWORKCONTROL",1133259667:"IFCWASTETERMINALTYPE",1898987631:"IFCWALLTYPE",2769231204:"IFCVIRTUALELEMENT",728799441:"IFCVALVETYPE",1911125066:"IFCUNITARYEQUIPMENTTYPE",1600972822:"IFCTUBEBUNDLETYPE",3593883385:"IFCTRIMMEDCURVE",1620046519:"IFCTRANSPORTELEMENT",1692211062:"IFCTRANSFORMERTYPE",1637806684:"IFCTIMESERIESSCHEDULE",5716631:"IFCTANKTYPE",2254336722:"IFCSYSTEM",2315554128:"IFCSWITCHINGDEVICETYPE",148013059:"IFCSUBCONTRACTRESOURCE",1975003073:"IFCSTRUCTURALSURFACECONNECTION",2986769608:"IFCSTRUCTURALRESULTGROUP",1235345126:"IFCSTRUCTURALPOINTREACTION",734778138:"IFCSTRUCTURALPOINTCONNECTION",2082059205:"IFCSTRUCTURALPOINTACTION",3987759626:"IFCSTRUCTURALPLANARACTIONVARYING",1621171031:"IFCSTRUCTURALPLANARACTION",1252848954:"IFCSTRUCTURALLOADGROUP",1721250024:"IFCSTRUCTURALLINEARACTIONVARYING",1807405624:"IFCSTRUCTURALLINEARACTION",2445595289:"IFCSTRUCTURALCURVEMEMBERVARYING",214636428:"IFCSTRUCTURALCURVEMEMBER",4243806635:"IFCSTRUCTURALCURVECONNECTION",1179482911:"IFCSTRUCTURALCONNECTION",682877961:"IFCSTRUCTURALACTION",1039846685:"IFCSTAIRFLIGHTTYPE",3112655638:"IFCSTACKTERMINALTYPE",3812236995:"IFCSPACETYPE",652456506:"IFCSPACEPROGRAM",1305183839:"IFCSPACEHEATERTYPE",3856911033:"IFCSPACE",2533589738:"IFCSLABTYPE",4097777520:"IFCSITE",4105383287:"IFCSERVICELIFE",3517283431:"IFCSCHEDULETIMECONTROL",1768891740:"IFCSANITARYTERMINALTYPE",2863920197:"IFCRELASSIGNSTASKS",160246688:"IFCRELAGGREGATES",2324767716:"IFCRAMPFLIGHTTYPE",2893384427:"IFCRAILINGTYPE",3248260540:"IFCRADIUSDIMENSION",2250791053:"IFCPUMPTYPE",1842657554:"IFCPROTECTIVEDEVICETYPE",3651124850:"IFCPROJECTIONELEMENT",3642467123:"IFCPROJECTORDERRECORD",2904328755:"IFCPROJECTORDER",2744685151:"IFCPROCEDURE",3740093272:"IFCPORT",3724593414:"IFCPOLYLINE",4017108033:"IFCPLATETYPE",4231323485:"IFCPIPESEGMENTTYPE",804291784:"IFCPIPEFITTINGTYPE",3327091369:"IFCPERMIT",2382730787:"IFCPERFORMANCEHISTORY",2837617999:"IFCOUTLETTYPE",3425660407:"IFCORDERACTION",3588315303:"IFCOPENINGELEMENT",4143007308:"IFCOCCUPANT",1916936684:"IFCMOVE",977012517:"IFCMOTORCONNECTIONTYPE",3181161470:"IFCMEMBERTYPE",2108223431:"IFCMECHANICALFASTENERTYPE",377706215:"IFCMECHANICALFASTENER",2506943328:"IFCLINEARDIMENSION",1161773419:"IFCLIGHTFIXTURETYPE",1051575348:"IFCLAMPTYPE",3827777499:"IFCLABORRESOURCE",4288270099:"IFCJUNCTIONBOXTYPE",2391368822:"IFCINVENTORY",1806887404:"IFCHUMIDIFIERTYPE",1251058090:"IFCHEATEXCHANGERTYPE",2706460486:"IFCGROUP",3009204131:"IFCGRID",200128114:"IFCGASTERMINALTYPE",814719939:"IFCFURNITURESTANDARD",263784265:"IFCFURNISHINGELEMENT",3009222698:"IFCFLOWTREATMENTDEVICETYPE",2297155007:"IFCFLOWTERMINALTYPE",1339347760:"IFCFLOWSTORAGEDEVICETYPE",1834744321:"IFCFLOWSEGMENTTYPE",1482959167:"IFCFLOWMOVINGDEVICETYPE",3815607619:"IFCFLOWMETERTYPE",3198132628:"IFCFLOWFITTINGTYPE",3907093117:"IFCFLOWCONTROLLERTYPE",1287392070:"IFCFEATUREELEMENTSUBTRACTION",2143335405:"IFCFEATUREELEMENTADDITION",2827207264:"IFCFEATUREELEMENT",2489546625:"IFCFASTENERTYPE",647756555:"IFCFASTENER",3737207727:"IFCFACETEDBREPWITHVOIDS",807026263:"IFCFACETEDBREP",3390157468:"IFCEVAPORATORTYPE",3174744832:"IFCEVAPORATIVECOOLERTYPE",3272907226:"IFCEQUIPMENTSTANDARD",1962604670:"IFCEQUIPMENTELEMENT",2107101300:"IFCENERGYCONVERSIONDEVICETYPE",1704287377:"IFCELLIPSE",2590856083:"IFCELEMENTCOMPONENTTYPE",1623761950:"IFCELEMENTCOMPONENT",4123344466:"IFCELEMENTASSEMBLY",1758889154:"IFCELEMENT",360485395:"IFCELECTRICALBASEPROPERTIES",3849074793:"IFCDISTRIBUTIONFLOWELEMENTTYPE",3256556792:"IFCDISTRIBUTIONELEMENTTYPE",681481545:"IFCDIMENSIONCURVEDIRECTEDCALLOUT",1457835157:"IFCCURTAINWALLTYPE",3295246426:"IFCCREWRESOURCE",1916426348:"IFCCOVERINGTYPE",1419761937:"IFCCOSTSCHEDULE",3895139033:"IFCCOSTITEM",3293443760:"IFCCONTROL",2559216714:"IFCCONSTRUCTIONRESOURCE",2510884976:"IFCCONIC",3732776249:"IFCCOMPOSITECURVE",300633059:"IFCCOLUMNTYPE",2937912522:"IFCCIRCLEHOLLOWPROFILEDEF",3124254112:"IFCBUILDINGSTOREY",1950629157:"IFCBUILDINGELEMENTTYPE",4031249490:"IFCBUILDING",1260505505:"IFCBOUNDEDCURVE",3649129432:"IFCBOOLEANCLIPPINGRESULT",1334484129:"IFCBLOCK",3207858831:"IFCASYMMETRICISHAPEPROFILEDEF",1674181508:"IFCANNOTATION",2296667514:"IFCACTOR",2097647324:"IFCTRANSPORTELEMENTTYPE",3473067441:"IFCTASK",1580310250:"IFCSYSTEMFURNITUREELEMENTTYPE",4124788165:"IFCSURFACEOFREVOLUTION",2809605785:"IFCSURFACEOFLINEAREXTRUSION",2028607225:"IFCSURFACECURVESWEPTAREASOLID",4070609034:"IFCSTRUCTUREDDIMENSIONCALLOUT",2218152070:"IFCSTRUCTURALSURFACEMEMBERVARYING",3979015343:"IFCSTRUCTURALSURFACEMEMBER",3689010777:"IFCSTRUCTURALREACTION",530289379:"IFCSTRUCTURALMEMBER",3136571912:"IFCSTRUCTURALITEM",3544373492:"IFCSTRUCTURALACTIVITY",451544542:"IFCSPHERE",3893378262:"IFCSPATIALSTRUCTUREELEMENTTYPE",2706606064:"IFCSPATIALSTRUCTUREELEMENT",3626867408:"IFCRIGHTCIRCULARCYLINDER",4158566097:"IFCRIGHTCIRCULARCONE",1856042241:"IFCREVOLVEDAREASOLID",2914609552:"IFCRESOURCE",1401173127:"IFCRELVOIDSELEMENT",3451746338:"IFCRELSPACEBOUNDARY",366585022:"IFCRELSERVICESBUILDINGS",4122056220:"IFCRELSEQUENCE",1058617721:"IFCRELSCHEDULESCOSTITEMS",1245217292:"IFCRELREFERENCEDINSPATIALSTRUCTURE",750771296:"IFCRELPROJECTSELEMENT",202636808:"IFCRELOVERRIDESPROPERTIES",2051452291:"IFCRELOCCUPIESSPACES",3268803585:"IFCRELNESTS",4189434867:"IFCRELINTERACTIONREQUIREMENTS",279856033:"IFCRELFLOWCONTROLELEMENTS",3940055652:"IFCRELFILLSELEMENT",781010003:"IFCRELDEFINESBYTYPE",4186316022:"IFCRELDEFINESBYPROPERTIES",693640335:"IFCRELDEFINES",2551354335:"IFCRELDECOMPOSES",2802773753:"IFCRELCOVERSSPACES",886880790:"IFCRELCOVERSBLDGELEMENTS",3242617779:"IFCRELCONTAINEDINSPATIALSTRUCTURE",3678494232:"IFCRELCONNECTSWITHREALIZINGELEMENTS",504942748:"IFCRELCONNECTSWITHECCENTRICITY",1638771189:"IFCRELCONNECTSSTRUCTURALMEMBER",3912681535:"IFCRELCONNECTSSTRUCTURALELEMENT",2127690289:"IFCRELCONNECTSSTRUCTURALACTIVITY",3190031847:"IFCRELCONNECTSPORTS",4201705270:"IFCRELCONNECTSPORTTOELEMENT",3945020480:"IFCRELCONNECTSPATHELEMENTS",1204542856:"IFCRELCONNECTSELEMENTS",826625072:"IFCRELCONNECTS",2851387026:"IFCRELASSOCIATESPROFILEPROPERTIES",2655215786:"IFCRELASSOCIATESMATERIAL",3840914261:"IFCRELASSOCIATESLIBRARY",982818633:"IFCRELASSOCIATESDOCUMENT",2728634034:"IFCRELASSOCIATESCONSTRAINT",919958153:"IFCRELASSOCIATESCLASSIFICATION",4095574036:"IFCRELASSOCIATESAPPROVAL",1327628568:"IFCRELASSOCIATESAPPLIEDVALUE",1865459582:"IFCRELASSOCIATES",205026976:"IFCRELASSIGNSTORESOURCE",3372526763:"IFCRELASSIGNSTOPROJECTORDER",2857406711:"IFCRELASSIGNSTOPRODUCT",4278684876:"IFCRELASSIGNSTOPROCESS",1307041759:"IFCRELASSIGNSTOGROUP",2495723537:"IFCRELASSIGNSTOCONTROL",1683148259:"IFCRELASSIGNSTOACTOR",3939117080:"IFCRELASSIGNS",3454111270:"IFCRECTANGULARTRIMMEDSURFACE",2798486643:"IFCRECTANGULARPYRAMID",2770003689:"IFCRECTANGLEHOLLOWPROFILEDEF",3219374653:"IFCPROXY",1451395588:"IFCPROPERTYSET",4194566429:"IFCPROJECTIONCURVE",103090709:"IFCPROJECT",4208778838:"IFCPRODUCT",2945172077:"IFCPROCESS",220341763:"IFCPLANE",603570806:"IFCPLANARBOX",3566463478:"IFCPERMEABLECOVERINGPROPERTIES",3505215534:"IFCOFFSETCURVE3D",3388369263:"IFCOFFSETCURVE2D",3888040117:"IFCOBJECT",1425443689:"IFCMANIFOLDSOLIDBREP",1281925730:"IFCLINE",572779678:"IFCLSHAPEPROFILEDEF",1484403080:"IFCISHAPEPROFILEDEF",987898635:"IFCGEOMETRICCURVESET",1268542332:"IFCFURNITURETYPE",4238390223:"IFCFURNISHINGELEMENTTYPE",3455213021:"IFCFLUIDFLOWPROPERTIES",315944413:"IFCFILLAREASTYLETILES",4203026998:"IFCFILLAREASTYLETILESYMBOLWITHSTYLE",374418227:"IFCFILLAREASTYLEHATCHING",2047409740:"IFCFACEBASEDSURFACEMODEL",477187591:"IFCEXTRUDEDAREASOLID",80994333:"IFCENERGYPROPERTIES",2835456948:"IFCELLIPSEPROFILEDEF",2777663545:"IFCELEMENTARYSURFACE",339256511:"IFCELEMENTTYPE",1883228015:"IFCELEMENTQUANTITY",1472233963:"IFCEDGELOOP",4006246654:"IFCDRAUGHTINGPREDEFINEDCURVEFONT",445594917:"IFCDRAUGHTINGPREDEFINEDCOLOUR",3073041342:"IFCDRAUGHTINGCALLOUT",526551008:"IFCDOORSTYLE",1714330368:"IFCDOORPANELPROPERTIES",2963535650:"IFCDOORLININGPROPERTIES",32440307:"IFCDIRECTION",4054601972:"IFCDIMENSIONCURVETERMINATOR",606661476:"IFCDIMENSIONCURVE",693772133:"IFCDEFINEDSYMBOL",2827736869:"IFCCURVEBOUNDEDPLANE",2601014836:"IFCCURVE",2147822146:"IFCCSGSOLID",2506170314:"IFCCSGPRIMITIVE3D",194851669:"IFCCRANERAILFSHAPEPROFILEDEF",4133800736:"IFCCRANERAILASHAPEPROFILEDEF",2485617015:"IFCCOMPOSITECURVESEGMENT",2205249479:"IFCCLOSEDSHELL",1383045692:"IFCCIRCLEPROFILEDEF",1416205885:"IFCCARTESIANTRANSFORMATIONOPERATOR3DNONUNIFORM",3331915920:"IFCCARTESIANTRANSFORMATIONOPERATOR3D",3486308946:"IFCCARTESIANTRANSFORMATIONOPERATOR2DNONUNIFORM",3749851601:"IFCCARTESIANTRANSFORMATIONOPERATOR2D",59481748:"IFCCARTESIANTRANSFORMATIONOPERATOR",1123145078:"IFCCARTESIANPOINT",2898889636:"IFCCSHAPEPROFILEDEF",2713105998:"IFCBOXEDHALFSPACE",2581212453:"IFCBOUNDINGBOX",4182860854:"IFCBOUNDEDSURFACE",2736907675:"IFCBOOLEANRESULT",2740243338:"IFCAXIS2PLACEMENT3D",3125803723:"IFCAXIS2PLACEMENT2D",4261334040:"IFCAXIS1PLACEMENT",1302238472:"IFCANNOTATIONSURFACE",2265737646:"IFCANNOTATIONFILLAREAOCCURRENCE",669184980:"IFCANNOTATIONFILLAREA",3288037868:"IFCANNOTATIONCURVEOCCURRENCE",2543172580:"IFCZSHAPEPROFILEDEF",1299126871:"IFCWINDOWSTYLE",512836454:"IFCWINDOWPANELPROPERTIES",336235671:"IFCWINDOWLININGPROPERTIES",2759199220:"IFCVERTEXLOOP",1417489154:"IFCVECTOR",427810014:"IFCUSHAPEPROFILEDEF",2347495698:"IFCTYPEPRODUCT",1628702193:"IFCTYPEOBJECT",1345879162:"IFCTWODIRECTIONREPEATFACTOR",2715220739:"IFCTRAPEZIUMPROFILEDEF",3124975700:"IFCTEXTLITERALWITHEXTENT",4282788508:"IFCTEXTLITERAL",3028897424:"IFCTERMINATORSYMBOL",3071757647:"IFCTSHAPEPROFILEDEF",230924584:"IFCSWEPTSURFACE",1260650574:"IFCSWEPTDISKSOLID",2247615214:"IFCSWEPTAREASOLID",1878645084:"IFCSURFACESTYLERENDERING",2513912981:"IFCSURFACE",2233826070:"IFCSUBEDGE",3653947884:"IFCSTRUCTURALSTEELPROFILEPROPERTIES",3843319758:"IFCSTRUCTURALPROFILEPROPERTIES",1190533807:"IFCSTRUCTURALLOADSINGLEFORCEWARPING",1597423693:"IFCSTRUCTURALLOADSINGLEFORCE",1973038258:"IFCSTRUCTURALLOADSINGLEDISPLACEMENTDISTORTION",2473145415:"IFCSTRUCTURALLOADSINGLEDISPLACEMENT",2668620305:"IFCSTRUCTURALLOADPLANARFORCE",1595516126:"IFCSTRUCTURALLOADLINEARFORCE",390701378:"IFCSPACETHERMALLOADPROPERTIES",1202362311:"IFCSOUNDVALUE",2485662743:"IFCSOUNDPROPERTIES",723233188:"IFCSOLIDMODEL",2609359061:"IFCSLIPPAGECONNECTIONCONDITION",4124623270:"IFCSHELLBASEDSURFACEMODEL",2411513650:"IFCSERVICELIFEFACTOR",1509187699:"IFCSECTIONEDSPINE",2778083089:"IFCROUNDEDRECTANGLEPROFILEDEF",478536968:"IFCRELATIONSHIP",3765753017:"IFCREINFORCEMENTDEFINITIONPROPERTIES",3413951693:"IFCREGULARTIMESERIES",3615266464:"IFCRECTANGLEPROFILEDEF",110355661:"IFCPROPERTYTABLEVALUE",3650150729:"IFCPROPERTYSINGLEVALUE",3357820518:"IFCPROPERTYSETDEFINITION",941946838:"IFCPROPERTYREFERENCEVALUE",2752243245:"IFCPROPERTYLISTVALUE",4166981789:"IFCPROPERTYENUMERATEDVALUE",1680319473:"IFCPROPERTYDEFINITION",871118103:"IFCPROPERTYBOUNDEDVALUE",673634403:"IFCPRODUCTDEFINITIONSHAPE",179317114:"IFCPREDEFINEDPOINTMARKERSYMBOL",433424934:"IFCPREDEFINEDDIMENSIONSYMBOL",2559016684:"IFCPREDEFINEDCURVEFONT",759155922:"IFCPREDEFINEDCOLOUR",2775532180:"IFCPOLYGONALBOUNDEDHALFSPACE",2924175390:"IFCPOLYLOOP",1423911732:"IFCPOINTONSURFACE",4022376103:"IFCPOINTONCURVE",2067069095:"IFCPOINT",1663979128:"IFCPLANAREXTENT",2004835150:"IFCPLACEMENT",597895409:"IFCPIXELTEXTURE",3021840470:"IFCPHYSICALCOMPLEXQUANTITY",2519244187:"IFCPATH",2529465313:"IFCPARAMETERIZEDPROFILEDEF",1029017970:"IFCORIENTEDEDGE",2665983363:"IFCOPENSHELL",2833995503:"IFCONEDIRECTIONREPEATFACTOR",219451334:"IFCOBJECTDEFINITION",1430189142:"IFCMECHANICALCONCRETEMATERIALPROPERTIES",2022407955:"IFCMATERIALDEFINITIONREPRESENTATION",2347385850:"IFCMAPPEDITEM",1008929658:"IFCLOOP",2624227202:"IFCLOCALPLACEMENT",3422422726:"IFCLIGHTSOURCESPOT",1520743889:"IFCLIGHTSOURCEPOSITIONAL",4266656042:"IFCLIGHTSOURCEGONIOMETRIC",2604431987:"IFCLIGHTSOURCEDIRECTIONAL",125510826:"IFCLIGHTSOURCEAMBIENT",1402838566:"IFCLIGHTSOURCE",3741457305:"IFCIRREGULARTIMESERIES",3905492369:"IFCIMAGETEXTURE",2445078500:"IFCHYGROSCOPICMATERIALPROPERTIES",812098782:"IFCHALFSPACESOLID",178086475:"IFCGRIDPLACEMENT",3590301190:"IFCGEOMETRICSET",4142052618:"IFCGEOMETRICREPRESENTATIONSUBCONTEXT",2453401579:"IFCGEOMETRICREPRESENTATIONITEM",3448662350:"IFCGEOMETRICREPRESENTATIONCONTEXT",1446786286:"IFCGENERALPROFILEPROPERTIES",803998398:"IFCGENERALMATERIALPROPERTIES",3857492461:"IFCFUELPROPERTIES",738692330:"IFCFILLAREASTYLE",4219587988:"IFCFAILURECONNECTIONCONDITION",3008276851:"IFCFACESURFACE",803316827:"IFCFACEOUTERBOUND",1809719519:"IFCFACEBOUND",2556980723:"IFCFACE",1860660968:"IFCEXTENDEDMATERIALPROPERTIES",476780140:"IFCEDGECURVE",3900360178:"IFCEDGE",4170525392:"IFCDRAUGHTINGPREDEFINEDTEXTFONT",3732053477:"IFCDOCUMENTREFERENCE",1694125774:"IFCDIMENSIONPAIR",2273265877:"IFCDIMENSIONCALLOUTRELATIONSHIP",3632507154:"IFCDERIVEDPROFILEDEF",3800577675:"IFCCURVESTYLE",2889183280:"IFCCONVERSIONBASEDUNIT",3050246964:"IFCCONTEXTDEPENDENTUNIT",45288368:"IFCCONNECTIONPOINTECCENTRICITY",1981873012:"IFCCONNECTIONCURVEGEOMETRY",370225590:"IFCCONNECTEDFACESET",1485152156:"IFCCOMPOSITEPROFILEDEF",2542286263:"IFCCOMPLEXPROPERTY",776857604:"IFCCOLOURRGB",647927063:"IFCCLASSIFICATIONREFERENCE",3150382593:"IFCCENTERLINEPROFILEDEF",616511568:"IFCBLOBTEXTURE",2705031697:"IFCARBITRARYPROFILEDEFWITHVOIDS",1310608509:"IFCARBITRARYOPENPROFILEDEF",3798115385:"IFCARBITRARYCLOSEDPROFILEDEF",2297822566:"IFCANNOTATIONTEXTOCCURRENCE",3612888222:"IFCANNOTATIONSYMBOLOCCURRENCE",962685235:"IFCANNOTATIONSURFACEOCCURRENCE",2442683028:"IFCANNOTATIONOCCURRENCE",1065908215:"IFCWATERPROPERTIES",891718957:"IFCVIRTUALGRIDINTERSECTION",1907098498:"IFCVERTEXPOINT",3304826586:"IFCVERTEXBASEDTEXTUREMAP",2799835756:"IFCVERTEX",180925521:"IFCUNITASSIGNMENT",1735638870:"IFCTOPOLOGYREPRESENTATION",1377556343:"IFCTOPOLOGICALREPRESENTATIONITEM",581633288:"IFCTIMESERIESVALUE",1718945513:"IFCTIMESERIESREFERENCERELATIONSHIP",3101149627:"IFCTIMESERIES",3317419933:"IFCTHERMALMATERIALPROPERTIES",1210645708:"IFCTEXTUREVERTEX",2552916305:"IFCTEXTUREMAP",1742049831:"IFCTEXTURECOORDINATEGENERATOR",280115917:"IFCTEXTURECOORDINATE",1484833681:"IFCTEXTSTYLEWITHBOXCHARACTERISTICS",1640371178:"IFCTEXTSTYLETEXTMODEL",2636378356:"IFCTEXTSTYLEFORDEFINEDFONT",1983826977:"IFCTEXTSTYLEFONTMODEL",1447204868:"IFCTEXTSTYLE",912023232:"IFCTELECOMADDRESS",531007025:"IFCTABLEROW",985171141:"IFCTABLE",1290481447:"IFCSYMBOLSTYLE",626085974:"IFCSURFACETEXTURE",1351298697:"IFCSURFACESTYLEWITHTEXTURES",846575682:"IFCSURFACESTYLESHADING",1607154358:"IFCSURFACESTYLEREFRACTION",3303107099:"IFCSURFACESTYLELIGHTING",1300840506:"IFCSURFACESTYLE",3049322572:"IFCSTYLEDREPRESENTATION",3958052878:"IFCSTYLEDITEM",2830218821:"IFCSTYLEMODEL",3408363356:"IFCSTRUCTURALLOADTEMPERATURE",2525727697:"IFCSTRUCTURALLOADSTATIC",2162789131:"IFCSTRUCTURALLOAD",2273995522:"IFCSTRUCTURALCONNECTIONCONDITION",3692461612:"IFCSIMPLEPROPERTY",4240577450:"IFCSHAPEREPRESENTATION",3982875396:"IFCSHAPEMODEL",867548509:"IFCSHAPEASPECT",4165799628:"IFCSECTIONREINFORCEMENTPROPERTIES",2042790032:"IFCSECTIONPROPERTIES",448429030:"IFCSIUNIT",2341007311:"IFCROOT",3679540991:"IFCRIBPLATEPROFILEPROPERTIES",1660063152:"IFCREPRESENTATIONMAP",3008791417:"IFCREPRESENTATIONITEM",3377609919:"IFCREPRESENTATIONCONTEXT",1076942058:"IFCREPRESENTATION",1222501353:"IFCRELAXATION",1580146022:"IFCREINFORCEMENTBARPROPERTIES",2692823254:"IFCREFERENCESVALUEDOCUMENT",825690147:"IFCQUANTITYWEIGHT",2405470396:"IFCQUANTITYVOLUME",3252649465:"IFCQUANTITYTIME",931644368:"IFCQUANTITYLENGTH",2093928680:"IFCQUANTITYCOUNT",2044713172:"IFCQUANTITYAREA",3710013099:"IFCPROPERTYENUMERATION",148025276:"IFCPROPERTYDEPENDENCYRELATIONSHIP",3896028662:"IFCPROPERTYCONSTRAINTRELATIONSHIP",2598011224:"IFCPROPERTY",2802850158:"IFCPROFILEPROPERTIES",3958567839:"IFCPROFILEDEF",2267347899:"IFCPRODUCTSOFCOMBUSTIONPROPERTIES",2095639259:"IFCPRODUCTREPRESENTATION",2417041796:"IFCPRESENTATIONSTYLEASSIGNMENT",3119450353:"IFCPRESENTATIONSTYLE",1304840413:"IFCPRESENTATIONLAYERWITHSTYLE",2022622350:"IFCPRESENTATIONLAYERASSIGNMENT",1775413392:"IFCPREDEFINEDTEXTFONT",3213052703:"IFCPREDEFINEDTERMINATORSYMBOL",990879717:"IFCPREDEFINEDSYMBOL",3727388367:"IFCPREDEFINEDITEM",3355820592:"IFCPOSTALADDRESS",2226359599:"IFCPHYSICALSIMPLEQUANTITY",2483315170:"IFCPHYSICALQUANTITY",101040310:"IFCPERSONANDORGANIZATION",2077209135:"IFCPERSON",1207048766:"IFCOWNERHISTORY",1411181986:"IFCORGANIZATIONRELATIONSHIP",4251960020:"IFCORGANIZATION",1227763645:"IFCOPTICALMATERIALPROPERTIES",2251480897:"IFCOBJECTIVE",3701648758:"IFCOBJECTPLACEMENT",1918398963:"IFCNAMEDUNIT",2706619895:"IFCMONETARYUNIT",3368373690:"IFCMETRIC",677618848:"IFCMECHANICALSTEELMATERIALPROPERTIES",4256014907:"IFCMECHANICALMATERIALPROPERTIES",2597039031:"IFCMEASUREWITHUNIT",3265635763:"IFCMATERIALPROPERTIES",2199411900:"IFCMATERIALLIST",1303795690:"IFCMATERIALLAYERSETUSAGE",3303938423:"IFCMATERIALLAYERSET",248100487:"IFCMATERIALLAYER",1847130766:"IFCMATERIALCLASSIFICATIONRELATIONSHIP",1838606355:"IFCMATERIAL",30780891:"IFCLOCALTIME",1566485204:"IFCLIGHTINTENSITYDISTRIBUTION",4162380809:"IFCLIGHTDISTRIBUTIONDATA",3452421091:"IFCLIBRARYREFERENCE",2655187982:"IFCLIBRARYINFORMATION",3020489413:"IFCIRREGULARTIMESERIESVALUE",852622518:"IFCGRIDAXIS",3548104201:"IFCEXTERNALLYDEFINEDTEXTFONT",3207319532:"IFCEXTERNALLYDEFINEDSYMBOL",1040185647:"IFCEXTERNALLYDEFINEDSURFACESTYLE",2242383968:"IFCEXTERNALLYDEFINEDHATCHSTYLE",3200245327:"IFCEXTERNALREFERENCE",1648886627:"IFCENVIRONMENTALIMPACTVALUE",3796139169:"IFCDRAUGHTINGCALLOUTRELATIONSHIP",770865208:"IFCDOCUMENTINFORMATIONRELATIONSHIP",1154170062:"IFCDOCUMENTINFORMATION",1376555844:"IFCDOCUMENTELECTRONICFORMAT",2949456006:"IFCDIMENSIONALEXPONENTS",1045800335:"IFCDERIVEDUNITELEMENT",1765591967:"IFCDERIVEDUNIT",1072939445:"IFCDATEANDTIME",3510044353:"IFCCURVESTYLEFONTPATTERN",2367409068:"IFCCURVESTYLEFONTANDSCALING",1105321065:"IFCCURVESTYLEFONT",539742890:"IFCCURRENCYRELATIONSHIP",602808272:"IFCCOSTVALUE",1065062679:"IFCCOORDINATEDUNIVERSALTIMEOFFSET",347226245:"IFCCONSTRAINTRELATIONSHIP",613356794:"IFCCONSTRAINTCLASSIFICATIONRELATIONSHIP",1658513725:"IFCCONSTRAINTAGGREGATIONRELATIONSHIP",1959218052:"IFCCONSTRAINT",2732653382:"IFCCONNECTIONSURFACEGEOMETRY",4257277454:"IFCCONNECTIONPORTGEOMETRY",2614616156:"IFCCONNECTIONPOINTGEOMETRY",2859738748:"IFCCONNECTIONGEOMETRY",3264961684:"IFCCOLOURSPECIFICATION",3639012971:"IFCCLASSIFICATIONNOTATIONFACET",938368621:"IFCCLASSIFICATIONNOTATION",1098599126:"IFCCLASSIFICATIONITEMRELATIONSHIP",1767535486:"IFCCLASSIFICATIONITEM",747523909:"IFCCLASSIFICATION",622194075:"IFCCALENDARDATE",2069777674:"IFCBOUNDARYNODECONDITIONWARPING",1387855156:"IFCBOUNDARYNODECONDITION",3367102660:"IFCBOUNDARYFACECONDITION",1560379544:"IFCBOUNDARYEDGECONDITION",4037036970:"IFCBOUNDARYCONDITION",3869604511:"IFCAPPROVALRELATIONSHIP",390851274:"IFCAPPROVALPROPERTYRELATIONSHIP",2080292479:"IFCAPPROVALACTORRELATIONSHIP",130549933:"IFCAPPROVAL",1110488051:"IFCAPPLIEDVALUERELATIONSHIP",411424972:"IFCAPPLIEDVALUE",639542469:"IFCAPPLICATION",618182010:"IFCADDRESS",3630933823:"IFCACTORROLE",599546466:"FILE_DESCRIPTION",1390159747:"FILE_NAME",1109904537:"FILE_SCHEMA"};class tr{static async getUnits(e){var t,i,n;const{IFCUNITASSIGNMENT:s}=vn,o=await e.getAllPropertiesOfType(s);if(!o)return 1;const a=Object.keys(o),l=o[parseInt(a[0],10)];for(const c of l.Units){if(c.value===void 0||c.value===null)continue;const h=await e.getProperties(c.value);if(!h||!h.UnitType||!h.UnitType.value||h.UnitType.value!=="LENGTHUNIT")continue;let d=1,u=1;return h.Name.value==="METRE"&&(u=1),h.Name.value==="FOOT"&&(u=.3048),((t=h.Prefix)==null?void 0:t.value)==="MILLI"?d=.001:((i=h.Prefix)==null?void 0:i.value)==="CENTI"?d=.01:((n=h.Prefix)==null?void 0:n.value)==="DECI"&&(d=.1),u*d}return 1}static async findItemByGuid(e,t){var i;const n=e.getAllPropertiesIDs();for(const s of n){const o=await e.getProperties(s);if(o&&((i=o.GlobalId)==null?void 0:i.value)===t)return o}return null}static async getRelationMap(e,t,i){var n;const s=i??(async()=>{}),o={},a=e.getAllPropertiesIDs();for(const l of a){const c=await e.getProperties(l);if(!c)continue;const h=c.type===t,d=Object.keys(c).find(g=>g.startsWith("Relating")),u=Object.keys(c).find(g=>g.startsWith("Related"));if(!(h&&d&&u))continue;const f=await e.getProperties((n=c[d])==null?void 0:n.value),m=c[u];if(!f||!m||!(m&&Array.isArray(m)))continue;const E=m.map(g=>g.value);await s(f.expressID,E),o[f.expressID]=E}return o}static async getQsetQuantities(e,t,i){const n=i??(()=>{}),s=await e.getProperties(t);return!s||s.type!==hc?null:(s.Quantities??[{}]).map(o=>(o.value&&n(o.value),o.value)).filter(o=>o!==null)}static async getPsetProps(e,t,i){const n=i??(()=>{}),s=await e.getProperties(t);return!s||s.type!==uo?null:(s.HasProperties??[{}]).map(o=>(o.value&&n(o.value),o.value)).filter(o=>o!==null)}static async getPsetRel(e,t){var i;if(!await e.getProperties(t))return null;const n=await e.getAllPropertiesOfType(Ma);if(!n)return null;const s=Object.values(n);let o=null;for(const a of s)((i=a.RelatingPropertyDefinition)==null?void 0:i.value)===t&&(o=a.expressID);return o}static async getQsetRel(e,t){return tr.getPsetRel(e,t)}static async getEntityName(e,t){var i;const n=await e.getProperties(t);if(!n)return{key:null,name:null};const s=Object.keys(n).find(a=>a.endsWith("Name"))??null,o=s?(i=n[s])==null?void 0:i.value:null;return{key:s,name:o}}static async getQuantityValue(e,t){const i=await e.getProperties(t);if(!i)return{key:null,value:null};const n=Object.keys(i).find(o=>o.endsWith("Value"))??null;let s;return n===null||i[n]===void 0||i[n]===null?s=null:s=i[n].value,{key:n,value:s}}static isRel(e){return Fc[e].startsWith("IFCREL")}static async attributeExists(e,t,i){const n=await e.getProperties(t);return n?Object.keys(n).includes(i):!1}static async groupEntitiesByType(e,t){var i;const n=new Map;for(const s of t){const o=await e.getProperties(s);if(!o)continue;const a=o.type;n.get(a)||n.set(a,new Set),(i=n.get(a))==null||i.add(s)}return n}}const _R={IFCURIREFERENCE:"IfcUriReference",IFCTIME:"IfcTime",IFCTEMPERATURERATEOFCHANGEMEASURE:"IfcTemperatureRateOfChangeMeasure",IFCSOUNDPRESSURELEVELMEASURE:"IfcSoundPressureLevelMeasure",IFCSOUNDPOWERLEVELMEASURE:"IfcSoundPowerLevelMeasure",IFCPROPERTYSETDEFINITIONSET:"IfcPropertySetDefinitionSet",IFCPOSITIVEINTEGER:"IfcPositiveInteger",IFCNONNEGATIVELENGTHMEASURE:"IfcNonNegativeLengthMeasure",IFCLINEINDEX:"IfcLineIndex",IFCLANGUAGEID:"IfcLanguageId",IFCDURATION:"IfcDuration",IFCDAYINWEEKNUMBER:"IfcDayInWeekNumber",IFCDATETIME:"IfcDateTime",IFCDATE:"IfcDate",IFCCARDINALPOINTREFERENCE:"IfcCardinalPointReference",IFCBINARY:"IfcBinary",IFCAREADENSITYMEASURE:"IfcAreaDensityMeasure",IFCARCINDEX:"IfcArcIndex",IFCYEARNUMBER:"IfcYearNumber",IFCWARPINGMOMENTMEASURE:"IfcWarpingMomentMeasure",IFCWARPINGCONSTANTMEASURE:"IfcWarpingConstantMeasure",IFCVOLUMETRICFLOWRATEMEASURE:"IfcVolumetricFlowRateMeasure",IFCVOLUMEMEASURE:"IfcVolumeMeasure",IFCVAPORPERMEABILITYMEASURE:"IfcVaporPermeabilityMeasure",IFCTORQUEMEASURE:"IfcTorqueMeasure",IFCTIMESTAMP:"IfcTimestamp",IFCTIMEMEASURE:"IfcTimeMeasure",IFCTHERMODYNAMICTEMPERATUREMEASURE:"IfcThermodynamicTemperatureMeasure",IFCTHERMALTRANSMITTANCEMEASURE:"IfcThermalTransmittanceMeasure",IFCTHERMALRESISTANCEMEASURE:"IfcThermalResistanceMeasure",IFCTHERMALEXPANSIONCOEFFICIENTMEASURE:"IfcThermalExpansionCoefficientMeasure",IFCTHERMALCONDUCTIVITYMEASURE:"IfcThermalConductivityMeasure",IFCTHERMALADMITTANCEMEASURE:"IfcThermalAdmittanceMeasure",IFCTEXTTRANSFORMATION:"IfcTextTransformation",IFCTEXTFONTNAME:"IfcTextFontName",IFCTEXTDECORATION:"IfcTextDecoration",IFCTEXTALIGNMENT:"IfcTextAlignment",IFCTEXT:"IfcText",IFCTEMPERATUREGRADIENTMEASURE:"IfcTemperatureGradientMeasure",IFCSPECULARROUGHNESS:"IfcSpecularRoughness",IFCSPECULAREXPONENT:"IfcSpecularExponent",IFCSPECIFICHEATCAPACITYMEASURE:"IfcSpecificHeatCapacityMeasure",IFCSOUNDPRESSUREMEASURE:"IfcSoundPressureMeasure",IFCSOUNDPOWERMEASURE:"IfcSoundPowerMeasure",IFCSOLIDANGLEMEASURE:"IfcSolidAngleMeasure",IFCSHEARMODULUSMEASURE:"IfcShearModulusMeasure",IFCSECTIONALAREAINTEGRALMEASURE:"IfcSectionalAreaIntegralMeasure",IFCSECTIONMODULUSMEASURE:"IfcSectionModulusMeasure",IFCSECONDINMINUTE:"IfcSecondInMinute",IFCROTATIONALSTIFFNESSMEASURE:"IfcRotationalStiffnessMeasure",IFCROTATIONALMASSMEASURE:"IfcRotationalMassMeasure",IFCROTATIONALFREQUENCYMEASURE:"IfcRotationalFrequencyMeasure",IFCREAL:"IfcReal",IFCRATIOMEASURE:"IfcRatioMeasure",IFCRADIOACTIVITYMEASURE:"IfcRadioactivityMeasure",IFCPRESSUREMEASURE:"IfcPressureMeasure",IFCPRESENTABLETEXT:"IfcPresentableText",IFCPOWERMEASURE:"IfcPowerMeasure",IFCPOSITIVERATIOMEASURE:"IfcPositiveRatioMeasure",IFCPOSITIVEPLANEANGLEMEASURE:"IfcPositivePlaneAngleMeasure",IFCPOSITIVELENGTHMEASURE:"IfcPositiveLengthMeasure",IFCPLANEANGLEMEASURE:"IfcPlaneAngleMeasure",IFCPLANARFORCEMEASURE:"IfcPlanarForceMeasure",IFCPARAMETERVALUE:"IfcParameterValue",IFCPHMEASURE:"IfcPhMeasure",IFCNUMERICMEASURE:"IfcNumericMeasure",IFCNORMALISEDRATIOMEASURE:"IfcNormalisedRatioMeasure",IFCMONTHINYEARNUMBER:"IfcMonthInYearNumber",IFCMONETARYMEASURE:"IfcMonetaryMeasure",IFCMOMENTOFINERTIAMEASURE:"IfcMomentOfInertiaMeasure",IFCMOLECULARWEIGHTMEASURE:"IfcMolecularWeightMeasure",IFCMOISTUREDIFFUSIVITYMEASURE:"IfcMoistureDiffusivityMeasure",IFCMODULUSOFSUBGRADEREACTIONMEASURE:"IfcModulusOfSubgradeReactionMeasure",IFCMODULUSOFROTATIONALSUBGRADEREACTIONMEASURE:"IfcModulusOfRotationalSubgradeReactionMeasure",IFCMODULUSOFLINEARSUBGRADEREACTIONMEASURE:"IfcModulusOfLinearSubgradeReactionMeasure",IFCMODULUSOFELASTICITYMEASURE:"IfcModulusOfElasticityMeasure",IFCMINUTEINHOUR:"IfcMinuteInHour",IFCMASSPERLENGTHMEASURE:"IfcMassPerLengthMeasure",IFCMASSMEASURE:"IfcMassMeasure",IFCMASSFLOWRATEMEASURE:"IfcMassFlowRateMeasure",IFCMASSDENSITYMEASURE:"IfcMassDensityMeasure",IFCMAGNETICFLUXMEASURE:"IfcMagneticFluxMeasure",IFCMAGNETICFLUXDENSITYMEASURE:"IfcMagneticFluxDensityMeasure",IFCLUMINOUSINTENSITYMEASURE:"IfcLuminousIntensityMeasure",IFCLUMINOUSINTENSITYDISTRIBUTIONMEASURE:"IfcLuminousIntensityDistributionMeasure",IFCLUMINOUSFLUXMEASURE:"IfcLuminousFluxMeasure",IFCLOGICAL:"IfcLogical",IFCLINEARVELOCITYMEASURE:"IfcLinearVelocityMeasure",IFCLINEARSTIFFNESSMEASURE:"IfcLinearStiffnessMeasure",IFCLINEARMOMENTMEASURE:"IfcLinearMomentMeasure",IFCLINEARFORCEMEASURE:"IfcLinearForceMeasure",IFCLENGTHMEASURE:"IfcLengthMeasure",IFCLABEL:"IfcLabel",IFCKINEMATICVISCOSITYMEASURE:"IfcKinematicViscosityMeasure",IFCISOTHERMALMOISTURECAPACITYMEASURE:"IfcIsothermalMoistureCapacityMeasure",IFCIONCONCENTRATIONMEASURE:"IfcIonConcentrationMeasure",IFCINTEGERCOUNTRATEMEASURE:"IfcIntegerCountRateMeasure",IFCINTEGER:"IfcInteger",IFCINDUCTANCEMEASURE:"IfcInductanceMeasure",IFCILLUMINANCEMEASURE:"IfcIlluminanceMeasure",IFCIDENTIFIER:"IfcIdentifier",IFCHOURINDAY:"IfcHourInDay",IFCHEATINGVALUEMEASURE:"IfcHeatingValueMeasure",IFCHEATFLUXDENSITYMEASURE:"IfcHeatFluxDensityMeasure",IFCGLOBALLYUNIQUEID:"IfcGloballyUniqueId",IFCFREQUENCYMEASURE:"IfcFrequencyMeasure",IFCFORCEMEASURE:"IfcForceMeasure",IFCFONTWEIGHT:"IfcFontWeight",IFCFONTVARIANT:"IfcFontVariant",IFCFONTSTYLE:"IfcFontStyle",IFCENERGYMEASURE:"IfcEnergyMeasure",IFCELECTRICVOLTAGEMEASURE:"IfcElectricVoltageMeasure",IFCELECTRICRESISTANCEMEASURE:"IfcElectricResistanceMeasure",IFCELECTRICCURRENTMEASURE:"IfcElectricCurrentMeasure",IFCELECTRICCONDUCTANCEMEASURE:"IfcElectricConductanceMeasure",IFCELECTRICCHARGEMEASURE:"IfcElectricChargeMeasure",IFCELECTRICCAPACITANCEMEASURE:"IfcElectricCapacitanceMeasure",IFCDYNAMICVISCOSITYMEASURE:"IfcDynamicViscosityMeasure",IFCDOSEEQUIVALENTMEASURE:"IfcDoseEquivalentMeasure",IFCDIMENSIONCOUNT:"IfcDimensionCount",IFCDESCRIPTIVEMEASURE:"IfcDescriptiveMeasure",IFCDAYLIGHTSAVINGHOUR:"IfcDaylightSavingHour",IFCDAYINMONTHNUMBER:"IfcDayInMonthNumber",IFCCURVATUREMEASURE:"IfcCurvatureMeasure",IFCCOUNTMEASURE:"IfcCountMeasure",IFCCONTEXTDEPENDENTMEASURE:"IfcContextDependentMeasure",IFCCOMPOUNDPLANEANGLEMEASURE:"IfcCompoundPlaneAngleMeasure",IFCCOMPLEXNUMBER:"IfcComplexNumber",IFCBOXALIGNMENT:"IfcBoxAlignment",IFCBOOLEAN:"IfcBoolean",IFCAREAMEASURE:"IfcAreaMeasure",IFCANGULARVELOCITYMEASURE:"IfcAngularVelocityMeasure",IFCAMOUNTOFSUBSTANCEMEASURE:"IfcAmountOfSubstanceMeasure",IFCACCELERATIONMEASURE:"IfcAccelerationMeasure",IFCABSORBEDDOSEMEASURE:"IfcAbsorbedDoseMeasure",IFCGEOSLICE:"IfcGeoSlice",IFCGEOMODEL:"IfcGeoModel",IFCELECTRICFLOWTREATMENTDEVICE:"IfcElectricFlowTreatmentDevice",IFCDISTRIBUTIONBOARD:"IfcDistributionBoard",IFCCONVEYORSEGMENT:"IfcConveyorSegment",IFCCAISSONFOUNDATION:"IfcCaissonFoundation",IFCBOREHOLE:"IfcBorehole",IFCBEARING:"IfcBearing",IFCALIGNMENT:"IfcAlignment",IFCTRACKELEMENT:"IfcTrackElement",IFCSIGNAL:"IfcSignal",IFCREINFORCEDSOIL:"IfcReinforcedSoil",IFCRAIL:"IfcRail",IFCPAVEMENT:"IfcPavement",IFCNAVIGATIONELEMENT:"IfcNavigationElement",IFCMOORINGDEVICE:"IfcMooringDevice",IFCMOBILETELECOMMUNICATIONSAPPLIANCE:"IfcMobileTelecommunicationsAppliance",IFCLIQUIDTERMINAL:"IfcLiquidTerminal",IFCLINEARPOSITIONINGELEMENT:"IfcLinearPositioningElement",IFCKERB:"IfcKerb",IFCGEOTECHNICALASSEMBLY:"IfcGeotechnicalAssembly",IFCELECTRICFLOWTREATMENTDEVICETYPE:"IfcElectricFlowTreatmentDeviceType",IFCEARTHWORKSFILL:"IfcEarthworksFill",IFCEARTHWORKSELEMENT:"IfcEarthworksElement",IFCEARTHWORKSCUT:"IfcEarthworksCut",IFCDISTRIBUTIONBOARDTYPE:"IfcDistributionBoardType",IFCDEEPFOUNDATION:"IfcDeepFoundation",IFCCOURSE:"IfcCourse",IFCCONVEYORSEGMENTTYPE:"IfcConveyorSegmentType",IFCCAISSONFOUNDATIONTYPE:"IfcCaissonFoundationType",IFCBUILTSYSTEM:"IfcBuiltSystem",IFCBUILTELEMENT:"IfcBuiltElement",IFCBRIDGEPART:"IfcBridgePart",IFCBRIDGE:"IfcBridge",IFCBEARINGTYPE:"IfcBearingType",IFCALIGNMENTVERTICAL:"IfcAlignmentVertical",IFCALIGNMENTSEGMENT:"IfcAlignmentSegment",IFCALIGNMENTHORIZONTAL:"IfcAlignmentHorizontal",IFCALIGNMENTCANT:"IfcAlignmentCant",IFCVIBRATIONDAMPERTYPE:"IfcVibrationDamperType",IFCVIBRATIONDAMPER:"IfcVibrationDamper",IFCVEHICLE:"IfcVehicle",IFCTRANSPORTATIONDEVICE:"IfcTransportationDevice",IFCTRACKELEMENTTYPE:"IfcTrackElementType",IFCTENDONCONDUITTYPE:"IfcTendonConduitType",IFCTENDONCONDUIT:"IfcTendonConduit",IFCSINESPIRAL:"IfcSineSpiral",IFCSIGNALTYPE:"IfcSignalType",IFCSIGNTYPE:"IfcSignType",IFCSIGN:"IfcSign",IFCSEVENTHORDERPOLYNOMIALSPIRAL:"IfcSeventhOrderPolynomialSpiral",IFCSEGMENTEDREFERENCECURVE:"IfcSegmentedReferenceCurve",IFCSECONDORDERPOLYNOMIALSPIRAL:"IfcSecondOrderPolynomialSpiral",IFCROADPART:"IfcRoadPart",IFCROAD:"IfcRoad",IFCRELADHERESTOELEMENT:"IfcRelAdheresToElement",IFCREFERENT:"IfcReferent",IFCRAILWAYPART:"IfcRailwayPart",IFCRAILWAY:"IfcRailway",IFCRAILTYPE:"IfcRailType",IFCPOSITIONINGELEMENT:"IfcPositioningElement",IFCPAVEMENTTYPE:"IfcPavementType",IFCNAVIGATIONELEMENTTYPE:"IfcNavigationElementType",IFCMOORINGDEVICETYPE:"IfcMooringDeviceType",IFCMOBILETELECOMMUNICATIONSAPPLIANCETYPE:"IfcMobileTelecommunicationsApplianceType",IFCMARINEPART:"IfcMarinePart",IFCMARINEFACILITY:"IfcMarineFacility",IFCLIQUIDTERMINALTYPE:"IfcLiquidTerminalType",IFCLINEARELEMENT:"IfcLinearElement",IFCKERBTYPE:"IfcKerbType",IFCIMPACTPROTECTIONDEVICETYPE:"IfcImpactProtectionDeviceType",IFCIMPACTPROTECTIONDEVICE:"IfcImpactProtectionDevice",IFCGRADIENTCURVE:"IfcGradientCurve",IFCGEOTECHNICALSTRATUM:"IfcGeotechnicalStratum",IFCGEOTECHNICALELEMENT:"IfcGeotechnicalElement",IFCFACILITYPARTCOMMON:"IfcFacilityPartCommon",IFCFACILITYPART:"IfcFacilityPart",IFCFACILITY:"IfcFacility",IFCDIRECTRIXDERIVEDREFERENCESWEPTAREASOLID:"IfcDirectrixDerivedReferenceSweptAreaSolid",IFCDEEPFOUNDATIONTYPE:"IfcDeepFoundationType",IFCCOURSETYPE:"IfcCourseType",IFCCOSINESPIRAL:"IfcCosineSpiral",IFCCLOTHOID:"IfcClothoid",IFCBUILTELEMENTTYPE:"IfcBuiltElementType",IFCVEHICLETYPE:"IfcVehicleType",IFCTRIANGULATEDIRREGULARNETWORK:"IfcTriangulatedIrregularNetwork",IFCTRANSPORTATIONDEVICETYPE:"IfcTransportationDeviceType",IFCTHIRDORDERPOLYNOMIALSPIRAL:"IfcThirdOrderPolynomialSpiral",IFCSPIRAL:"IfcSpiral",IFCSECTIONEDSURFACE:"IfcSectionedSurface",IFCSECTIONEDSOLIDHORIZONTAL:"IfcSectionedSolidHorizontal",IFCSECTIONEDSOLID:"IfcSectionedSolid",IFCRELPOSITIONS:"IfcRelPositions",IFCRELASSOCIATESPROFILEDEF:"IfcRelAssociatesProfileDef",IFCPOLYNOMIALCURVE:"IfcPolynomialCurve",IFCOFFSETCURVEBYDISTANCES:"IfcOffsetCurveByDistances",IFCOFFSETCURVE:"IfcOffsetCurve",IFCINDEXEDPOLYGONALTEXTUREMAP:"IfcIndexedPolygonalTextureMap",IFCDIRECTRIXCURVESWEPTAREASOLID:"IfcDirectrixCurveSweptAreaSolid",IFCCURVESEGMENT:"IfcCurveSegment",IFCAXIS2PLACEMENTLINEAR:"IfcAxis2PlacementLinear",IFCSEGMENT:"IfcSegment",IFCPOINTBYDISTANCEEXPRESSION:"IfcPointByDistanceExpression",IFCOPENCROSSPROFILEDEF:"IfcOpenCrossProfileDef",IFCLINEARPLACEMENT:"IfcLinearPlacement",IFCALIGNMENTHORIZONTALSEGMENT:"IfcAlignmentHorizontalSegment",IFCALIGNMENTCANTSEGMENT:"IfcAlignmentCantSegment",IFCTEXTURECOORDINATEINDICESWITHVOIDS:"IfcTextureCoordinateIndicesWithVoids",IFCTEXTURECOORDINATEINDICES:"IfcTextureCoordinateIndices",IFCQUANTITYNUMBER:"IfcQuantityNumber",IFCALIGNMENTVERTICALSEGMENT:"IfcAlignmentVerticalSegment",IFCALIGNMENTPARAMETERSEGMENT:"IfcAlignmentParameterSegment",IFCCONTROLLER:"IfcController",IFCALARM:"IfcAlarm",IFCACTUATOR:"IfcActuator",IFCUNITARYCONTROLELEMENT:"IfcUnitaryControlElement",IFCSENSOR:"IfcSensor",IFCPROTECTIVEDEVICETRIPPINGUNIT:"IfcProtectiveDeviceTrippingUnit",IFCFLOWINSTRUMENT:"IfcFlowInstrument",IFCFIRESUPPRESSIONTERMINAL:"IfcFireSuppressionTerminal",IFCFILTER:"IfcFilter",IFCFAN:"IfcFan",IFCELECTRICTIMECONTROL:"IfcElectricTimeControl",IFCELECTRICMOTOR:"IfcElectricMotor",IFCELECTRICGENERATOR:"IfcElectricGenerator",IFCELECTRICFLOWSTORAGEDEVICE:"IfcElectricFlowStorageDevice",IFCELECTRICDISTRIBUTIONBOARD:"IfcElectricDistributionBoard",IFCELECTRICAPPLIANCE:"IfcElectricAppliance",IFCDUCTSILENCER:"IfcDuctSilencer",IFCDUCTSEGMENT:"IfcDuctSegment",IFCDUCTFITTING:"IfcDuctFitting",IFCDISTRIBUTIONCIRCUIT:"IfcDistributionCircuit",IFCDAMPER:"IfcDamper",IFCCOOLINGTOWER:"IfcCoolingTower",IFCCOOLEDBEAM:"IfcCooledBeam",IFCCONDENSER:"IfcCondenser",IFCCOMPRESSOR:"IfcCompressor",IFCCOMMUNICATIONSAPPLIANCE:"IfcCommunicationsAppliance",IFCCOIL:"IfcCoil",IFCCHILLER:"IfcChiller",IFCCABLESEGMENT:"IfcCableSegment",IFCCABLEFITTING:"IfcCableFitting",IFCCABLECARRIERSEGMENT:"IfcCableCarrierSegment",IFCCABLECARRIERFITTING:"IfcCableCarrierFitting",IFCBURNER:"IfcBurner",IFCBOILER:"IfcBoiler",IFCBEAMSTANDARDCASE:"IfcBeamStandardCase",IFCAUDIOVISUALAPPLIANCE:"IfcAudioVisualAppliance",IFCAIRTOAIRHEATRECOVERY:"IfcAirToAirHeatRecovery",IFCAIRTERMINALBOX:"IfcAirTerminalBox",IFCAIRTERMINAL:"IfcAirTerminal",IFCWINDOWSTANDARDCASE:"IfcWindowStandardCase",IFCWASTETERMINAL:"IfcWasteTerminal",IFCWALLELEMENTEDCASE:"IfcWallElementedCase",IFCVALVE:"IfcValve",IFCUNITARYEQUIPMENT:"IfcUnitaryEquipment",IFCUNITARYCONTROLELEMENTTYPE:"IfcUnitaryControlElementType",IFCTUBEBUNDLE:"IfcTubeBundle",IFCTRANSFORMER:"IfcTransformer",IFCTANK:"IfcTank",IFCSWITCHINGDEVICE:"IfcSwitchingDevice",IFCSTRUCTURALLOADCASE:"IfcStructuralLoadCase",IFCSTACKTERMINAL:"IfcStackTerminal",IFCSPACEHEATER:"IfcSpaceHeater",IFCSOLARDEVICE:"IfcSolarDevice",IFCSLABSTANDARDCASE:"IfcSlabStandardCase",IFCSLABELEMENTEDCASE:"IfcSlabElementedCase",IFCSHADINGDEVICE:"IfcShadingDevice",IFCSANITARYTERMINAL:"IfcSanitaryTerminal",IFCREINFORCINGBARTYPE:"IfcReinforcingBarType",IFCRATIONALBSPLINECURVEWITHKNOTS:"IfcRationalBSplineCurveWithKnots",IFCPUMP:"IfcPump",IFCPROTECTIVEDEVICETRIPPINGUNITTYPE:"IfcProtectiveDeviceTrippingUnitType",IFCPROTECTIVEDEVICE:"IfcProtectiveDevice",IFCPLATESTANDARDCASE:"IfcPlateStandardCase",IFCPIPESEGMENT:"IfcPipeSegment",IFCPIPEFITTING:"IfcPipeFitting",IFCOUTLET:"IfcOutlet",IFCOUTERBOUNDARYCURVE:"IfcOuterBoundaryCurve",IFCMOTORCONNECTION:"IfcMotorConnection",IFCMEMBERSTANDARDCASE:"IfcMemberStandardCase",IFCMEDICALDEVICE:"IfcMedicalDevice",IFCLIGHTFIXTURE:"IfcLightFixture",IFCLAMP:"IfcLamp",IFCJUNCTIONBOX:"IfcJunctionBox",IFCINTERCEPTOR:"IfcInterceptor",IFCHUMIDIFIER:"IfcHumidifier",IFCHEATEXCHANGER:"IfcHeatExchanger",IFCFLOWMETER:"IfcFlowMeter",IFCEXTERNALSPATIALELEMENT:"IfcExternalSpatialElement",IFCEVAPORATOR:"IfcEvaporator",IFCEVAPORATIVECOOLER:"IfcEvaporativeCooler",IFCENGINE:"IfcEngine",IFCELECTRICDISTRIBUTIONBOARDTYPE:"IfcElectricDistributionBoardType",IFCDOORSTANDARDCASE:"IfcDoorStandardCase",IFCDISTRIBUTIONSYSTEM:"IfcDistributionSystem",IFCCOMMUNICATIONSAPPLIANCETYPE:"IfcCommunicationsApplianceType",IFCCOLUMNSTANDARDCASE:"IfcColumnStandardCase",IFCCIVILELEMENT:"IfcCivilElement",IFCCHIMNEY:"IfcChimney",IFCCABLEFITTINGTYPE:"IfcCableFittingType",IFCBURNERTYPE:"IfcBurnerType",IFCBUILDINGSYSTEM:"IfcBuildingSystem",IFCBUILDINGELEMENTPARTTYPE:"IfcBuildingElementPartType",IFCBOUNDARYCURVE:"IfcBoundaryCurve",IFCBSPLINECURVEWITHKNOTS:"IfcBSplineCurveWithKnots",IFCAUDIOVISUALAPPLIANCETYPE:"IfcAudioVisualApplianceType",IFCWORKCALENDAR:"IfcWorkCalendar",IFCWINDOWTYPE:"IfcWindowType",IFCVOIDINGFEATURE:"IfcVoidingFeature",IFCVIBRATIONISOLATOR:"IfcVibrationIsolator",IFCTENDONTYPE:"IfcTendonType",IFCTENDONANCHORTYPE:"IfcTendonAnchorType",IFCSYSTEMFURNITUREELEMENT:"IfcSystemFurnitureElement",IFCSURFACEFEATURE:"IfcSurfaceFeature",IFCSTRUCTURALSURFACEACTION:"IfcStructuralSurfaceAction",IFCSTRUCTURALCURVEREACTION:"IfcStructuralCurveReaction",IFCSTRUCTURALCURVEACTION:"IfcStructuralCurveAction",IFCSTAIRTYPE:"IfcStairType",IFCSOLARDEVICETYPE:"IfcSolarDeviceType",IFCSHADINGDEVICETYPE:"IfcShadingDeviceType",IFCSEAMCURVE:"IfcSeamCurve",IFCROOFTYPE:"IfcRoofType",IFCREINFORCINGMESHTYPE:"IfcReinforcingMeshType",IFCREINFORCINGELEMENTTYPE:"IfcReinforcingElementType",IFCRATIONALBSPLINESURFACEWITHKNOTS:"IfcRationalBSplineSurfaceWithKnots",IFCRAMPTYPE:"IfcRampType",IFCPOLYGONALFACESET:"IfcPolygonalFaceSet",IFCPILETYPE:"IfcPileType",IFCOPENINGSTANDARDCASE:"IfcOpeningStandardCase",IFCMEDICALDEVICETYPE:"IfcMedicalDeviceType",IFCINTERSECTIONCURVE:"IfcIntersectionCurve",IFCINTERCEPTORTYPE:"IfcInterceptorType",IFCINDEXEDPOLYCURVE:"IfcIndexedPolyCurve",IFCGEOGRAPHICELEMENT:"IfcGeographicElement",IFCFURNITURE:"IfcFurniture",IFCFOOTINGTYPE:"IfcFootingType",IFCEXTERNALSPATIALSTRUCTUREELEMENT:"IfcExternalSpatialStructureElement",IFCEVENT:"IfcEvent",IFCENGINETYPE:"IfcEngineType",IFCELEMENTASSEMBLYTYPE:"IfcElementAssemblyType",IFCDOORTYPE:"IfcDoorType",IFCCYLINDRICALSURFACE:"IfcCylindricalSurface",IFCCONSTRUCTIONPRODUCTRESOURCETYPE:"IfcConstructionProductResourceType",IFCCONSTRUCTIONMATERIALRESOURCETYPE:"IfcConstructionMaterialResourceType",IFCCONSTRUCTIONEQUIPMENTRESOURCETYPE:"IfcConstructionEquipmentResourceType",IFCCOMPOSITECURVEONSURFACE:"IfcCompositeCurveOnSurface",IFCCOMPLEXPROPERTYTEMPLATE:"IfcComplexPropertyTemplate",IFCCIVILELEMENTTYPE:"IfcCivilElementType",IFCCHIMNEYTYPE:"IfcChimneyType",IFCBSPLINESURFACEWITHKNOTS:"IfcBSplineSurfaceWithKnots",IFCBSPLINESURFACE:"IfcBSplineSurface",IFCADVANCEDBREPWITHVOIDS:"IfcAdvancedBrepWithVoids",IFCADVANCEDBREP:"IfcAdvancedBrep",IFCTRIANGULATEDFACESET:"IfcTriangulatedFaceSet",IFCTOROIDALSURFACE:"IfcToroidalSurface",IFCTESSELLATEDFACESET:"IfcTessellatedFaceSet",IFCTASKTYPE:"IfcTaskType",IFCSURFACECURVE:"IfcSurfaceCurve",IFCSUBCONTRACTRESOURCETYPE:"IfcSubContractResourceType",IFCSTRUCTURALSURFACEREACTION:"IfcStructuralSurfaceReaction",IFCSPHERICALSURFACE:"IfcSphericalSurface",IFCSPATIALZONETYPE:"IfcSpatialZoneType",IFCSPATIALZONE:"IfcSpatialZone",IFCSPATIALELEMENTTYPE:"IfcSpatialElementType",IFCSPATIALELEMENT:"IfcSpatialElement",IFCSIMPLEPROPERTYTEMPLATE:"IfcSimplePropertyTemplate",IFCREVOLVEDAREASOLIDTAPERED:"IfcRevolvedAreaSolidTapered",IFCREPARAMETRISEDCOMPOSITECURVESEGMENT:"IfcReparametrisedCompositeCurveSegment",IFCRELSPACEBOUNDARY2NDLEVEL:"IfcRelSpaceBoundary2ndLevel",IFCRELSPACEBOUNDARY1STLEVEL:"IfcRelSpaceBoundary1stLevel",IFCRELINTERFERESELEMENTS:"IfcRelInterferesElements",IFCRELDEFINESBYTEMPLATE:"IfcRelDefinesByTemplate",IFCRELDEFINESBYOBJECT:"IfcRelDefinesByObject",IFCRELDECLARES:"IfcRelDeclares",IFCRELASSIGNSTOGROUPBYFACTOR:"IfcRelAssignsToGroupByFactor",IFCPROPERTYTEMPLATE:"IfcPropertyTemplate",IFCPROPERTYSETTEMPLATE:"IfcPropertySetTemplate",IFCPROJECTLIBRARY:"IfcProjectLibrary",IFCPROCEDURETYPE:"IfcProcedureType",IFCPREDEFINEDPROPERTYSET:"IfcPredefinedPropertySet",IFCPCURVE:"IfcPCurve",IFCLABORRESOURCETYPE:"IfcLaborResourceType",IFCINDEXEDPOLYGONALFACEWITHVOIDS:"IfcIndexedPolygonalFaceWithVoids",IFCINDEXEDPOLYGONALFACE:"IfcIndexedPolygonalFace",IFCGEOGRAPHICELEMENTTYPE:"IfcGeographicElementType",IFCFIXEDREFERENCESWEPTAREASOLID:"IfcFixedReferenceSweptAreaSolid",IFCEXTRUDEDAREASOLIDTAPERED:"IfcExtrudedAreaSolidTapered",IFCEVENTTYPE:"IfcEventType",IFCCURVEBOUNDEDSURFACE:"IfcCurveBoundedSurface",IFCCREWRESOURCETYPE:"IfcCrewResourceType",IFCCONTEXT:"IfcContext",IFCCONSTRUCTIONRESOURCETYPE:"IfcConstructionResourceType",IFCCARTESIANPOINTLIST3D:"IfcCartesianPointList3D",IFCCARTESIANPOINTLIST2D:"IfcCartesianPointList2D",IFCCARTESIANPOINTLIST:"IfcCartesianPointList",IFCADVANCEDFACE:"IfcAdvancedFace",IFCTYPERESOURCE:"IfcTypeResource",IFCTYPEPROCESS:"IfcTypeProcess",IFCTESSELLATEDITEM:"IfcTessellatedItem",IFCSWEPTDISKSOLIDPOLYGONAL:"IfcSweptDiskSolidPolygonal",IFCRESOURCETIME:"IfcResourceTime",IFCRESOURCECONSTRAINTRELATIONSHIP:"IfcResourceConstraintRelationship",IFCRESOURCEAPPROVALRELATIONSHIP:"IfcResourceApprovalRelationship",IFCQUANTITYSET:"IfcQuantitySet",IFCPROPERTYTEMPLATEDEFINITION:"IfcPropertyTemplateDefinition",IFCPREDEFINEDPROPERTIES:"IfcPredefinedProperties",IFCMIRROREDPROFILEDEF:"IfcMirroredProfileDef",IFCMATERIALRELATIONSHIP:"IfcMaterialRelationship",IFCMATERIALPROFILESETUSAGETAPERING:"IfcMaterialProfileSetUsageTapering",IFCMATERIALPROFILESETUSAGE:"IfcMaterialProfileSetUsage",IFCMATERIALCONSTITUENTSET:"IfcMaterialConstituentSet",IFCMATERIALCONSTITUENT:"IfcMaterialConstituent",IFCLAGTIME:"IfcLagTime",IFCINDEXEDTRIANGLETEXTUREMAP:"IfcIndexedTriangleTextureMap",IFCINDEXEDTEXTUREMAP:"IfcIndexedTextureMap",IFCINDEXEDCOLOURMAP:"IfcIndexedColourMap",IFCEXTERNALREFERENCERELATIONSHIP:"IfcExternalReferenceRelationship",IFCEXTENDEDPROPERTIES:"IfcExtendedProperties",IFCEVENTTIME:"IfcEventTime",IFCCONVERSIONBASEDUNITWITHOFFSET:"IfcConversionBasedUnitWithOffset",IFCCOLOURRGBLIST:"IfcColourRgbList",IFCWORKTIME:"IfcWorkTime",IFCTIMEPERIOD:"IfcTimePeriod",IFCTEXTUREVERTEXLIST:"IfcTextureVertexList",IFCTASKTIMERECURRING:"IfcTaskTimeRecurring",IFCTASKTIME:"IfcTaskTime",IFCTABLECOLUMN:"IfcTableColumn",IFCSURFACEREINFORCEMENTAREA:"IfcSurfaceReinforcementArea",IFCSTRUCTURALLOADORRESULT:"IfcStructuralLoadOrResult",IFCSTRUCTURALLOADCONFIGURATION:"IfcStructuralLoadConfiguration",IFCSCHEDULINGTIME:"IfcSchedulingTime",IFCRESOURCELEVELRELATIONSHIP:"IfcResourceLevelRelationship",IFCREFERENCE:"IfcReference",IFCRECURRENCEPATTERN:"IfcRecurrencePattern",IFCPROPERTYABSTRACTION:"IfcPropertyAbstraction",IFCPROJECTEDCRS:"IfcProjectedCrs",IFCPRESENTATIONITEM:"IfcPresentationItem",IFCMATERIALUSAGEDEFINITION:"IfcMaterialUsageDefinition",IFCMATERIALPROFILEWITHOFFSETS:"IfcMaterialProfileWithOffsets",IFCMATERIALPROFILESET:"IfcMaterialProfileSet",IFCMATERIALPROFILE:"IfcMaterialProfile",IFCMATERIALLAYERWITHOFFSETS:"IfcMaterialLayerWithOffsets",IFCMATERIALDEFINITION:"IfcMaterialDefinition",IFCMAPCONVERSION:"IfcMapConversion",IFCEXTERNALINFORMATION:"IfcExternalInformation",IFCCOORDINATEREFERENCESYSTEM:"IfcCoordinateReferenceSystem",IFCCOORDINATEOPERATION:"IfcCoordinateOperation",IFCCONNECTIONVOLUMEGEOMETRY:"IfcConnectionVolumeGeometry",IFCREINFORCINGBAR:"IfcReinforcingBar",IFCELECTRICDISTRIBUTIONPOINT:"IfcElectricDistributionPoint",IFCDISTRIBUTIONCONTROLELEMENT:"IfcDistributionControlElement",IFCDISTRIBUTIONCHAMBERELEMENT:"IfcDistributionChamberElement",IFCCONTROLLERTYPE:"IfcControllerType",IFCCHAMFEREDGEFEATURE:"IfcChamferEdgeFeature",IFCBEAM:"IfcBeam",IFCALARMTYPE:"IfcAlarmType",IFCACTUATORTYPE:"IfcActuatorType",IFCWINDOW:"IfcWindow",IFCWALLSTANDARDCASE:"IfcWallStandardCase",IFCWALL:"IfcWall",IFCVIBRATIONISOLATORTYPE:"IfcVibrationIsolatorType",IFCTENDONANCHOR:"IfcTendonAnchor",IFCTENDON:"IfcTendon",IFCSTRUCTURALANALYSISMODEL:"IfcStructuralAnalysisModel",IFCSTAIRFLIGHT:"IfcStairFlight",IFCSTAIR:"IfcStair",IFCSLAB:"IfcSlab",IFCSENSORTYPE:"IfcSensorType",IFCROUNDEDEDGEFEATURE:"IfcRoundedEdgeFeature",IFCROOF:"IfcRoof",IFCREINFORCINGMESH:"IfcReinforcingMesh",IFCREINFORCINGELEMENT:"IfcReinforcingElement",IFCRATIONALBEZIERCURVE:"IfcRationalBezierCurve",IFCRAMPFLIGHT:"IfcRampFlight",IFCRAMP:"IfcRamp",IFCRAILING:"IfcRailing",IFCPLATE:"IfcPlate",IFCPILE:"IfcPile",IFCMEMBER:"IfcMember",IFCFOOTING:"IfcFooting",IFCFLOWTREATMENTDEVICE:"IfcFlowTreatmentDevice",IFCFLOWTERMINAL:"IfcFlowTerminal",IFCFLOWSTORAGEDEVICE:"IfcFlowStorageDevice",IFCFLOWSEGMENT:"IfcFlowSegment",IFCFLOWMOVINGDEVICE:"IfcFlowMovingDevice",IFCFLOWINSTRUMENTTYPE:"IfcFlowInstrumentType",IFCFLOWFITTING:"IfcFlowFitting",IFCFLOWCONTROLLER:"IfcFlowController",IFCFIRESUPPRESSIONTERMINALTYPE:"IfcFireSuppressionTerminalType",IFCFILTERTYPE:"IfcFilterType",IFCFANTYPE:"IfcFanType",IFCENERGYCONVERSIONDEVICE:"IfcEnergyConversionDevice",IFCELECTRICALELEMENT:"IfcElectricalElement",IFCELECTRICALCIRCUIT:"IfcElectricalCircuit",IFCELECTRICTIMECONTROLTYPE:"IfcElectricTimeControlType",IFCELECTRICMOTORTYPE:"IfcElectricMotorType",IFCELECTRICHEATERTYPE:"IfcElectricHeaterType",IFCELECTRICGENERATORTYPE:"IfcElectricGeneratorType",IFCELECTRICFLOWSTORAGEDEVICETYPE:"IfcElectricFlowStorageDeviceType",IFCELECTRICAPPLIANCETYPE:"IfcElectricApplianceType",IFCEDGEFEATURE:"IfcEdgeFeature",IFCDUCTSILENCERTYPE:"IfcDuctSilencerType",IFCDUCTSEGMENTTYPE:"IfcDuctSegmentType",IFCDUCTFITTINGTYPE:"IfcDuctFittingType",IFCDOOR:"IfcDoor",IFCDISTRIBUTIONPORT:"IfcDistributionPort",IFCDISTRIBUTIONFLOWELEMENT:"IfcDistributionFlowElement",IFCDISTRIBUTIONELEMENT:"IfcDistributionElement",IFCDISTRIBUTIONCONTROLELEMENTTYPE:"IfcDistributionControlElementType",IFCDISTRIBUTIONCHAMBERELEMENTTYPE:"IfcDistributionChamberElementType",IFCDISCRETEACCESSORYTYPE:"IfcDiscreteAccessoryType",IFCDISCRETEACCESSORY:"IfcDiscreteAccessory",IFCDIAMETERDIMENSION:"IfcDiameterDimension",IFCDAMPERTYPE:"IfcDamperType",IFCCURTAINWALL:"IfcCurtainWall",IFCCOVERING:"IfcCovering",IFCCOOLINGTOWERTYPE:"IfcCoolingTowerType",IFCCOOLEDBEAMTYPE:"IfcCooledBeamType",IFCCONSTRUCTIONPRODUCTRESOURCE:"IfcConstructionProductResource",IFCCONSTRUCTIONMATERIALRESOURCE:"IfcConstructionMaterialResource",IFCCONSTRUCTIONEQUIPMENTRESOURCE:"IfcConstructionEquipmentResource",IFCCONDITIONCRITERION:"IfcConditionCriterion",IFCCONDITION:"IfcCondition",IFCCONDENSERTYPE:"IfcCondenserType",IFCCOMPRESSORTYPE:"IfcCompressorType",IFCCOLUMN:"IfcColumn",IFCCOILTYPE:"IfcCoilType",IFCCIRCLE:"IfcCircle",IFCCHILLERTYPE:"IfcChillerType",IFCCABLESEGMENTTYPE:"IfcCableSegmentType",IFCCABLECARRIERSEGMENTTYPE:"IfcCableCarrierSegmentType",IFCCABLECARRIERFITTINGTYPE:"IfcCableCarrierFittingType",IFCBUILDINGELEMENTPROXYTYPE:"IfcBuildingElementProxyType",IFCBUILDINGELEMENTPROXY:"IfcBuildingElementProxy",IFCBUILDINGELEMENTPART:"IfcBuildingElementPart",IFCBUILDINGELEMENTCOMPONENT:"IfcBuildingElementComponent",IFCBUILDINGELEMENT:"IfcBuildingElement",IFCBOILERTYPE:"IfcBoilerType",IFCBEZIERCURVE:"IfcBezierCurve",IFCBEAMTYPE:"IfcBeamType",IFCBSPLINECURVE:"IfcBSplineCurve",IFCASSET:"IfcAsset",IFCANGULARDIMENSION:"IfcAngularDimension",IFCAIRTOAIRHEATRECOVERYTYPE:"IfcAirToAirHeatRecoveryType",IFCAIRTERMINALTYPE:"IfcAirTerminalType",IFCAIRTERMINALBOXTYPE:"IfcAirTerminalBoxType",IFCACTIONREQUEST:"IfcActionRequest",IFC2DCOMPOSITECURVE:"Ifc2DCompositeCurve",IFCZONE:"IfcZone",IFCWORKSCHEDULE:"IfcWorkSchedule",IFCWORKPLAN:"IfcWorkPlan",IFCWORKCONTROL:"IfcWorkControl",IFCWASTETERMINALTYPE:"IfcWasteTerminalType",IFCWALLTYPE:"IfcWallType",IFCVIRTUALELEMENT:"IfcVirtualElement",IFCVALVETYPE:"IfcValveType",IFCUNITARYEQUIPMENTTYPE:"IfcUnitaryEquipmentType",IFCTUBEBUNDLETYPE:"IfcTubeBundleType",IFCTRIMMEDCURVE:"IfcTrimmedCurve",IFCTRANSPORTELEMENT:"IfcTransportElement",IFCTRANSFORMERTYPE:"IfcTransformerType",IFCTIMESERIESSCHEDULE:"IfcTimeSeriesSchedule",IFCTANKTYPE:"IfcTankType",IFCSYSTEM:"IfcSystem",IFCSWITCHINGDEVICETYPE:"IfcSwitchingDeviceType",IFCSUBCONTRACTRESOURCE:"IfcSubContractResource",IFCSTRUCTURALSURFACECONNECTION:"IfcStructuralSurfaceConnection",IFCSTRUCTURALRESULTGROUP:"IfcStructuralResultGroup",IFCSTRUCTURALPOINTREACTION:"IfcStructuralPointReaction",IFCSTRUCTURALPOINTCONNECTION:"IfcStructuralPointConnection",IFCSTRUCTURALPOINTACTION:"IfcStructuralPointAction",IFCSTRUCTURALPLANARACTIONVARYING:"IfcStructuralPlanarActionVarying",IFCSTRUCTURALPLANARACTION:"IfcStructuralPlanarAction",IFCSTRUCTURALLOADGROUP:"IfcStructuralLoadGroup",IFCSTRUCTURALLINEARACTIONVARYING:"IfcStructuralLinearActionVarying",IFCSTRUCTURALLINEARACTION:"IfcStructuralLinearAction",IFCSTRUCTURALCURVEMEMBERVARYING:"IfcStructuralCurveMemberVarying",IFCSTRUCTURALCURVEMEMBER:"IfcStructuralCurveMember",IFCSTRUCTURALCURVECONNECTION:"IfcStructuralCurveConnection",IFCSTRUCTURALCONNECTION:"IfcStructuralConnection",IFCSTRUCTURALACTION:"IfcStructuralAction",IFCSTAIRFLIGHTTYPE:"IfcStairFlightType",IFCSTACKTERMINALTYPE:"IfcStackTerminalType",IFCSPACETYPE:"IfcSpaceType",IFCSPACEPROGRAM:"IfcSpaceProgram",IFCSPACEHEATERTYPE:"IfcSpaceHeaterType",IFCSPACE:"IfcSpace",IFCSLABTYPE:"IfcSlabType",IFCSITE:"IfcSite",IFCSERVICELIFE:"IfcServiceLife",IFCSCHEDULETIMECONTROL:"IfcScheduleTimeControl",IFCSANITARYTERMINALTYPE:"IfcSanitaryTerminalType",IFCRELASSIGNSTASKS:"IfcRelAssignsTasks",IFCRELAGGREGATES:"IfcRelAggregates",IFCRAMPFLIGHTTYPE:"IfcRampFlightType",IFCRAILINGTYPE:"IfcRailingType",IFCRADIUSDIMENSION:"IfcRadiusDimension",IFCPUMPTYPE:"IfcPumpType",IFCPROTECTIVEDEVICETYPE:"IfcProtectiveDeviceType",IFCPROJECTIONELEMENT:"IfcProjectionElement",IFCPROJECTORDERRECORD:"IfcProjectOrderRecord",IFCPROJECTORDER:"IfcProjectOrder",IFCPROCEDURE:"IfcProcedure",IFCPORT:"IfcPort",IFCPOLYLINE:"IfcPolyline",IFCPLATETYPE:"IfcPlateType",IFCPIPESEGMENTTYPE:"IfcPipeSegmentType",IFCPIPEFITTINGTYPE:"IfcPipeFittingType",IFCPERMIT:"IfcPermit",IFCPERFORMANCEHISTORY:"IfcPerformanceHistory",IFCOUTLETTYPE:"IfcOutletType",IFCORDERACTION:"IfcOrderAction",IFCOPENINGELEMENT:"IfcOpeningElement",IFCOCCUPANT:"IfcOccupant",IFCMOVE:"IfcMove",IFCMOTORCONNECTIONTYPE:"IfcMotorConnectionType",IFCMEMBERTYPE:"IfcMemberType",IFCMECHANICALFASTENERTYPE:"IfcMechanicalFastenerType",IFCMECHANICALFASTENER:"IfcMechanicalFastener",IFCLINEARDIMENSION:"IfcLinearDimension",IFCLIGHTFIXTURETYPE:"IfcLightFixtureType",IFCLAMPTYPE:"IfcLampType",IFCLABORRESOURCE:"IfcLaborResource",IFCJUNCTIONBOXTYPE:"IfcJunctionBoxType",IFCINVENTORY:"IfcInventory",IFCHUMIDIFIERTYPE:"IfcHumidifierType",IFCHEATEXCHANGERTYPE:"IfcHeatExchangerType",IFCGROUP:"IfcGroup",IFCGRID:"IfcGrid",IFCGASTERMINALTYPE:"IfcGasTerminalType",IFCFURNITURESTANDARD:"IfcFurnitureStandard",IFCFURNISHINGELEMENT:"IfcFurnishingElement",IFCFLOWTREATMENTDEVICETYPE:"IfcFlowTreatmentDeviceType",IFCFLOWTERMINALTYPE:"IfcFlowTerminalType",IFCFLOWSTORAGEDEVICETYPE:"IfcFlowStorageDeviceType",IFCFLOWSEGMENTTYPE:"IfcFlowSegmentType",IFCFLOWMOVINGDEVICETYPE:"IfcFlowMovingDeviceType",IFCFLOWMETERTYPE:"IfcFlowMeterType",IFCFLOWFITTINGTYPE:"IfcFlowFittingType",IFCFLOWCONTROLLERTYPE:"IfcFlowControllerType",IFCFEATUREELEMENTSUBTRACTION:"IfcFeatureElementSubtraction",IFCFEATUREELEMENTADDITION:"IfcFeatureElementAddition",IFCFEATUREELEMENT:"IfcFeatureElement",IFCFASTENERTYPE:"IfcFastenerType",IFCFASTENER:"IfcFastener",IFCFACETEDBREPWITHVOIDS:"IfcFacetedBrepWithVoids",IFCFACETEDBREP:"IfcFacetedBrep",IFCEVAPORATORTYPE:"IfcEvaporatorType",IFCEVAPORATIVECOOLERTYPE:"IfcEvaporativeCoolerType",IFCEQUIPMENTSTANDARD:"IfcEquipmentStandard",IFCEQUIPMENTELEMENT:"IfcEquipmentElement",IFCENERGYCONVERSIONDEVICETYPE:"IfcEnergyConversionDeviceType",IFCELLIPSE:"IfcEllipse",IFCELEMENTCOMPONENTTYPE:"IfcElementComponentType",IFCELEMENTCOMPONENT:"IfcElementComponent",IFCELEMENTASSEMBLY:"IfcElementAssembly",IFCELEMENT:"IfcElement",IFCELECTRICALBASEPROPERTIES:"IfcElectricalBaseProperties",IFCDISTRIBUTIONFLOWELEMENTTYPE:"IfcDistributionFlowElementType",IFCDISTRIBUTIONELEMENTTYPE:"IfcDistributionElementType",IFCDIMENSIONCURVEDIRECTEDCALLOUT:"IfcDimensionCurveDirectedCallout",IFCCURTAINWALLTYPE:"IfcCurtainWallType",IFCCREWRESOURCE:"IfcCrewResource",IFCCOVERINGTYPE:"IfcCoveringType",IFCCOSTSCHEDULE:"IfcCostSchedule",IFCCOSTITEM:"IfcCostItem",IFCCONTROL:"IfcControl",IFCCONSTRUCTIONRESOURCE:"IfcConstructionResource",IFCCONIC:"IfcConic",IFCCOMPOSITECURVE:"IfcCompositeCurve",IFCCOLUMNTYPE:"IfcColumnType",IFCCIRCLEHOLLOWPROFILEDEF:"IfcCircleHollowProfileDef",IFCBUILDINGSTOREY:"IfcBuildingStorey",IFCBUILDINGELEMENTTYPE:"IfcBuildingElementType",IFCBUILDING:"IfcBuilding",IFCBOUNDEDCURVE:"IfcBoundedCurve",IFCBOOLEANCLIPPINGRESULT:"IfcBooleanClippingResult",IFCBLOCK:"IfcBlock",IFCASYMMETRICISHAPEPROFILEDEF:"IfcAsymmetricIShapeProfileDef",IFCANNOTATION:"IfcAnnotation",IFCACTOR:"IfcActor",IFCTRANSPORTELEMENTTYPE:"IfcTransportElementType",IFCTASK:"IfcTask",IFCSYSTEMFURNITUREELEMENTTYPE:"IfcSystemFurnitureElementType",IFCSURFACEOFREVOLUTION:"IfcSurfaceOfRevolution",IFCSURFACEOFLINEAREXTRUSION:"IfcSurfaceOfLinearExtrusion",IFCSURFACECURVESWEPTAREASOLID:"IfcSurfaceCurveSweptAreaSolid",IFCSTRUCTUREDDIMENSIONCALLOUT:"IfcStructuredDimensionCallout",IFCSTRUCTURALSURFACEMEMBERVARYING:"IfcStructuralSurfaceMemberVarying",IFCSTRUCTURALSURFACEMEMBER:"IfcStructuralSurfaceMember",IFCSTRUCTURALREACTION:"IfcStructuralReaction",IFCSTRUCTURALMEMBER:"IfcStructuralMember",IFCSTRUCTURALITEM:"IfcStructuralItem",IFCSTRUCTURALACTIVITY:"IfcStructuralActivity",IFCSPHERE:"IfcSphere",IFCSPATIALSTRUCTUREELEMENTTYPE:"IfcSpatialStructureElementType",IFCSPATIALSTRUCTUREELEMENT:"IfcSpatialStructureElement",IFCRIGHTCIRCULARCYLINDER:"IfcRightCircularCylinder",IFCRIGHTCIRCULARCONE:"IfcRightCircularCone",IFCREVOLVEDAREASOLID:"IfcRevolvedAreaSolid",IFCRESOURCE:"IfcResource",IFCRELVOIDSELEMENT:"IfcRelVoidsElement",IFCRELSPACEBOUNDARY:"IfcRelSpaceBoundary",IFCRELSERVICESBUILDINGS:"IfcRelServicesBuildings",IFCRELSEQUENCE:"IfcRelSequence",IFCRELSCHEDULESCOSTITEMS:"IfcRelSchedulesCostItems",IFCRELREFERENCEDINSPATIALSTRUCTURE:"IfcRelReferencedInSpatialStructure",IFCRELPROJECTSELEMENT:"IfcRelProjectsElement",IFCRELOVERRIDESPROPERTIES:"IfcRelOverridesProperties",IFCRELOCCUPIESSPACES:"IfcRelOccupiesSpaces",IFCRELNESTS:"IfcRelNests",IFCRELINTERACTIONREQUIREMENTS:"IfcRelInteractionRequirements",IFCRELFLOWCONTROLELEMENTS:"IfcRelFlowControlElements",IFCRELFILLSELEMENT:"IfcRelFillsElement",IFCRELDEFINESBYTYPE:"IfcRelDefinesByType",IFCRELDEFINESBYPROPERTIES:"IfcRelDefinesByProperties",IFCRELDEFINES:"IfcRelDefines",IFCRELDECOMPOSES:"IfcRelDecomposes",IFCRELCOVERSSPACES:"IfcRelCoversSpaces",IFCRELCOVERSBLDGELEMENTS:"IfcRelCoversBldgElements",IFCRELCONTAINEDINSPATIALSTRUCTURE:"IfcRelContainedInSpatialStructure",IFCRELCONNECTSWITHREALIZINGELEMENTS:"IfcRelConnectsWithRealizingElements",IFCRELCONNECTSWITHECCENTRICITY:"IfcRelConnectsWithEccentricity",IFCRELCONNECTSSTRUCTURALMEMBER:"IfcRelConnectsStructuralMember",IFCRELCONNECTSSTRUCTURALELEMENT:"IfcRelConnectsStructuralElement",IFCRELCONNECTSSTRUCTURALACTIVITY:"IfcRelConnectsStructuralActivity",IFCRELCONNECTSPORTS:"IfcRelConnectsPorts",IFCRELCONNECTSPORTTOELEMENT:"IfcRelConnectsPortToElement",IFCRELCONNECTSPATHELEMENTS:"IfcRelConnectsPathElements",IFCRELCONNECTSELEMENTS:"IfcRelConnectsElements",IFCRELCONNECTS:"IfcRelConnects",IFCRELASSOCIATESPROFILEPROPERTIES:"IfcRelAssociatesProfileProperties",IFCRELASSOCIATESMATERIAL:"IfcRelAssociatesMaterial",IFCRELASSOCIATESLIBRARY:"IfcRelAssociatesLibrary",IFCRELASSOCIATESDOCUMENT:"IfcRelAssociatesDocument",IFCRELASSOCIATESCONSTRAINT:"IfcRelAssociatesConstraint",IFCRELASSOCIATESCLASSIFICATION:"IfcRelAssociatesClassification",IFCRELASSOCIATESAPPROVAL:"IfcRelAssociatesApproval",IFCRELASSOCIATESAPPLIEDVALUE:"IfcRelAssociatesAppliedValue",IFCRELASSOCIATES:"IfcRelAssociates",IFCRELASSIGNSTORESOURCE:"IfcRelAssignsToResource",IFCRELASSIGNSTOPROJECTORDER:"IfcRelAssignsToProjectOrder",IFCRELASSIGNSTOPRODUCT:"IfcRelAssignsToProduct",IFCRELASSIGNSTOPROCESS:"IfcRelAssignsToProcess",IFCRELASSIGNSTOGROUP:"IfcRelAssignsToGroup",IFCRELASSIGNSTOCONTROL:"IfcRelAssignsToControl",IFCRELASSIGNSTOACTOR:"IfcRelAssignsToActor",IFCRELASSIGNS:"IfcRelAssigns",IFCRECTANGULARTRIMMEDSURFACE:"IfcRectangularTrimmedSurface",IFCRECTANGULARPYRAMID:"IfcRectangularPyramid",IFCRECTANGLEHOLLOWPROFILEDEF:"IfcRectangleHollowProfileDef",IFCPROXY:"IfcProxy",IFCPROPERTYSET:"IfcPropertySet",IFCPROJECTIONCURVE:"IfcProjectionCurve",IFCPROJECT:"IfcProject",IFCPRODUCT:"IfcProduct",IFCPROCESS:"IfcProcess",IFCPLANE:"IfcPlane",IFCPLANARBOX:"IfcPlanarBox",IFCPERMEABLECOVERINGPROPERTIES:"IfcPermeableCoveringProperties",IFCOFFSETCURVE3D:"IfcOffsetCurve3D",IFCOFFSETCURVE2D:"IfcOffsetCurve2D",IFCOBJECT:"IfcObject",IFCMANIFOLDSOLIDBREP:"IfcManifoldSolidBrep",IFCLINE:"IfcLine",IFCLSHAPEPROFILEDEF:"IfcLShapeProfileDef",IFCISHAPEPROFILEDEF:"IfcIShapeProfileDef",IFCGEOMETRICCURVESET:"IfcGeometricCurveSet",IFCFURNITURETYPE:"IfcFurnitureType",IFCFURNISHINGELEMENTTYPE:"IfcFurnishingElementType",IFCFLUIDFLOWPROPERTIES:"IfcFluidFlowProperties",IFCFILLAREASTYLETILES:"IfcFillAreaStyleTiles",IFCFILLAREASTYLETILESYMBOLWITHSTYLE:"IfcFillAreaStyleTileSymbolWithStyle",IFCFILLAREASTYLEHATCHING:"IfcFillAreaStyleHatching",IFCFACEBASEDSURFACEMODEL:"IfcFaceBasedSurfaceModel",IFCEXTRUDEDAREASOLID:"IfcExtrudedAreaSolid",IFCENERGYPROPERTIES:"IfcEnergyProperties",IFCELLIPSEPROFILEDEF:"IfcEllipseProfileDef",IFCELEMENTARYSURFACE:"IfcElementarySurface",IFCELEMENTTYPE:"IfcElementType",IFCELEMENTQUANTITY:"IfcElementQuantity",IFCEDGELOOP:"IfcEdgeLoop",IFCDRAUGHTINGPREDEFINEDCURVEFONT:"IfcDraughtingPredefinedCurveFont",IFCDRAUGHTINGPREDEFINEDCOLOUR:"IfcDraughtingPredefinedColour",IFCDRAUGHTINGCALLOUT:"IfcDraughtingCallout",IFCDOORSTYLE:"IfcDoorStyle",IFCDOORPANELPROPERTIES:"IfcDoorPanelProperties",IFCDOORLININGPROPERTIES:"IfcDoorLiningProperties",IFCDIRECTION:"IfcDirection",IFCDIMENSIONCURVETERMINATOR:"IfcDimensionCurveTerminator",IFCDIMENSIONCURVE:"IfcDimensionCurve",IFCDEFINEDSYMBOL:"IfcDefinedSymbol",IFCCURVEBOUNDEDPLANE:"IfcCurveBoundedPlane",IFCCURVE:"IfcCurve",IFCCSGSOLID:"IfcCsgSolid",IFCCSGPRIMITIVE3D:"IfcCsgPrimitive3D",IFCCRANERAILFSHAPEPROFILEDEF:"IfcCraneRailFShapeProfileDef",IFCCRANERAILASHAPEPROFILEDEF:"IfcCraneRailAShapeProfileDef",IFCCOMPOSITECURVESEGMENT:"IfcCompositeCurveSegment",IFCCLOSEDSHELL:"IfcClosedShell",IFCCIRCLEPROFILEDEF:"IfcCircleProfileDef",IFCCARTESIANTRANSFORMATIONOPERATOR3DNONUNIFORM:"IfcCartesianTransformationOperator3DNonUniform",IFCCARTESIANTRANSFORMATIONOPERATOR3D:"IfcCartesianTransformationOperator3D",IFCCARTESIANTRANSFORMATIONOPERATOR2DNONUNIFORM:"IfcCartesianTransformationOperator2DNonUniform",IFCCARTESIANTRANSFORMATIONOPERATOR2D:"IfcCartesianTransformationOperator2D",IFCCARTESIANTRANSFORMATIONOPERATOR:"IfcCartesianTransformationOperator",IFCCARTESIANPOINT:"IfcCartesianPoint",IFCCSHAPEPROFILEDEF:"IfcCShapeProfileDef",IFCBOXEDHALFSPACE:"IfcBoxedHalfSpace",IFCBOUNDINGBOX:"IfcBoundingBox",IFCBOUNDEDSURFACE:"IfcBoundedSurface",IFCBOOLEANRESULT:"IfcBooleanResult",IFCAXIS2PLACEMENT3D:"IfcAxis2Placement3D",IFCAXIS2PLACEMENT2D:"IfcAxis2Placement2D",IFCAXIS1PLACEMENT:"IfcAxis1Placement",IFCANNOTATIONSURFACE:"IfcAnnotationSurface",IFCANNOTATIONFILLAREAOCCURRENCE:"IfcAnnotationFillAreaOccurrence",IFCANNOTATIONFILLAREA:"IfcAnnotationFillArea",IFCANNOTATIONCURVEOCCURRENCE:"IfcAnnotationCurveOccurrence",IFCZSHAPEPROFILEDEF:"IfcZShapeProfileDef",IFCWINDOWSTYLE:"IfcWindowStyle",IFCWINDOWPANELPROPERTIES:"IfcWindowPanelProperties",IFCWINDOWLININGPROPERTIES:"IfcWindowLiningProperties",IFCVERTEXLOOP:"IfcVertexLoop",IFCVECTOR:"IfcVector",IFCUSHAPEPROFILEDEF:"IfcUShapeProfileDef",IFCTYPEPRODUCT:"IfcTypeProduct",IFCTYPEOBJECT:"IfcTypeObject",IFCTWODIRECTIONREPEATFACTOR:"IfcTwoDirectionRepeatFactor",IFCTRAPEZIUMPROFILEDEF:"IfcTrapeziumProfileDef",IFCTEXTLITERALWITHEXTENT:"IfcTextLiteralWithExtent",IFCTEXTLITERAL:"IfcTextLiteral",IFCTERMINATORSYMBOL:"IfcTerminatorSymbol",IFCTSHAPEPROFILEDEF:"IfcTShapeProfileDef",IFCSWEPTSURFACE:"IfcSweptSurface",IFCSWEPTDISKSOLID:"IfcSweptDiskSolid",IFCSWEPTAREASOLID:"IfcSweptAreaSolid",IFCSURFACESTYLERENDERING:"IfcSurfaceStyleRendering",IFCSURFACE:"IfcSurface",IFCSUBEDGE:"IfcSubedge",IFCSTRUCTURALSTEELPROFILEPROPERTIES:"IfcStructuralSteelProfileProperties",IFCSTRUCTURALPROFILEPROPERTIES:"IfcStructuralProfileProperties",IFCSTRUCTURALLOADSINGLEFORCEWARPING:"IfcStructuralLoadSingleForceWarping",IFCSTRUCTURALLOADSINGLEFORCE:"IfcStructuralLoadSingleForce",IFCSTRUCTURALLOADSINGLEDISPLACEMENTDISTORTION:"IfcStructuralLoadSingleDisplacementDistortion",IFCSTRUCTURALLOADSINGLEDISPLACEMENT:"IfcStructuralLoadSingleDisplacement",IFCSTRUCTURALLOADPLANARFORCE:"IfcStructuralLoadPlanarForce",IFCSTRUCTURALLOADLINEARFORCE:"IfcStructuralLoadLinearForce",IFCSPACETHERMALLOADPROPERTIES:"IfcSpaceThermalLoadProperties",IFCSOUNDVALUE:"IfcSoundValue",IFCSOUNDPROPERTIES:"IfcSoundProperties",IFCSOLIDMODEL:"IfcSolidModel",IFCSLIPPAGECONNECTIONCONDITION:"IfcSlippageConnectionCondition",IFCSHELLBASEDSURFACEMODEL:"IfcShellBasedSurfaceModel",IFCSERVICELIFEFACTOR:"IfcServiceLifeFactor",IFCSECTIONEDSPINE:"IfcSectionedSpine",IFCROUNDEDRECTANGLEPROFILEDEF:"IfcRoundedRectangleProfileDef",IFCRELATIONSHIP:"IfcRelationship",IFCREINFORCEMENTDEFINITIONPROPERTIES:"IfcReinforcementDefinitionProperties",IFCREGULARTIMESERIES:"IfcRegularTimeSeries",IFCRECTANGLEPROFILEDEF:"IfcRectangleProfileDef",IFCPROPERTYTABLEVALUE:"IfcPropertyTableValue",IFCPROPERTYSINGLEVALUE:"IfcPropertySingleValue",IFCPROPERTYSETDEFINITION:"IfcPropertySetDefinition",IFCPROPERTYREFERENCEVALUE:"IfcPropertyReferenceValue",IFCPROPERTYLISTVALUE:"IfcPropertyListValue",IFCPROPERTYENUMERATEDVALUE:"IfcPropertyEnumeratedValue",IFCPROPERTYDEFINITION:"IfcPropertyDefinition",IFCPROPERTYBOUNDEDVALUE:"IfcPropertyBoundedValue",IFCPRODUCTDEFINITIONSHAPE:"IfcProductDefinitionShape",IFCPREDEFINEDPOINTMARKERSYMBOL:"IfcPredefinedPointMarkerSymbol",IFCPREDEFINEDDIMENSIONSYMBOL:"IfcPredefinedDimensionSymbol",IFCPREDEFINEDCURVEFONT:"IfcPredefinedCurveFont",IFCPREDEFINEDCOLOUR:"IfcPredefinedColour",IFCPOLYGONALBOUNDEDHALFSPACE:"IfcPolygonalBoundedHalfSpace",IFCPOLYLOOP:"IfcPolyLoop",IFCPOINTONSURFACE:"IfcPointOnSurface",IFCPOINTONCURVE:"IfcPointOnCurve",IFCPOINT:"IfcPoint",IFCPLANAREXTENT:"IfcPlanarExtent",IFCPLACEMENT:"IfcPlacement",IFCPIXELTEXTURE:"IfcPixelTexture",IFCPHYSICALCOMPLEXQUANTITY:"IfcPhysicalComplexQuantity",IFCPATH:"IfcPath",IFCPARAMETERIZEDPROFILEDEF:"IfcParameterizedProfileDef",IFCORIENTEDEDGE:"IfcOrientedEdge",IFCOPENSHELL:"IfcOpenShell",IFCONEDIRECTIONREPEATFACTOR:"IfcOneDirectionRepeatFactor",IFCOBJECTDEFINITION:"IfcObjectDefinition",IFCMECHANICALCONCRETEMATERIALPROPERTIES:"IfcMechanicalConcreteMaterialProperties",IFCMATERIALDEFINITIONREPRESENTATION:"IfcMaterialDefinitionRepresentation",IFCMAPPEDITEM:"IfcMappedItem",IFCLOOP:"IfcLoop",IFCLOCALPLACEMENT:"IfcLocalPlacement",IFCLIGHTSOURCESPOT:"IfcLightSourceSpot",IFCLIGHTSOURCEPOSITIONAL:"IfcLightSourcePositional",IFCLIGHTSOURCEGONIOMETRIC:"IfcLightSourceGoniometric",IFCLIGHTSOURCEDIRECTIONAL:"IfcLightSourceDirectional",IFCLIGHTSOURCEAMBIENT:"IfcLightSourceAmbient",IFCLIGHTSOURCE:"IfcLightSource",IFCIRREGULARTIMESERIES:"IfcIrregularTimeSeries",IFCIMAGETEXTURE:"IfcImageTexture",IFCHYGROSCOPICMATERIALPROPERTIES:"IfcHygroscopicMaterialProperties",IFCHALFSPACESOLID:"IfcHalfSpaceSolid",IFCGRIDPLACEMENT:"IfcGridPlacement",IFCGEOMETRICSET:"IfcGeometricSet",IFCGEOMETRICREPRESENTATIONSUBCONTEXT:"IfcGeometricRepresentationSubContext",IFCGEOMETRICREPRESENTATIONITEM:"IfcGeometricRepresentationItem",IFCGEOMETRICREPRESENTATIONCONTEXT:"IfcGeometricRepresentationContext",IFCGENERALPROFILEPROPERTIES:"IfcGeneralProfileProperties",IFCGENERALMATERIALPROPERTIES:"IfcGeneralMaterialProperties",IFCFUELPROPERTIES:"IfcFuelProperties",IFCFILLAREASTYLE:"IfcFillAreaStyle",IFCFAILURECONNECTIONCONDITION:"IfcFailureConnectionCondition",IFCFACESURFACE:"IfcFaceSurface",IFCFACEOUTERBOUND:"IfcFaceOuterBound",IFCFACEBOUND:"IfcFaceBound",IFCFACE:"IfcFace",IFCEXTENDEDMATERIALPROPERTIES:"IfcExtendedMaterialProperties",IFCEDGECURVE:"IfcEdgeCurve",IFCEDGE:"IfcEdge",IFCDRAUGHTINGPREDEFINEDTEXTFONT:"IfcDraughtingPredefinedTextFont",IFCDOCUMENTREFERENCE:"IfcDocumentReference",IFCDIMENSIONPAIR:"IfcDimensionPair",IFCDIMENSIONCALLOUTRELATIONSHIP:"IfcDimensionCalloutRelationship",IFCDERIVEDPROFILEDEF:"IfcDerivedProfileDef",IFCCURVESTYLE:"IfcCurveStyle",IFCCONVERSIONBASEDUNIT:"IfcConversionBasedUnit",IFCCONTEXTDEPENDENTUNIT:"IfcContextDependentUnit",IFCCONNECTIONPOINTECCENTRICITY:"IfcConnectionPointEccentricity",IFCCONNECTIONCURVEGEOMETRY:"IfcConnectionCurveGeometry",IFCCONNECTEDFACESET:"IfcConnectedFaceSet",IFCCOMPOSITEPROFILEDEF:"IfcCompositeProfileDef",IFCCOMPLEXPROPERTY:"IfcComplexProperty",IFCCOLOURRGB:"IfcColourRgb",IFCCLASSIFICATIONREFERENCE:"IfcClassificationReference",IFCCENTERLINEPROFILEDEF:"IfcCenterLineProfileDef",IFCBLOBTEXTURE:"IfcBlobTexture",IFCARBITRARYPROFILEDEFWITHVOIDS:"IfcArbitraryProfileDefWithVoids",IFCARBITRARYOPENPROFILEDEF:"IfcArbitraryOpenProfileDef",IFCARBITRARYCLOSEDPROFILEDEF:"IfcArbitraryClosedProfileDef",IFCANNOTATIONTEXTOCCURRENCE:"IfcAnnotationTextOccurrence",IFCANNOTATIONSYMBOLOCCURRENCE:"IfcAnnotationSymbolOccurrence",IFCANNOTATIONSURFACEOCCURRENCE:"IfcAnnotationSurfaceOccurrence",IFCANNOTATIONOCCURRENCE:"IfcAnnotationOccurrence",IFCWATERPROPERTIES:"IfcWaterProperties",IFCVIRTUALGRIDINTERSECTION:"IfcVirtualGridIntersection",IFCVERTEXPOINT:"IfcVertexPoint",IFCVERTEXBASEDTEXTUREMAP:"IfcVertexBasedTextureMap",IFCVERTEX:"IfcVertex",IFCUNITASSIGNMENT:"IfcUnitAssignment",IFCTOPOLOGYREPRESENTATION:"IfcTopologyRepresentation",IFCTOPOLOGICALREPRESENTATIONITEM:"IfcTopologicalRepresentationItem",IFCTIMESERIESVALUE:"IfcTimeSeriesValue",IFCTIMESERIESREFERENCERELATIONSHIP:"IfcTimeSeriesReferenceRelationship",IFCTIMESERIES:"IfcTimeSeries",IFCTHERMALMATERIALPROPERTIES:"IfcThermalMaterialProperties",IFCTEXTUREVERTEX:"IfcTextureVertex",IFCTEXTUREMAP:"IfcTextureMap",IFCTEXTURECOORDINATEGENERATOR:"IfcTextureCoordinateGenerator",IFCTEXTURECOORDINATE:"IfcTextureCoordinate",IFCTEXTSTYLEWITHBOXCHARACTERISTICS:"IfcTextStyleWithBoxCharacteristics",IFCTEXTSTYLETEXTMODEL:"IfcTextStyleTextModel",IFCTEXTSTYLEFORDEFINEDFONT:"IfcTextStyleForDefinedFont",IFCTEXTSTYLEFONTMODEL:"IfcTextStyleFontModel",IFCTEXTSTYLE:"IfcTextStyle",IFCTELECOMADDRESS:"IfcTelecomAddress",IFCTABLEROW:"IfcTableRow",IFCTABLE:"IfcTable",IFCSYMBOLSTYLE:"IfcSymbolStyle",IFCSURFACETEXTURE:"IfcSurfaceTexture",IFCSURFACESTYLEWITHTEXTURES:"IfcSurfaceStyleWithTextures",IFCSURFACESTYLESHADING:"IfcSurfaceStyleShading",IFCSURFACESTYLEREFRACTION:"IfcSurfaceStyleRefraction",IFCSURFACESTYLELIGHTING:"IfcSurfaceStyleLighting",IFCSURFACESTYLE:"IfcSurfaceStyle",IFCSTYLEDREPRESENTATION:"IfcStyledRepresentation",IFCSTYLEDITEM:"IfcStyledItem",IFCSTYLEMODEL:"IfcStyleModel",IFCSTRUCTURALLOADTEMPERATURE:"IfcStructuralLoadTemperature",IFCSTRUCTURALLOADSTATIC:"IfcStructuralLoadStatic",IFCSTRUCTURALLOAD:"IfcStructuralLoad",IFCSTRUCTURALCONNECTIONCONDITION:"IfcStructuralConnectionCondition",IFCSIMPLEPROPERTY:"IfcSimpleProperty",IFCSHAPEREPRESENTATION:"IfcShapeRepresentation",IFCSHAPEMODEL:"IfcShapeModel",IFCSHAPEASPECT:"IfcShapeAspect",IFCSECTIONREINFORCEMENTPROPERTIES:"IfcSectionReinforcementProperties",IFCSECTIONPROPERTIES:"IfcSectionProperties",IFCSIUNIT:"IfcSIUnit",IFCROOT:"IfcRoot",IFCRIBPLATEPROFILEPROPERTIES:"IfcRibPlateProfileProperties",IFCREPRESENTATIONMAP:"IfcRepresentationMap",IFCREPRESENTATIONITEM:"IfcRepresentationItem",IFCREPRESENTATIONCONTEXT:"IfcRepresentationContext",IFCREPRESENTATION:"IfcRepresentation",IFCRELAXATION:"IfcRelaxation",IFCREINFORCEMENTBARPROPERTIES:"IfcReinforcementBarProperties",IFCREFERENCESVALUEDOCUMENT:"IfcReferencesValueDocument",IFCQUANTITYWEIGHT:"IfcQuantityWeight",IFCQUANTITYVOLUME:"IfcQuantityVolume",IFCQUANTITYTIME:"IfcQuantityTime",IFCQUANTITYLENGTH:"IfcQuantityLength",IFCQUANTITYCOUNT:"IfcQuantityCount",IFCQUANTITYAREA:"IfcQuantityArea",IFCPROPERTYENUMERATION:"IfcPropertyEnumeration",IFCPROPERTYDEPENDENCYRELATIONSHIP:"IfcPropertyDependencyRelationship",IFCPROPERTYCONSTRAINTRELATIONSHIP:"IfcPropertyConstraintRelationship",IFCPROPERTY:"IfcProperty",IFCPROFILEPROPERTIES:"IfcProfileProperties",IFCPROFILEDEF:"IfcProfileDef",IFCPRODUCTSOFCOMBUSTIONPROPERTIES:"IfcProductsOfCombustionProperties",IFCPRODUCTREPRESENTATION:"IfcProductRepresentation",IFCPRESENTATIONSTYLEASSIGNMENT:"IfcPresentationStyleAssignment",IFCPRESENTATIONSTYLE:"IfcPresentationStyle",IFCPRESENTATIONLAYERWITHSTYLE:"IfcPresentationLayerWithStyle",IFCPRESENTATIONLAYERASSIGNMENT:"IfcPresentationLayerAssignment",IFCPREDEFINEDTEXTFONT:"IfcPredefinedTextFont",IFCPREDEFINEDTERMINATORSYMBOL:"IfcPredefinedTerminatorSymbol",IFCPREDEFINEDSYMBOL:"IfcPredefinedSymbol",IFCPREDEFINEDITEM:"IfcPredefinedItem",IFCPOSTALADDRESS:"IfcPostalAddress",IFCPHYSICALSIMPLEQUANTITY:"IfcPhysicalSimpleQuantity",IFCPHYSICALQUANTITY:"IfcPhysicalQuantity",IFCPERSONANDORGANIZATION:"IfcPersonAndOrganization",IFCPERSON:"IfcPerson",IFCOWNERHISTORY:"IfcOwnerHistory",IFCORGANIZATIONRELATIONSHIP:"IfcOrganizationRelationship",IFCORGANIZATION:"IfcOrganization",IFCOPTICALMATERIALPROPERTIES:"IfcOpticalMaterialProperties",IFCOBJECTIVE:"IfcObjective",IFCOBJECTPLACEMENT:"IfcObjectPlacement",IFCNAMEDUNIT:"IfcNamedUnit",IFCMONETARYUNIT:"IfcMonetaryUnit",IFCMETRIC:"IfcMetric",IFCMECHANICALSTEELMATERIALPROPERTIES:"IfcMechanicalSteelMaterialProperties",IFCMECHANICALMATERIALPROPERTIES:"IfcMechanicalMaterialProperties",IFCMEASUREWITHUNIT:"IfcMeasureWithUnit",IFCMATERIALPROPERTIES:"IfcMaterialProperties",IFCMATERIALLIST:"IfcMaterialList",IFCMATERIALLAYERSETUSAGE:"IfcMaterialLayerSetUsage",IFCMATERIALLAYERSET:"IfcMaterialLayerSet",IFCMATERIALLAYER:"IfcMaterialLayer",IFCMATERIALCLASSIFICATIONRELATIONSHIP:"IfcMaterialClassificationRelationship",IFCMATERIAL:"IfcMaterial",IFCLOCALTIME:"IfcLocalTime",IFCLIGHTINTENSITYDISTRIBUTION:"IfcLightIntensityDistribution",IFCLIGHTDISTRIBUTIONDATA:"IfcLightDistributionData",IFCLIBRARYREFERENCE:"IfcLibraryReference",IFCLIBRARYINFORMATION:"IfcLibraryInformation",IFCIRREGULARTIMESERIESVALUE:"IfcIrregularTimeSeriesValue",IFCGRIDAXIS:"IfcGridAxis",IFCEXTERNALLYDEFINEDTEXTFONT:"IfcExternallyDefinedTextFont",IFCEXTERNALLYDEFINEDSYMBOL:"IfcExternallyDefinedSymbol",IFCEXTERNALLYDEFINEDSURFACESTYLE:"IfcExternallyDefinedSurfaceStyle",IFCEXTERNALLYDEFINEDHATCHSTYLE:"IfcExternallyDefinedHatchStyle",IFCEXTERNALREFERENCE:"IfcExternalReference",IFCENVIRONMENTALIMPACTVALUE:"IfcEnvironmentalImpactValue",IFCDRAUGHTINGCALLOUTRELATIONSHIP:"IfcDraughtingCalloutRelationship",IFCDOCUMENTINFORMATIONRELATIONSHIP:"IfcDocumentInformationRelationship",IFCDOCUMENTINFORMATION:"IfcDocumentInformation",IFCDOCUMENTELECTRONICFORMAT:"IfcDocumentElectronicFormat",IFCDIMENSIONALEXPONENTS:"IfcDimensionalExponents",IFCDERIVEDUNITELEMENT:"IfcDerivedUnitElement",IFCDERIVEDUNIT:"IfcDerivedUnit",IFCDATEANDTIME:"IfcDateAndTime",IFCCURVESTYLEFONTPATTERN:"IfcCurveStyleFontPattern",IFCCURVESTYLEFONTANDSCALING:"IfcCurveStyleFontAndScaling",IFCCURVESTYLEFONT:"IfcCurveStyleFont",IFCCURRENCYRELATIONSHIP:"IfcCurrencyRelationship",IFCCOSTVALUE:"IfcCostValue",IFCCOORDINATEDUNIVERSALTIMEOFFSET:"IfcCoordinatedUniversalTimeOffset",IFCCONSTRAINTRELATIONSHIP:"IfcConstraintRelationship",IFCCONSTRAINTCLASSIFICATIONRELATIONSHIP:"IfcConstraintClassificationRelationship",IFCCONSTRAINTAGGREGATIONRELATIONSHIP:"IfcConstraintAggregationRelationship",IFCCONSTRAINT:"IfcConstraint",IFCCONNECTIONSURFACEGEOMETRY:"IfcConnectionSurfaceGeometry",IFCCONNECTIONPORTGEOMETRY:"IfcConnectionPortGeometry",IFCCONNECTIONPOINTGEOMETRY:"IfcConnectionPointGeometry",IFCCONNECTIONGEOMETRY:"IfcConnectionGeometry",IFCCOLOURSPECIFICATION:"IfcColourSpecification",IFCCLASSIFICATIONNOTATIONFACET:"IfcClassificationNotationFacet",IFCCLASSIFICATIONNOTATION:"IfcClassificationNotation",IFCCLASSIFICATIONITEMRELATIONSHIP:"IfcClassificationItemRelationship",IFCCLASSIFICATIONITEM:"IfcClassificationItem",IFCCLASSIFICATION:"IfcClassification",IFCCALENDARDATE:"IfcCalendarDate",IFCBOUNDARYNODECONDITIONWARPING:"IfcBoundaryNodeConditionWarping",IFCBOUNDARYNODECONDITION:"IfcBoundaryNodeCondition",IFCBOUNDARYFACECONDITION:"IfcBoundaryFaceCondition",IFCBOUNDARYEDGECONDITION:"IfcBoundaryEdgeCondition",IFCBOUNDARYCONDITION:"IfcBoundaryCondition",IFCAPPROVALRELATIONSHIP:"IfcApprovalRelationship",IFCAPPROVALPROPERTYRELATIONSHIP:"IfcApprovalPropertyRelationship",IFCAPPROVALACTORRELATIONSHIP:"IfcApprovalActorRelationship",IFCAPPROVAL:"IfcApproval",IFCAPPLIEDVALUERELATIONSHIP:"IfcAppliedValueRelationship",IFCAPPLIEDVALUE:"IfcAppliedValue",IFCAPPLICATION:"IfcApplication",IFCADDRESS:"IfcAddress",IFCACTORROLE:"IfcActorRole"};class TR{constructor(){R(this,"factor",1),R(this,"complement",1)}apply(e){const t=this.getScaleMatrix().multiply(e);e.copy(t)}setUp(e){var t,i,n;this.factor=1;const s=this.getLengthUnits(e);if(!s)return;const o=s==null,a=s.Name===void 0||s.Name===null;o||a||(s.Name.value==="FOOT"&&(this.factor=.3048),((t=s.Prefix)==null?void 0:t.value)==="MILLI"?this.complement=.001:((i=s.Prefix)==null?void 0:i.value)==="CENTI"?this.complement=.01:((n=s.Prefix)==null?void 0:n.value)==="DECI"&&(this.complement=.01))}getLengthUnits(e){try{const t=e.GetLineIDsWithType(0,K0).get(0),i=e.GetLine(0,t);for(const n of i.Units){if(!n||n.value===null||n.value===void 0)continue;const s=e.GetLine(0,n.value);if(s.UnitType&&s.UnitType.value==="LENGTHUNIT")return s}return null}catch{return console.log("Could not get units"),null}}getScaleMatrix(){const e=this.factor;return new fe().fromArray([e,0,0,0,0,e,0,0,0,0,e,0,0,0,0,1])}}class lI{constructor(){R(this,"itemsByFloor",{}),R(this,"_units",new TR)}setUp(e){this._units.setUp(e),this.cleanUp();try{const t=e.GetLineIDsWithType(0,Dc),i=new Set,n=e.GetLineIDsWithType(0,hr);for(let c=0;c<n.size();c++)i.add(n.get(c));const s=e.GetLineIDsWithType(0,Nc),o=s.size();for(let c=0;c<o;c++){const h=s.get(c),d=e.GetLine(0,h);if(!d||!d.RelatingObject||!d.RelatedObjects)continue;const u=d.RelatingObject.value,f=d.RelatedObjects;for(const m of f){const E=m.value;i.has(E)&&(this.itemsByFloor[E]=u)}}const a={},l=t.size();for(let c=0;c<l;c++){const h=t.get(c),d=e.GetLine(0,h);if(!d||!d.RelatingStructure||!d.RelatedElements)continue;const u=d.RelatingStructure.value,f=d.RelatedElements;if(i.has(u))for(const m of f){a[u]||(a[u]=[]);const E=m.value;a[u].push(E)}else for(const m of f){const E=m.value;this.itemsByFloor[E]=u}}for(const c in a){const h=this.itemsByFloor[c];if(h!==void 0){const d=a[c];for(const u of d)this.itemsByFloor[u]=h}}for(let c=0;c<o;c++){const h=s.get(c),d=e.GetLine(0,h);if(!d||!d.RelatingObject||!d.RelatedObjects)continue;const u=d.RelatingObject.value,f=d.RelatedObjects;for(const m of f){const E=m.value,g=this.itemsByFloor[u];g!==void 0&&(this.itemsByFloor[E]=g)}}}catch{console.log("Could not get floors.")}}cleanUp(){this.itemsByFloor={}}}class ff{constructor(){R(this,"includeProperties",!0),R(this,"optionalCategories",[hr]),R(this,"wasm",{path:"",absolute:!1,logLevel:Y0.LOG_LEVEL_OFF}),R(this,"excludedCategories",new Set),R(this,"includedCategories",new Set),R(this,"saveLocations",!1),R(this,"webIfc",{COORDINATE_TO_ORIGIN:!0}),R(this,"autoSetWasm",!0),R(this,"customLocateFileHandler",null)}}class cI{constructor(){R(this,"defLineMat",new pn({color:16777215}))}read(e){const t=e.GetAllAlignments(0),i=e.GetAllCrossSections2D(0),n=e.GetAllCrossSections3D(0),s={IfcAlignment:t,IfcCrossSection2D:i,IfcCrossSection3D:n};return this.get(s)}get(e){if(e.IfcAlignment){const t=new Map;for(const i of e.IfcAlignment){const n=new rf;n.absolute=this.getCurves(i.curve3D,n),n.horizontal=this.getCurves(i.horizontal,n),n.vertical=this.getCurves(i.vertical,n),t.set(t.size,n)}return{alignments:t,coordinationMatrix:new fe}}}getCurves(e,t){const i=[];let n=0;for(const s of e){const o={};if(s.data)for(const u of s.data){const[f,m]=u.split(": "),E=parseFloat(m);o[f]=E||m}const{points:a}=s,l=new Float32Array(a.length*3);for(let u=0;u<a.length;u++){const{x:f,y:m,z:E}=a[u];l[u*3]=f,l[u*3+1]=m,l[u*3+2]=E||0}const c=new ot(l,3),h=new Jd;h.setAttribute("position",c);const d=new of(n,o,t,h,this.defLineMat);i.push(d.curve),n++}return i}}class hI{getNameInfo(e){var t;const i={},{arguments:n}=e.GetHeaderLine(0,X0)||{};if(!n)return i;const[s,o,a,l,c,h,d]=n;if(s!=null&&s.value&&(i.name=s.value),o!=null&&o.value&&(i.creationDate=new Date(o.value)),a){i.author={};const[u,f]=a;u!=null&&u.value&&(i.author.name=u.value),f!=null&&f.value&&(i.author.email=f.value)}return l&&(t=l[0])!=null&&t.value&&(i.organization=l[0].value),c!=null&&c.value&&(i.preprocessorVersion=c==null?void 0:c.value),h!=null&&h.value&&(i.originatingSystem=h==null?void 0:h.value),d!=null&&d.value&&(i.authorization=d==null?void 0:d.value),i}getDescriptionInfo(e){var t;const i={},{arguments:n}=e.GetHeaderLine(0,Z0)||{};if(!n)return i;const[s,o]=n;if(Array.isArray(s)&&(t=s[0])!=null&&t.value){const a=s[0].value.match(/\[([^\]]+)\]/);a&&a[1]&&(i.viewDefinition=a[1])}return o!=null&&o.value&&(i.implementationLevel=o.value),i}}class uI{static get(e,t){const i=[Ud,Bd,zd,Uc,hr,Q0,J0,$0,e_],n=e.data;for(const s of i){const o=t.GetLineIDsWithType(0,s),a=o.size();for(let l=0;l<a;l++){const c=o.get(l);n.has(c)||n.set(c,[[],[0,s]])}}}}const dI=new Set([1123145078,574549367,1675464909,2059837836,3798115385,32440307,3125803723,3207858831,2740243338,2624227202,4240577450,3615266464,3724593414,220341763,477187591,1878645084,1300840506,3303107099,1607154358,1878645084,846575682,1351298697,2417041796,3049322572,3331915920,1416205885,776857604,3285139300,3958052878,2827736869,2732653382,673634403,3448662350,4142052618,2924175390,803316827,2556980723,1809719519,2205249479,807026263,3737207727,1660063152,2347385850,2705031697,3732776249,2485617015,2611217952,1704287377,2937912522,2770003689,1281925730,1484403080,3448662350,4142052618,3800577675,4006246654,3590301190,1383045692,2775532180,2047409740,370225590,3593883385,2665983363,4124623270,812098782,3649129432,987898635,1105321065,3510044353,1635779807,2603310189,3406155212,1310608509,4261334040,2736907675,3649129432,1136057603,1260505505,4182860854,2713105998,2898889636,59481748,3749851601,3486308946,3150382593,1062206242,3264961684,15328376,1485152156,370225590,1981873012,2859738748,45288368,2614616156,2732653382,775493141,2147822146,2601014836,2629017746,1186437898,2367409068,1213902940,3632507154,3900360178,476780140,1472233963,2804161546,3008276851,738692330,374418227,315944413,3905492369,3570813810,2571569899,178912537,2294589976,1437953363,2133299955,572779678,3092502836,388784114,2624227202,1425443689,3057273783,2347385850,1682466193,2519244187,2839578677,3958567839,2513912981,2830218821,427810014,2916149573]),fI=class pI extends We{constructor(e){super(e),R(this,"enabled",!0),e.add(pI.uuid,this)}async export(e,t,i=!1,n=!0){const s={},o=new Set(e.GetIfcEntityList(t)),a=new Set([Ud,Bd,zd,Uc,hr]);for(const l of a)o.add(l);for(const l of o){if(dI.has(l))continue;const c=a.has(l)&&n,h=e.GetLineIDsWithType(t,l);for(const d of h)try{const u=e.GetLine(0,d,c,i);s[u.expressID]=u}catch{console.log(`Could not get property ${d}, with recursive ${c} and indirect ${i}.`)}}return s}};R(fI,"uuid","b32c4332-cd67-436e-ba7f-196646c7a635");let vR=fI;const mI=class ld extends We{constructor(e){super(e),R(this,"onDisposed",new oe),R(this,"onIfcStartedLoading",new oe),R(this,"onSetup",new oe),R(this,"settings",new ff),R(this,"webIfc",new go),R(this,"enabled",!0),R(this,"_material",new vo),R(this,"_spatialTree",new lI),R(this,"_metaData",new hI),R(this,"_fragmentInstances",new Map),R(this,"_civil",new cI),R(this,"_visitedFragments",new Map),R(this,"_materialT",new vo({transparent:!0,opacity:.5})),this.components.add(ld.uuid,this),this.settings.excludedCategories.add(Gg)}dispose(){this.webIfc=null,this.onDisposed.trigger(ld.uuid),this.onDisposed.reset()}async setup(e){this.settings={...this.settings,...e},this.settings.autoSetWasm&&await this.autoSetWasm(),this.onSetup.trigger()}async load(e,t=!0,i=""){const n=performance.now();this.onIfcStartedLoading.trigger(),await this.readIfcFile(e);const s=await this.getAllGeometries();s.name=i;const o=await this.components.get(vR).export(this.webIfc,0);s.setLocalProperties(o);const a=this.components.get(Ze);a.groups.set(s.uuid,s);for(const l of s.items)a.list.set(l.id,l),l.mesh.uuid=l.id,l.group=s;a.onFragmentsLoaded.trigger(s),t&&a.coordinate([s]);for(const[l]of s.data){const c=o[l];if(!c||!c.GlobalId)continue;const h=c.GlobalId.value||c.GlobalId;s.globalToExpressIDs.set(h,l)}return uI.get(s,this.webIfc),this.cleanUp(),console.log(`Streaming the IFC took ${performance.now()-n} ms!`),s}async readIfcFile(e){const{path:t,absolute:i,logLevel:n}=this.settings.wasm;return this.webIfc.SetWasmPath(t,i),await this.webIfc.Init(this.settings.customLocateFileHandler||void 0),n&&this.webIfc.SetLogLevel(n),this.webIfc.OpenModel(e,this.settings.webIfc)}cleanUp(){try{this.webIfc.Dispose()}catch{console.log("Web-ifc wasn't disposed.")}this.webIfc=null,this.webIfc=new go,this._visitedFragments.clear(),this._fragmentInstances.clear()}async getAllGeometries(){this._spatialTree.setUp(this.webIfc);const e=this.webIfc.GetIfcEntityList(0),t=new hn;t.ifcMetadata={name:"",description:"",...this._metaData.getNameInfo(this.webIfc),...this._metaData.getDescriptionInfo(this.webIfc),schema:this.webIfc.GetModelSchema(0)||"IFC2X3",maxExpressID:this.webIfc.GetMaxExpressID(0)};const i=[];for(const s of e){if(!this.webIfc.IsIfcElement(s)&&s!==hr)continue;const o=this.settings.includedCategories;if(o.size>0&&!o.has(s)||this.settings.excludedCategories.has(s))continue;const a=this.webIfc.GetLineIDsWithType(0,s),l=a.size();for(let c=0;c<l;c++){const h=a.get(c);i.push(h);const d=this._spatialTree.itemsByFloor[h]||0;t.data.set(h,[[],[d,s]])}}this._spatialTree.cleanUp(),this.webIfc.StreamMeshes(0,i,s=>{this.getMesh(s,t)});for(const s of this._visitedFragments){const{index:o,fragment:a}=s[1];t.keyFragments.set(o,a.id)}for(const s of t.items){const o=this._fragmentInstances.get(s.id);if(!o)throw new Error("Fragment not found!");const a=[];for(const[l,c]of o)a.push(c);s.add(a)}const n=this.webIfc.GetCoordinationMatrix(0);return t.coordinationMatrix.fromArray(n),t.civilData=this._civil.read(this.webIfc),t}getMesh(e,t){const i=e.geometries.size(),n=e.expressID;for(let s=0;s<i;s++){const o=e.geometries.get(s),{x:a,y:l,z:c,w:h}=o.color,d=h!==1,{geometryExpressID:u}=o,f=`${u}-${d}`;if(!this._visitedFragments.has(f)){const I=this.getGeometry(this.webIfc,u),v=d?this._materialT:this._material,b=new Co(I,v,1);t.add(b.mesh),t.items.push(b);const x=this._visitedFragments.size;this._visitedFragments.set(f,{index:x,fragment:b})}const m=new Fe().setRGB(a,l,c,"srgb"),E=new fe;E.fromArray(o.flatTransformation);const g=this._visitedFragments.get(f);if(g===void 0)throw new Error("Error getting geometry data for streaming!");const p=t.data.get(n);if(!p)throw new Error("Data not found!");p[0].push(g.index);const{fragment:_}=g;this._fragmentInstances.has(_.id)||this._fragmentInstances.set(_.id,new Map);const T=this._fragmentInstances.get(_.id);if(!T)throw new Error("Instances not found!");if(T.has(n)){const I=T.get(n);if(!I)throw new Error("Instance not found!");I.transforms.push(E),I.colors&&I.colors.push(m)}else T.set(n,{id:n,transforms:[E],colors:[m]})}}getGeometry(e,t){const i=e.GetGeometry(0,t),n=e.GetIndexArray(i.GetIndexData(),i.GetIndexDataSize()),s=e.GetVertexArray(i.GetVertexData(),i.GetVertexDataSize()),o=new Float32Array(s.length/2),a=new Float32Array(s.length/2);for(let d=0;d<s.length;d+=6)o[d/2]=s[d],o[d/2+1]=s[d+1],o[d/2+2]=s[d+2],a[d/2]=s[d+3],a[d/2+1]=s[d+4],a[d/2+2]=s[d+5];const l=new Ve,c=new ot(o,3),h=new ot(a,3);return l.setAttribute("position",c),l.setAttribute("normal",h),l.setIndex(Array.from(n)),i.delete(),l}async autoSetWasm(){const e=await fetch(`https://unpkg.com/@thatopen/components@${jE.release}/package.json`);if(!e.ok){console.warn("Couldn't get openbim-components package.json. Set wasm settings manually.");return}const t=await e.json();if(!("web-ifc"in t.peerDependencies))console.warn("Couldn't get web-ifc from peer dependencies in openbim-components. Set wasm settings manually.");else{const i=t.peerDependencies["web-ifc"];this.settings.wasm.path=`https://unpkg.com/web-ifc@${i}/`,this.settings.wasm.absolute=!0}}};R(mI,"uuid","a659add7-1418-4771-a0d6-7d4d438e4624");let CR=mI;const yR={IfcRelAssignsToControl:{related:5,relating:7},IfcRelAssignsToGroup:{related:5,relating:7},IfcRelAssignsToProduct:{related:5,relating:7},IfcRelAssociatesClassification:{related:5,relating:6},IfcRelAssociatesMaterial:{related:5,relating:6},IfcRelAssociatesDocument:{related:5,relating:6},IfcRelContainedInSpatialStructure:{related:5,relating:6},IfcRelFlowControlElements:{related:5,relating:6},IfcRelConnectsElements:{related:7,relating:6},IfcRelDeclares:{related:6,relating:5},IfcRelAggregates:{related:6,relating:5},IfcRelNests:{related:6,relating:5},IfcRelDefinesByProperties:{related:5,relating:6},IfcRelDefinesByType:{related:5,relating:6},IfcRelDefinesByTemplate:{related:5,relating:6}},bR={[Od]:"IfcRelAssignsToControl",[wd]:"IfcRelAssignsToGroup",[Pd]:"IfcRelAssignsToProduct",[xd]:"IfcRelAssociatesClassification",[Sd]:"IfcRelAssociatesMaterial",[Dd]:"IfcRelAssociatesDocument",[Dc]:"IfcRelContainedInSpatialStructure",[Fd]:"IfcRelConnectsElements",[Md]:"IfcRelFlowControlElements",[Ld]:"IfcRelDeclares",[Nc]:"IfcRelAggregates",[Nd]:"IfcRelNests",[Ma]:"IfcRelDefinesByProperties",[Ad]:"IfcRelDefinesByType",[Rd]:"IfcRelDefinesByTemplate"},gI=class js extends We{constructor(e){super(e),R(this,"onDisposed",new oe),R(this,"onRequestFile",new oe),R(this,"ifcToExport",null),R(this,"onElementToPset",new oe),R(this,"onPropToPset",new oe),R(this,"onPsetRemoved",new oe),R(this,"onDataChanged",new oe),R(this,"wasm",{path:"/",absolute:!1}),R(this,"enabled",!0),R(this,"attributeListeners",{}),R(this,"selectedModel"),R(this,"changeMap",{}),this.components.add(js.uuid,this)}dispose(){this.selectedModel=void 0,this.attributeListeners={},this.changeMap={},this.onElementToPset.reset(),this.onPropToPset.reset(),this.onPsetRemoved.reset(),this.onDataChanged.reset(),this.onDisposed.trigger(js.uuid),this.onDisposed.reset()}static getIFCSchema(e){const t=e.ifcMetadata.schema;if(!t)throw new Error("IFC Schema not found");return t.startsWith("IFC2X3")?"IFC2X3":t.startsWith("IFC4")&&t.replace("IFC4","")===""?"IFC4":t.startsWith("IFC4X3")?"IFC4X3":t}async setData(e,...t){for(const i of t){const{expressID:n}=i;(!n||n===-1)&&(i.expressID=this.getNewExpressID(e)),await e.setProperties(i.expressID,i),this.registerChange(e,i.expressID)}}async newPset(e,t,i){const n=js.getIFCSchema(e),{handle:s}=await this.getOwnerHistory(e),o=this.newGUID(e),a=new vn[n].IfcLabel(t),l=i?new vn[n].IfcText(i):null,c=new vn[n].IfcPropertySet(o,s,a,l,[]);return c.expressID=this.getNewExpressID(e),await this.setData(e,c),{pset:c}}async removePset(e,...t){for(const i of t){const n=await e.getProperties(i);if((n==null?void 0:n.type)!==uo)continue;const s=await tr.getPsetRel(e,i);if(s&&(await e.setProperties(s,null),this.registerChange(e,s)),n){for(const o of n.HasProperties)await e.setProperties(o.value,null);await e.setProperties(i,null),this.onPsetRemoved.trigger({model:e,psetID:i}),this.registerChange(e,i)}}}newSingleStringProperty(e,t,i,n){return this.newSingleProperty(e,t,i,n)}newSingleNumericProperty(e,t,i,n){return this.newSingleProperty(e,t,i,n)}newSingleBooleanProperty(e,t,i,n){return this.newSingleProperty(e,t,i,n)}async removePsetProp(e,t,i){const n=await e.getProperties(t),s=await e.getProperties(i);!n||!s||n.type===uo&&s&&(n.HasProperties=n.HasProperties.filter(o=>o.value!==i),await e.setProperties(i,null),this.registerChange(e,t,i))}addElementToPset(e,t,...i){this.components.get(zi).addEntitiesRelation(e,t,{type:Ma,inv:"DefinesOcurrence"},...i)}async addPropToPset(e,t,...i){const n=await e.getProperties(t);if(n){for(const s of i){if(n.HasProperties.includes(s))continue;const o=new gs(s);n.HasProperties.push(o),this.onPropToPset.trigger({model:e,psetID:t,propID:s})}this.registerChange(e,t)}}async createIfcRel(e,t,i,n){const s=bR[t];if(!s)throw new Error(`IfcPropertiesManager: ${s} is unsoported.`);const o=js.getIFCSchema(e),a=yR[s],l=vn[o][s];if(!(a&&l))throw new Error(`IfcPropertiesManager: ${s} is unsoported.`);const c=[new vn[o].IfcGloballyUniqueId(rs.create())],{related:h,relating:d}=a,u=[...new Set(n)].map(E=>new gs(E)),f=(E,g)=>{for(let p=E;p<g-1;p++)c.push(null)};h<d?(f(1,h),c.push(u),f(h,d),c.push(new gs(i))):(f(1,d),f(d,h),c.push(new gs(i)),c.push(u));const m=new l(...c);return await this.setData(e,m),m}async saveToIfc(e,t){const i=this.components.get(CR),n=i.webIfc,s=await i.readIfcFile(t);await this.components.get(zi).applyRelationChanges();const o=this.changeMap[e.uuid]??[];for(const l of o){const c=await e.getProperties(l);c?n.WriteLine(s,c):n.GetLine(s,l)&&n.DeleteLine(s,l)}const a=n.SaveModel(s);return i.webIfc.CloseModel(s),i.cleanUp(),a}async getEntityRef(e,t){const i=await e.getAllPropertiesOfType(t);if(!i)return null;const n=[];for(const s in i){const o=new gs(Number(s));n.push(o)}return n}async setAttributeListener(e,t,i){this.attributeListeners[e.uuid]||(this.attributeListeners[e.uuid]={});const n=this.attributeListeners[e.uuid][t]?this.attributeListeners[e.uuid][t][i]:null;if(n)return n;const s=await e.getProperties(t);if(!s)throw new Error(`Entity with expressID ${t} doesn't exists.`);const o=s[i];if(Array.isArray(o)||!o)throw new Error(`Attribute ${i} is array or null, and it can't have a listener.`);const a=o.value;if(a===void 0||a==null)throw new Error(`Attribute ${i} has a badly defined handle.`);const l=new oe;return Object.defineProperty(s[i],"value",{get(){return this._value},async set(c){this._value=c,l.trigger(c)}}),s[i].value=a,this.attributeListeners[e.uuid][t]||(this.attributeListeners[e.uuid][t]={}),this.attributeListeners[e.uuid][t][i]=l,l}getNewExpressID(e){return e.ifcMetadata.maxExpressID++,e.ifcMetadata.maxExpressID}newGUID(e){const t=js.getIFCSchema(e);return new vn[t].IfcGloballyUniqueId(rs.create())}async getOwnerHistory(e){const t=await e.getAllPropertiesOfType(G0);if(!t)throw new Error("No OwnerHistory was found.");const i=Object.keys(t).map(o=>parseInt(o,10)),n=t[i[0]],s=new gs(n.expressID);return{entity:n,handle:s}}registerChange(e,...t){this.changeMap[e.uuid]||(this.changeMap[e.uuid]=new Set);for(const i of t)this.changeMap[e.uuid].add(i),this.onDataChanged.trigger({model:e,expressID:i})}async newSingleProperty(e,t,i,n){const s=js.getIFCSchema(e),o=new vn[s].IfcIdentifier(i),a=new vn[s][t](n),l=new vn[s].IfcPropertySingleValue(o,null,a,null);return l.expressID=this.getNewExpressID(e),await this.setData(e,l),l}};R(gI,"uuid","58c2d9f0-183c-48d6-a402-dfcf5b9a34df");let SR=gI;const EI=class cd extends We{constructor(e){super(e),R(this,"onDisposed",new oe),R(this,"onRelationsIndexed",new oe),R(this,"relationMaps",{}),R(this,"enabled",!0),R(this,"_relToAttributesMap",_g),R(this,"_inverseAttributes",["IsDecomposedBy","Decomposes","AssociatedTo","HasAssociations","ClassificationForObjects","IsGroupedBy","HasAssignments","IsDefinedBy","DefinesOcurrence","IsTypedBy","Types","Defines","ContainedInStructure","ContainsElements","HasControlElements","AssignedToFlowElement","ConnectedTo","ConnectedFrom","ReferencedBy","Declares","HasContext","Controls","IsNestedBy","Nests","DocumentRefForObjects"]),R(this,"_ifcRels",[Nc,Sd,xd,wd,Ma,Ad,Rd,Dc,Md,Fd,Pd,Ld,Od,Nd,Dd]),R(this,"onFragmentsDisposed",t=>{delete this.relationMaps[t.groupID]}),R(this,"_changeMap",{}),R(this,"onEntitiesRelated",new oe),this.components.add(cd.uuid,this),e.get(Ze).onFragmentsDisposed.add(this.onFragmentsDisposed)}indexRelations(e,t,i,n){const s=Object.keys(t).find(h=>h.startsWith("Relating")),o=Object.keys(t).find(h=>h.startsWith("Related"));if(!(s&&o))return;const a=t[s].value,l=t[o].map(h=>h.value),c=this.getEntityRelations(e,a,n);for(const h of l)c.push(h);for(const h of l)this.getEntityRelations(e,h,i).push(a)}getAttributeIndex(e){const t=this._inverseAttributes.indexOf(e);if(t===-1)throw new Error(`IfcRelationsIndexer: ${e} is not a valid IFC Inverse Attribute name or its not supported yet by this component.`);return t}setRelationMap(e,t){this.relationMaps[e.uuid]=t,this.onRelationsIndexed.trigger({modelID:e.uuid,relationsMap:t})}async process(e,t){if(!e.hasProperties)throw new Error("FragmentsGroup properties not found");let i=this.relationMaps[e.uuid];i||(i=new Map,this.relationMaps[e.uuid]=i);const n=e.getLocalProperties();if(!n)return i;const s=(t==null?void 0:t.relationsToProcess)??this._ifcRels;for(const[o,a]of Object.entries(n)){if(!s.includes(a.type))continue;const l=this._relToAttributesMap.get(a.type);if(!l)continue;const{forRelated:c,forRelating:h}=l;this.indexRelations(i,a,c,h)}return this.setRelationMap(e,i),i}async processFromWebIfc(e,t){const i=new Map;for(const n of this._ifcRels){const s=this._relToAttributesMap.get(n);if(!s)continue;const{forRelated:o,forRelating:a}=s,l=e.GetLineIDsWithType(t,n);for(let c=0;c<l.size();c++){const h=await e.properties.getItemProperties(t,l.get(c));this.indexRelations(i,h,o,a)}}return this.onRelationsIndexed.trigger({modelID:t.toString(),relationsMap:i}),i}getEntityRelations(e,t,i){const n=this.getAttributeIndex(i);let s;if(e instanceof hn?s=this.relationMaps[e.uuid]:typeof e=="string"?s=this.relationMaps[e]:s=e,!s&&(e instanceof hn||typeof e=="string")){s=new Map;const l=e instanceof hn?e.uuid:e;this.relationMaps[l]=s}let o=s.get(t);o||(o=new Map,s.set(t,o));let a=o.get(n);return a||(a=[],o.set(n,a)),a}serializeRelations(e){const t={};for(const[i,n]of e.entries()){t[i]||(t[i]={});for(const[s,o]of n.entries())t[i][s]=o}return JSON.stringify(t)}serializeModelRelations(e){const t=this.relationMaps[e.uuid];return t?this.serializeRelations(t):null}serializeAllRelations(){const e={};for(const t in this.relationMaps){const i=this.relationMaps[t],n={};for(const[s,o]of i.entries()){n[s]||(n[s]={});for(const[a,l]of o.entries())n[s][a]=l}e[t]=n}return JSON.stringify(e)}getRelationsMapFromJSON(e){const t=JSON.parse(e),i=new Map;for(const n in t){const s=t[n],o=new Map;for(const a in s)o.set(Number(a),s[a]);i.set(Number(n),o)}return i}dispose(){this.relationMaps={},this.components.get(Ze).onFragmentsDisposed.remove(this.onFragmentsDisposed),this.onDisposed.trigger(cd.uuid),this.onDisposed.reset()}getEntitiesWithRelation(e,t,i){const n=this.relationMaps[e.uuid];if(!n)throw new Error("IfcRelationsIndexer: the model relations are not indexed!");const s=new Set;for(const[o,a]of n){const l=this.getAttributeIndex(t),c=a.get(l);c&&c.includes(i)&&s.add(o)}return s}addEntityRelations(e,t,i,...n){const s=this.getEntityRelations(e,t,i);if(s)s.push(...n);else{const o=this.getAttributeIndex(i),a=this.relationMaps[e.uuid].get(t);a==null||a.set(o,n)}}async applyRelationChanges(){const e=this.components.get(Ze),t=this.components.get(SR);for(const i in this._changeMap){const n=e.groups.get(i);if(!n)continue;const s=this._changeMap[i];for(const[o,a]of s)for(const[l,c]of a){const{related:h,relID:d}=c;if(d){const u=await n.getProperties(d);if(!u)continue;const f=Object.keys(u),m=f.find(g=>g.startsWith("Related")),E=f.find(g=>g.startsWith("Relating"));if(!(m&&E))continue;u[m]=[...h].map(g=>new gs(g)),u[E]=new gs(l),await t.setData(n,u)}else{const u=await t.createIfcRel(n,o,l,[...h]);if(!u)continue;c.relID=u.expressID}}}}addEntitiesRelation(e,t,i,...n){const{type:s,inv:o}=i;let a=this.relationMaps[e.uuid];if(a||(a=new Map,this.relationMaps[e.uuid]=a),!this._ifcRels.includes(s))return;const l=_g.get(s);if(!l)return;const{forRelated:c,forRelating:h}=l;if(!(c===o||h===o))return;let d=this._changeMap[e.uuid];d||(d=new fn,this._changeMap[e.uuid]=d);const u=h===o?[t]:n,f=c===o?[t]:n;let m=d.get(s);m||(m=new fn,m.onItemSet.add(()=>this.onEntitiesRelated.trigger({invAttribute:o,relType:s,relatingIDs:u,relatedIDs:f})),m.onItemUpdated.add(()=>this.onEntitiesRelated.trigger({invAttribute:o,relType:s,relatingIDs:u,relatedIDs:f})),d.set(s,m));for(const E of u){let g=m.get(E);g||(g={related:new xs},m.set(E,g)),g.related.add(...f)}for(const E of u)this.getEntityRelations(e,E,h).push(...f);for(const E of f)this.getEntityRelations(e,E,c).push(...u)}getEntityChildren(e,t,i=new Set){if(i.add(t),this.relationMaps[e.uuid]===void 0)throw new Error("The provided model has no indices. You have to generate them first.");const n=this.getEntityRelations(e,t,"IsDecomposedBy");if(n)for(const o of n)this.getEntityChildren(e,o,i);const s=this.getEntityRelations(e,t,"ContainsElements");if(s)for(const o of s)this.getEntityChildren(e,o,i);return i}};R(EI,"uuid","23a889ab-83b3-44a4-8bee-ead83438370b");let zi=EI;const II=class _I extends We{constructor(e){super(e),R(this,"onDisposed",new oe),R(this,"onFragmentsLoaded",new oe),R(this,"onFragmentsDisposed",new oe),R(this,"list",new fn),R(this,"groups",new fn),R(this,"baseCoordinationModel",""),R(this,"baseCoordinationMatrix",new fe),R(this,"enabled",!0),R(this,"_loader",new LE),this.components.add(_I.uuid,this)}get meshes(){const e=[];for(const[t,i]of this.list)e.push(i.mesh);return e}dispose(){for(const[e,t]of this.groups)t.dispose(!0);this.baseCoordinationModel="",this.groups.clear(),this.list.clear(),this.onFragmentsLoaded.reset(),this.onFragmentsDisposed.reset(),this.onDisposed.trigger(),this.onDisposed.reset()}disposeGroup(e){const{uuid:t}=e,i=[];for(const n of e.items)i.push(n.id),this.list.delete(n.id);e.dispose(!0),this.groups.delete(e.uuid),this.groups.size===0&&(this.baseCoordinationModel="",this.baseCoordinationMatrix=new fe),this.onFragmentsDisposed.trigger({groupID:t,fragmentIDs:i})}load(e,t){const i={coordinate:!0,...t},{coordinate:n,name:s,properties:o,relationsMap:a}=i,l=this._loader.import(e);t&&(l.isStreamed=t.isStreamed||!1),s&&(l.name=s);for(const c of l.items)c.group=l,this.list.set(c.id,c);return n&&this.coordinate([l]),this.groups.set(l.uuid,l),o&&l.setLocalProperties(o),a&&this.components.get(zi).setRelationMap(l,a),this.onFragmentsLoaded.trigger(l),l}export(e){return this._loader.export(e)}getModelIdMap(e){const t={};for(const i in e){const n=this.list.get(i);if(!(n&&n.group))continue;const s=n.group;s.uuid in t||(t[s.uuid]=new Set);const o=e[i];for(const a of o)t[s.uuid].add(a)}return t}modelIdToFragmentIdMap(e){let t={};for(const i in e){const n=this.groups.get(i);if(!n)continue;const s=e[i],o=n.getFragmentMap(s);t={...t,...o}}return t}guidToFragmentIdMap(e){const t={};for(const[i,n]of this.groups){i in t||(t[i]=new Set);for(const s of e){const o=n.globalToExpressIDs.get(s);o&&t[i].add(o)}}return this.modelIdToFragmentIdMap(t)}fragmentIdMapToGuids(e){const t=[],i=this.getModelIdMap(e);for(const n in i){const s=this.groups.get(n);if(!s)continue;const o=i[n];for(const a of o)for(const[l,c]of s.globalToExpressIDs.entries())if(c===a){t.push(l);break}}return t}coordinate(e=Array.from(this.groups.values())){if(this.baseCoordinationModel.length===0){const t=e.pop();if(!t)return;this.baseCoordinationModel=t.uuid,this.baseCoordinationMatrix=t.coordinationMatrix.clone()}if(e.length)for(const t of e)t.coordinationMatrix.equals(this.baseCoordinationMatrix)||(t.position.set(0,0,0),t.rotation.set(0,0,0),t.scale.set(1,1,1),t.updateMatrix(),this.applyBaseCoordinateSystem(t,t.coordinationMatrix))}applyBaseCoordinateSystem(e,t){t&&e.applyMatrix4(t.clone().invert()),e.applyMatrix4(this.baseCoordinationMatrix)}clone(e,t){const i=e.cloneGroup(t);this.groups.set(i.uuid,i);for(const n of i.items)this.list.set(n.id,n);return i}};R(II,"uuid","fef46874-46a3-461b-8c44-2922ab77c806");let Ze=II;function ic(r){throw new Error('Could not dynamically require "'+r+'". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')}var TI={exports:{}};/*!

JSZip v3.10.1 - A JavaScript class for generating and reading zip files
<http://stuartk.com/jszip>

(c) 2009-2016 Stuart Knightley <stuart [at] stuartk.com>
Dual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/main/LICENSE.markdown.

JSZip uses the library pako released under the MIT license :
https://github.com/nodeca/pako/blob/main/LICENSE
*/(function(r,e){(function(t){r.exports=t()})(function(){return function t(i,n,s){function o(c,h){if(!n[c]){if(!i[c]){var d=typeof ic=="function"&&ic;if(!h&&d)return d(c,!0);if(a)return a(c,!0);var u=new Error("Cannot find module '"+c+"'");throw u.code="MODULE_NOT_FOUND",u}var f=n[c]={exports:{}};i[c][0].call(f.exports,function(m){var E=i[c][1][m];return o(E||m)},f,f.exports,t,i,n,s)}return n[c].exports}for(var a=typeof ic=="function"&&ic,l=0;l<s.length;l++)o(s[l]);return o}({1:[function(t,i,n){var s=t("./utils"),o=t("./support"),a="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";n.encode=function(l){for(var c,h,d,u,f,m,E,g=[],p=0,_=l.length,T=_,I=s.getTypeOf(l)!=="string";p<l.length;)T=_-p,d=I?(c=l[p++],h=p<_?l[p++]:0,p<_?l[p++]:0):(c=l.charCodeAt(p++),h=p<_?l.charCodeAt(p++):0,p<_?l.charCodeAt(p++):0),u=c>>2,f=(3&c)<<4|h>>4,m=1<T?(15&h)<<2|d>>6:64,E=2<T?63&d:64,g.push(a.charAt(u)+a.charAt(f)+a.charAt(m)+a.charAt(E));return g.join("")},n.decode=function(l){var c,h,d,u,f,m,E=0,g=0,p="data:";if(l.substr(0,p.length)===p)throw new Error("Invalid base64 input, it looks like a data url.");var _,T=3*(l=l.replace(/[^A-Za-z0-9+/=]/g,"")).length/4;if(l.charAt(l.length-1)===a.charAt(64)&&T--,l.charAt(l.length-2)===a.charAt(64)&&T--,T%1!=0)throw new Error("Invalid base64 input, bad content length.");for(_=o.uint8array?new Uint8Array(0|T):new Array(0|T);E<l.length;)c=a.indexOf(l.charAt(E++))<<2|(u=a.indexOf(l.charAt(E++)))>>4,h=(15&u)<<4|(f=a.indexOf(l.charAt(E++)))>>2,d=(3&f)<<6|(m=a.indexOf(l.charAt(E++))),_[g++]=c,f!==64&&(_[g++]=h),m!==64&&(_[g++]=d);return _}},{"./support":30,"./utils":32}],2:[function(t,i,n){var s=t("./external"),o=t("./stream/DataWorker"),a=t("./stream/Crc32Probe"),l=t("./stream/DataLengthProbe");function c(h,d,u,f,m){this.compressedSize=h,this.uncompressedSize=d,this.crc32=u,this.compression=f,this.compressedContent=m}c.prototype={getContentWorker:function(){var h=new o(s.Promise.resolve(this.compressedContent)).pipe(this.compression.uncompressWorker()).pipe(new l("data_length")),d=this;return h.on("end",function(){if(this.streamInfo.data_length!==d.uncompressedSize)throw new Error("Bug : uncompressed data size mismatch")}),h},getCompressedWorker:function(){return new o(s.Promise.resolve(this.compressedContent)).withStreamInfo("compressedSize",this.compressedSize).withStreamInfo("uncompressedSize",this.uncompressedSize).withStreamInfo("crc32",this.crc32).withStreamInfo("compression",this.compression)}},c.createWorkerFrom=function(h,d,u){return h.pipe(new a).pipe(new l("uncompressedSize")).pipe(d.compressWorker(u)).pipe(new l("compressedSize")).withStreamInfo("compression",d)},i.exports=c},{"./external":6,"./stream/Crc32Probe":25,"./stream/DataLengthProbe":26,"./stream/DataWorker":27}],3:[function(t,i,n){var s=t("./stream/GenericWorker");n.STORE={magic:"\0\0",compressWorker:function(){return new s("STORE compression")},uncompressWorker:function(){return new s("STORE decompression")}},n.DEFLATE=t("./flate")},{"./flate":7,"./stream/GenericWorker":28}],4:[function(t,i,n){var s=t("./utils"),o=function(){for(var a,l=[],c=0;c<256;c++){a=c;for(var h=0;h<8;h++)a=1&a?3988292384^a>>>1:a>>>1;l[c]=a}return l}();i.exports=function(a,l){return a!==void 0&&a.length?s.getTypeOf(a)!=="string"?function(c,h,d,u){var f=o,m=u+d;c^=-1;for(var E=u;E<m;E++)c=c>>>8^f[255&(c^h[E])];return-1^c}(0|l,a,a.length,0):function(c,h,d,u){var f=o,m=u+d;c^=-1;for(var E=u;E<m;E++)c=c>>>8^f[255&(c^h.charCodeAt(E))];return-1^c}(0|l,a,a.length,0):0}},{"./utils":32}],5:[function(t,i,n){n.base64=!1,n.binary=!1,n.dir=!1,n.createFolders=!0,n.date=null,n.compression=null,n.compressionOptions=null,n.comment=null,n.unixPermissions=null,n.dosPermissions=null},{}],6:[function(t,i,n){var s=null;s=typeof Promise<"u"?Promise:t("lie"),i.exports={Promise:s}},{lie:37}],7:[function(t,i,n){var s=typeof Uint8Array<"u"&&typeof Uint16Array<"u"&&typeof Uint32Array<"u",o=t("pako"),a=t("./utils"),l=t("./stream/GenericWorker"),c=s?"uint8array":"array";function h(d,u){l.call(this,"FlateWorker/"+d),this._pako=null,this._pakoAction=d,this._pakoOptions=u,this.meta={}}n.magic="\b\0",a.inherits(h,l),h.prototype.processChunk=function(d){this.meta=d.meta,this._pako===null&&this._createPako(),this._pako.push(a.transformTo(c,d.data),!1)},h.prototype.flush=function(){l.prototype.flush.call(this),this._pako===null&&this._createPako(),this._pako.push([],!0)},h.prototype.cleanUp=function(){l.prototype.cleanUp.call(this),this._pako=null},h.prototype._createPako=function(){this._pako=new o[this._pakoAction]({raw:!0,level:this._pakoOptions.level||-1});var d=this;this._pako.onData=function(u){d.push({data:u,meta:d.meta})}},n.compressWorker=function(d){return new h("Deflate",d)},n.uncompressWorker=function(){return new h("Inflate",{})}},{"./stream/GenericWorker":28,"./utils":32,pako:38}],8:[function(t,i,n){function s(f,m){var E,g="";for(E=0;E<m;E++)g+=String.fromCharCode(255&f),f>>>=8;return g}function o(f,m,E,g,p,_){var T,I,v=f.file,b=f.compression,x=_!==c.utf8encode,A=a.transformTo("string",_(v.name)),y=a.transformTo("string",c.utf8encode(v.name)),S=v.comment,O=a.transformTo("string",_(S)),w=a.transformTo("string",c.utf8encode(S)),N=y.length!==v.name.length,C=w.length!==S.length,U="",B="",V="",j=v.dir,G=v.date,se={crc32:0,compressedSize:0,uncompressedSize:0};m&&!E||(se.crc32=f.crc32,se.compressedSize=f.compressedSize,se.uncompressedSize=f.uncompressedSize);var W=0;m&&(W|=8),x||!N&&!C||(W|=2048);var Y=0,q=0;j&&(Y|=16),p==="UNIX"?(q=798,Y|=function(te,Ie){var ve=te;return te||(ve=Ie?16893:33204),(65535&ve)<<16}(v.unixPermissions,j)):(q=20,Y|=function(te){return 63&(te||0)}(v.dosPermissions)),T=G.getUTCHours(),T<<=6,T|=G.getUTCMinutes(),T<<=5,T|=G.getUTCSeconds()/2,I=G.getUTCFullYear()-1980,I<<=4,I|=G.getUTCMonth()+1,I<<=5,I|=G.getUTCDate(),N&&(B=s(1,1)+s(h(A),4)+y,U+="up"+s(B.length,2)+B),C&&(V=s(1,1)+s(h(O),4)+w,U+="uc"+s(V.length,2)+V);var Q="";return Q+=`
\0`,Q+=s(W,2),Q+=b.magic,Q+=s(T,2),Q+=s(I,2),Q+=s(se.crc32,4),Q+=s(se.compressedSize,4),Q+=s(se.uncompressedSize,4),Q+=s(A.length,2),Q+=s(U.length,2),{fileRecord:d.LOCAL_FILE_HEADER+Q+A+U,dirRecord:d.CENTRAL_FILE_HEADER+s(q,2)+Q+s(O.length,2)+"\0\0\0\0"+s(Y,4)+s(g,4)+A+U+O}}var a=t("../utils"),l=t("../stream/GenericWorker"),c=t("../utf8"),h=t("../crc32"),d=t("../signature");function u(f,m,E,g){l.call(this,"ZipFileWorker"),this.bytesWritten=0,this.zipComment=m,this.zipPlatform=E,this.encodeFileName=g,this.streamFiles=f,this.accumulate=!1,this.contentBuffer=[],this.dirRecords=[],this.currentSourceOffset=0,this.entriesCount=0,this.currentFile=null,this._sources=[]}a.inherits(u,l),u.prototype.push=function(f){var m=f.meta.percent||0,E=this.entriesCount,g=this._sources.length;this.accumulate?this.contentBuffer.push(f):(this.bytesWritten+=f.data.length,l.prototype.push.call(this,{data:f.data,meta:{currentFile:this.currentFile,percent:E?(m+100*(E-g-1))/E:100}}))},u.prototype.openedSource=function(f){this.currentSourceOffset=this.bytesWritten,this.currentFile=f.file.name;var m=this.streamFiles&&!f.file.dir;if(m){var E=o(f,m,!1,this.currentSourceOffset,this.zipPlatform,this.encodeFileName);this.push({data:E.fileRecord,meta:{percent:0}})}else this.accumulate=!0},u.prototype.closedSource=function(f){this.accumulate=!1;var m=this.streamFiles&&!f.file.dir,E=o(f,m,!0,this.currentSourceOffset,this.zipPlatform,this.encodeFileName);if(this.dirRecords.push(E.dirRecord),m)this.push({data:function(g){return d.DATA_DESCRIPTOR+s(g.crc32,4)+s(g.compressedSize,4)+s(g.uncompressedSize,4)}(f),meta:{percent:100}});else for(this.push({data:E.fileRecord,meta:{percent:0}});this.contentBuffer.length;)this.push(this.contentBuffer.shift());this.currentFile=null},u.prototype.flush=function(){for(var f=this.bytesWritten,m=0;m<this.dirRecords.length;m++)this.push({data:this.dirRecords[m],meta:{percent:100}});var E=this.bytesWritten-f,g=function(p,_,T,I,v){var b=a.transformTo("string",v(I));return d.CENTRAL_DIRECTORY_END+"\0\0\0\0"+s(p,2)+s(p,2)+s(_,4)+s(T,4)+s(b.length,2)+b}(this.dirRecords.length,E,f,this.zipComment,this.encodeFileName);this.push({data:g,meta:{percent:100}})},u.prototype.prepareNextSource=function(){this.previous=this._sources.shift(),this.openedSource(this.previous.streamInfo),this.isPaused?this.previous.pause():this.previous.resume()},u.prototype.registerPrevious=function(f){this._sources.push(f);var m=this;return f.on("data",function(E){m.processChunk(E)}),f.on("end",function(){m.closedSource(m.previous.streamInfo),m._sources.length?m.prepareNextSource():m.end()}),f.on("error",function(E){m.error(E)}),this},u.prototype.resume=function(){return!!l.prototype.resume.call(this)&&(!this.previous&&this._sources.length?(this.prepareNextSource(),!0):this.previous||this._sources.length||this.generatedError?void 0:(this.end(),!0))},u.prototype.error=function(f){var m=this._sources;if(!l.prototype.error.call(this,f))return!1;for(var E=0;E<m.length;E++)try{m[E].error(f)}catch{}return!0},u.prototype.lock=function(){l.prototype.lock.call(this);for(var f=this._sources,m=0;m<f.length;m++)f[m].lock()},i.exports=u},{"../crc32":4,"../signature":23,"../stream/GenericWorker":28,"../utf8":31,"../utils":32}],9:[function(t,i,n){var s=t("../compressions"),o=t("./ZipFileWorker");n.generateWorker=function(a,l,c){var h=new o(l.streamFiles,c,l.platform,l.encodeFileName),d=0;try{a.forEach(function(u,f){d++;var m=function(_,T){var I=_||T,v=s[I];if(!v)throw new Error(I+" is not a valid compression method !");return v}(f.options.compression,l.compression),E=f.options.compressionOptions||l.compressionOptions||{},g=f.dir,p=f.date;f._compressWorker(m,E).withStreamInfo("file",{name:u,dir:g,date:p,comment:f.comment||"",unixPermissions:f.unixPermissions,dosPermissions:f.dosPermissions}).pipe(h)}),h.entriesCount=d}catch(u){h.error(u)}return h}},{"../compressions":3,"./ZipFileWorker":8}],10:[function(t,i,n){function s(){if(!(this instanceof s))return new s;if(arguments.length)throw new Error("The constructor with parameters has been removed in JSZip 3.0, please check the upgrade guide.");this.files=Object.create(null),this.comment=null,this.root="",this.clone=function(){var o=new s;for(var a in this)typeof this[a]!="function"&&(o[a]=this[a]);return o}}(s.prototype=t("./object")).loadAsync=t("./load"),s.support=t("./support"),s.defaults=t("./defaults"),s.version="3.10.1",s.loadAsync=function(o,a){return new s().loadAsync(o,a)},s.external=t("./external"),i.exports=s},{"./defaults":5,"./external":6,"./load":11,"./object":15,"./support":30}],11:[function(t,i,n){var s=t("./utils"),o=t("./external"),a=t("./utf8"),l=t("./zipEntries"),c=t("./stream/Crc32Probe"),h=t("./nodejsUtils");function d(u){return new o.Promise(function(f,m){var E=u.decompressed.getContentWorker().pipe(new c);E.on("error",function(g){m(g)}).on("end",function(){E.streamInfo.crc32!==u.decompressed.crc32?m(new Error("Corrupted zip : CRC32 mismatch")):f()}).resume()})}i.exports=function(u,f){var m=this;return f=s.extend(f||{},{base64:!1,checkCRC32:!1,optimizedBinaryString:!1,createFolders:!1,decodeFileName:a.utf8decode}),h.isNode&&h.isStream(u)?o.Promise.reject(new Error("JSZip can't accept a stream when loading a zip file.")):s.prepareContent("the loaded zip file",u,!0,f.optimizedBinaryString,f.base64).then(function(E){var g=new l(f);return g.load(E),g}).then(function(E){var g=[o.Promise.resolve(E)],p=E.files;if(f.checkCRC32)for(var _=0;_<p.length;_++)g.push(d(p[_]));return o.Promise.all(g)}).then(function(E){for(var g=E.shift(),p=g.files,_=0;_<p.length;_++){var T=p[_],I=T.fileNameStr,v=s.resolve(T.fileNameStr);m.file(v,T.decompressed,{binary:!0,optimizedBinaryString:!0,date:T.date,dir:T.dir,comment:T.fileCommentStr.length?T.fileCommentStr:null,unixPermissions:T.unixPermissions,dosPermissions:T.dosPermissions,createFolders:f.createFolders}),T.dir||(m.file(v).unsafeOriginalName=I)}return g.zipComment.length&&(m.comment=g.zipComment),m})}},{"./external":6,"./nodejsUtils":14,"./stream/Crc32Probe":25,"./utf8":31,"./utils":32,"./zipEntries":33}],12:[function(t,i,n){var s=t("../utils"),o=t("../stream/GenericWorker");function a(l,c){o.call(this,"Nodejs stream input adapter for "+l),this._upstreamEnded=!1,this._bindStream(c)}s.inherits(a,o),a.prototype._bindStream=function(l){var c=this;(this._stream=l).pause(),l.on("data",function(h){c.push({data:h,meta:{percent:0}})}).on("error",function(h){c.isPaused?this.generatedError=h:c.error(h)}).on("end",function(){c.isPaused?c._upstreamEnded=!0:c.end()})},a.prototype.pause=function(){return!!o.prototype.pause.call(this)&&(this._stream.pause(),!0)},a.prototype.resume=function(){return!!o.prototype.resume.call(this)&&(this._upstreamEnded?this.end():this._stream.resume(),!0)},i.exports=a},{"../stream/GenericWorker":28,"../utils":32}],13:[function(t,i,n){var s=t("readable-stream").Readable;function o(a,l,c){s.call(this,l),this._helper=a;var h=this;a.on("data",function(d,u){h.push(d)||h._helper.pause(),c&&c(u)}).on("error",function(d){h.emit("error",d)}).on("end",function(){h.push(null)})}t("../utils").inherits(o,s),o.prototype._read=function(){this._helper.resume()},i.exports=o},{"../utils":32,"readable-stream":16}],14:[function(t,i,n){i.exports={isNode:typeof Buffer<"u",newBufferFrom:function(s,o){if(Buffer.from&&Buffer.from!==Uint8Array.from)return Buffer.from(s,o);if(typeof s=="number")throw new Error('The "data" argument must not be a number');return new Buffer(s,o)},allocBuffer:function(s){if(Buffer.alloc)return Buffer.alloc(s);var o=new Buffer(s);return o.fill(0),o},isBuffer:function(s){return Buffer.isBuffer(s)},isStream:function(s){return s&&typeof s.on=="function"&&typeof s.pause=="function"&&typeof s.resume=="function"}}},{}],15:[function(t,i,n){function s(v,b,x){var A,y=a.getTypeOf(b),S=a.extend(x||{},h);S.date=S.date||new Date,S.compression!==null&&(S.compression=S.compression.toUpperCase()),typeof S.unixPermissions=="string"&&(S.unixPermissions=parseInt(S.unixPermissions,8)),S.unixPermissions&&16384&S.unixPermissions&&(S.dir=!0),S.dosPermissions&&16&S.dosPermissions&&(S.dir=!0),S.dir&&(v=p(v)),S.createFolders&&(A=g(v))&&_.call(this,A,!0);var O=y==="string"&&S.binary===!1&&S.base64===!1;x&&x.binary!==void 0||(S.binary=!O),(b instanceof d&&b.uncompressedSize===0||S.dir||!b||b.length===0)&&(S.base64=!1,S.binary=!0,b="",S.compression="STORE",y="string");var w=null;w=b instanceof d||b instanceof l?b:m.isNode&&m.isStream(b)?new E(v,b):a.prepareContent(v,b,S.binary,S.optimizedBinaryString,S.base64);var N=new u(v,w,S);this.files[v]=N}var o=t("./utf8"),a=t("./utils"),l=t("./stream/GenericWorker"),c=t("./stream/StreamHelper"),h=t("./defaults"),d=t("./compressedObject"),u=t("./zipObject"),f=t("./generate"),m=t("./nodejsUtils"),E=t("./nodejs/NodejsStreamInputAdapter"),g=function(v){v.slice(-1)==="/"&&(v=v.substring(0,v.length-1));var b=v.lastIndexOf("/");return 0<b?v.substring(0,b):""},p=function(v){return v.slice(-1)!=="/"&&(v+="/"),v},_=function(v,b){return b=b!==void 0?b:h.createFolders,v=p(v),this.files[v]||s.call(this,v,null,{dir:!0,createFolders:b}),this.files[v]};function T(v){return Object.prototype.toString.call(v)==="[object RegExp]"}var I={load:function(){throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")},forEach:function(v){var b,x,A;for(b in this.files)A=this.files[b],(x=b.slice(this.root.length,b.length))&&b.slice(0,this.root.length)===this.root&&v(x,A)},filter:function(v){var b=[];return this.forEach(function(x,A){v(x,A)&&b.push(A)}),b},file:function(v,b,x){if(arguments.length!==1)return v=this.root+v,s.call(this,v,b,x),this;if(T(v)){var A=v;return this.filter(function(S,O){return!O.dir&&A.test(S)})}var y=this.files[this.root+v];return y&&!y.dir?y:null},folder:function(v){if(!v)return this;if(T(v))return this.filter(function(y,S){return S.dir&&v.test(y)});var b=this.root+v,x=_.call(this,b),A=this.clone();return A.root=x.name,A},remove:function(v){v=this.root+v;var b=this.files[v];if(b||(v.slice(-1)!=="/"&&(v+="/"),b=this.files[v]),b&&!b.dir)delete this.files[v];else for(var x=this.filter(function(y,S){return S.name.slice(0,v.length)===v}),A=0;A<x.length;A++)delete this.files[x[A].name];return this},generate:function(){throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")},generateInternalStream:function(v){var b,x={};try{if((x=a.extend(v||{},{streamFiles:!1,compression:"STORE",compressionOptions:null,type:"",platform:"DOS",comment:null,mimeType:"application/zip",encodeFileName:o.utf8encode})).type=x.type.toLowerCase(),x.compression=x.compression.toUpperCase(),x.type==="binarystring"&&(x.type="string"),!x.type)throw new Error("No output type specified.");a.checkSupport(x.type),x.platform!=="darwin"&&x.platform!=="freebsd"&&x.platform!=="linux"&&x.platform!=="sunos"||(x.platform="UNIX"),x.platform==="win32"&&(x.platform="DOS");var A=x.comment||this.comment||"";b=f.generateWorker(this,x,A)}catch(y){(b=new l("error")).error(y)}return new c(b,x.type||"string",x.mimeType)},generateAsync:function(v,b){return this.generateInternalStream(v).accumulate(b)},generateNodeStream:function(v,b){return(v=v||{}).type||(v.type="nodebuffer"),this.generateInternalStream(v).toNodejsStream(b)}};i.exports=I},{"./compressedObject":2,"./defaults":5,"./generate":9,"./nodejs/NodejsStreamInputAdapter":12,"./nodejsUtils":14,"./stream/GenericWorker":28,"./stream/StreamHelper":29,"./utf8":31,"./utils":32,"./zipObject":35}],16:[function(t,i,n){i.exports=t("stream")},{stream:void 0}],17:[function(t,i,n){var s=t("./DataReader");function o(a){s.call(this,a);for(var l=0;l<this.data.length;l++)a[l]=255&a[l]}t("../utils").inherits(o,s),o.prototype.byteAt=function(a){return this.data[this.zero+a]},o.prototype.lastIndexOfSignature=function(a){for(var l=a.charCodeAt(0),c=a.charCodeAt(1),h=a.charCodeAt(2),d=a.charCodeAt(3),u=this.length-4;0<=u;--u)if(this.data[u]===l&&this.data[u+1]===c&&this.data[u+2]===h&&this.data[u+3]===d)return u-this.zero;return-1},o.prototype.readAndCheckSignature=function(a){var l=a.charCodeAt(0),c=a.charCodeAt(1),h=a.charCodeAt(2),d=a.charCodeAt(3),u=this.readData(4);return l===u[0]&&c===u[1]&&h===u[2]&&d===u[3]},o.prototype.readData=function(a){if(this.checkOffset(a),a===0)return[];var l=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,l},i.exports=o},{"../utils":32,"./DataReader":18}],18:[function(t,i,n){var s=t("../utils");function o(a){this.data=a,this.length=a.length,this.index=0,this.zero=0}o.prototype={checkOffset:function(a){this.checkIndex(this.index+a)},checkIndex:function(a){if(this.length<this.zero+a||a<0)throw new Error("End of data reached (data length = "+this.length+", asked index = "+a+"). Corrupted zip ?")},setIndex:function(a){this.checkIndex(a),this.index=a},skip:function(a){this.setIndex(this.index+a)},byteAt:function(){},readInt:function(a){var l,c=0;for(this.checkOffset(a),l=this.index+a-1;l>=this.index;l--)c=(c<<8)+this.byteAt(l);return this.index+=a,c},readString:function(a){return s.transformTo("string",this.readData(a))},readData:function(){},lastIndexOfSignature:function(){},readAndCheckSignature:function(){},readDate:function(){var a=this.readInt(4);return new Date(Date.UTC(1980+(a>>25&127),(a>>21&15)-1,a>>16&31,a>>11&31,a>>5&63,(31&a)<<1))}},i.exports=o},{"../utils":32}],19:[function(t,i,n){var s=t("./Uint8ArrayReader");function o(a){s.call(this,a)}t("../utils").inherits(o,s),o.prototype.readData=function(a){this.checkOffset(a);var l=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,l},i.exports=o},{"../utils":32,"./Uint8ArrayReader":21}],20:[function(t,i,n){var s=t("./DataReader");function o(a){s.call(this,a)}t("../utils").inherits(o,s),o.prototype.byteAt=function(a){return this.data.charCodeAt(this.zero+a)},o.prototype.lastIndexOfSignature=function(a){return this.data.lastIndexOf(a)-this.zero},o.prototype.readAndCheckSignature=function(a){return a===this.readData(4)},o.prototype.readData=function(a){this.checkOffset(a);var l=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,l},i.exports=o},{"../utils":32,"./DataReader":18}],21:[function(t,i,n){var s=t("./ArrayReader");function o(a){s.call(this,a)}t("../utils").inherits(o,s),o.prototype.readData=function(a){if(this.checkOffset(a),a===0)return new Uint8Array(0);var l=this.data.subarray(this.zero+this.index,this.zero+this.index+a);return this.index+=a,l},i.exports=o},{"../utils":32,"./ArrayReader":17}],22:[function(t,i,n){var s=t("../utils"),o=t("../support"),a=t("./ArrayReader"),l=t("./StringReader"),c=t("./NodeBufferReader"),h=t("./Uint8ArrayReader");i.exports=function(d){var u=s.getTypeOf(d);return s.checkSupport(u),u!=="string"||o.uint8array?u==="nodebuffer"?new c(d):o.uint8array?new h(s.transformTo("uint8array",d)):new a(s.transformTo("array",d)):new l(d)}},{"../support":30,"../utils":32,"./ArrayReader":17,"./NodeBufferReader":19,"./StringReader":20,"./Uint8ArrayReader":21}],23:[function(t,i,n){n.LOCAL_FILE_HEADER="PK",n.CENTRAL_FILE_HEADER="PK",n.CENTRAL_DIRECTORY_END="PK",n.ZIP64_CENTRAL_DIRECTORY_LOCATOR="PK\x07",n.ZIP64_CENTRAL_DIRECTORY_END="PK",n.DATA_DESCRIPTOR="PK\x07\b"},{}],24:[function(t,i,n){var s=t("./GenericWorker"),o=t("../utils");function a(l){s.call(this,"ConvertWorker to "+l),this.destType=l}o.inherits(a,s),a.prototype.processChunk=function(l){this.push({data:o.transformTo(this.destType,l.data),meta:l.meta})},i.exports=a},{"../utils":32,"./GenericWorker":28}],25:[function(t,i,n){var s=t("./GenericWorker"),o=t("../crc32");function a(){s.call(this,"Crc32Probe"),this.withStreamInfo("crc32",0)}t("../utils").inherits(a,s),a.prototype.processChunk=function(l){this.streamInfo.crc32=o(l.data,this.streamInfo.crc32||0),this.push(l)},i.exports=a},{"../crc32":4,"../utils":32,"./GenericWorker":28}],26:[function(t,i,n){var s=t("../utils"),o=t("./GenericWorker");function a(l){o.call(this,"DataLengthProbe for "+l),this.propName=l,this.withStreamInfo(l,0)}s.inherits(a,o),a.prototype.processChunk=function(l){if(l){var c=this.streamInfo[this.propName]||0;this.streamInfo[this.propName]=c+l.data.length}o.prototype.processChunk.call(this,l)},i.exports=a},{"../utils":32,"./GenericWorker":28}],27:[function(t,i,n){var s=t("../utils"),o=t("./GenericWorker");function a(l){o.call(this,"DataWorker");var c=this;this.dataIsReady=!1,this.index=0,this.max=0,this.data=null,this.type="",this._tickScheduled=!1,l.then(function(h){c.dataIsReady=!0,c.data=h,c.max=h&&h.length||0,c.type=s.getTypeOf(h),c.isPaused||c._tickAndRepeat()},function(h){c.error(h)})}s.inherits(a,o),a.prototype.cleanUp=function(){o.prototype.cleanUp.call(this),this.data=null},a.prototype.resume=function(){return!!o.prototype.resume.call(this)&&(!this._tickScheduled&&this.dataIsReady&&(this._tickScheduled=!0,s.delay(this._tickAndRepeat,[],this)),!0)},a.prototype._tickAndRepeat=function(){this._tickScheduled=!1,this.isPaused||this.isFinished||(this._tick(),this.isFinished||(s.delay(this._tickAndRepeat,[],this),this._tickScheduled=!0))},a.prototype._tick=function(){if(this.isPaused||this.isFinished)return!1;var l=null,c=Math.min(this.max,this.index+16384);if(this.index>=this.max)return this.end();switch(this.type){case"string":l=this.data.substring(this.index,c);break;case"uint8array":l=this.data.subarray(this.index,c);break;case"array":case"nodebuffer":l=this.data.slice(this.index,c)}return this.index=c,this.push({data:l,meta:{percent:this.max?this.index/this.max*100:0}})},i.exports=a},{"../utils":32,"./GenericWorker":28}],28:[function(t,i,n){function s(o){this.name=o||"default",this.streamInfo={},this.generatedError=null,this.extraStreamInfo={},this.isPaused=!0,this.isFinished=!1,this.isLocked=!1,this._listeners={data:[],end:[],error:[]},this.previous=null}s.prototype={push:function(o){this.emit("data",o)},end:function(){if(this.isFinished)return!1;this.flush();try{this.emit("end"),this.cleanUp(),this.isFinished=!0}catch(o){this.emit("error",o)}return!0},error:function(o){return!this.isFinished&&(this.isPaused?this.generatedError=o:(this.isFinished=!0,this.emit("error",o),this.previous&&this.previous.error(o),this.cleanUp()),!0)},on:function(o,a){return this._listeners[o].push(a),this},cleanUp:function(){this.streamInfo=this.generatedError=this.extraStreamInfo=null,this._listeners=[]},emit:function(o,a){if(this._listeners[o])for(var l=0;l<this._listeners[o].length;l++)this._listeners[o][l].call(this,a)},pipe:function(o){return o.registerPrevious(this)},registerPrevious:function(o){if(this.isLocked)throw new Error("The stream '"+this+"' has already been used.");this.streamInfo=o.streamInfo,this.mergeStreamInfo(),this.previous=o;var a=this;return o.on("data",function(l){a.processChunk(l)}),o.on("end",function(){a.end()}),o.on("error",function(l){a.error(l)}),this},pause:function(){return!this.isPaused&&!this.isFinished&&(this.isPaused=!0,this.previous&&this.previous.pause(),!0)},resume:function(){if(!this.isPaused||this.isFinished)return!1;var o=this.isPaused=!1;return this.generatedError&&(this.error(this.generatedError),o=!0),this.previous&&this.previous.resume(),!o},flush:function(){},processChunk:function(o){this.push(o)},withStreamInfo:function(o,a){return this.extraStreamInfo[o]=a,this.mergeStreamInfo(),this},mergeStreamInfo:function(){for(var o in this.extraStreamInfo)Object.prototype.hasOwnProperty.call(this.extraStreamInfo,o)&&(this.streamInfo[o]=this.extraStreamInfo[o])},lock:function(){if(this.isLocked)throw new Error("The stream '"+this+"' has already been used.");this.isLocked=!0,this.previous&&this.previous.lock()},toString:function(){var o="Worker "+this.name;return this.previous?this.previous+" -> "+o:o}},i.exports=s},{}],29:[function(t,i,n){var s=t("../utils"),o=t("./ConvertWorker"),a=t("./GenericWorker"),l=t("../base64"),c=t("../support"),h=t("../external"),d=null;if(c.nodestream)try{d=t("../nodejs/NodejsStreamOutputAdapter")}catch{}function u(m,E){return new h.Promise(function(g,p){var _=[],T=m._internalType,I=m._outputType,v=m._mimeType;m.on("data",function(b,x){_.push(b),E&&E(x)}).on("error",function(b){_=[],p(b)}).on("end",function(){try{var b=function(x,A,y){switch(x){case"blob":return s.newBlob(s.transformTo("arraybuffer",A),y);case"base64":return l.encode(A);default:return s.transformTo(x,A)}}(I,function(x,A){var y,S=0,O=null,w=0;for(y=0;y<A.length;y++)w+=A[y].length;switch(x){case"string":return A.join("");case"array":return Array.prototype.concat.apply([],A);case"uint8array":for(O=new Uint8Array(w),y=0;y<A.length;y++)O.set(A[y],S),S+=A[y].length;return O;case"nodebuffer":return Buffer.concat(A);default:throw new Error("concat : unsupported type '"+x+"'")}}(T,_),v);g(b)}catch(x){p(x)}_=[]}).resume()})}function f(m,E,g){var p=E;switch(E){case"blob":case"arraybuffer":p="uint8array";break;case"base64":p="string"}try{this._internalType=p,this._outputType=E,this._mimeType=g,s.checkSupport(p),this._worker=m.pipe(new o(p)),m.lock()}catch(_){this._worker=new a("error"),this._worker.error(_)}}f.prototype={accumulate:function(m){return u(this,m)},on:function(m,E){var g=this;return m==="data"?this._worker.on(m,function(p){E.call(g,p.data,p.meta)}):this._worker.on(m,function(){s.delay(E,arguments,g)}),this},resume:function(){return s.delay(this._worker.resume,[],this._worker),this},pause:function(){return this._worker.pause(),this},toNodejsStream:function(m){if(s.checkSupport("nodestream"),this._outputType!=="nodebuffer")throw new Error(this._outputType+" is not supported by this method");return new d(this,{objectMode:this._outputType!=="nodebuffer"},m)}},i.exports=f},{"../base64":1,"../external":6,"../nodejs/NodejsStreamOutputAdapter":13,"../support":30,"../utils":32,"./ConvertWorker":24,"./GenericWorker":28}],30:[function(t,i,n){if(n.base64=!0,n.array=!0,n.string=!0,n.arraybuffer=typeof ArrayBuffer<"u"&&typeof Uint8Array<"u",n.nodebuffer=typeof Buffer<"u",n.uint8array=typeof Uint8Array<"u",typeof ArrayBuffer>"u")n.blob=!1;else{var s=new ArrayBuffer(0);try{n.blob=new Blob([s],{type:"application/zip"}).size===0}catch{try{var o=new(self.BlobBuilder||self.WebKitBlobBuilder||self.MozBlobBuilder||self.MSBlobBuilder);o.append(s),n.blob=o.getBlob("application/zip").size===0}catch{n.blob=!1}}}try{n.nodestream=!!t("readable-stream").Readable}catch{n.nodestream=!1}},{"readable-stream":16}],31:[function(t,i,n){for(var s=t("./utils"),o=t("./support"),a=t("./nodejsUtils"),l=t("./stream/GenericWorker"),c=new Array(256),h=0;h<256;h++)c[h]=252<=h?6:248<=h?5:240<=h?4:224<=h?3:192<=h?2:1;c[254]=c[254]=1;function d(){l.call(this,"utf-8 decode"),this.leftOver=null}function u(){l.call(this,"utf-8 encode")}n.utf8encode=function(f){return o.nodebuffer?a.newBufferFrom(f,"utf-8"):function(m){var E,g,p,_,T,I=m.length,v=0;for(_=0;_<I;_++)(64512&(g=m.charCodeAt(_)))==55296&&_+1<I&&(64512&(p=m.charCodeAt(_+1)))==56320&&(g=65536+(g-55296<<10)+(p-56320),_++),v+=g<128?1:g<2048?2:g<65536?3:4;for(E=o.uint8array?new Uint8Array(v):new Array(v),_=T=0;T<v;_++)(64512&(g=m.charCodeAt(_)))==55296&&_+1<I&&(64512&(p=m.charCodeAt(_+1)))==56320&&(g=65536+(g-55296<<10)+(p-56320),_++),g<128?E[T++]=g:(g<2048?E[T++]=192|g>>>6:(g<65536?E[T++]=224|g>>>12:(E[T++]=240|g>>>18,E[T++]=128|g>>>12&63),E[T++]=128|g>>>6&63),E[T++]=128|63&g);return E}(f)},n.utf8decode=function(f){return o.nodebuffer?s.transformTo("nodebuffer",f).toString("utf-8"):function(m){var E,g,p,_,T=m.length,I=new Array(2*T);for(E=g=0;E<T;)if((p=m[E++])<128)I[g++]=p;else if(4<(_=c[p]))I[g++]=65533,E+=_-1;else{for(p&=_===2?31:_===3?15:7;1<_&&E<T;)p=p<<6|63&m[E++],_--;1<_?I[g++]=65533:p<65536?I[g++]=p:(p-=65536,I[g++]=55296|p>>10&1023,I[g++]=56320|1023&p)}return I.length!==g&&(I.subarray?I=I.subarray(0,g):I.length=g),s.applyFromCharCode(I)}(f=s.transformTo(o.uint8array?"uint8array":"array",f))},s.inherits(d,l),d.prototype.processChunk=function(f){var m=s.transformTo(o.uint8array?"uint8array":"array",f.data);if(this.leftOver&&this.leftOver.length){if(o.uint8array){var E=m;(m=new Uint8Array(E.length+this.leftOver.length)).set(this.leftOver,0),m.set(E,this.leftOver.length)}else m=this.leftOver.concat(m);this.leftOver=null}var g=function(_,T){var I;for((T=T||_.length)>_.length&&(T=_.length),I=T-1;0<=I&&(192&_[I])==128;)I--;return I<0||I===0?T:I+c[_[I]]>T?I:T}(m),p=m;g!==m.length&&(o.uint8array?(p=m.subarray(0,g),this.leftOver=m.subarray(g,m.length)):(p=m.slice(0,g),this.leftOver=m.slice(g,m.length))),this.push({data:n.utf8decode(p),meta:f.meta})},d.prototype.flush=function(){this.leftOver&&this.leftOver.length&&(this.push({data:n.utf8decode(this.leftOver),meta:{}}),this.leftOver=null)},n.Utf8DecodeWorker=d,s.inherits(u,l),u.prototype.processChunk=function(f){this.push({data:n.utf8encode(f.data),meta:f.meta})},n.Utf8EncodeWorker=u},{"./nodejsUtils":14,"./stream/GenericWorker":28,"./support":30,"./utils":32}],32:[function(t,i,n){var s=t("./support"),o=t("./base64"),a=t("./nodejsUtils"),l=t("./external");function c(E){return E}function h(E,g){for(var p=0;p<E.length;++p)g[p]=255&E.charCodeAt(p);return g}t("setimmediate"),n.newBlob=function(E,g){n.checkSupport("blob");try{return new Blob([E],{type:g})}catch{try{var p=new(self.BlobBuilder||self.WebKitBlobBuilder||self.MozBlobBuilder||self.MSBlobBuilder);return p.append(E),p.getBlob(g)}catch{throw new Error("Bug : can't construct the Blob.")}}};var d={stringifyByChunk:function(E,g,p){var _=[],T=0,I=E.length;if(I<=p)return String.fromCharCode.apply(null,E);for(;T<I;)g==="array"||g==="nodebuffer"?_.push(String.fromCharCode.apply(null,E.slice(T,Math.min(T+p,I)))):_.push(String.fromCharCode.apply(null,E.subarray(T,Math.min(T+p,I)))),T+=p;return _.join("")},stringifyByChar:function(E){for(var g="",p=0;p<E.length;p++)g+=String.fromCharCode(E[p]);return g},applyCanBeUsed:{uint8array:function(){try{return s.uint8array&&String.fromCharCode.apply(null,new Uint8Array(1)).length===1}catch{return!1}}(),nodebuffer:function(){try{return s.nodebuffer&&String.fromCharCode.apply(null,a.allocBuffer(1)).length===1}catch{return!1}}()}};function u(E){var g=65536,p=n.getTypeOf(E),_=!0;if(p==="uint8array"?_=d.applyCanBeUsed.uint8array:p==="nodebuffer"&&(_=d.applyCanBeUsed.nodebuffer),_)for(;1<g;)try{return d.stringifyByChunk(E,p,g)}catch{g=Math.floor(g/2)}return d.stringifyByChar(E)}function f(E,g){for(var p=0;p<E.length;p++)g[p]=E[p];return g}n.applyFromCharCode=u;var m={};m.string={string:c,array:function(E){return h(E,new Array(E.length))},arraybuffer:function(E){return m.string.uint8array(E).buffer},uint8array:function(E){return h(E,new Uint8Array(E.length))},nodebuffer:function(E){return h(E,a.allocBuffer(E.length))}},m.array={string:u,array:c,arraybuffer:function(E){return new Uint8Array(E).buffer},uint8array:function(E){return new Uint8Array(E)},nodebuffer:function(E){return a.newBufferFrom(E)}},m.arraybuffer={string:function(E){return u(new Uint8Array(E))},array:function(E){return f(new Uint8Array(E),new Array(E.byteLength))},arraybuffer:c,uint8array:function(E){return new Uint8Array(E)},nodebuffer:function(E){return a.newBufferFrom(new Uint8Array(E))}},m.uint8array={string:u,array:function(E){return f(E,new Array(E.length))},arraybuffer:function(E){return E.buffer},uint8array:c,nodebuffer:function(E){return a.newBufferFrom(E)}},m.nodebuffer={string:u,array:function(E){return f(E,new Array(E.length))},arraybuffer:function(E){return m.nodebuffer.uint8array(E).buffer},uint8array:function(E){return f(E,new Uint8Array(E.length))},nodebuffer:c},n.transformTo=function(E,g){if(g=g||"",!E)return g;n.checkSupport(E);var p=n.getTypeOf(g);return m[p][E](g)},n.resolve=function(E){for(var g=E.split("/"),p=[],_=0;_<g.length;_++){var T=g[_];T==="."||T===""&&_!==0&&_!==g.length-1||(T===".."?p.pop():p.push(T))}return p.join("/")},n.getTypeOf=function(E){return typeof E=="string"?"string":Object.prototype.toString.call(E)==="[object Array]"?"array":s.nodebuffer&&a.isBuffer(E)?"nodebuffer":s.uint8array&&E instanceof Uint8Array?"uint8array":s.arraybuffer&&E instanceof ArrayBuffer?"arraybuffer":void 0},n.checkSupport=function(E){if(!s[E.toLowerCase()])throw new Error(E+" is not supported by this platform")},n.MAX_VALUE_16BITS=65535,n.MAX_VALUE_32BITS=-1,n.pretty=function(E){var g,p,_="";for(p=0;p<(E||"").length;p++)_+="\\x"+((g=E.charCodeAt(p))<16?"0":"")+g.toString(16).toUpperCase();return _},n.delay=function(E,g,p){setImmediate(function(){E.apply(p||null,g||[])})},n.inherits=function(E,g){function p(){}p.prototype=g.prototype,E.prototype=new p},n.extend=function(){var E,g,p={};for(E=0;E<arguments.length;E++)for(g in arguments[E])Object.prototype.hasOwnProperty.call(arguments[E],g)&&p[g]===void 0&&(p[g]=arguments[E][g]);return p},n.prepareContent=function(E,g,p,_,T){return l.Promise.resolve(g).then(function(I){return s.blob&&(I instanceof Blob||["[object File]","[object Blob]"].indexOf(Object.prototype.toString.call(I))!==-1)&&typeof FileReader<"u"?new l.Promise(function(v,b){var x=new FileReader;x.onload=function(A){v(A.target.result)},x.onerror=function(A){b(A.target.error)},x.readAsArrayBuffer(I)}):I}).then(function(I){var v=n.getTypeOf(I);return v?(v==="arraybuffer"?I=n.transformTo("uint8array",I):v==="string"&&(T?I=o.decode(I):p&&_!==!0&&(I=function(b){return h(b,s.uint8array?new Uint8Array(b.length):new Array(b.length))}(I))),I):l.Promise.reject(new Error("Can't read the data of '"+E+"'. Is it in a supported JavaScript type (String, Blob, ArrayBuffer, etc) ?"))})}},{"./base64":1,"./external":6,"./nodejsUtils":14,"./support":30,setimmediate:54}],33:[function(t,i,n){var s=t("./reader/readerFor"),o=t("./utils"),a=t("./signature"),l=t("./zipEntry"),c=t("./support");function h(d){this.files=[],this.loadOptions=d}h.prototype={checkSignature:function(d){if(!this.reader.readAndCheckSignature(d)){this.reader.index-=4;var u=this.reader.readString(4);throw new Error("Corrupted zip or bug: unexpected signature ("+o.pretty(u)+", expected "+o.pretty(d)+")")}},isSignature:function(d,u){var f=this.reader.index;this.reader.setIndex(d);var m=this.reader.readString(4)===u;return this.reader.setIndex(f),m},readBlockEndOfCentral:function(){this.diskNumber=this.reader.readInt(2),this.diskWithCentralDirStart=this.reader.readInt(2),this.centralDirRecordsOnThisDisk=this.reader.readInt(2),this.centralDirRecords=this.reader.readInt(2),this.centralDirSize=this.reader.readInt(4),this.centralDirOffset=this.reader.readInt(4),this.zipCommentLength=this.reader.readInt(2);var d=this.reader.readData(this.zipCommentLength),u=c.uint8array?"uint8array":"array",f=o.transformTo(u,d);this.zipComment=this.loadOptions.decodeFileName(f)},readBlockZip64EndOfCentral:function(){this.zip64EndOfCentralSize=this.reader.readInt(8),this.reader.skip(4),this.diskNumber=this.reader.readInt(4),this.diskWithCentralDirStart=this.reader.readInt(4),this.centralDirRecordsOnThisDisk=this.reader.readInt(8),this.centralDirRecords=this.reader.readInt(8),this.centralDirSize=this.reader.readInt(8),this.centralDirOffset=this.reader.readInt(8),this.zip64ExtensibleData={};for(var d,u,f,m=this.zip64EndOfCentralSize-44;0<m;)d=this.reader.readInt(2),u=this.reader.readInt(4),f=this.reader.readData(u),this.zip64ExtensibleData[d]={id:d,length:u,value:f}},readBlockZip64EndOfCentralLocator:function(){if(this.diskWithZip64CentralDirStart=this.reader.readInt(4),this.relativeOffsetEndOfZip64CentralDir=this.reader.readInt(8),this.disksCount=this.reader.readInt(4),1<this.disksCount)throw new Error("Multi-volumes zip are not supported")},readLocalFiles:function(){var d,u;for(d=0;d<this.files.length;d++)u=this.files[d],this.reader.setIndex(u.localHeaderOffset),this.checkSignature(a.LOCAL_FILE_HEADER),u.readLocalPart(this.reader),u.handleUTF8(),u.processAttributes()},readCentralDir:function(){var d;for(this.reader.setIndex(this.centralDirOffset);this.reader.readAndCheckSignature(a.CENTRAL_FILE_HEADER);)(d=new l({zip64:this.zip64},this.loadOptions)).readCentralPart(this.reader),this.files.push(d);if(this.centralDirRecords!==this.files.length&&this.centralDirRecords!==0&&this.files.length===0)throw new Error("Corrupted zip or bug: expected "+this.centralDirRecords+" records in central dir, got "+this.files.length)},readEndOfCentral:function(){var d=this.reader.lastIndexOfSignature(a.CENTRAL_DIRECTORY_END);if(d<0)throw this.isSignature(0,a.LOCAL_FILE_HEADER)?new Error("Corrupted zip: can't find end of central directory"):new Error("Can't find end of central directory : is this a zip file ? If it is, see https://stuk.github.io/jszip/documentation/howto/read_zip.html");this.reader.setIndex(d);var u=d;if(this.checkSignature(a.CENTRAL_DIRECTORY_END),this.readBlockEndOfCentral(),this.diskNumber===o.MAX_VALUE_16BITS||this.diskWithCentralDirStart===o.MAX_VALUE_16BITS||this.centralDirRecordsOnThisDisk===o.MAX_VALUE_16BITS||this.centralDirRecords===o.MAX_VALUE_16BITS||this.centralDirSize===o.MAX_VALUE_32BITS||this.centralDirOffset===o.MAX_VALUE_32BITS){if(this.zip64=!0,(d=this.reader.lastIndexOfSignature(a.ZIP64_CENTRAL_DIRECTORY_LOCATOR))<0)throw new Error("Corrupted zip: can't find the ZIP64 end of central directory locator");if(this.reader.setIndex(d),this.checkSignature(a.ZIP64_CENTRAL_DIRECTORY_LOCATOR),this.readBlockZip64EndOfCentralLocator(),!this.isSignature(this.relativeOffsetEndOfZip64CentralDir,a.ZIP64_CENTRAL_DIRECTORY_END)&&(this.relativeOffsetEndOfZip64CentralDir=this.reader.lastIndexOfSignature(a.ZIP64_CENTRAL_DIRECTORY_END),this.relativeOffsetEndOfZip64CentralDir<0))throw new Error("Corrupted zip: can't find the ZIP64 end of central directory");this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir),this.checkSignature(a.ZIP64_CENTRAL_DIRECTORY_END),this.readBlockZip64EndOfCentral()}var f=this.centralDirOffset+this.centralDirSize;this.zip64&&(f+=20,f+=12+this.zip64EndOfCentralSize);var m=u-f;if(0<m)this.isSignature(u,a.CENTRAL_FILE_HEADER)||(this.reader.zero=m);else if(m<0)throw new Error("Corrupted zip: missing "+Math.abs(m)+" bytes.")},prepareReader:function(d){this.reader=s(d)},load:function(d){this.prepareReader(d),this.readEndOfCentral(),this.readCentralDir(),this.readLocalFiles()}},i.exports=h},{"./reader/readerFor":22,"./signature":23,"./support":30,"./utils":32,"./zipEntry":34}],34:[function(t,i,n){var s=t("./reader/readerFor"),o=t("./utils"),a=t("./compressedObject"),l=t("./crc32"),c=t("./utf8"),h=t("./compressions"),d=t("./support");function u(f,m){this.options=f,this.loadOptions=m}u.prototype={isEncrypted:function(){return(1&this.bitFlag)==1},useUTF8:function(){return(2048&this.bitFlag)==2048},readLocalPart:function(f){var m,E;if(f.skip(22),this.fileNameLength=f.readInt(2),E=f.readInt(2),this.fileName=f.readData(this.fileNameLength),f.skip(E),this.compressedSize===-1||this.uncompressedSize===-1)throw new Error("Bug or corrupted zip : didn't get enough information from the central directory (compressedSize === -1 || uncompressedSize === -1)");if((m=function(g){for(var p in h)if(Object.prototype.hasOwnProperty.call(h,p)&&h[p].magic===g)return h[p];return null}(this.compressionMethod))===null)throw new Error("Corrupted zip : compression "+o.pretty(this.compressionMethod)+" unknown (inner file : "+o.transformTo("string",this.fileName)+")");this.decompressed=new a(this.compressedSize,this.uncompressedSize,this.crc32,m,f.readData(this.compressedSize))},readCentralPart:function(f){this.versionMadeBy=f.readInt(2),f.skip(2),this.bitFlag=f.readInt(2),this.compressionMethod=f.readString(2),this.date=f.readDate(),this.crc32=f.readInt(4),this.compressedSize=f.readInt(4),this.uncompressedSize=f.readInt(4);var m=f.readInt(2);if(this.extraFieldsLength=f.readInt(2),this.fileCommentLength=f.readInt(2),this.diskNumberStart=f.readInt(2),this.internalFileAttributes=f.readInt(2),this.externalFileAttributes=f.readInt(4),this.localHeaderOffset=f.readInt(4),this.isEncrypted())throw new Error("Encrypted zip are not supported");f.skip(m),this.readExtraFields(f),this.parseZIP64ExtraField(f),this.fileComment=f.readData(this.fileCommentLength)},processAttributes:function(){this.unixPermissions=null,this.dosPermissions=null;var f=this.versionMadeBy>>8;this.dir=!!(16&this.externalFileAttributes),f==0&&(this.dosPermissions=63&this.externalFileAttributes),f==3&&(this.unixPermissions=this.externalFileAttributes>>16&65535),this.dir||this.fileNameStr.slice(-1)!=="/"||(this.dir=!0)},parseZIP64ExtraField:function(){if(this.extraFields[1]){var f=s(this.extraFields[1].value);this.uncompressedSize===o.MAX_VALUE_32BITS&&(this.uncompressedSize=f.readInt(8)),this.compressedSize===o.MAX_VALUE_32BITS&&(this.compressedSize=f.readInt(8)),this.localHeaderOffset===o.MAX_VALUE_32BITS&&(this.localHeaderOffset=f.readInt(8)),this.diskNumberStart===o.MAX_VALUE_32BITS&&(this.diskNumberStart=f.readInt(4))}},readExtraFields:function(f){var m,E,g,p=f.index+this.extraFieldsLength;for(this.extraFields||(this.extraFields={});f.index+4<p;)m=f.readInt(2),E=f.readInt(2),g=f.readData(E),this.extraFields[m]={id:m,length:E,value:g};f.setIndex(p)},handleUTF8:function(){var f=d.uint8array?"uint8array":"array";if(this.useUTF8())this.fileNameStr=c.utf8decode(this.fileName),this.fileCommentStr=c.utf8decode(this.fileComment);else{var m=this.findExtraFieldUnicodePath();if(m!==null)this.fileNameStr=m;else{var E=o.transformTo(f,this.fileName);this.fileNameStr=this.loadOptions.decodeFileName(E)}var g=this.findExtraFieldUnicodeComment();if(g!==null)this.fileCommentStr=g;else{var p=o.transformTo(f,this.fileComment);this.fileCommentStr=this.loadOptions.decodeFileName(p)}}},findExtraFieldUnicodePath:function(){var f=this.extraFields[28789];if(f){var m=s(f.value);return m.readInt(1)!==1||l(this.fileName)!==m.readInt(4)?null:c.utf8decode(m.readData(f.length-5))}return null},findExtraFieldUnicodeComment:function(){var f=this.extraFields[25461];if(f){var m=s(f.value);return m.readInt(1)!==1||l(this.fileComment)!==m.readInt(4)?null:c.utf8decode(m.readData(f.length-5))}return null}},i.exports=u},{"./compressedObject":2,"./compressions":3,"./crc32":4,"./reader/readerFor":22,"./support":30,"./utf8":31,"./utils":32}],35:[function(t,i,n){function s(m,E,g){this.name=m,this.dir=g.dir,this.date=g.date,this.comment=g.comment,this.unixPermissions=g.unixPermissions,this.dosPermissions=g.dosPermissions,this._data=E,this._dataBinary=g.binary,this.options={compression:g.compression,compressionOptions:g.compressionOptions}}var o=t("./stream/StreamHelper"),a=t("./stream/DataWorker"),l=t("./utf8"),c=t("./compressedObject"),h=t("./stream/GenericWorker");s.prototype={internalStream:function(m){var E=null,g="string";try{if(!m)throw new Error("No output type specified.");var p=(g=m.toLowerCase())==="string"||g==="text";g!=="binarystring"&&g!=="text"||(g="string"),E=this._decompressWorker();var _=!this._dataBinary;_&&!p&&(E=E.pipe(new l.Utf8EncodeWorker)),!_&&p&&(E=E.pipe(new l.Utf8DecodeWorker))}catch(T){(E=new h("error")).error(T)}return new o(E,g,"")},async:function(m,E){return this.internalStream(m).accumulate(E)},nodeStream:function(m,E){return this.internalStream(m||"nodebuffer").toNodejsStream(E)},_compressWorker:function(m,E){if(this._data instanceof c&&this._data.compression.magic===m.magic)return this._data.getCompressedWorker();var g=this._decompressWorker();return this._dataBinary||(g=g.pipe(new l.Utf8EncodeWorker)),c.createWorkerFrom(g,m,E)},_decompressWorker:function(){return this._data instanceof c?this._data.getContentWorker():this._data instanceof h?this._data:new a(this._data)}};for(var d=["asText","asBinary","asNodeBuffer","asUint8Array","asArrayBuffer"],u=function(){throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")},f=0;f<d.length;f++)s.prototype[d[f]]=u;i.exports=s},{"./compressedObject":2,"./stream/DataWorker":27,"./stream/GenericWorker":28,"./stream/StreamHelper":29,"./utf8":31}],36:[function(t,i,n){(function(s){var o,a,l=s.MutationObserver||s.WebKitMutationObserver;if(l){var c=0,h=new l(m),d=s.document.createTextNode("");h.observe(d,{characterData:!0}),o=function(){d.data=c=++c%2}}else if(s.setImmediate||s.MessageChannel===void 0)o="document"in s&&"onreadystatechange"in s.document.createElement("script")?function(){var E=s.document.createElement("script");E.onreadystatechange=function(){m(),E.onreadystatechange=null,E.parentNode.removeChild(E),E=null},s.document.documentElement.appendChild(E)}:function(){setTimeout(m,0)};else{var u=new s.MessageChannel;u.port1.onmessage=m,o=function(){u.port2.postMessage(0)}}var f=[];function m(){var E,g;a=!0;for(var p=f.length;p;){for(g=f,f=[],E=-1;++E<p;)g[E]();p=f.length}a=!1}i.exports=function(E){f.push(E)!==1||a||o()}}).call(this,typeof Xl<"u"?Xl:typeof self<"u"?self:typeof window<"u"?window:{})},{}],37:[function(t,i,n){var s=t("immediate");function o(){}var a={},l=["REJECTED"],c=["FULFILLED"],h=["PENDING"];function d(p){if(typeof p!="function")throw new TypeError("resolver must be a function");this.state=h,this.queue=[],this.outcome=void 0,p!==o&&E(this,p)}function u(p,_,T){this.promise=p,typeof _=="function"&&(this.onFulfilled=_,this.callFulfilled=this.otherCallFulfilled),typeof T=="function"&&(this.onRejected=T,this.callRejected=this.otherCallRejected)}function f(p,_,T){s(function(){var I;try{I=_(T)}catch(v){return a.reject(p,v)}I===p?a.reject(p,new TypeError("Cannot resolve promise with itself")):a.resolve(p,I)})}function m(p){var _=p&&p.then;if(p&&(typeof p=="object"||typeof p=="function")&&typeof _=="function")return function(){_.apply(p,arguments)}}function E(p,_){var T=!1;function I(x){T||(T=!0,a.reject(p,x))}function v(x){T||(T=!0,a.resolve(p,x))}var b=g(function(){_(v,I)});b.status==="error"&&I(b.value)}function g(p,_){var T={};try{T.value=p(_),T.status="success"}catch(I){T.status="error",T.value=I}return T}(i.exports=d).prototype.finally=function(p){if(typeof p!="function")return this;var _=this.constructor;return this.then(function(T){return _.resolve(p()).then(function(){return T})},function(T){return _.resolve(p()).then(function(){throw T})})},d.prototype.catch=function(p){return this.then(null,p)},d.prototype.then=function(p,_){if(typeof p!="function"&&this.state===c||typeof _!="function"&&this.state===l)return this;var T=new this.constructor(o);return this.state!==h?f(T,this.state===c?p:_,this.outcome):this.queue.push(new u(T,p,_)),T},u.prototype.callFulfilled=function(p){a.resolve(this.promise,p)},u.prototype.otherCallFulfilled=function(p){f(this.promise,this.onFulfilled,p)},u.prototype.callRejected=function(p){a.reject(this.promise,p)},u.prototype.otherCallRejected=function(p){f(this.promise,this.onRejected,p)},a.resolve=function(p,_){var T=g(m,_);if(T.status==="error")return a.reject(p,T.value);var I=T.value;if(I)E(p,I);else{p.state=c,p.outcome=_;for(var v=-1,b=p.queue.length;++v<b;)p.queue[v].callFulfilled(_)}return p},a.reject=function(p,_){p.state=l,p.outcome=_;for(var T=-1,I=p.queue.length;++T<I;)p.queue[T].callRejected(_);return p},d.resolve=function(p){return p instanceof this?p:a.resolve(new this(o),p)},d.reject=function(p){var _=new this(o);return a.reject(_,p)},d.all=function(p){var _=this;if(Object.prototype.toString.call(p)!=="[object Array]")return this.reject(new TypeError("must be an array"));var T=p.length,I=!1;if(!T)return this.resolve([]);for(var v=new Array(T),b=0,x=-1,A=new this(o);++x<T;)y(p[x],x);return A;function y(S,O){_.resolve(S).then(function(w){v[O]=w,++b!==T||I||(I=!0,a.resolve(A,v))},function(w){I||(I=!0,a.reject(A,w))})}},d.race=function(p){var _=this;if(Object.prototype.toString.call(p)!=="[object Array]")return this.reject(new TypeError("must be an array"));var T=p.length,I=!1;if(!T)return this.resolve([]);for(var v=-1,b=new this(o);++v<T;)x=p[v],_.resolve(x).then(function(A){I||(I=!0,a.resolve(b,A))},function(A){I||(I=!0,a.reject(b,A))});var x;return b}},{immediate:36}],38:[function(t,i,n){var s={};(0,t("./lib/utils/common").assign)(s,t("./lib/deflate"),t("./lib/inflate"),t("./lib/zlib/constants")),i.exports=s},{"./lib/deflate":39,"./lib/inflate":40,"./lib/utils/common":41,"./lib/zlib/constants":44}],39:[function(t,i,n){var s=t("./zlib/deflate"),o=t("./utils/common"),a=t("./utils/strings"),l=t("./zlib/messages"),c=t("./zlib/zstream"),h=Object.prototype.toString,d=0,u=-1,f=0,m=8;function E(p){if(!(this instanceof E))return new E(p);this.options=o.assign({level:u,method:m,chunkSize:16384,windowBits:15,memLevel:8,strategy:f,to:""},p||{});var _=this.options;_.raw&&0<_.windowBits?_.windowBits=-_.windowBits:_.gzip&&0<_.windowBits&&_.windowBits<16&&(_.windowBits+=16),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new c,this.strm.avail_out=0;var T=s.deflateInit2(this.strm,_.level,_.method,_.windowBits,_.memLevel,_.strategy);if(T!==d)throw new Error(l[T]);if(_.header&&s.deflateSetHeader(this.strm,_.header),_.dictionary){var I;if(I=typeof _.dictionary=="string"?a.string2buf(_.dictionary):h.call(_.dictionary)==="[object ArrayBuffer]"?new Uint8Array(_.dictionary):_.dictionary,(T=s.deflateSetDictionary(this.strm,I))!==d)throw new Error(l[T]);this._dict_set=!0}}function g(p,_){var T=new E(_);if(T.push(p,!0),T.err)throw T.msg||l[T.err];return T.result}E.prototype.push=function(p,_){var T,I,v=this.strm,b=this.options.chunkSize;if(this.ended)return!1;I=_===~~_?_:_===!0?4:0,typeof p=="string"?v.input=a.string2buf(p):h.call(p)==="[object ArrayBuffer]"?v.input=new Uint8Array(p):v.input=p,v.next_in=0,v.avail_in=v.input.length;do{if(v.avail_out===0&&(v.output=new o.Buf8(b),v.next_out=0,v.avail_out=b),(T=s.deflate(v,I))!==1&&T!==d)return this.onEnd(T),!(this.ended=!0);v.avail_out!==0&&(v.avail_in!==0||I!==4&&I!==2)||(this.options.to==="string"?this.onData(a.buf2binstring(o.shrinkBuf(v.output,v.next_out))):this.onData(o.shrinkBuf(v.output,v.next_out)))}while((0<v.avail_in||v.avail_out===0)&&T!==1);return I===4?(T=s.deflateEnd(this.strm),this.onEnd(T),this.ended=!0,T===d):I!==2||(this.onEnd(d),!(v.avail_out=0))},E.prototype.onData=function(p){this.chunks.push(p)},E.prototype.onEnd=function(p){p===d&&(this.options.to==="string"?this.result=this.chunks.join(""):this.result=o.flattenChunks(this.chunks)),this.chunks=[],this.err=p,this.msg=this.strm.msg},n.Deflate=E,n.deflate=g,n.deflateRaw=function(p,_){return(_=_||{}).raw=!0,g(p,_)},n.gzip=function(p,_){return(_=_||{}).gzip=!0,g(p,_)}},{"./utils/common":41,"./utils/strings":42,"./zlib/deflate":46,"./zlib/messages":51,"./zlib/zstream":53}],40:[function(t,i,n){var s=t("./zlib/inflate"),o=t("./utils/common"),a=t("./utils/strings"),l=t("./zlib/constants"),c=t("./zlib/messages"),h=t("./zlib/zstream"),d=t("./zlib/gzheader"),u=Object.prototype.toString;function f(E){if(!(this instanceof f))return new f(E);this.options=o.assign({chunkSize:16384,windowBits:0,to:""},E||{});var g=this.options;g.raw&&0<=g.windowBits&&g.windowBits<16&&(g.windowBits=-g.windowBits,g.windowBits===0&&(g.windowBits=-15)),!(0<=g.windowBits&&g.windowBits<16)||E&&E.windowBits||(g.windowBits+=32),15<g.windowBits&&g.windowBits<48&&!(15&g.windowBits)&&(g.windowBits|=15),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new h,this.strm.avail_out=0;var p=s.inflateInit2(this.strm,g.windowBits);if(p!==l.Z_OK)throw new Error(c[p]);this.header=new d,s.inflateGetHeader(this.strm,this.header)}function m(E,g){var p=new f(g);if(p.push(E,!0),p.err)throw p.msg||c[p.err];return p.result}f.prototype.push=function(E,g){var p,_,T,I,v,b,x=this.strm,A=this.options.chunkSize,y=this.options.dictionary,S=!1;if(this.ended)return!1;_=g===~~g?g:g===!0?l.Z_FINISH:l.Z_NO_FLUSH,typeof E=="string"?x.input=a.binstring2buf(E):u.call(E)==="[object ArrayBuffer]"?x.input=new Uint8Array(E):x.input=E,x.next_in=0,x.avail_in=x.input.length;do{if(x.avail_out===0&&(x.output=new o.Buf8(A),x.next_out=0,x.avail_out=A),(p=s.inflate(x,l.Z_NO_FLUSH))===l.Z_NEED_DICT&&y&&(b=typeof y=="string"?a.string2buf(y):u.call(y)==="[object ArrayBuffer]"?new Uint8Array(y):y,p=s.inflateSetDictionary(this.strm,b)),p===l.Z_BUF_ERROR&&S===!0&&(p=l.Z_OK,S=!1),p!==l.Z_STREAM_END&&p!==l.Z_OK)return this.onEnd(p),!(this.ended=!0);x.next_out&&(x.avail_out!==0&&p!==l.Z_STREAM_END&&(x.avail_in!==0||_!==l.Z_FINISH&&_!==l.Z_SYNC_FLUSH)||(this.options.to==="string"?(T=a.utf8border(x.output,x.next_out),I=x.next_out-T,v=a.buf2string(x.output,T),x.next_out=I,x.avail_out=A-I,I&&o.arraySet(x.output,x.output,T,I,0),this.onData(v)):this.onData(o.shrinkBuf(x.output,x.next_out)))),x.avail_in===0&&x.avail_out===0&&(S=!0)}while((0<x.avail_in||x.avail_out===0)&&p!==l.Z_STREAM_END);return p===l.Z_STREAM_END&&(_=l.Z_FINISH),_===l.Z_FINISH?(p=s.inflateEnd(this.strm),this.onEnd(p),this.ended=!0,p===l.Z_OK):_!==l.Z_SYNC_FLUSH||(this.onEnd(l.Z_OK),!(x.avail_out=0))},f.prototype.onData=function(E){this.chunks.push(E)},f.prototype.onEnd=function(E){E===l.Z_OK&&(this.options.to==="string"?this.result=this.chunks.join(""):this.result=o.flattenChunks(this.chunks)),this.chunks=[],this.err=E,this.msg=this.strm.msg},n.Inflate=f,n.inflate=m,n.inflateRaw=function(E,g){return(g=g||{}).raw=!0,m(E,g)},n.ungzip=m},{"./utils/common":41,"./utils/strings":42,"./zlib/constants":44,"./zlib/gzheader":47,"./zlib/inflate":49,"./zlib/messages":51,"./zlib/zstream":53}],41:[function(t,i,n){var s=typeof Uint8Array<"u"&&typeof Uint16Array<"u"&&typeof Int32Array<"u";n.assign=function(l){for(var c=Array.prototype.slice.call(arguments,1);c.length;){var h=c.shift();if(h){if(typeof h!="object")throw new TypeError(h+"must be non-object");for(var d in h)h.hasOwnProperty(d)&&(l[d]=h[d])}}return l},n.shrinkBuf=function(l,c){return l.length===c?l:l.subarray?l.subarray(0,c):(l.length=c,l)};var o={arraySet:function(l,c,h,d,u){if(c.subarray&&l.subarray)l.set(c.subarray(h,h+d),u);else for(var f=0;f<d;f++)l[u+f]=c[h+f]},flattenChunks:function(l){var c,h,d,u,f,m;for(c=d=0,h=l.length;c<h;c++)d+=l[c].length;for(m=new Uint8Array(d),c=u=0,h=l.length;c<h;c++)f=l[c],m.set(f,u),u+=f.length;return m}},a={arraySet:function(l,c,h,d,u){for(var f=0;f<d;f++)l[u+f]=c[h+f]},flattenChunks:function(l){return[].concat.apply([],l)}};n.setTyped=function(l){l?(n.Buf8=Uint8Array,n.Buf16=Uint16Array,n.Buf32=Int32Array,n.assign(n,o)):(n.Buf8=Array,n.Buf16=Array,n.Buf32=Array,n.assign(n,a))},n.setTyped(s)},{}],42:[function(t,i,n){var s=t("./common"),o=!0,a=!0;try{String.fromCharCode.apply(null,[0])}catch{o=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch{a=!1}for(var l=new s.Buf8(256),c=0;c<256;c++)l[c]=252<=c?6:248<=c?5:240<=c?4:224<=c?3:192<=c?2:1;function h(d,u){if(u<65537&&(d.subarray&&a||!d.subarray&&o))return String.fromCharCode.apply(null,s.shrinkBuf(d,u));for(var f="",m=0;m<u;m++)f+=String.fromCharCode(d[m]);return f}l[254]=l[254]=1,n.string2buf=function(d){var u,f,m,E,g,p=d.length,_=0;for(E=0;E<p;E++)(64512&(f=d.charCodeAt(E)))==55296&&E+1<p&&(64512&(m=d.charCodeAt(E+1)))==56320&&(f=65536+(f-55296<<10)+(m-56320),E++),_+=f<128?1:f<2048?2:f<65536?3:4;for(u=new s.Buf8(_),E=g=0;g<_;E++)(64512&(f=d.charCodeAt(E)))==55296&&E+1<p&&(64512&(m=d.charCodeAt(E+1)))==56320&&(f=65536+(f-55296<<10)+(m-56320),E++),f<128?u[g++]=f:(f<2048?u[g++]=192|f>>>6:(f<65536?u[g++]=224|f>>>12:(u[g++]=240|f>>>18,u[g++]=128|f>>>12&63),u[g++]=128|f>>>6&63),u[g++]=128|63&f);return u},n.buf2binstring=function(d){return h(d,d.length)},n.binstring2buf=function(d){for(var u=new s.Buf8(d.length),f=0,m=u.length;f<m;f++)u[f]=d.charCodeAt(f);return u},n.buf2string=function(d,u){var f,m,E,g,p=u||d.length,_=new Array(2*p);for(f=m=0;f<p;)if((E=d[f++])<128)_[m++]=E;else if(4<(g=l[E]))_[m++]=65533,f+=g-1;else{for(E&=g===2?31:g===3?15:7;1<g&&f<p;)E=E<<6|63&d[f++],g--;1<g?_[m++]=65533:E<65536?_[m++]=E:(E-=65536,_[m++]=55296|E>>10&1023,_[m++]=56320|1023&E)}return h(_,m)},n.utf8border=function(d,u){var f;for((u=u||d.length)>d.length&&(u=d.length),f=u-1;0<=f&&(192&d[f])==128;)f--;return f<0||f===0?u:f+l[d[f]]>u?f:u}},{"./common":41}],43:[function(t,i,n){i.exports=function(s,o,a,l){for(var c=65535&s|0,h=s>>>16&65535|0,d=0;a!==0;){for(a-=d=2e3<a?2e3:a;h=h+(c=c+o[l++]|0)|0,--d;);c%=65521,h%=65521}return c|h<<16|0}},{}],44:[function(t,i,n){i.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],45:[function(t,i,n){var s=function(){for(var o,a=[],l=0;l<256;l++){o=l;for(var c=0;c<8;c++)o=1&o?3988292384^o>>>1:o>>>1;a[l]=o}return a}();i.exports=function(o,a,l,c){var h=s,d=c+l;o^=-1;for(var u=c;u<d;u++)o=o>>>8^h[255&(o^a[u])];return-1^o}},{}],46:[function(t,i,n){var s,o=t("../utils/common"),a=t("./trees"),l=t("./adler32"),c=t("./crc32"),h=t("./messages"),d=0,u=4,f=0,m=-2,E=-1,g=4,p=2,_=8,T=9,I=286,v=30,b=19,x=2*I+1,A=15,y=3,S=258,O=S+y+1,w=42,N=113,C=1,U=2,B=3,V=4;function j(M,ee){return M.msg=h[ee],ee}function G(M){return(M<<1)-(4<M?9:0)}function se(M){for(var ee=M.length;0<=--ee;)M[ee]=0}function W(M){var ee=M.state,K=ee.pending;K>M.avail_out&&(K=M.avail_out),K!==0&&(o.arraySet(M.output,ee.pending_buf,ee.pending_out,K,M.next_out),M.next_out+=K,ee.pending_out+=K,M.total_out+=K,M.avail_out-=K,ee.pending-=K,ee.pending===0&&(ee.pending_out=0))}function Y(M,ee){a._tr_flush_block(M,0<=M.block_start?M.block_start:-1,M.strstart-M.block_start,ee),M.block_start=M.strstart,W(M.strm)}function q(M,ee){M.pending_buf[M.pending++]=ee}function Q(M,ee){M.pending_buf[M.pending++]=ee>>>8&255,M.pending_buf[M.pending++]=255&ee}function te(M,ee){var K,H,z=M.max_chain_length,P=M.strstart,L=M.prev_length,Z=M.nice_match,X=M.strstart>M.w_size-O?M.strstart-(M.w_size-O):0,$=M.window,re=M.w_mask,le=M.prev,de=M.strstart+S,Te=$[P+L-1],ye=$[P+L];M.prev_length>=M.good_match&&(z>>=2),Z>M.lookahead&&(Z=M.lookahead);do if($[(K=ee)+L]===ye&&$[K+L-1]===Te&&$[K]===$[P]&&$[++K]===$[P+1]){P+=2,K++;do;while($[++P]===$[++K]&&$[++P]===$[++K]&&$[++P]===$[++K]&&$[++P]===$[++K]&&$[++P]===$[++K]&&$[++P]===$[++K]&&$[++P]===$[++K]&&$[++P]===$[++K]&&P<de);if(H=S-(de-P),P=de-S,L<H){if(M.match_start=ee,Z<=(L=H))break;Te=$[P+L-1],ye=$[P+L]}}while((ee=le[ee&re])>X&&--z!=0);return L<=M.lookahead?L:M.lookahead}function Ie(M){var ee,K,H,z,P,L,Z,X,$,re,le=M.w_size;do{if(z=M.window_size-M.lookahead-M.strstart,M.strstart>=le+(le-O)){for(o.arraySet(M.window,M.window,le,le,0),M.match_start-=le,M.strstart-=le,M.block_start-=le,ee=K=M.hash_size;H=M.head[--ee],M.head[ee]=le<=H?H-le:0,--K;);for(ee=K=le;H=M.prev[--ee],M.prev[ee]=le<=H?H-le:0,--K;);z+=le}if(M.strm.avail_in===0)break;if(L=M.strm,Z=M.window,X=M.strstart+M.lookahead,$=z,re=void 0,re=L.avail_in,$<re&&(re=$),K=re===0?0:(L.avail_in-=re,o.arraySet(Z,L.input,L.next_in,re,X),L.state.wrap===1?L.adler=l(L.adler,Z,re,X):L.state.wrap===2&&(L.adler=c(L.adler,Z,re,X)),L.next_in+=re,L.total_in+=re,re),M.lookahead+=K,M.lookahead+M.insert>=y)for(P=M.strstart-M.insert,M.ins_h=M.window[P],M.ins_h=(M.ins_h<<M.hash_shift^M.window[P+1])&M.hash_mask;M.insert&&(M.ins_h=(M.ins_h<<M.hash_shift^M.window[P+y-1])&M.hash_mask,M.prev[P&M.w_mask]=M.head[M.ins_h],M.head[M.ins_h]=P,P++,M.insert--,!(M.lookahead+M.insert<y)););}while(M.lookahead<O&&M.strm.avail_in!==0)}function ve(M,ee){for(var K,H;;){if(M.lookahead<O){if(Ie(M),M.lookahead<O&&ee===d)return C;if(M.lookahead===0)break}if(K=0,M.lookahead>=y&&(M.ins_h=(M.ins_h<<M.hash_shift^M.window[M.strstart+y-1])&M.hash_mask,K=M.prev[M.strstart&M.w_mask]=M.head[M.ins_h],M.head[M.ins_h]=M.strstart),K!==0&&M.strstart-K<=M.w_size-O&&(M.match_length=te(M,K)),M.match_length>=y)if(H=a._tr_tally(M,M.strstart-M.match_start,M.match_length-y),M.lookahead-=M.match_length,M.match_length<=M.max_lazy_match&&M.lookahead>=y){for(M.match_length--;M.strstart++,M.ins_h=(M.ins_h<<M.hash_shift^M.window[M.strstart+y-1])&M.hash_mask,K=M.prev[M.strstart&M.w_mask]=M.head[M.ins_h],M.head[M.ins_h]=M.strstart,--M.match_length!=0;);M.strstart++}else M.strstart+=M.match_length,M.match_length=0,M.ins_h=M.window[M.strstart],M.ins_h=(M.ins_h<<M.hash_shift^M.window[M.strstart+1])&M.hash_mask;else H=a._tr_tally(M,0,M.window[M.strstart]),M.lookahead--,M.strstart++;if(H&&(Y(M,!1),M.strm.avail_out===0))return C}return M.insert=M.strstart<y-1?M.strstart:y-1,ee===u?(Y(M,!0),M.strm.avail_out===0?B:V):M.last_lit&&(Y(M,!1),M.strm.avail_out===0)?C:U}function pe(M,ee){for(var K,H,z;;){if(M.lookahead<O){if(Ie(M),M.lookahead<O&&ee===d)return C;if(M.lookahead===0)break}if(K=0,M.lookahead>=y&&(M.ins_h=(M.ins_h<<M.hash_shift^M.window[M.strstart+y-1])&M.hash_mask,K=M.prev[M.strstart&M.w_mask]=M.head[M.ins_h],M.head[M.ins_h]=M.strstart),M.prev_length=M.match_length,M.prev_match=M.match_start,M.match_length=y-1,K!==0&&M.prev_length<M.max_lazy_match&&M.strstart-K<=M.w_size-O&&(M.match_length=te(M,K),M.match_length<=5&&(M.strategy===1||M.match_length===y&&4096<M.strstart-M.match_start)&&(M.match_length=y-1)),M.prev_length>=y&&M.match_length<=M.prev_length){for(z=M.strstart+M.lookahead-y,H=a._tr_tally(M,M.strstart-1-M.prev_match,M.prev_length-y),M.lookahead-=M.prev_length-1,M.prev_length-=2;++M.strstart<=z&&(M.ins_h=(M.ins_h<<M.hash_shift^M.window[M.strstart+y-1])&M.hash_mask,K=M.prev[M.strstart&M.w_mask]=M.head[M.ins_h],M.head[M.ins_h]=M.strstart),--M.prev_length!=0;);if(M.match_available=0,M.match_length=y-1,M.strstart++,H&&(Y(M,!1),M.strm.avail_out===0))return C}else if(M.match_available){if((H=a._tr_tally(M,0,M.window[M.strstart-1]))&&Y(M,!1),M.strstart++,M.lookahead--,M.strm.avail_out===0)return C}else M.match_available=1,M.strstart++,M.lookahead--}return M.match_available&&(H=a._tr_tally(M,0,M.window[M.strstart-1]),M.match_available=0),M.insert=M.strstart<y-1?M.strstart:y-1,ee===u?(Y(M,!0),M.strm.avail_out===0?B:V):M.last_lit&&(Y(M,!1),M.strm.avail_out===0)?C:U}function _e(M,ee,K,H,z){this.good_length=M,this.max_lazy=ee,this.nice_length=K,this.max_chain=H,this.func=z}function Ee(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=_,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new o.Buf16(2*x),this.dyn_dtree=new o.Buf16(2*(2*v+1)),this.bl_tree=new o.Buf16(2*(2*b+1)),se(this.dyn_ltree),se(this.dyn_dtree),se(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new o.Buf16(A+1),this.heap=new o.Buf16(2*I+1),se(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new o.Buf16(2*I+1),se(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function Ae(M){var ee;return M&&M.state?(M.total_in=M.total_out=0,M.data_type=p,(ee=M.state).pending=0,ee.pending_out=0,ee.wrap<0&&(ee.wrap=-ee.wrap),ee.status=ee.wrap?w:N,M.adler=ee.wrap===2?0:1,ee.last_flush=d,a._tr_init(ee),f):j(M,m)}function ie(M){var ee=Ae(M);return ee===f&&function(K){K.window_size=2*K.w_size,se(K.head),K.max_lazy_match=s[K.level].max_lazy,K.good_match=s[K.level].good_length,K.nice_match=s[K.level].nice_length,K.max_chain_length=s[K.level].max_chain,K.strstart=0,K.block_start=0,K.lookahead=0,K.insert=0,K.match_length=K.prev_length=y-1,K.match_available=0,K.ins_h=0}(M.state),ee}function $e(M,ee,K,H,z,P){if(!M)return m;var L=1;if(ee===E&&(ee=6),H<0?(L=0,H=-H):15<H&&(L=2,H-=16),z<1||T<z||K!==_||H<8||15<H||ee<0||9<ee||P<0||g<P)return j(M,m);H===8&&(H=9);var Z=new Ee;return(M.state=Z).strm=M,Z.wrap=L,Z.gzhead=null,Z.w_bits=H,Z.w_size=1<<Z.w_bits,Z.w_mask=Z.w_size-1,Z.hash_bits=z+7,Z.hash_size=1<<Z.hash_bits,Z.hash_mask=Z.hash_size-1,Z.hash_shift=~~((Z.hash_bits+y-1)/y),Z.window=new o.Buf8(2*Z.w_size),Z.head=new o.Buf16(Z.hash_size),Z.prev=new o.Buf16(Z.w_size),Z.lit_bufsize=1<<z+6,Z.pending_buf_size=4*Z.lit_bufsize,Z.pending_buf=new o.Buf8(Z.pending_buf_size),Z.d_buf=1*Z.lit_bufsize,Z.l_buf=3*Z.lit_bufsize,Z.level=ee,Z.strategy=P,Z.method=K,ie(M)}s=[new _e(0,0,0,0,function(M,ee){var K=65535;for(K>M.pending_buf_size-5&&(K=M.pending_buf_size-5);;){if(M.lookahead<=1){if(Ie(M),M.lookahead===0&&ee===d)return C;if(M.lookahead===0)break}M.strstart+=M.lookahead,M.lookahead=0;var H=M.block_start+K;if((M.strstart===0||M.strstart>=H)&&(M.lookahead=M.strstart-H,M.strstart=H,Y(M,!1),M.strm.avail_out===0)||M.strstart-M.block_start>=M.w_size-O&&(Y(M,!1),M.strm.avail_out===0))return C}return M.insert=0,ee===u?(Y(M,!0),M.strm.avail_out===0?B:V):(M.strstart>M.block_start&&(Y(M,!1),M.strm.avail_out),C)}),new _e(4,4,8,4,ve),new _e(4,5,16,8,ve),new _e(4,6,32,32,ve),new _e(4,4,16,16,pe),new _e(8,16,32,32,pe),new _e(8,16,128,128,pe),new _e(8,32,128,256,pe),new _e(32,128,258,1024,pe),new _e(32,258,258,4096,pe)],n.deflateInit=function(M,ee){return $e(M,ee,_,15,8,0)},n.deflateInit2=$e,n.deflateReset=ie,n.deflateResetKeep=Ae,n.deflateSetHeader=function(M,ee){return M&&M.state?M.state.wrap!==2?m:(M.state.gzhead=ee,f):m},n.deflate=function(M,ee){var K,H,z,P;if(!M||!M.state||5<ee||ee<0)return M?j(M,m):m;if(H=M.state,!M.output||!M.input&&M.avail_in!==0||H.status===666&&ee!==u)return j(M,M.avail_out===0?-5:m);if(H.strm=M,K=H.last_flush,H.last_flush=ee,H.status===w)if(H.wrap===2)M.adler=0,q(H,31),q(H,139),q(H,8),H.gzhead?(q(H,(H.gzhead.text?1:0)+(H.gzhead.hcrc?2:0)+(H.gzhead.extra?4:0)+(H.gzhead.name?8:0)+(H.gzhead.comment?16:0)),q(H,255&H.gzhead.time),q(H,H.gzhead.time>>8&255),q(H,H.gzhead.time>>16&255),q(H,H.gzhead.time>>24&255),q(H,H.level===9?2:2<=H.strategy||H.level<2?4:0),q(H,255&H.gzhead.os),H.gzhead.extra&&H.gzhead.extra.length&&(q(H,255&H.gzhead.extra.length),q(H,H.gzhead.extra.length>>8&255)),H.gzhead.hcrc&&(M.adler=c(M.adler,H.pending_buf,H.pending,0)),H.gzindex=0,H.status=69):(q(H,0),q(H,0),q(H,0),q(H,0),q(H,0),q(H,H.level===9?2:2<=H.strategy||H.level<2?4:0),q(H,3),H.status=N);else{var L=_+(H.w_bits-8<<4)<<8;L|=(2<=H.strategy||H.level<2?0:H.level<6?1:H.level===6?2:3)<<6,H.strstart!==0&&(L|=32),L+=31-L%31,H.status=N,Q(H,L),H.strstart!==0&&(Q(H,M.adler>>>16),Q(H,65535&M.adler)),M.adler=1}if(H.status===69)if(H.gzhead.extra){for(z=H.pending;H.gzindex<(65535&H.gzhead.extra.length)&&(H.pending!==H.pending_buf_size||(H.gzhead.hcrc&&H.pending>z&&(M.adler=c(M.adler,H.pending_buf,H.pending-z,z)),W(M),z=H.pending,H.pending!==H.pending_buf_size));)q(H,255&H.gzhead.extra[H.gzindex]),H.gzindex++;H.gzhead.hcrc&&H.pending>z&&(M.adler=c(M.adler,H.pending_buf,H.pending-z,z)),H.gzindex===H.gzhead.extra.length&&(H.gzindex=0,H.status=73)}else H.status=73;if(H.status===73)if(H.gzhead.name){z=H.pending;do{if(H.pending===H.pending_buf_size&&(H.gzhead.hcrc&&H.pending>z&&(M.adler=c(M.adler,H.pending_buf,H.pending-z,z)),W(M),z=H.pending,H.pending===H.pending_buf_size)){P=1;break}P=H.gzindex<H.gzhead.name.length?255&H.gzhead.name.charCodeAt(H.gzindex++):0,q(H,P)}while(P!==0);H.gzhead.hcrc&&H.pending>z&&(M.adler=c(M.adler,H.pending_buf,H.pending-z,z)),P===0&&(H.gzindex=0,H.status=91)}else H.status=91;if(H.status===91)if(H.gzhead.comment){z=H.pending;do{if(H.pending===H.pending_buf_size&&(H.gzhead.hcrc&&H.pending>z&&(M.adler=c(M.adler,H.pending_buf,H.pending-z,z)),W(M),z=H.pending,H.pending===H.pending_buf_size)){P=1;break}P=H.gzindex<H.gzhead.comment.length?255&H.gzhead.comment.charCodeAt(H.gzindex++):0,q(H,P)}while(P!==0);H.gzhead.hcrc&&H.pending>z&&(M.adler=c(M.adler,H.pending_buf,H.pending-z,z)),P===0&&(H.status=103)}else H.status=103;if(H.status===103&&(H.gzhead.hcrc?(H.pending+2>H.pending_buf_size&&W(M),H.pending+2<=H.pending_buf_size&&(q(H,255&M.adler),q(H,M.adler>>8&255),M.adler=0,H.status=N)):H.status=N),H.pending!==0){if(W(M),M.avail_out===0)return H.last_flush=-1,f}else if(M.avail_in===0&&G(ee)<=G(K)&&ee!==u)return j(M,-5);if(H.status===666&&M.avail_in!==0)return j(M,-5);if(M.avail_in!==0||H.lookahead!==0||ee!==d&&H.status!==666){var Z=H.strategy===2?function(X,$){for(var re;;){if(X.lookahead===0&&(Ie(X),X.lookahead===0)){if($===d)return C;break}if(X.match_length=0,re=a._tr_tally(X,0,X.window[X.strstart]),X.lookahead--,X.strstart++,re&&(Y(X,!1),X.strm.avail_out===0))return C}return X.insert=0,$===u?(Y(X,!0),X.strm.avail_out===0?B:V):X.last_lit&&(Y(X,!1),X.strm.avail_out===0)?C:U}(H,ee):H.strategy===3?function(X,$){for(var re,le,de,Te,ye=X.window;;){if(X.lookahead<=S){if(Ie(X),X.lookahead<=S&&$===d)return C;if(X.lookahead===0)break}if(X.match_length=0,X.lookahead>=y&&0<X.strstart&&(le=ye[de=X.strstart-1])===ye[++de]&&le===ye[++de]&&le===ye[++de]){Te=X.strstart+S;do;while(le===ye[++de]&&le===ye[++de]&&le===ye[++de]&&le===ye[++de]&&le===ye[++de]&&le===ye[++de]&&le===ye[++de]&&le===ye[++de]&&de<Te);X.match_length=S-(Te-de),X.match_length>X.lookahead&&(X.match_length=X.lookahead)}if(X.match_length>=y?(re=a._tr_tally(X,1,X.match_length-y),X.lookahead-=X.match_length,X.strstart+=X.match_length,X.match_length=0):(re=a._tr_tally(X,0,X.window[X.strstart]),X.lookahead--,X.strstart++),re&&(Y(X,!1),X.strm.avail_out===0))return C}return X.insert=0,$===u?(Y(X,!0),X.strm.avail_out===0?B:V):X.last_lit&&(Y(X,!1),X.strm.avail_out===0)?C:U}(H,ee):s[H.level].func(H,ee);if(Z!==B&&Z!==V||(H.status=666),Z===C||Z===B)return M.avail_out===0&&(H.last_flush=-1),f;if(Z===U&&(ee===1?a._tr_align(H):ee!==5&&(a._tr_stored_block(H,0,0,!1),ee===3&&(se(H.head),H.lookahead===0&&(H.strstart=0,H.block_start=0,H.insert=0))),W(M),M.avail_out===0))return H.last_flush=-1,f}return ee!==u?f:H.wrap<=0?1:(H.wrap===2?(q(H,255&M.adler),q(H,M.adler>>8&255),q(H,M.adler>>16&255),q(H,M.adler>>24&255),q(H,255&M.total_in),q(H,M.total_in>>8&255),q(H,M.total_in>>16&255),q(H,M.total_in>>24&255)):(Q(H,M.adler>>>16),Q(H,65535&M.adler)),W(M),0<H.wrap&&(H.wrap=-H.wrap),H.pending!==0?f:1)},n.deflateEnd=function(M){var ee;return M&&M.state?(ee=M.state.status)!==w&&ee!==69&&ee!==73&&ee!==91&&ee!==103&&ee!==N&&ee!==666?j(M,m):(M.state=null,ee===N?j(M,-3):f):m},n.deflateSetDictionary=function(M,ee){var K,H,z,P,L,Z,X,$,re=ee.length;if(!M||!M.state||(P=(K=M.state).wrap)===2||P===1&&K.status!==w||K.lookahead)return m;for(P===1&&(M.adler=l(M.adler,ee,re,0)),K.wrap=0,re>=K.w_size&&(P===0&&(se(K.head),K.strstart=0,K.block_start=0,K.insert=0),$=new o.Buf8(K.w_size),o.arraySet($,ee,re-K.w_size,K.w_size,0),ee=$,re=K.w_size),L=M.avail_in,Z=M.next_in,X=M.input,M.avail_in=re,M.next_in=0,M.input=ee,Ie(K);K.lookahead>=y;){for(H=K.strstart,z=K.lookahead-(y-1);K.ins_h=(K.ins_h<<K.hash_shift^K.window[H+y-1])&K.hash_mask,K.prev[H&K.w_mask]=K.head[K.ins_h],K.head[K.ins_h]=H,H++,--z;);K.strstart=H,K.lookahead=y-1,Ie(K)}return K.strstart+=K.lookahead,K.block_start=K.strstart,K.insert=K.lookahead,K.lookahead=0,K.match_length=K.prev_length=y-1,K.match_available=0,M.next_in=Z,M.input=X,M.avail_in=L,K.wrap=P,f},n.deflateInfo="pako deflate (from Nodeca project)"},{"../utils/common":41,"./adler32":43,"./crc32":45,"./messages":51,"./trees":52}],47:[function(t,i,n){i.exports=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1}},{}],48:[function(t,i,n){i.exports=function(s,o){var a,l,c,h,d,u,f,m,E,g,p,_,T,I,v,b,x,A,y,S,O,w,N,C,U;a=s.state,l=s.next_in,C=s.input,c=l+(s.avail_in-5),h=s.next_out,U=s.output,d=h-(o-s.avail_out),u=h+(s.avail_out-257),f=a.dmax,m=a.wsize,E=a.whave,g=a.wnext,p=a.window,_=a.hold,T=a.bits,I=a.lencode,v=a.distcode,b=(1<<a.lenbits)-1,x=(1<<a.distbits)-1;e:do{T<15&&(_+=C[l++]<<T,T+=8,_+=C[l++]<<T,T+=8),A=I[_&b];t:for(;;){if(_>>>=y=A>>>24,T-=y,(y=A>>>16&255)===0)U[h++]=65535&A;else{if(!(16&y)){if(!(64&y)){A=I[(65535&A)+(_&(1<<y)-1)];continue t}if(32&y){a.mode=12;break e}s.msg="invalid literal/length code",a.mode=30;break e}S=65535&A,(y&=15)&&(T<y&&(_+=C[l++]<<T,T+=8),S+=_&(1<<y)-1,_>>>=y,T-=y),T<15&&(_+=C[l++]<<T,T+=8,_+=C[l++]<<T,T+=8),A=v[_&x];i:for(;;){if(_>>>=y=A>>>24,T-=y,!(16&(y=A>>>16&255))){if(!(64&y)){A=v[(65535&A)+(_&(1<<y)-1)];continue i}s.msg="invalid distance code",a.mode=30;break e}if(O=65535&A,T<(y&=15)&&(_+=C[l++]<<T,(T+=8)<y&&(_+=C[l++]<<T,T+=8)),f<(O+=_&(1<<y)-1)){s.msg="invalid distance too far back",a.mode=30;break e}if(_>>>=y,T-=y,(y=h-d)<O){if(E<(y=O-y)&&a.sane){s.msg="invalid distance too far back",a.mode=30;break e}if(N=p,(w=0)===g){if(w+=m-y,y<S){for(S-=y;U[h++]=p[w++],--y;);w=h-O,N=U}}else if(g<y){if(w+=m+g-y,(y-=g)<S){for(S-=y;U[h++]=p[w++],--y;);if(w=0,g<S){for(S-=y=g;U[h++]=p[w++],--y;);w=h-O,N=U}}}else if(w+=g-y,y<S){for(S-=y;U[h++]=p[w++],--y;);w=h-O,N=U}for(;2<S;)U[h++]=N[w++],U[h++]=N[w++],U[h++]=N[w++],S-=3;S&&(U[h++]=N[w++],1<S&&(U[h++]=N[w++]))}else{for(w=h-O;U[h++]=U[w++],U[h++]=U[w++],U[h++]=U[w++],2<(S-=3););S&&(U[h++]=U[w++],1<S&&(U[h++]=U[w++]))}break}}break}}while(l<c&&h<u);l-=S=T>>3,_&=(1<<(T-=S<<3))-1,s.next_in=l,s.next_out=h,s.avail_in=l<c?c-l+5:5-(l-c),s.avail_out=h<u?u-h+257:257-(h-u),a.hold=_,a.bits=T}},{}],49:[function(t,i,n){var s=t("../utils/common"),o=t("./adler32"),a=t("./crc32"),l=t("./inffast"),c=t("./inftrees"),h=1,d=2,u=0,f=-2,m=1,E=852,g=592;function p(w){return(w>>>24&255)+(w>>>8&65280)+((65280&w)<<8)+((255&w)<<24)}function _(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new s.Buf16(320),this.work=new s.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function T(w){var N;return w&&w.state?(N=w.state,w.total_in=w.total_out=N.total=0,w.msg="",N.wrap&&(w.adler=1&N.wrap),N.mode=m,N.last=0,N.havedict=0,N.dmax=32768,N.head=null,N.hold=0,N.bits=0,N.lencode=N.lendyn=new s.Buf32(E),N.distcode=N.distdyn=new s.Buf32(g),N.sane=1,N.back=-1,u):f}function I(w){var N;return w&&w.state?((N=w.state).wsize=0,N.whave=0,N.wnext=0,T(w)):f}function v(w,N){var C,U;return w&&w.state?(U=w.state,N<0?(C=0,N=-N):(C=1+(N>>4),N<48&&(N&=15)),N&&(N<8||15<N)?f:(U.window!==null&&U.wbits!==N&&(U.window=null),U.wrap=C,U.wbits=N,I(w))):f}function b(w,N){var C,U;return w?(U=new _,(w.state=U).window=null,(C=v(w,N))!==u&&(w.state=null),C):f}var x,A,y=!0;function S(w){if(y){var N;for(x=new s.Buf32(512),A=new s.Buf32(32),N=0;N<144;)w.lens[N++]=8;for(;N<256;)w.lens[N++]=9;for(;N<280;)w.lens[N++]=7;for(;N<288;)w.lens[N++]=8;for(c(h,w.lens,0,288,x,0,w.work,{bits:9}),N=0;N<32;)w.lens[N++]=5;c(d,w.lens,0,32,A,0,w.work,{bits:5}),y=!1}w.lencode=x,w.lenbits=9,w.distcode=A,w.distbits=5}function O(w,N,C,U){var B,V=w.state;return V.window===null&&(V.wsize=1<<V.wbits,V.wnext=0,V.whave=0,V.window=new s.Buf8(V.wsize)),U>=V.wsize?(s.arraySet(V.window,N,C-V.wsize,V.wsize,0),V.wnext=0,V.whave=V.wsize):(U<(B=V.wsize-V.wnext)&&(B=U),s.arraySet(V.window,N,C-U,B,V.wnext),(U-=B)?(s.arraySet(V.window,N,C-U,U,0),V.wnext=U,V.whave=V.wsize):(V.wnext+=B,V.wnext===V.wsize&&(V.wnext=0),V.whave<V.wsize&&(V.whave+=B))),0}n.inflateReset=I,n.inflateReset2=v,n.inflateResetKeep=T,n.inflateInit=function(w){return b(w,15)},n.inflateInit2=b,n.inflate=function(w,N){var C,U,B,V,j,G,se,W,Y,q,Q,te,Ie,ve,pe,_e,Ee,Ae,ie,$e,M,ee,K,H,z=0,P=new s.Buf8(4),L=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!w||!w.state||!w.output||!w.input&&w.avail_in!==0)return f;(C=w.state).mode===12&&(C.mode=13),j=w.next_out,B=w.output,se=w.avail_out,V=w.next_in,U=w.input,G=w.avail_in,W=C.hold,Y=C.bits,q=G,Q=se,ee=u;e:for(;;)switch(C.mode){case m:if(C.wrap===0){C.mode=13;break}for(;Y<16;){if(G===0)break e;G--,W+=U[V++]<<Y,Y+=8}if(2&C.wrap&&W===35615){P[C.check=0]=255&W,P[1]=W>>>8&255,C.check=a(C.check,P,2,0),Y=W=0,C.mode=2;break}if(C.flags=0,C.head&&(C.head.done=!1),!(1&C.wrap)||(((255&W)<<8)+(W>>8))%31){w.msg="incorrect header check",C.mode=30;break}if((15&W)!=8){w.msg="unknown compression method",C.mode=30;break}if(Y-=4,M=8+(15&(W>>>=4)),C.wbits===0)C.wbits=M;else if(M>C.wbits){w.msg="invalid window size",C.mode=30;break}C.dmax=1<<M,w.adler=C.check=1,C.mode=512&W?10:12,Y=W=0;break;case 2:for(;Y<16;){if(G===0)break e;G--,W+=U[V++]<<Y,Y+=8}if(C.flags=W,(255&C.flags)!=8){w.msg="unknown compression method",C.mode=30;break}if(57344&C.flags){w.msg="unknown header flags set",C.mode=30;break}C.head&&(C.head.text=W>>8&1),512&C.flags&&(P[0]=255&W,P[1]=W>>>8&255,C.check=a(C.check,P,2,0)),Y=W=0,C.mode=3;case 3:for(;Y<32;){if(G===0)break e;G--,W+=U[V++]<<Y,Y+=8}C.head&&(C.head.time=W),512&C.flags&&(P[0]=255&W,P[1]=W>>>8&255,P[2]=W>>>16&255,P[3]=W>>>24&255,C.check=a(C.check,P,4,0)),Y=W=0,C.mode=4;case 4:for(;Y<16;){if(G===0)break e;G--,W+=U[V++]<<Y,Y+=8}C.head&&(C.head.xflags=255&W,C.head.os=W>>8),512&C.flags&&(P[0]=255&W,P[1]=W>>>8&255,C.check=a(C.check,P,2,0)),Y=W=0,C.mode=5;case 5:if(1024&C.flags){for(;Y<16;){if(G===0)break e;G--,W+=U[V++]<<Y,Y+=8}C.length=W,C.head&&(C.head.extra_len=W),512&C.flags&&(P[0]=255&W,P[1]=W>>>8&255,C.check=a(C.check,P,2,0)),Y=W=0}else C.head&&(C.head.extra=null);C.mode=6;case 6:if(1024&C.flags&&(G<(te=C.length)&&(te=G),te&&(C.head&&(M=C.head.extra_len-C.length,C.head.extra||(C.head.extra=new Array(C.head.extra_len)),s.arraySet(C.head.extra,U,V,te,M)),512&C.flags&&(C.check=a(C.check,U,te,V)),G-=te,V+=te,C.length-=te),C.length))break e;C.length=0,C.mode=7;case 7:if(2048&C.flags){if(G===0)break e;for(te=0;M=U[V+te++],C.head&&M&&C.length<65536&&(C.head.name+=String.fromCharCode(M)),M&&te<G;);if(512&C.flags&&(C.check=a(C.check,U,te,V)),G-=te,V+=te,M)break e}else C.head&&(C.head.name=null);C.length=0,C.mode=8;case 8:if(4096&C.flags){if(G===0)break e;for(te=0;M=U[V+te++],C.head&&M&&C.length<65536&&(C.head.comment+=String.fromCharCode(M)),M&&te<G;);if(512&C.flags&&(C.check=a(C.check,U,te,V)),G-=te,V+=te,M)break e}else C.head&&(C.head.comment=null);C.mode=9;case 9:if(512&C.flags){for(;Y<16;){if(G===0)break e;G--,W+=U[V++]<<Y,Y+=8}if(W!==(65535&C.check)){w.msg="header crc mismatch",C.mode=30;break}Y=W=0}C.head&&(C.head.hcrc=C.flags>>9&1,C.head.done=!0),w.adler=C.check=0,C.mode=12;break;case 10:for(;Y<32;){if(G===0)break e;G--,W+=U[V++]<<Y,Y+=8}w.adler=C.check=p(W),Y=W=0,C.mode=11;case 11:if(C.havedict===0)return w.next_out=j,w.avail_out=se,w.next_in=V,w.avail_in=G,C.hold=W,C.bits=Y,2;w.adler=C.check=1,C.mode=12;case 12:if(N===5||N===6)break e;case 13:if(C.last){W>>>=7&Y,Y-=7&Y,C.mode=27;break}for(;Y<3;){if(G===0)break e;G--,W+=U[V++]<<Y,Y+=8}switch(C.last=1&W,Y-=1,3&(W>>>=1)){case 0:C.mode=14;break;case 1:if(S(C),C.mode=20,N!==6)break;W>>>=2,Y-=2;break e;case 2:C.mode=17;break;case 3:w.msg="invalid block type",C.mode=30}W>>>=2,Y-=2;break;case 14:for(W>>>=7&Y,Y-=7&Y;Y<32;){if(G===0)break e;G--,W+=U[V++]<<Y,Y+=8}if((65535&W)!=(W>>>16^65535)){w.msg="invalid stored block lengths",C.mode=30;break}if(C.length=65535&W,Y=W=0,C.mode=15,N===6)break e;case 15:C.mode=16;case 16:if(te=C.length){if(G<te&&(te=G),se<te&&(te=se),te===0)break e;s.arraySet(B,U,V,te,j),G-=te,V+=te,se-=te,j+=te,C.length-=te;break}C.mode=12;break;case 17:for(;Y<14;){if(G===0)break e;G--,W+=U[V++]<<Y,Y+=8}if(C.nlen=257+(31&W),W>>>=5,Y-=5,C.ndist=1+(31&W),W>>>=5,Y-=5,C.ncode=4+(15&W),W>>>=4,Y-=4,286<C.nlen||30<C.ndist){w.msg="too many length or distance symbols",C.mode=30;break}C.have=0,C.mode=18;case 18:for(;C.have<C.ncode;){for(;Y<3;){if(G===0)break e;G--,W+=U[V++]<<Y,Y+=8}C.lens[L[C.have++]]=7&W,W>>>=3,Y-=3}for(;C.have<19;)C.lens[L[C.have++]]=0;if(C.lencode=C.lendyn,C.lenbits=7,K={bits:C.lenbits},ee=c(0,C.lens,0,19,C.lencode,0,C.work,K),C.lenbits=K.bits,ee){w.msg="invalid code lengths set",C.mode=30;break}C.have=0,C.mode=19;case 19:for(;C.have<C.nlen+C.ndist;){for(;_e=(z=C.lencode[W&(1<<C.lenbits)-1])>>>16&255,Ee=65535&z,!((pe=z>>>24)<=Y);){if(G===0)break e;G--,W+=U[V++]<<Y,Y+=8}if(Ee<16)W>>>=pe,Y-=pe,C.lens[C.have++]=Ee;else{if(Ee===16){for(H=pe+2;Y<H;){if(G===0)break e;G--,W+=U[V++]<<Y,Y+=8}if(W>>>=pe,Y-=pe,C.have===0){w.msg="invalid bit length repeat",C.mode=30;break}M=C.lens[C.have-1],te=3+(3&W),W>>>=2,Y-=2}else if(Ee===17){for(H=pe+3;Y<H;){if(G===0)break e;G--,W+=U[V++]<<Y,Y+=8}Y-=pe,M=0,te=3+(7&(W>>>=pe)),W>>>=3,Y-=3}else{for(H=pe+7;Y<H;){if(G===0)break e;G--,W+=U[V++]<<Y,Y+=8}Y-=pe,M=0,te=11+(127&(W>>>=pe)),W>>>=7,Y-=7}if(C.have+te>C.nlen+C.ndist){w.msg="invalid bit length repeat",C.mode=30;break}for(;te--;)C.lens[C.have++]=M}}if(C.mode===30)break;if(C.lens[256]===0){w.msg="invalid code -- missing end-of-block",C.mode=30;break}if(C.lenbits=9,K={bits:C.lenbits},ee=c(h,C.lens,0,C.nlen,C.lencode,0,C.work,K),C.lenbits=K.bits,ee){w.msg="invalid literal/lengths set",C.mode=30;break}if(C.distbits=6,C.distcode=C.distdyn,K={bits:C.distbits},ee=c(d,C.lens,C.nlen,C.ndist,C.distcode,0,C.work,K),C.distbits=K.bits,ee){w.msg="invalid distances set",C.mode=30;break}if(C.mode=20,N===6)break e;case 20:C.mode=21;case 21:if(6<=G&&258<=se){w.next_out=j,w.avail_out=se,w.next_in=V,w.avail_in=G,C.hold=W,C.bits=Y,l(w,Q),j=w.next_out,B=w.output,se=w.avail_out,V=w.next_in,U=w.input,G=w.avail_in,W=C.hold,Y=C.bits,C.mode===12&&(C.back=-1);break}for(C.back=0;_e=(z=C.lencode[W&(1<<C.lenbits)-1])>>>16&255,Ee=65535&z,!((pe=z>>>24)<=Y);){if(G===0)break e;G--,W+=U[V++]<<Y,Y+=8}if(_e&&!(240&_e)){for(Ae=pe,ie=_e,$e=Ee;_e=(z=C.lencode[$e+((W&(1<<Ae+ie)-1)>>Ae)])>>>16&255,Ee=65535&z,!(Ae+(pe=z>>>24)<=Y);){if(G===0)break e;G--,W+=U[V++]<<Y,Y+=8}W>>>=Ae,Y-=Ae,C.back+=Ae}if(W>>>=pe,Y-=pe,C.back+=pe,C.length=Ee,_e===0){C.mode=26;break}if(32&_e){C.back=-1,C.mode=12;break}if(64&_e){w.msg="invalid literal/length code",C.mode=30;break}C.extra=15&_e,C.mode=22;case 22:if(C.extra){for(H=C.extra;Y<H;){if(G===0)break e;G--,W+=U[V++]<<Y,Y+=8}C.length+=W&(1<<C.extra)-1,W>>>=C.extra,Y-=C.extra,C.back+=C.extra}C.was=C.length,C.mode=23;case 23:for(;_e=(z=C.distcode[W&(1<<C.distbits)-1])>>>16&255,Ee=65535&z,!((pe=z>>>24)<=Y);){if(G===0)break e;G--,W+=U[V++]<<Y,Y+=8}if(!(240&_e)){for(Ae=pe,ie=_e,$e=Ee;_e=(z=C.distcode[$e+((W&(1<<Ae+ie)-1)>>Ae)])>>>16&255,Ee=65535&z,!(Ae+(pe=z>>>24)<=Y);){if(G===0)break e;G--,W+=U[V++]<<Y,Y+=8}W>>>=Ae,Y-=Ae,C.back+=Ae}if(W>>>=pe,Y-=pe,C.back+=pe,64&_e){w.msg="invalid distance code",C.mode=30;break}C.offset=Ee,C.extra=15&_e,C.mode=24;case 24:if(C.extra){for(H=C.extra;Y<H;){if(G===0)break e;G--,W+=U[V++]<<Y,Y+=8}C.offset+=W&(1<<C.extra)-1,W>>>=C.extra,Y-=C.extra,C.back+=C.extra}if(C.offset>C.dmax){w.msg="invalid distance too far back",C.mode=30;break}C.mode=25;case 25:if(se===0)break e;if(te=Q-se,C.offset>te){if((te=C.offset-te)>C.whave&&C.sane){w.msg="invalid distance too far back",C.mode=30;break}Ie=te>C.wnext?(te-=C.wnext,C.wsize-te):C.wnext-te,te>C.length&&(te=C.length),ve=C.window}else ve=B,Ie=j-C.offset,te=C.length;for(se<te&&(te=se),se-=te,C.length-=te;B[j++]=ve[Ie++],--te;);C.length===0&&(C.mode=21);break;case 26:if(se===0)break e;B[j++]=C.length,se--,C.mode=21;break;case 27:if(C.wrap){for(;Y<32;){if(G===0)break e;G--,W|=U[V++]<<Y,Y+=8}if(Q-=se,w.total_out+=Q,C.total+=Q,Q&&(w.adler=C.check=C.flags?a(C.check,B,Q,j-Q):o(C.check,B,Q,j-Q)),Q=se,(C.flags?W:p(W))!==C.check){w.msg="incorrect data check",C.mode=30;break}Y=W=0}C.mode=28;case 28:if(C.wrap&&C.flags){for(;Y<32;){if(G===0)break e;G--,W+=U[V++]<<Y,Y+=8}if(W!==(4294967295&C.total)){w.msg="incorrect length check",C.mode=30;break}Y=W=0}C.mode=29;case 29:ee=1;break e;case 30:ee=-3;break e;case 31:return-4;case 32:default:return f}return w.next_out=j,w.avail_out=se,w.next_in=V,w.avail_in=G,C.hold=W,C.bits=Y,(C.wsize||Q!==w.avail_out&&C.mode<30&&(C.mode<27||N!==4))&&O(w,w.output,w.next_out,Q-w.avail_out)?(C.mode=31,-4):(q-=w.avail_in,Q-=w.avail_out,w.total_in+=q,w.total_out+=Q,C.total+=Q,C.wrap&&Q&&(w.adler=C.check=C.flags?a(C.check,B,Q,w.next_out-Q):o(C.check,B,Q,w.next_out-Q)),w.data_type=C.bits+(C.last?64:0)+(C.mode===12?128:0)+(C.mode===20||C.mode===15?256:0),(q==0&&Q===0||N===4)&&ee===u&&(ee=-5),ee)},n.inflateEnd=function(w){if(!w||!w.state)return f;var N=w.state;return N.window&&(N.window=null),w.state=null,u},n.inflateGetHeader=function(w,N){var C;return w&&w.state&&2&(C=w.state).wrap?((C.head=N).done=!1,u):f},n.inflateSetDictionary=function(w,N){var C,U=N.length;return w&&w.state?(C=w.state).wrap!==0&&C.mode!==11?f:C.mode===11&&o(1,N,U,0)!==C.check?-3:O(w,N,U,U)?(C.mode=31,-4):(C.havedict=1,u):f},n.inflateInfo="pako inflate (from Nodeca project)"},{"../utils/common":41,"./adler32":43,"./crc32":45,"./inffast":48,"./inftrees":50}],50:[function(t,i,n){var s=t("../utils/common"),o=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],a=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],l=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],c=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];i.exports=function(h,d,u,f,m,E,g,p){var _,T,I,v,b,x,A,y,S,O=p.bits,w=0,N=0,C=0,U=0,B=0,V=0,j=0,G=0,se=0,W=0,Y=null,q=0,Q=new s.Buf16(16),te=new s.Buf16(16),Ie=null,ve=0;for(w=0;w<=15;w++)Q[w]=0;for(N=0;N<f;N++)Q[d[u+N]]++;for(B=O,U=15;1<=U&&Q[U]===0;U--);if(U<B&&(B=U),U===0)return m[E++]=20971520,m[E++]=20971520,p.bits=1,0;for(C=1;C<U&&Q[C]===0;C++);for(B<C&&(B=C),w=G=1;w<=15;w++)if(G<<=1,(G-=Q[w])<0)return-1;if(0<G&&(h===0||U!==1))return-1;for(te[1]=0,w=1;w<15;w++)te[w+1]=te[w]+Q[w];for(N=0;N<f;N++)d[u+N]!==0&&(g[te[d[u+N]]++]=N);if(x=h===0?(Y=Ie=g,19):h===1?(Y=o,q-=257,Ie=a,ve-=257,256):(Y=l,Ie=c,-1),w=C,b=E,j=N=W=0,I=-1,v=(se=1<<(V=B))-1,h===1&&852<se||h===2&&592<se)return 1;for(;;){for(A=w-j,S=g[N]<x?(y=0,g[N]):g[N]>x?(y=Ie[ve+g[N]],Y[q+g[N]]):(y=96,0),_=1<<w-j,C=T=1<<V;m[b+(W>>j)+(T-=_)]=A<<24|y<<16|S|0,T!==0;);for(_=1<<w-1;W&_;)_>>=1;if(_!==0?(W&=_-1,W+=_):W=0,N++,--Q[w]==0){if(w===U)break;w=d[u+g[N]]}if(B<w&&(W&v)!==I){for(j===0&&(j=B),b+=C,G=1<<(V=w-j);V+j<U&&!((G-=Q[V+j])<=0);)V++,G<<=1;if(se+=1<<V,h===1&&852<se||h===2&&592<se)return 1;m[I=W&v]=B<<24|V<<16|b-E|0}}return W!==0&&(m[b+W]=w-j<<24|64<<16|0),p.bits=B,0}},{"../utils/common":41}],51:[function(t,i,n){i.exports={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"}},{}],52:[function(t,i,n){var s=t("../utils/common"),o=0,a=1;function l(z){for(var P=z.length;0<=--P;)z[P]=0}var c=0,h=29,d=256,u=d+1+h,f=30,m=19,E=2*u+1,g=15,p=16,_=7,T=256,I=16,v=17,b=18,x=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],A=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],y=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],S=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],O=new Array(2*(u+2));l(O);var w=new Array(2*f);l(w);var N=new Array(512);l(N);var C=new Array(256);l(C);var U=new Array(h);l(U);var B,V,j,G=new Array(f);function se(z,P,L,Z,X){this.static_tree=z,this.extra_bits=P,this.extra_base=L,this.elems=Z,this.max_length=X,this.has_stree=z&&z.length}function W(z,P){this.dyn_tree=z,this.max_code=0,this.stat_desc=P}function Y(z){return z<256?N[z]:N[256+(z>>>7)]}function q(z,P){z.pending_buf[z.pending++]=255&P,z.pending_buf[z.pending++]=P>>>8&255}function Q(z,P,L){z.bi_valid>p-L?(z.bi_buf|=P<<z.bi_valid&65535,q(z,z.bi_buf),z.bi_buf=P>>p-z.bi_valid,z.bi_valid+=L-p):(z.bi_buf|=P<<z.bi_valid&65535,z.bi_valid+=L)}function te(z,P,L){Q(z,L[2*P],L[2*P+1])}function Ie(z,P){for(var L=0;L|=1&z,z>>>=1,L<<=1,0<--P;);return L>>>1}function ve(z,P,L){var Z,X,$=new Array(g+1),re=0;for(Z=1;Z<=g;Z++)$[Z]=re=re+L[Z-1]<<1;for(X=0;X<=P;X++){var le=z[2*X+1];le!==0&&(z[2*X]=Ie($[le]++,le))}}function pe(z){var P;for(P=0;P<u;P++)z.dyn_ltree[2*P]=0;for(P=0;P<f;P++)z.dyn_dtree[2*P]=0;for(P=0;P<m;P++)z.bl_tree[2*P]=0;z.dyn_ltree[2*T]=1,z.opt_len=z.static_len=0,z.last_lit=z.matches=0}function _e(z){8<z.bi_valid?q(z,z.bi_buf):0<z.bi_valid&&(z.pending_buf[z.pending++]=z.bi_buf),z.bi_buf=0,z.bi_valid=0}function Ee(z,P,L,Z){var X=2*P,$=2*L;return z[X]<z[$]||z[X]===z[$]&&Z[P]<=Z[L]}function Ae(z,P,L){for(var Z=z.heap[L],X=L<<1;X<=z.heap_len&&(X<z.heap_len&&Ee(P,z.heap[X+1],z.heap[X],z.depth)&&X++,!Ee(P,Z,z.heap[X],z.depth));)z.heap[L]=z.heap[X],L=X,X<<=1;z.heap[L]=Z}function ie(z,P,L){var Z,X,$,re,le=0;if(z.last_lit!==0)for(;Z=z.pending_buf[z.d_buf+2*le]<<8|z.pending_buf[z.d_buf+2*le+1],X=z.pending_buf[z.l_buf+le],le++,Z===0?te(z,X,P):(te(z,($=C[X])+d+1,P),(re=x[$])!==0&&Q(z,X-=U[$],re),te(z,$=Y(--Z),L),(re=A[$])!==0&&Q(z,Z-=G[$],re)),le<z.last_lit;);te(z,T,P)}function $e(z,P){var L,Z,X,$=P.dyn_tree,re=P.stat_desc.static_tree,le=P.stat_desc.has_stree,de=P.stat_desc.elems,Te=-1;for(z.heap_len=0,z.heap_max=E,L=0;L<de;L++)$[2*L]!==0?(z.heap[++z.heap_len]=Te=L,z.depth[L]=0):$[2*L+1]=0;for(;z.heap_len<2;)$[2*(X=z.heap[++z.heap_len]=Te<2?++Te:0)]=1,z.depth[X]=0,z.opt_len--,le&&(z.static_len-=re[2*X+1]);for(P.max_code=Te,L=z.heap_len>>1;1<=L;L--)Ae(z,$,L);for(X=de;L=z.heap[1],z.heap[1]=z.heap[z.heap_len--],Ae(z,$,1),Z=z.heap[1],z.heap[--z.heap_max]=L,z.heap[--z.heap_max]=Z,$[2*X]=$[2*L]+$[2*Z],z.depth[X]=(z.depth[L]>=z.depth[Z]?z.depth[L]:z.depth[Z])+1,$[2*L+1]=$[2*Z+1]=X,z.heap[1]=X++,Ae(z,$,1),2<=z.heap_len;);z.heap[--z.heap_max]=z.heap[1],function(ye,De){var me,it,qe,Pe,Oe,Le,Ue=De.dyn_tree,at=De.max_code,vt=De.stat_desc.static_tree,et=De.stat_desc.has_stree,be=De.stat_desc.extra_bits,J=De.stat_desc.extra_base,Se=De.stat_desc.max_length,xe=0;for(Pe=0;Pe<=g;Pe++)ye.bl_count[Pe]=0;for(Ue[2*ye.heap[ye.heap_max]+1]=0,me=ye.heap_max+1;me<E;me++)Se<(Pe=Ue[2*Ue[2*(it=ye.heap[me])+1]+1]+1)&&(Pe=Se,xe++),Ue[2*it+1]=Pe,at<it||(ye.bl_count[Pe]++,Oe=0,J<=it&&(Oe=be[it-J]),Le=Ue[2*it],ye.opt_len+=Le*(Pe+Oe),et&&(ye.static_len+=Le*(vt[2*it+1]+Oe)));if(xe!==0){do{for(Pe=Se-1;ye.bl_count[Pe]===0;)Pe--;ye.bl_count[Pe]--,ye.bl_count[Pe+1]+=2,ye.bl_count[Se]--,xe-=2}while(0<xe);for(Pe=Se;Pe!==0;Pe--)for(it=ye.bl_count[Pe];it!==0;)at<(qe=ye.heap[--me])||(Ue[2*qe+1]!==Pe&&(ye.opt_len+=(Pe-Ue[2*qe+1])*Ue[2*qe],Ue[2*qe+1]=Pe),it--)}}(z,P),ve($,Te,z.bl_count)}function M(z,P,L){var Z,X,$=-1,re=P[1],le=0,de=7,Te=4;for(re===0&&(de=138,Te=3),P[2*(L+1)+1]=65535,Z=0;Z<=L;Z++)X=re,re=P[2*(Z+1)+1],++le<de&&X===re||(le<Te?z.bl_tree[2*X]+=le:X!==0?(X!==$&&z.bl_tree[2*X]++,z.bl_tree[2*I]++):le<=10?z.bl_tree[2*v]++:z.bl_tree[2*b]++,$=X,Te=(le=0)===re?(de=138,3):X===re?(de=6,3):(de=7,4))}function ee(z,P,L){var Z,X,$=-1,re=P[1],le=0,de=7,Te=4;for(re===0&&(de=138,Te=3),Z=0;Z<=L;Z++)if(X=re,re=P[2*(Z+1)+1],!(++le<de&&X===re)){if(le<Te)for(;te(z,X,z.bl_tree),--le!=0;);else X!==0?(X!==$&&(te(z,X,z.bl_tree),le--),te(z,I,z.bl_tree),Q(z,le-3,2)):le<=10?(te(z,v,z.bl_tree),Q(z,le-3,3)):(te(z,b,z.bl_tree),Q(z,le-11,7));$=X,Te=(le=0)===re?(de=138,3):X===re?(de=6,3):(de=7,4)}}l(G);var K=!1;function H(z,P,L,Z){Q(z,(c<<1)+(Z?1:0),3),function(X,$,re,le){_e(X),q(X,re),q(X,~re),s.arraySet(X.pending_buf,X.window,$,re,X.pending),X.pending+=re}(z,P,L)}n._tr_init=function(z){K||(function(){var P,L,Z,X,$,re=new Array(g+1);for(X=Z=0;X<h-1;X++)for(U[X]=Z,P=0;P<1<<x[X];P++)C[Z++]=X;for(C[Z-1]=X,X=$=0;X<16;X++)for(G[X]=$,P=0;P<1<<A[X];P++)N[$++]=X;for($>>=7;X<f;X++)for(G[X]=$<<7,P=0;P<1<<A[X]-7;P++)N[256+$++]=X;for(L=0;L<=g;L++)re[L]=0;for(P=0;P<=143;)O[2*P+1]=8,P++,re[8]++;for(;P<=255;)O[2*P+1]=9,P++,re[9]++;for(;P<=279;)O[2*P+1]=7,P++,re[7]++;for(;P<=287;)O[2*P+1]=8,P++,re[8]++;for(ve(O,u+1,re),P=0;P<f;P++)w[2*P+1]=5,w[2*P]=Ie(P,5);B=new se(O,x,d+1,u,g),V=new se(w,A,0,f,g),j=new se(new Array(0),y,0,m,_)}(),K=!0),z.l_desc=new W(z.dyn_ltree,B),z.d_desc=new W(z.dyn_dtree,V),z.bl_desc=new W(z.bl_tree,j),z.bi_buf=0,z.bi_valid=0,pe(z)},n._tr_stored_block=H,n._tr_flush_block=function(z,P,L,Z){var X,$,re=0;0<z.level?(z.strm.data_type===2&&(z.strm.data_type=function(le){var de,Te=4093624447;for(de=0;de<=31;de++,Te>>>=1)if(1&Te&&le.dyn_ltree[2*de]!==0)return o;if(le.dyn_ltree[18]!==0||le.dyn_ltree[20]!==0||le.dyn_ltree[26]!==0)return a;for(de=32;de<d;de++)if(le.dyn_ltree[2*de]!==0)return a;return o}(z)),$e(z,z.l_desc),$e(z,z.d_desc),re=function(le){var de;for(M(le,le.dyn_ltree,le.l_desc.max_code),M(le,le.dyn_dtree,le.d_desc.max_code),$e(le,le.bl_desc),de=m-1;3<=de&&le.bl_tree[2*S[de]+1]===0;de--);return le.opt_len+=3*(de+1)+5+5+4,de}(z),X=z.opt_len+3+7>>>3,($=z.static_len+3+7>>>3)<=X&&(X=$)):X=$=L+5,L+4<=X&&P!==-1?H(z,P,L,Z):z.strategy===4||$===X?(Q(z,2+(Z?1:0),3),ie(z,O,w)):(Q(z,4+(Z?1:0),3),function(le,de,Te,ye){var De;for(Q(le,de-257,5),Q(le,Te-1,5),Q(le,ye-4,4),De=0;De<ye;De++)Q(le,le.bl_tree[2*S[De]+1],3);ee(le,le.dyn_ltree,de-1),ee(le,le.dyn_dtree,Te-1)}(z,z.l_desc.max_code+1,z.d_desc.max_code+1,re+1),ie(z,z.dyn_ltree,z.dyn_dtree)),pe(z),Z&&_e(z)},n._tr_tally=function(z,P,L){return z.pending_buf[z.d_buf+2*z.last_lit]=P>>>8&255,z.pending_buf[z.d_buf+2*z.last_lit+1]=255&P,z.pending_buf[z.l_buf+z.last_lit]=255&L,z.last_lit++,P===0?z.dyn_ltree[2*L]++:(z.matches++,P--,z.dyn_ltree[2*(C[L]+d+1)]++,z.dyn_dtree[2*Y(P)]++),z.last_lit===z.lit_bufsize-1},n._tr_align=function(z){Q(z,2,3),te(z,T,O),function(P){P.bi_valid===16?(q(P,P.bi_buf),P.bi_buf=0,P.bi_valid=0):8<=P.bi_valid&&(P.pending_buf[P.pending++]=255&P.bi_buf,P.bi_buf>>=8,P.bi_valid-=8)}(z)}},{"../utils/common":41}],53:[function(t,i,n){i.exports=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0}},{}],54:[function(t,i,n){(function(s){(function(o,a){if(!o.setImmediate){var l,c,h,d,u=1,f={},m=!1,E=o.document,g=Object.getPrototypeOf&&Object.getPrototypeOf(o);g=g&&g.setTimeout?g:o,l={}.toString.call(o.process)==="[object process]"?function(I){process.nextTick(function(){_(I)})}:function(){if(o.postMessage&&!o.importScripts){var I=!0,v=o.onmessage;return o.onmessage=function(){I=!1},o.postMessage("","*"),o.onmessage=v,I}}()?(d="setImmediate$"+Math.random()+"$",o.addEventListener?o.addEventListener("message",T,!1):o.attachEvent("onmessage",T),function(I){o.postMessage(d+I,"*")}):o.MessageChannel?((h=new MessageChannel).port1.onmessage=function(I){_(I.data)},function(I){h.port2.postMessage(I)}):E&&"onreadystatechange"in E.createElement("script")?(c=E.documentElement,function(I){var v=E.createElement("script");v.onreadystatechange=function(){_(I),v.onreadystatechange=null,c.removeChild(v),v=null},c.appendChild(v)}):function(I){setTimeout(_,0,I)},g.setImmediate=function(I){typeof I!="function"&&(I=new Function(""+I));for(var v=new Array(arguments.length-1),b=0;b<v.length;b++)v[b]=arguments[b+1];var x={callback:I,args:v};return f[u]=x,l(u),u++},g.clearImmediate=p}function p(I){delete f[I]}function _(I){if(m)setTimeout(_,0,I);else{var v=f[I];if(v){m=!0;try{(function(b){var x=b.callback,A=b.args;switch(A.length){case 0:x();break;case 1:x(A[0]);break;case 2:x(A[0],A[1]);break;case 3:x(A[0],A[1],A[2]);break;default:x.apply(a,A)}})(v)}finally{p(I),m=!1}}}}function T(I){I.source===o&&typeof I.data=="string"&&I.data.indexOf(d)===0&&_(+I.data.slice(d.length))}})(typeof self>"u"?s===void 0?this:s:self)}).call(this,typeof Xl<"u"?Xl:typeof self<"u"?self:typeof window<"u"?window:{})},{}]},{},[10])(10)})})(TI);var xR=TI.exports;const Tg=GE(xR);var pf={},Jc={};(function(r){const e=":A-Za-z_\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD",t=e+"\\-.\\d\\u00B7\\u0300-\\u036F\\u203F-\\u2040",i="["+e+"]["+t+"]*",n=new RegExp("^"+i+"$"),s=function(a,l){const c=[];let h=l.exec(a);for(;h;){const d=[];d.startIndex=l.lastIndex-h[0].length;const u=h.length;for(let f=0;f<u;f++)d.push(h[f]);c.push(d),h=l.exec(a)}return c},o=function(a){const l=n.exec(a);return!(l===null||typeof l>"u")};r.isExist=function(a){return typeof a<"u"},r.isEmptyObject=function(a){return Object.keys(a).length===0},r.merge=function(a,l,c){if(l){const h=Object.keys(l),d=h.length;for(let u=0;u<d;u++)c==="strict"?a[h[u]]=[l[h[u]]]:a[h[u]]=l[h[u]]}},r.getValue=function(a){return r.isExist(a)?a:""},r.isName=o,r.getAllMatches=s,r.nameRegexp=i})(Jc);const mf=Jc,wR={allowBooleanAttributes:!1,unpairedTags:[]};pf.validate=function(r,e){e=Object.assign({},wR,e);const t=[];let i=!1,n=!1;r[0]==="\uFEFF"&&(r=r.substr(1));for(let s=0;s<r.length;s++)if(r[s]==="<"&&r[s+1]==="?"){if(s+=2,s=Cg(r,s),s.err)return s}else if(r[s]==="<"){let o=s;if(s++,r[s]==="!"){s=yg(r,s);continue}else{let a=!1;r[s]==="/"&&(a=!0,s++);let l="";for(;s<r.length&&r[s]!==">"&&r[s]!==" "&&r[s]!=="	"&&r[s]!==`
`&&r[s]!=="\r";s++)l+=r[s];if(l=l.trim(),l[l.length-1]==="/"&&(l=l.substring(0,l.length-1),s--),!NR(l)){let d;return l.trim().length===0?d="Invalid space after '<'.":d="Tag '"+l+"' is an invalid name.",Bt("InvalidTag",d,gi(r,s))}const c=MR(r,s);if(c===!1)return Bt("InvalidAttr","Attributes for '"+l+"' have open quote.",gi(r,s));let h=c.value;if(s=c.index,h[h.length-1]==="/"){const d=s-h.length;h=h.substring(0,h.length-1);const u=bg(h,e);if(u===!0)i=!0;else return Bt(u.err.code,u.err.msg,gi(r,d+u.err.line))}else if(a)if(c.tagClosed){if(h.trim().length>0)return Bt("InvalidTag","Closing tag '"+l+"' can't have attributes or invalid starting.",gi(r,o));if(t.length===0)return Bt("InvalidTag","Closing tag '"+l+"' has not been opened.",gi(r,o));{const d=t.pop();if(l!==d.tagName){let u=gi(r,d.tagStartPos);return Bt("InvalidTag","Expected closing tag '"+d.tagName+"' (opened in line "+u.line+", col "+u.col+") instead of closing tag '"+l+"'.",gi(r,o))}t.length==0&&(n=!0)}}else return Bt("InvalidTag","Closing tag '"+l+"' doesn't have proper closing.",gi(r,s));else{const d=bg(h,e);if(d!==!0)return Bt(d.err.code,d.err.msg,gi(r,s-h.length+d.err.line));if(n===!0)return Bt("InvalidXml","Multiple possible root nodes found.",gi(r,s));e.unpairedTags.indexOf(l)!==-1||t.push({tagName:l,tagStartPos:o}),i=!0}for(s++;s<r.length;s++)if(r[s]==="<")if(r[s+1]==="!"){s++,s=yg(r,s);continue}else if(r[s+1]==="?"){if(s=Cg(r,++s),s.err)return s}else break;else if(r[s]==="&"){const d=LR(r,s);if(d==-1)return Bt("InvalidChar","char '&' is not expected.",gi(r,s));s=d}else if(n===!0&&!vg(r[s]))return Bt("InvalidXml","Extra text at the end",gi(r,s));r[s]==="<"&&s--}}else{if(vg(r[s]))continue;return Bt("InvalidChar","char '"+r[s]+"' is not expected.",gi(r,s))}if(i){if(t.length==1)return Bt("InvalidTag","Unclosed tag '"+t[0].tagName+"'.",gi(r,t[0].tagStartPos));if(t.length>0)return Bt("InvalidXml","Invalid '"+JSON.stringify(t.map(s=>s.tagName),null,4).replace(/\r?\n/g,"")+"' found.",{line:1,col:1})}else return Bt("InvalidXml","Start tag expected.",1);return!0};function vg(r){return r===" "||r==="	"||r===`
`||r==="\r"}function Cg(r,e){const t=e;for(;e<r.length;e++)if(r[e]=="?"||r[e]==" "){const i=r.substr(t,e-t);if(e>5&&i==="xml")return Bt("InvalidXml","XML declaration allowed only at the start of the document.",gi(r,e));if(r[e]=="?"&&r[e+1]==">"){e++;break}else continue}return e}function yg(r,e){if(r.length>e+5&&r[e+1]==="-"&&r[e+2]==="-"){for(e+=3;e<r.length;e++)if(r[e]==="-"&&r[e+1]==="-"&&r[e+2]===">"){e+=2;break}}else if(r.length>e+8&&r[e+1]==="D"&&r[e+2]==="O"&&r[e+3]==="C"&&r[e+4]==="T"&&r[e+5]==="Y"&&r[e+6]==="P"&&r[e+7]==="E"){let t=1;for(e+=8;e<r.length;e++)if(r[e]==="<")t++;else if(r[e]===">"&&(t--,t===0))break}else if(r.length>e+9&&r[e+1]==="["&&r[e+2]==="C"&&r[e+3]==="D"&&r[e+4]==="A"&&r[e+5]==="T"&&r[e+6]==="A"&&r[e+7]==="["){for(e+=8;e<r.length;e++)if(r[e]==="]"&&r[e+1]==="]"&&r[e+2]===">"){e+=2;break}}return e}const AR='"',RR="'";function MR(r,e){let t="",i="",n=!1;for(;e<r.length;e++){if(r[e]===AR||r[e]===RR)i===""?i=r[e]:i!==r[e]||(i="");else if(r[e]===">"&&i===""){n=!0;break}t+=r[e]}return i!==""?!1:{value:t,index:e,tagClosed:n}}const FR=new RegExp(`(\\s*)([^\\s=]+)(\\s*=)?(\\s*(['"])(([\\s\\S])*?)\\5)?`,"g");function bg(r,e){const t=mf.getAllMatches(r,FR),i={};for(let n=0;n<t.length;n++){if(t[n][1].length===0)return Bt("InvalidAttr","Attribute '"+t[n][2]+"' has no space in starting.",ra(t[n]));if(t[n][3]!==void 0&&t[n][4]===void 0)return Bt("InvalidAttr","Attribute '"+t[n][2]+"' is without value.",ra(t[n]));if(t[n][3]===void 0&&!e.allowBooleanAttributes)return Bt("InvalidAttr","boolean attribute '"+t[n][2]+"' is not allowed.",ra(t[n]));const s=t[n][2];if(!OR(s))return Bt("InvalidAttr","Attribute '"+s+"' is an invalid name.",ra(t[n]));if(!i.hasOwnProperty(s))i[s]=1;else return Bt("InvalidAttr","Attribute '"+s+"' is repeated.",ra(t[n]))}return!0}function PR(r,e){let t=/\d/;for(r[e]==="x"&&(e++,t=/[\da-fA-F]/);e<r.length;e++){if(r[e]===";")return e;if(!r[e].match(t))break}return-1}function LR(r,e){if(e++,r[e]===";")return-1;if(r[e]==="#")return e++,PR(r,e);let t=0;for(;e<r.length;e++,t++)if(!(r[e].match(/\w/)&&t<20)){if(r[e]===";")break;return-1}return e}function Bt(r,e,t){return{err:{code:r,msg:e,line:t.line||t,col:t.col}}}function OR(r){return mf.isName(r)}function NR(r){return mf.isName(r)}function gi(r,e){const t=r.substring(0,e).split(/\r?\n/);return{line:t.length,col:t[t.length-1].length+1}}function ra(r){return r.startIndex+r[1].length}var gf={};const vI={preserveOrder:!1,attributeNamePrefix:"@_",attributesGroupName:!1,textNodeName:"#text",ignoreAttributes:!0,removeNSPrefix:!1,allowBooleanAttributes:!1,parseTagValue:!0,parseAttributeValue:!1,trimValues:!0,cdataPropName:!1,numberParseOptions:{hex:!0,leadingZeros:!0,eNotation:!0},tagValueProcessor:function(r,e){return e},attributeValueProcessor:function(r,e){return e},stopNodes:[],alwaysCreateTextNode:!1,isArray:()=>!1,commentPropName:!1,unpairedTags:[],processEntities:!0,htmlEntities:!1,ignoreDeclaration:!1,ignorePiTags:!1,transformTagName:!1,transformAttributeName:!1,updateTag:function(r,e,t){return r}},DR=function(r){return Object.assign({},vI,r)};gf.buildOptions=DR;gf.defaultOptions=vI;class UR{constructor(e){this.tagname=e,this.child=[],this[":@"]={}}add(e,t){e==="__proto__"&&(e="#__proto__"),this.child.push({[e]:t})}addChild(e){e.tagname==="__proto__"&&(e.tagname="#__proto__"),e[":@"]&&Object.keys(e[":@"]).length>0?this.child.push({[e.tagname]:e.child,":@":e[":@"]}):this.child.push({[e.tagname]:e.child})}}var BR=UR;const zR=Jc;function VR(r,e){const t={};if(r[e+3]==="O"&&r[e+4]==="C"&&r[e+5]==="T"&&r[e+6]==="Y"&&r[e+7]==="P"&&r[e+8]==="E"){e=e+9;let i=1,n=!1,s=!1,o="";for(;e<r.length;e++)if(r[e]==="<"&&!s)n&&GR(r,e)?(e+=7,[entityName,val,e]=kR(r,e+1),val.indexOf("&")===-1&&(t[XR(entityName)]={regx:RegExp(`&${entityName};`,"g"),val})):n&&HR(r,e)||n&&WR(r,e)?e+=8:n&&YR(r,e)?e+=9:s=!0,i++,o="";else if(r[e]===">"){if(s?r[e-1]==="-"&&r[e-2]==="-"&&(s=!1,i--):i--,i===0)break}else r[e]==="["?n=!0:o+=r[e];if(i!==0)throw new Error("Unclosed DOCTYPE")}else throw new Error("Invalid Tag instead of DOCTYPE");return{entities:t,i:e}}function kR(r,e){let t="";for(;e<r.length&&r[e]!=="'"&&r[e]!=='"';e++)t+=r[e];if(t=t.trim(),t.indexOf(" ")!==-1)throw new Error("External entites are not supported");const i=r[e++];let n="";for(;e<r.length&&r[e]!==i;e++)n+=r[e];return[t,n,e]}function GR(r,e){return r[e+1]==="!"&&r[e+2]==="E"&&r[e+3]==="N"&&r[e+4]==="T"&&r[e+5]==="I"&&r[e+6]==="T"&&r[e+7]==="Y"}function HR(r,e){return r[e+1]==="!"&&r[e+2]==="E"&&r[e+3]==="L"&&r[e+4]==="E"&&r[e+5]==="M"&&r[e+6]==="E"&&r[e+7]==="N"&&r[e+8]==="T"}function WR(r,e){return r[e+1]==="!"&&r[e+2]==="A"&&r[e+3]==="T"&&r[e+4]==="T"&&r[e+5]==="L"&&r[e+6]==="I"&&r[e+7]==="S"&&r[e+8]==="T"}function YR(r,e){return r[e+1]==="!"&&r[e+2]==="N"&&r[e+3]==="O"&&r[e+4]==="T"&&r[e+5]==="A"&&r[e+6]==="T"&&r[e+7]==="I"&&r[e+8]==="O"&&r[e+9]==="N"}function XR(r){if(zR.isName(r))return r;throw new Error(`Invalid entity name ${r}`)}var ZR=VR;const jR=/^[-+]?0x[a-fA-F0-9]+$/,qR=/^([\-\+])?(0*)(\.[0-9]+([eE]\-?[0-9]+)?|[0-9]+(\.[0-9]+([eE]\-?[0-9]+)?)?)$/;!Number.parseInt&&window.parseInt&&(Number.parseInt=window.parseInt);!Number.parseFloat&&window.parseFloat&&(Number.parseFloat=window.parseFloat);const KR={hex:!0,leadingZeros:!0,decimalPoint:".",eNotation:!0};function QR(r,e={}){if(e=Object.assign({},KR,e),!r||typeof r!="string")return r;let t=r.trim();if(e.skipLike!==void 0&&e.skipLike.test(t))return r;if(e.hex&&jR.test(t))return Number.parseInt(t,16);{const i=qR.exec(t);if(i){const n=i[1],s=i[2];let o=JR(i[3]);const a=i[4]||i[6];if(!e.leadingZeros&&s.length>0&&n&&t[2]!=="."||!e.leadingZeros&&s.length>0&&!n&&t[1]!==".")return r;{const l=Number(t),c=""+l;return c.search(/[eE]/)!==-1||a?e.eNotation?l:r:t.indexOf(".")!==-1?c==="0"&&o===""||c===o||n&&c==="-"+o?l:r:s?o===c||n+o===c?l:r:t===c||t===n+c?l:r}}else return r}}function JR(r){return r&&r.indexOf(".")!==-1&&(r=r.replace(/0+$/,""),r==="."?r="0":r[0]==="."?r="0"+r:r[r.length-1]==="."&&(r=r.substr(0,r.length-1))),r}var $R=QR;const CI=Jc,oa=BR,eM=ZR,tM=$R;let iM=class{constructor(r){this.options=r,this.currentNode=null,this.tagsNodeStack=[],this.docTypeEntities={},this.lastEntities={apos:{regex:/&(apos|#39|#x27);/g,val:"'"},gt:{regex:/&(gt|#62|#x3E);/g,val:">"},lt:{regex:/&(lt|#60|#x3C);/g,val:"<"},quot:{regex:/&(quot|#34|#x22);/g,val:'"'}},this.ampEntity={regex:/&(amp|#38|#x26);/g,val:"&"},this.htmlEntities={space:{regex:/&(nbsp|#160);/g,val:" "},cent:{regex:/&(cent|#162);/g,val:"¢"},pound:{regex:/&(pound|#163);/g,val:"£"},yen:{regex:/&(yen|#165);/g,val:"¥"},euro:{regex:/&(euro|#8364);/g,val:"€"},copyright:{regex:/&(copy|#169);/g,val:"©"},reg:{regex:/&(reg|#174);/g,val:"®"},inr:{regex:/&(inr|#8377);/g,val:"₹"},num_dec:{regex:/&#([0-9]{1,7});/g,val:(e,t)=>String.fromCharCode(Number.parseInt(t,10))},num_hex:{regex:/&#x([0-9a-fA-F]{1,6});/g,val:(e,t)=>String.fromCharCode(Number.parseInt(t,16))}},this.addExternalEntities=nM,this.parseXml=lM,this.parseTextData=sM,this.resolveNameSpace=rM,this.buildAttributesMap=aM,this.isItStopNode=dM,this.replaceEntitiesValue=hM,this.readStopNodeData=pM,this.saveTextToParentTag=uM,this.addChild=cM}};function nM(r){const e=Object.keys(r);for(let t=0;t<e.length;t++){const i=e[t];this.lastEntities[i]={regex:new RegExp("&"+i+";","g"),val:r[i]}}}function sM(r,e,t,i,n,s,o){if(r!==void 0&&(this.options.trimValues&&!i&&(r=r.trim()),r.length>0)){o||(r=this.replaceEntitiesValue(r));const a=this.options.tagValueProcessor(e,r,t,n,s);return a==null?r:typeof a!=typeof r||a!==r?a:this.options.trimValues?ud(r,this.options.parseTagValue,this.options.numberParseOptions):r.trim()===r?ud(r,this.options.parseTagValue,this.options.numberParseOptions):r}}function rM(r){if(this.options.removeNSPrefix){const e=r.split(":"),t=r.charAt(0)==="/"?"/":"";if(e[0]==="xmlns")return"";e.length===2&&(r=t+e[1])}return r}const oM=new RegExp(`([^\\s=]+)\\s*(=\\s*(['"])([\\s\\S]*?)\\3)?`,"gm");function aM(r,e,t){if(!this.options.ignoreAttributes&&typeof r=="string"){const i=CI.getAllMatches(r,oM),n=i.length,s={};for(let o=0;o<n;o++){const a=this.resolveNameSpace(i[o][1]);let l=i[o][4],c=this.options.attributeNamePrefix+a;if(a.length)if(this.options.transformAttributeName&&(c=this.options.transformAttributeName(c)),c==="__proto__"&&(c="#__proto__"),l!==void 0){this.options.trimValues&&(l=l.trim()),l=this.replaceEntitiesValue(l);const h=this.options.attributeValueProcessor(a,l,e);h==null?s[c]=l:typeof h!=typeof l||h!==l?s[c]=h:s[c]=ud(l,this.options.parseAttributeValue,this.options.numberParseOptions)}else this.options.allowBooleanAttributes&&(s[c]=!0)}if(!Object.keys(s).length)return;if(this.options.attributesGroupName){const o={};return o[this.options.attributesGroupName]=s,o}return s}}const lM=function(r){r=r.replace(/\r\n?/g,`
`);const e=new oa("!xml");let t=e,i="",n="";for(let s=0;s<r.length;s++)if(r[s]==="<")if(r[s+1]==="/"){const o=Js(r,">",s,"Closing Tag is not closed.");let a=r.substring(s+2,o).trim();if(this.options.removeNSPrefix){const h=a.indexOf(":");h!==-1&&(a=a.substr(h+1))}this.options.transformTagName&&(a=this.options.transformTagName(a)),t&&(i=this.saveTextToParentTag(i,t,n));const l=n.substring(n.lastIndexOf(".")+1);if(a&&this.options.unpairedTags.indexOf(a)!==-1)throw new Error(`Unpaired tag can not be used as closing tag: </${a}>`);let c=0;l&&this.options.unpairedTags.indexOf(l)!==-1?(c=n.lastIndexOf(".",n.lastIndexOf(".")-1),this.tagsNodeStack.pop()):c=n.lastIndexOf("."),n=n.substring(0,c),t=this.tagsNodeStack.pop(),i="",s=o}else if(r[s+1]==="?"){let o=hd(r,s,!1,"?>");if(!o)throw new Error("Pi Tag is not closed.");if(i=this.saveTextToParentTag(i,t,n),!(this.options.ignoreDeclaration&&o.tagName==="?xml"||this.options.ignorePiTags)){const a=new oa(o.tagName);a.add(this.options.textNodeName,""),o.tagName!==o.tagExp&&o.attrExpPresent&&(a[":@"]=this.buildAttributesMap(o.tagExp,n,o.tagName)),this.addChild(t,a,n)}s=o.closeIndex+1}else if(r.substr(s+1,3)==="!--"){const o=Js(r,"-->",s+4,"Comment is not closed.");if(this.options.commentPropName){const a=r.substring(s+4,o-2);i=this.saveTextToParentTag(i,t,n),t.add(this.options.commentPropName,[{[this.options.textNodeName]:a}])}s=o}else if(r.substr(s+1,2)==="!D"){const o=eM(r,s);this.docTypeEntities=o.entities,s=o.i}else if(r.substr(s+1,2)==="!["){const o=Js(r,"]]>",s,"CDATA is not closed.")-2,a=r.substring(s+9,o);i=this.saveTextToParentTag(i,t,n);let l=this.parseTextData(a,t.tagname,n,!0,!1,!0,!0);l==null&&(l=""),this.options.cdataPropName?t.add(this.options.cdataPropName,[{[this.options.textNodeName]:a}]):t.add(this.options.textNodeName,l),s=o+2}else{let o=hd(r,s,this.options.removeNSPrefix),a=o.tagName;const l=o.rawTagName;let c=o.tagExp,h=o.attrExpPresent,d=o.closeIndex;this.options.transformTagName&&(a=this.options.transformTagName(a)),t&&i&&t.tagname!=="!xml"&&(i=this.saveTextToParentTag(i,t,n,!1));const u=t;if(u&&this.options.unpairedTags.indexOf(u.tagname)!==-1&&(t=this.tagsNodeStack.pop(),n=n.substring(0,n.lastIndexOf("."))),a!==e.tagname&&(n+=n?"."+a:a),this.isItStopNode(this.options.stopNodes,n,a)){let f="";if(c.length>0&&c.lastIndexOf("/")===c.length-1)a[a.length-1]==="/"?(a=a.substr(0,a.length-1),n=n.substr(0,n.length-1),c=a):c=c.substr(0,c.length-1),s=o.closeIndex;else if(this.options.unpairedTags.indexOf(a)!==-1)s=o.closeIndex;else{const E=this.readStopNodeData(r,l,d+1);if(!E)throw new Error(`Unexpected end of ${l}`);s=E.i,f=E.tagContent}const m=new oa(a);a!==c&&h&&(m[":@"]=this.buildAttributesMap(c,n,a)),f&&(f=this.parseTextData(f,a,n,!0,h,!0,!0)),n=n.substr(0,n.lastIndexOf(".")),m.add(this.options.textNodeName,f),this.addChild(t,m,n)}else{if(c.length>0&&c.lastIndexOf("/")===c.length-1){a[a.length-1]==="/"?(a=a.substr(0,a.length-1),n=n.substr(0,n.length-1),c=a):c=c.substr(0,c.length-1),this.options.transformTagName&&(a=this.options.transformTagName(a));const f=new oa(a);a!==c&&h&&(f[":@"]=this.buildAttributesMap(c,n,a)),this.addChild(t,f,n),n=n.substr(0,n.lastIndexOf("."))}else{const f=new oa(a);this.tagsNodeStack.push(t),a!==c&&h&&(f[":@"]=this.buildAttributesMap(c,n,a)),this.addChild(t,f,n),t=f}i="",s=d}}else i+=r[s];return e.child};function cM(r,e,t){const i=this.options.updateTag(e.tagname,t,e[":@"]);i===!1||(typeof i=="string"&&(e.tagname=i),r.addChild(e))}const hM=function(r){if(this.options.processEntities){for(let e in this.docTypeEntities){const t=this.docTypeEntities[e];r=r.replace(t.regx,t.val)}for(let e in this.lastEntities){const t=this.lastEntities[e];r=r.replace(t.regex,t.val)}if(this.options.htmlEntities)for(let e in this.htmlEntities){const t=this.htmlEntities[e];r=r.replace(t.regex,t.val)}r=r.replace(this.ampEntity.regex,this.ampEntity.val)}return r};function uM(r,e,t,i){return r&&(i===void 0&&(i=Object.keys(e.child).length===0),r=this.parseTextData(r,e.tagname,t,!1,e[":@"]?Object.keys(e[":@"]).length!==0:!1,i),r!==void 0&&r!==""&&e.add(this.options.textNodeName,r),r=""),r}function dM(r,e,t){const i="*."+t;for(const n in r){const s=r[n];if(i===s||e===s)return!0}return!1}function fM(r,e,t=">"){let i,n="";for(let s=e;s<r.length;s++){let o=r[s];if(i)o===i&&(i="");else if(o==='"'||o==="'")i=o;else if(o===t[0])if(t[1]){if(r[s+1]===t[1])return{data:n,index:s}}else return{data:n,index:s};else o==="	"&&(o=" ");n+=o}}function Js(r,e,t,i){const n=r.indexOf(e,t);if(n===-1)throw new Error(i);return n+e.length-1}function hd(r,e,t,i=">"){const n=fM(r,e+1,i);if(!n)return;let s=n.data;const o=n.index,a=s.search(/\s/);let l=s,c=!0;a!==-1&&(l=s.substring(0,a),s=s.substring(a+1).trimStart());const h=l;if(t){const d=l.indexOf(":");d!==-1&&(l=l.substr(d+1),c=l!==n.data.substr(d+1))}return{tagName:l,tagExp:s,closeIndex:o,attrExpPresent:c,rawTagName:h}}function pM(r,e,t){const i=t;let n=1;for(;t<r.length;t++)if(r[t]==="<")if(r[t+1]==="/"){const s=Js(r,">",t,`${e} is not closed`);if(r.substring(t+2,s).trim()===e&&(n--,n===0))return{tagContent:r.substring(i,t),i:s};t=s}else if(r[t+1]==="?")t=Js(r,"?>",t+1,"StopNode is not closed.");else if(r.substr(t+1,3)==="!--")t=Js(r,"-->",t+3,"StopNode is not closed.");else if(r.substr(t+1,2)==="![")t=Js(r,"]]>",t,"StopNode is not closed.")-2;else{const s=hd(r,t,">");s&&((s&&s.tagName)===e&&s.tagExp[s.tagExp.length-1]!=="/"&&n++,t=s.closeIndex)}}function ud(r,e,t){if(e&&typeof r=="string"){const i=r.trim();return i==="true"?!0:i==="false"?!1:tM(r,t)}else return CI.isExist(r)?r:""}var mM=iM,yI={};function gM(r,e){return bI(r,e)}function bI(r,e,t){let i;const n={};for(let s=0;s<r.length;s++){const o=r[s],a=EM(o);let l="";if(t===void 0?l=a:l=t+"."+a,a===e.textNodeName)i===void 0?i=o[a]:i+=""+o[a];else{if(a===void 0)continue;if(o[a]){let c=bI(o[a],e,l);const h=_M(c,e);o[":@"]?IM(c,o[":@"],l,e):Object.keys(c).length===1&&c[e.textNodeName]!==void 0&&!e.alwaysCreateTextNode?c=c[e.textNodeName]:Object.keys(c).length===0&&(e.alwaysCreateTextNode?c[e.textNodeName]="":c=""),n[a]!==void 0&&n.hasOwnProperty(a)?(Array.isArray(n[a])||(n[a]=[n[a]]),n[a].push(c)):e.isArray(a,l,h)?n[a]=[c]:n[a]=c}}}return typeof i=="string"?i.length>0&&(n[e.textNodeName]=i):i!==void 0&&(n[e.textNodeName]=i),n}function EM(r){const e=Object.keys(r);for(let t=0;t<e.length;t++){const i=e[t];if(i!==":@")return i}}function IM(r,e,t,i){if(e){const n=Object.keys(e),s=n.length;for(let o=0;o<s;o++){const a=n[o];i.isArray(a,t+"."+a,!0,!0)?r[a]=[e[a]]:r[a]=e[a]}}}function _M(r,e){const{textNodeName:t}=e,i=Object.keys(r).length;return!!(i===0||i===1&&(r[t]||typeof r[t]=="boolean"||r[t]===0))}yI.prettify=gM;const{buildOptions:TM}=gf,vM=mM,{prettify:CM}=yI,yM=pf;let bM=class{constructor(r){this.externalEntities={},this.options=TM(r)}parse(r,e){if(typeof r!="string")if(r.toString)r=r.toString();else throw new Error("XML data is accepted in String or Bytes[] form.");if(e){e===!0&&(e={});const n=yM.validate(r,e);if(n!==!0)throw Error(`${n.err.msg}:${n.err.line}:${n.err.col}`)}const t=new vM(this.options);t.addExternalEntities(this.externalEntities);const i=t.parseXml(r);return this.options.preserveOrder||i===void 0?i:CM(i,this.options)}addEntity(r,e){if(e.indexOf("&")!==-1)throw new Error("Entity value can't have '&'");if(r.indexOf("&")!==-1||r.indexOf(";")!==-1)throw new Error("An entity must be set without '&' and ';'. Eg. use '#xD' for '&#xD;'");if(e==="&")throw new Error("An entity with value '&' is not permitted");this.externalEntities[r]=e}};var SM=bM;const xM=`
`;function wM(r,e){let t="";return e.format&&e.indentBy.length>0&&(t=xM),SI(r,e,"",t)}function SI(r,e,t,i){let n="",s=!1;for(let o=0;o<r.length;o++){const a=r[o],l=AM(a);if(l===void 0)continue;let c="";if(t.length===0?c=l:c=`${t}.${l}`,l===e.textNodeName){let m=a[l];RM(c,e)||(m=e.tagValueProcessor(l,m),m=xI(m,e)),s&&(n+=i),n+=m,s=!1;continue}else if(l===e.cdataPropName){s&&(n+=i),n+=`<![CDATA[${a[l][0][e.textNodeName]}]]>`,s=!1;continue}else if(l===e.commentPropName){n+=i+`<!--${a[l][0][e.textNodeName]}-->`,s=!0;continue}else if(l[0]==="?"){const m=Sg(a[":@"],e),E=l==="?xml"?"":i;let g=a[l][0][e.textNodeName];g=g.length!==0?" "+g:"",n+=E+`<${l}${g}${m}?>`,s=!0;continue}let h=i;h!==""&&(h+=e.indentBy);const d=Sg(a[":@"],e),u=i+`<${l}${d}`,f=SI(a[l],e,c,h);e.unpairedTags.indexOf(l)!==-1?e.suppressUnpairedNode?n+=u+">":n+=u+"/>":(!f||f.length===0)&&e.suppressEmptyNode?n+=u+"/>":f&&f.endsWith(">")?n+=u+`>${f}${i}</${l}>`:(n+=u+">",f&&i!==""&&(f.includes("/>")||f.includes("</"))?n+=i+e.indentBy+f+i:n+=f,n+=`</${l}>`),s=!0}return n}function AM(r){const e=Object.keys(r);for(let t=0;t<e.length;t++){const i=e[t];if(r.hasOwnProperty(i)&&i!==":@")return i}}function Sg(r,e){let t="";if(r&&!e.ignoreAttributes)for(let i in r){if(!r.hasOwnProperty(i))continue;let n=e.attributeValueProcessor(i,r[i]);n=xI(n,e),n===!0&&e.suppressBooleanAttributes?t+=` ${i.substr(e.attributeNamePrefix.length)}`:t+=` ${i.substr(e.attributeNamePrefix.length)}="${n}"`}return t}function RM(r,e){r=r.substr(0,r.length-e.textNodeName.length-1);let t=r.substr(r.lastIndexOf(".")+1);for(let i in e.stopNodes)if(e.stopNodes[i]===r||e.stopNodes[i]==="*."+t)return!0;return!1}function xI(r,e){if(r&&r.length>0&&e.processEntities)for(let t=0;t<e.entities.length;t++){const i=e.entities[t];r=r.replace(i.regex,i.val)}return r}var MM=wM;const FM=MM,PM={attributeNamePrefix:"@_",attributesGroupName:!1,textNodeName:"#text",ignoreAttributes:!0,cdataPropName:!1,format:!1,indentBy:"  ",suppressEmptyNode:!1,suppressUnpairedNode:!0,suppressBooleanAttributes:!0,tagValueProcessor:function(r,e){return e},attributeValueProcessor:function(r,e){return e},preserveOrder:!1,commentPropName:!1,unpairedTags:[],entities:[{regex:new RegExp("&","g"),val:"&amp;"},{regex:new RegExp(">","g"),val:"&gt;"},{regex:new RegExp("<","g"),val:"&lt;"},{regex:new RegExp("'","g"),val:"&apos;"},{regex:new RegExp('"',"g"),val:"&quot;"}],processEntities:!0,stopNodes:[],oneListGroup:!1};function Ps(r){this.options=Object.assign({},PM,r),this.options.ignoreAttributes||this.options.attributesGroupName?this.isAttribute=function(){return!1}:(this.attrPrefixLen=this.options.attributeNamePrefix.length,this.isAttribute=NM),this.processTextOrObjNode=LM,this.options.format?(this.indentate=OM,this.tagEndChar=`>
`,this.newLine=`
`):(this.indentate=function(){return""},this.tagEndChar=">",this.newLine="")}Ps.prototype.build=function(r){return this.options.preserveOrder?FM(r,this.options):(Array.isArray(r)&&this.options.arrayNodeName&&this.options.arrayNodeName.length>1&&(r={[this.options.arrayNodeName]:r}),this.j2x(r,0).val)};Ps.prototype.j2x=function(r,e){let t="",i="";for(let n in r)if(Object.prototype.hasOwnProperty.call(r,n))if(typeof r[n]>"u")this.isAttribute(n)&&(i+="");else if(r[n]===null)this.isAttribute(n)?i+="":n[0]==="?"?i+=this.indentate(e)+"<"+n+"?"+this.tagEndChar:i+=this.indentate(e)+"<"+n+"/"+this.tagEndChar;else if(r[n]instanceof Date)i+=this.buildTextValNode(r[n],n,"",e);else if(typeof r[n]!="object"){const s=this.isAttribute(n);if(s)t+=this.buildAttrPairStr(s,""+r[n]);else if(n===this.options.textNodeName){let o=this.options.tagValueProcessor(n,""+r[n]);i+=this.replaceEntitiesValue(o)}else i+=this.buildTextValNode(r[n],n,"",e)}else if(Array.isArray(r[n])){const s=r[n].length;let o="",a="";for(let l=0;l<s;l++){const c=r[n][l];if(!(typeof c>"u"))if(c===null)n[0]==="?"?i+=this.indentate(e)+"<"+n+"?"+this.tagEndChar:i+=this.indentate(e)+"<"+n+"/"+this.tagEndChar;else if(typeof c=="object")if(this.options.oneListGroup){const h=this.j2x(c,e+1);o+=h.val,this.options.attributesGroupName&&c.hasOwnProperty(this.options.attributesGroupName)&&(a+=h.attrStr)}else o+=this.processTextOrObjNode(c,n,e);else if(this.options.oneListGroup){let h=this.options.tagValueProcessor(n,c);h=this.replaceEntitiesValue(h),o+=h}else o+=this.buildTextValNode(c,n,"",e)}this.options.oneListGroup&&(o=this.buildObjectNode(o,n,a,e)),i+=o}else if(this.options.attributesGroupName&&n===this.options.attributesGroupName){const s=Object.keys(r[n]),o=s.length;for(let a=0;a<o;a++)t+=this.buildAttrPairStr(s[a],""+r[n][s[a]])}else i+=this.processTextOrObjNode(r[n],n,e);return{attrStr:t,val:i}};Ps.prototype.buildAttrPairStr=function(r,e){return e=this.options.attributeValueProcessor(r,""+e),e=this.replaceEntitiesValue(e),this.options.suppressBooleanAttributes&&e==="true"?" "+r:" "+r+'="'+e+'"'};function LM(r,e,t){const i=this.j2x(r,t+1);return r[this.options.textNodeName]!==void 0&&Object.keys(r).length===1?this.buildTextValNode(r[this.options.textNodeName],e,i.attrStr,t):this.buildObjectNode(i.val,e,i.attrStr,t)}Ps.prototype.buildObjectNode=function(r,e,t,i){if(r==="")return e[0]==="?"?this.indentate(i)+"<"+e+t+"?"+this.tagEndChar:this.indentate(i)+"<"+e+t+this.closeTag(e)+this.tagEndChar;{let n="</"+e+this.tagEndChar,s="";return e[0]==="?"&&(s="?",n=""),(t||t==="")&&r.indexOf("<")===-1?this.indentate(i)+"<"+e+t+s+">"+r+n:this.options.commentPropName!==!1&&e===this.options.commentPropName&&s.length===0?this.indentate(i)+`<!--${r}-->`+this.newLine:this.indentate(i)+"<"+e+t+s+this.tagEndChar+r+this.indentate(i)+n}};Ps.prototype.closeTag=function(r){let e="";return this.options.unpairedTags.indexOf(r)!==-1?this.options.suppressUnpairedNode||(e="/"):this.options.suppressEmptyNode?e="/":e=`></${r}`,e};Ps.prototype.buildTextValNode=function(r,e,t,i){if(this.options.cdataPropName!==!1&&e===this.options.cdataPropName)return this.indentate(i)+`<![CDATA[${r}]]>`+this.newLine;if(this.options.commentPropName!==!1&&e===this.options.commentPropName)return this.indentate(i)+`<!--${r}-->`+this.newLine;if(e[0]==="?")return this.indentate(i)+"<"+e+t+"?"+this.tagEndChar;{let n=this.options.tagValueProcessor(e,r);return n=this.replaceEntitiesValue(n),n===""?this.indentate(i)+"<"+e+t+this.closeTag(e)+this.tagEndChar:this.indentate(i)+"<"+e+t+">"+n+"</"+e+this.tagEndChar}};Ps.prototype.replaceEntitiesValue=function(r){if(r&&r.length>0&&this.options.processEntities)for(let e=0;e<this.options.entities.length;e++){const t=this.options.entities[e];r=r.replace(t.regex,t.val)}return r};function OM(r){return this.options.indentBy.repeat(r)}function NM(r){return r.startsWith(this.options.attributeNamePrefix)&&r!==this.options.textNodeName?r.substr(this.attrPrefixLen):!1}var DM=Ps;const UM=pf,BM=SM,zM=DM;var wI={XMLParser:BM,XMLValidator:UM,XMLBuilder:zM};class dd{constructor(e,t){R(this,"date",new Date),R(this,"author"),R(this,"guid",rs.create()),R(this,"viewpoint"),R(this,"modifiedAuthor"),R(this,"modifiedDate"),R(this,"topic"),R(this,"_components"),R(this,"_comment",""),this._components=e,this._comment=t;const i=this._components.get(Ii);this.author=i.config.author}set comment(e){var t;const i=this._components.get(Ii);this._comment=e,this.modifiedDate=new Date,this.modifiedAuthor=i.config.author,(t=this.topic)==null||t.comments.set(this.guid,this)}get comment(){return this._comment}serialize(){let e=null;this.viewpoint&&(e=`<Viewpoint Guid="${this.viewpoint.guid}"/>`);let t=null;this.modifiedDate&&(t=`<ModifiedDate>${this.modifiedDate.toISOString()}</ModifiedDate>`);let i=null;return this.modifiedAuthor&&(i=`<ModifiedAuthor>${this.modifiedAuthor}</ModifiedAuthor>`),`
      <Comment Guid="${this.guid}">
        <Date>${this.date.toISOString()}</Date>
        <Author>${this.author}</Author>
        <Comment>${this.comment}</Comment>
        ${e??""}
        ${i??""}
        ${t??""}
      </Comment>
    `}}const AI=class ms{constructor(e){R(this,"guid",rs.create()),R(this,"title",ms.default.title),R(this,"creationDate",new Date),R(this,"creationAuthor",""),R(this,"viewpoints",new xs),R(this,"relatedTopics",new xs),R(this,"comments",new fn),R(this,"customData",{}),R(this,"description"),R(this,"serverAssignedId"),R(this,"dueDate"),R(this,"modifiedAuthor"),R(this,"modifiedDate"),R(this,"index"),R(this,"_type",ms.default.type),R(this,"_status",ms.default.status),R(this,"_priority",ms.default.priority),R(this,"_stage",ms.default.stage),R(this,"_assignedTo",ms.default.assignedTo),R(this,"_labels",ms.default.labels??new Set),R(this,"_components"),this._components=e;const t=e.get(Ii);this.creationAuthor=t.config.author,this.relatedTopics.guard=i=>i!==this.guid}set type(e){const t=this._components.get(Ii),{strict:i,types:n}=t.config;(!i||n.has(e))&&(this._type=e)}get type(){return this._type}set status(e){const t=this._components.get(Ii),{strict:i,statuses:n}=t.config;(!i||n.has(e))&&(this._status=e)}get status(){return this._status}set priority(e){const t=this._components.get(Ii);if(e){const{strict:i,priorities:n}=t.config;if(!(!i||n.has(e)))return;this._priority=e}else this._priority=e}get priority(){return this._priority}set stage(e){const t=this._components.get(Ii);if(e){const{strict:i,stages:n}=t.config;if(!(!i||n.has(e)))return;this._stage=e}else this._stage=e}get stage(){return this._stage}set assignedTo(e){const t=this._components.get(Ii);if(e){const{strict:i,users:n}=t.config;if(!(!i||n.has(e)))return;this._assignedTo=e}else this._assignedTo=e}get assignedTo(){return this._assignedTo}set labels(e){const t=this._components.get(Ii),{strict:i,labels:n}=t.config;if(i){const s=new Set;for(const o of e)(!i||n.has(o))&&s.add(o);this._labels=s}else this._labels=e}get labels(){return this._labels}get _managerVersion(){return this._components.get(Ii).config.version}set(e){const t=e,i=this;for(const n in e){if(n==="guid")continue;const s=t[n];n in this&&(i[n]=s)}return this._components.get(Ii).list.set(this.guid,this),this}createComment(e,t){const i=new dd(this._components,e);return i.viewpoint=t,i.topic=this,this.comments.set(i.guid,i),i}createLabelTags(e=this._managerVersion){let t="Labels";e==="2.1"&&(t="Labels"),e==="3"&&(t="Label");let i=[...this.labels].map(n=>`<${t}>${n}</${t}>`).join(`
`);for(const n in this.customData){const s=this.customData[n];typeof s=="string"&&(i+=`
<${t}>${s}</${t}>`)}return e==="2.1"?i:e==="3"?i.length!==0?`<Labels>
${i}
</Labels>`:"<Labels/>":i}createCommentTags(e=this._managerVersion){const t=[...this.comments.values()].map(i=>i.serialize()).join(`
`);return e==="2.1"?t:e==="3"?t.length!==0?`<Comments>
${t}
</Comments>`:"<Comments/>":t}createViewpointTags(e=this._managerVersion){let t="Viewpoints";e==="2.1"&&(t="Viewpoints"),e==="3"&&(t="ViewPoint");const i=this._components.get(qn),n=[...this.viewpoints].map(s=>i.list.get(s)).filter(s=>s).map(s=>`<${t} Guid="${s.guid}">
          <Viewpoint>${s.guid}.bcfv</Viewpoint>
          <Snapshot>${s.guid}.jpeg</Snapshot>
        </${t}>
      `).join(`
`);return e==="2.1"?n:e==="3"?n.length!==0?`<Viewpoints>
${n}
</Viewpoints>`:"<Viewpoints />":n}createRelatedTopicTags(e=this._managerVersion){const t=[...this.relatedTopics].map(i=>`<RelatedTopic Guid="${i}"></RelatedTopic>
      `).join(`
`);return e==="2.1"?t:e==="3"?t.length!==0?`<RelatedTopics>
${t}
</RelatedTopics>`:"<RelatedTopics />":t}serialize(){const e=this._managerVersion;let t=null;this.serverAssignedId&&(t=`ServerAssignedId="${this.serverAssignedId}"`);let i=null;this.priority&&(i=`<Priority>${this.priority}</Priority>`);let n=null;this.index&&e==="2.1"&&(n=`<Index>${this.index}</Index>`);let s=null;this.modifiedDate&&(s=`<ModifiedDate>${this.modifiedDate.toISOString()}</ModifiedDate>`);let o=null;this.modifiedAuthor&&(o=`<ModifiedAuthor>${this.modifiedAuthor}</ModifiedAuthor>`);let a=null;this.dueDate&&(a=`<DueDate>${this.dueDate.toISOString()}</DueDate>`);let l=null;this.assignedTo&&(l=`<AssignedTo>${this.assignedTo}</AssignedTo>`);let c=null;this.description&&(c=`<Description>${this.description}</Description>`);let h=null;this.stage&&(h=`<Stage>${this.stage}</Stage>`);const d=this.createCommentTags(e),u=this.createViewpointTags(e),f=this.createLabelTags(e),m=this.createRelatedTopicTags(e);return`
      <?xml version="1.0" encoding="UTF-8"?>
      <Markup>
        <Topic Guid="${this.guid}" TopicType="${this.type}" TopicStatus="${this.status}" ${t??""}>
          <Title>${this.title}</Title>
          <CreationDate>${this.creationDate.toISOString()}</CreationDate>
          <CreationAuthor>${this.creationAuthor}</CreationAuthor>
          ${i??""}
          ${n??""}
          ${s??""}
          ${o??""}
          ${a??""}
          ${l??""}
          ${c??""}
          ${h??""}
          ${f}
          ${m}
          ${e==="3"?d:""}
          ${e==="3"?u:""}
        </Topic>
        ${e==="2.1"?d:""}
        ${e==="2.1"?u:""}
      </Markup>
    `}};R(AI,"default",{title:"BCF Topic",type:"Issue",status:"Active"});let xg=AI;const VM=(r,e)=>{if(e.trim()==="")return;const t=Ii.xmlParser.parse(e).Extensions;if(!t)return;const{Priorities:i,TopicStatuses:n,TopicTypes:s,Users:o}=t;if(i&&i.Priority){const a=Array.isArray(i.Priority)?i.Priority:[i.Priority];for(const l of a)r.config.priorities.add(l)}if(n&&n.TopicStatus){const a=Array.isArray(n.TopicStatus)?n.TopicStatus:[n.TopicStatus];for(const l of a)r.config.statuses.add(l)}if(s&&s.TopicType){const a=Array.isArray(s.TopicType)?s.TopicType:[s.TopicType];for(const l of a)r.config.types.add(l)}if(o&&o.User){const a=Array.isArray(o.User)?o.User:[o.User];for(const l of a)r.config.users.add(l)}};class kM extends Fo{constructor(){super(...arguments),R(this,"_config",{version:{type:"Select",options:new Set(["2.1","3"]),multiple:!1,value:""},author:{type:"Text",value:""},types:{type:"TextSet",value:new Set},statuses:{type:"TextSet",value:new Set},priorities:{type:"TextSet",value:new Set},labels:{type:"TextSet",value:new Set},stages:{type:"TextSet",value:new Set},users:{type:"TextSet",value:new Set},includeSelectionTag:{type:"Boolean",value:!1},updateExtensionsOnImport:{type:"Boolean",value:!1},strict:{type:"Boolean",value:!1},includeAllExtensionsOnExport:{type:"Boolean",value:!1},fallbackVersionOnImport:{type:"Select",multiple:!1,options:new Set(["2.1","3"]),value:""},ignoreIncompleteTopicsOnImport:{type:"Boolean",value:!1}})}get version(){return this._config.version.value}set version(e){this._config.version.value=e}get author(){return this._config.author.value}set author(e){this._config.author.value=e}get types(){return this._config.types.value}set types(e){this._config.types.value=e}get statuses(){return this._config.statuses.value}set statuses(e){this._config.statuses.value=e}get priorities(){return this._config.priorities.value}set priorities(e){this._config.priorities.value=e}get labels(){return this._config.labels.value}set labels(e){this._config.labels.value=e}get stages(){return this._config.stages.value}set stages(e){this._config.stages.value=e}get users(){return this._config.users.value}set users(e){this._config.users.value=e}get includeSelectionTag(){return this._config.includeSelectionTag.value}set includeSelectionTag(e){this._config.includeSelectionTag.value=e}get updateExtensionsOnImport(){return this._config.updateExtensionsOnImport.value}set updateExtensionsOnImport(e){this._config.updateExtensionsOnImport.value=e}get strict(){return this._config.strict.value}set strict(e){this._config.strict.value=e}get includeAllExtensionsOnExport(){return this._config.includeAllExtensionsOnExport.value}set includeAllExtensionsOnExport(e){this._config.includeAllExtensionsOnExport.value=e}get fallbackVersionOnImport(){return this._config.fallbackVersionOnImport.value}set fallbackVersionOnImport(e){this._config.fallbackVersionOnImport.value=e}get ignoreIncompleteTopicsOnImport(){return this._config.ignoreIncompleteTopicsOnImport.value}set ignoreIncompleteTopicsOnImport(e){this._config.ignoreIncompleteTopicsOnImport.value=e}}const Ef=class ha extends We{constructor(){super(...arguments),R(this,"enabled",!1),R(this,"_defaultConfig",{author:"jhon.doe@example.com",version:"2.1",types:new Set(["Clash","Failure","Fault","Inquiry","Issue","Remark","Request"]),statuses:new Set(["Active","In Progress","Done","In Review","Closed"]),priorities:new Set(["On hold","Minor","Normal","Major","Critical"]),labels:new Set,stages:new Set,users:new Set,includeSelectionTag:!1,updateExtensionsOnImport:!0,strict:!1,includeAllExtensionsOnExport:!0,fallbackVersionOnImport:"2.1",ignoreIncompleteTopicsOnImport:!1}),R(this,"config",new kM(this,this.components,"BCF Topics",ha.uuid)),R(this,"list",new fn),R(this,"onSetup",new oe),R(this,"isSetup",!1),R(this,"onBCFImported",new oe),R(this,"onDisposed",new oe)}setup(e){if(this.isSetup)return;const t={...this._defaultConfig,...e};this.config.version=t.version,this.config.author=t.author,this.config.types=t.types,this.config.statuses=t.statuses,this.config.priorities=t.priorities,this.config.labels=t.labels,this.config.stages=t.stages,this.config.users=t.users,this.config.includeSelectionTag=t.includeSelectionTag,this.config.updateExtensionsOnImport=t.updateExtensionsOnImport,this.config.strict=t.strict,this.config.includeAllExtensionsOnExport=t.includeAllExtensionsOnExport,this.config.fallbackVersionOnImport=t.fallbackVersionOnImport||"",this.config.ignoreIncompleteTopicsOnImport=t.ignoreIncompleteTopicsOnImport,this.isSetup=!0,this.enabled=!0,this.onSetup.trigger()}create(e){const t=new xg(this.components);return e?(t.guid=e.guid??t.guid,t.set(e)):this.list.set(t.guid,t),t}dispose(){this.list.dispose(),this.onDisposed.trigger(),this.onDisposed.reset()}get usedTypes(){const e=[...this.list].map(([t,i])=>i.type);return new Set(e)}get usedStatuses(){const e=[...this.list].map(([t,i])=>i.status);return new Set(e)}get usedPriorities(){const e=[...this.list].map(([t,i])=>i.priority).filter(t=>t);return new Set(e)}get usedStages(){const e=[...this.list].map(([t,i])=>i.stage).filter(t=>t);return new Set(e)}get usedUsers(){const e=[];for(const[t,i]of this.list){e.push(i.creationAuthor),i.assignedTo&&e.push(i.assignedTo),i.modifiedAuthor&&e.push(i.modifiedAuthor);for(const[n,s]of i.comments)e.push(s.author),s.modifiedAuthor&&e.push(s.modifiedAuthor)}return new Set(e)}get usedLabels(){const e=[];for(const[t,i]of this.list)e.push(...i.labels);return new Set(e)}updateExtensions(){for(const[e,t]of this.list){for(const i of t.labels)this.config.labels.add(i);this.config.types.add(t.type),t.priority&&this.config.priorities.add(t.priority),t.stage&&this.config.stages.add(t.stage),this.config.statuses.add(t.status),this.config.users.add(t.creationAuthor),t.assignedTo&&this.config.users.add(t.assignedTo),t.modifiedAuthor&&this.config.users.add(t.modifiedAuthor);for(const[i,n]of t.comments)this.config.users.add(n.author),n.modifiedAuthor&&this.config.users.add(n.modifiedAuthor)}}updateViewpointReferences(){const e=this.components.get(qn);for(const[t,i]of this.list)for(const n of i.viewpoints)e.list.has(n)||i.viewpoints.delete(n)}async export(e=this.list.values()){const t=new Tg;t.file("bcf.version",`<?xml version="1.0" encoding="UTF-8"?>
    <Version VersionId="${this.config.version}" xsi:noNamespaceSchemaLocation="https://raw.githubusercontent.com/buildingSMART/BCF-XML/release_3_0/Schemas/version.xsd"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    </Version>`),t.file("bcf.extensions",this.serializeExtensions());const i=await(await fetch("https://thatopen.github.io/engine_components/resources/favicon.ico")).arrayBuffer(),n=this.components.get(qn);for(const s of e){const o=t.folder(s.guid);o.file("markup.bcf",s.serialize());for(const a of s.viewpoints){const l=n.list.get(a);l&&(o.file(`${a}.jpeg`,i,{binary:!0}),o.file(`${a}.bcfv`,await l.serialize()))}}return await t.generateAsync({type:"blob"})}serializeExtensions(){const e=[...this.config.types].map(a=>`<TopicType>${a}</TopicType>`).join(`
`),t=[...this.config.statuses].map(a=>`<TopicStatus>${a}</TopicStatus>`).join(`
`),i=[...this.config.priorities].map(a=>`<Priority>${a}</Priority>`).join(`
`),n=[...this.config.labels].map(a=>`<TopicLabel>${a}</TopicLabel>`).join(`
`),s=[...this.config.stages].map(a=>`<Stage>${a}</Stage>`).join(`
`),o=[...this.config.users].map(a=>`<User>${a}</User>`).join(`
`);return`
      <?xml version="1.0" encoding="UTF-8"?>
      <Extensions xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="your-schema-location.xsd">
        ${e.length!==0?`<TopicTypes>
${e}
</TopicTypes>`:""}
        ${t.length!==0?`<TopicStatuses>
${t}
</TopicStatuses>`:""}
        ${i.length!==0?`<Priorities>
${i}
</Priorities>`:""}
        ${n.length!==0?`<TopicLabels>
${n}
</TopicLabels>`:""}
        ${s.length!==0?`<Stages>
${s}
</Stages>`:""}
        ${o.length!==0?`<Users>
${o}
</Users>`:""}
      </Extensions>
    `}processMarkupComment(e){const{Guid:t,Date:i,Author:n,Comment:s,Viewpoint:o}=e;if(!(t&&i&&n&&dd))return null;const a=this.components.get(qn),l=new dd(this.components,s??"");return l.guid=t,l.date=new Date(i),l.author=n,l.viewpoint=o!=null&&o.Guid?a.list.get(o.Guid):void 0,l.modifiedAuthor=e.ModifiedAuthor,l.modifiedDate=e.ModifiedDate?new Date(e.ModifiedDate):void 0,l}getMarkupComments(e,t){var i;let n;if(t==="2.1"&&(n=e.Comment),t==="3"&&(n=(i=e.Topic.Comments)==null?void 0:i.Comment),!n)return[];n=Array.isArray(n)?n:[n];const s=n.map(o=>this.processMarkupComment(o)).filter(o=>o);return Array.isArray(s)?s:[s]}getMarkupLabels(e,t){var i;let n;return t==="2.1"&&(n=e.Topic.Labels),t==="3"&&(n=(i=e.Topic.Labels)==null?void 0:i.Label),n?Array.isArray(n)?n:[n]:[]}getMarkupViewpoints(e,t){var i;let n;return t==="2.1"&&(n=e.Viewpoints),t==="3"&&(n=(i=e.Topic.Viewpoints)==null?void 0:i.ViewPoint),n?(n=Array.isArray(n)?n:[n],n):[]}getMarkupRelatedTopics(e,t){var i;let n;return t==="2.1"&&(n=e.Topic.RelatedTopic),t==="3"&&(n=(i=e.Topic.RelatedTopics)==null?void 0:i.RelatedTopic),n?(Array.isArray(n)?n:[n]).map(s=>s.Guid):[]}async load(e,t){var i;const{fallbackVersionOnImport:n,ignoreIncompleteTopicsOnImport:s,updateExtensionsOnImport:o}=this.config,a=new Tg;await a.loadAsync(e);const l=Object.values(a.files);let c=n;const h=l.find(_=>_.name.endsWith(".version"));if(h){const _=await h.async("string"),T=ha.xmlParser.parse(_).Version.VersionId;c=String(T)}if(!(c&&(c==="2.1"||c==="3")))throw new Error(`BCFTopics: ${c} is not supported.`);const d=l.find(_=>_.name.endsWith(".extensions"));if(o&&d){const _=await d.async("string");VM(this,_)}const u=[],f=this.components.get(qn),m=l.filter(_=>_.name.endsWith(".bcfv"));for(const _ of m){const T=await _.async("string"),I=ha.xmlParser.parse(T).VisualizationInfo;if(!I){console.warn("Missing VisualizationInfo in Viewpoint");continue}const v={},{Guid:b,ClippingPlanes:x,Components:A,OrthogonalCamera:y,PerspectiveCamera:S}=I;if(b&&(v.guid=b),A){const{Selection:w,Visibility:N}=A;if(w&&w.Component){const U=Array.isArray(w.Component)?w.Component:[w.Component];v.selectionComponents=U.map(B=>B.IfcGuid).filter(B=>B)}if(N&&"DefaultVisibility"in N&&(v.defaultVisibility=N.DefaultVisibility),N&&N.Exceptions&&"Component"in N.Exceptions){const{Component:U}=N.Exceptions,B=Array.isArray(U)?U:[U];v.exceptionComponents=B.map(V=>V.IfcGuid).filter(V=>V)}let C;c==="2.1"&&(C=A.ViewSetupHints),c==="3"&&(C=(i=A.Visibility)==null?void 0:i.ViewSetupHints),C&&("OpeningsVisible"in C&&(v.openingsVisible=C.OpeningsVisible),"SpacesVisible"in C&&(v.spacesVisible=C.SpacesVisible),"SpaceBoundariesVisible"in C&&(v.spaceBoundariesVisible=C.SpaceBoundariesVisible))}if(y||S){const w=I.PerspectiveCamera??I.OrthogonalCamera,{CameraViewPoint:N,CameraDirection:C}=w,U=new F(Number(N.X),Number(N.Z),Number(-N.Y)),B=new F(Number(C.X),Number(C.Z),Number(-C.Y)),V={position:{x:U.x,y:U.y,z:U.z},direction:{x:B.x,y:B.y,z:B.z},aspectRatio:"AspectRatio"in w?w.AspectRatio:1};"ViewToWorldScale"in w&&(v.camera={...V,viewToWorldScale:w.ViewToWorldScale}),"FieldOfView"in w&&(v.camera={...V,fov:w.FieldOfView})}const O=new WI(this.components,t,{data:v,setCamera:!1});if(A){const{Coloring:w}=A;if(w&&w.Color){const N=Array.isArray(w.Color)?w.Color:[w.Color];for(const C of N){const{Color:U,Component:B}=C,V=(Array.isArray(B)?B:[B]).map(j=>j.IfcGuid);O.componentColors.set(U,V)}}}if(u.push(O),x){const w=this.components.get(bo),N=Array.isArray(x.ClippingPlane)?x.ClippingPlane:[x.ClippingPlane];for(const C of N){const{Location:U,Direction:B}=C;if(!(U&&B))continue;const V=new F(U.X,U.Z,-U.Y),j=new F(B.X,-B.Z,B.Y),G=w.createFromNormalAndCoplanarPoint(t,j,V);G.visible=!1,G.enabled=!1,O.clippingPlanes.add(G)}}}const E={},g=[],p=l.filter(_=>_.name.endsWith(".bcf"));for(const _ of p){const T=await _.async("string"),I=ha.xmlParser.parse(T).Markup,v=I.Topic,{Guid:b,TopicType:x,TopicStatus:A,Title:y,CreationDate:S,CreationAuthor:O}=v;if(s&&!(b&&x&&A&&y&&S&&O))continue;const w=new xg(this.components);w.guid=b??w.guid;const N=this.getMarkupRelatedTopics(I,c);E[w.guid]=new Set(N),w.type=x??w.type,w.status=A??w.status,w.title=y??w.title,w.creationDate=S?new Date(S):w.creationDate,w.creationAuthor=O??w.creationAuthor,w.serverAssignedId=v.ServerAssignedId,w.priority=v.Priority,w.index=v.Index,w.modifiedDate=v.ModifiedDate?new Date(v.ModifiedDate):void 0,w.modifiedAuthor=v.ModifiedAuthor,w.dueDate=v.DueDate?new Date(v.DueDate):void 0,w.assignedTo=v.AssignedTo,w.description=v.Description,w.stage=v.Stage;const C=this.getMarkupLabels(I,c);for(const V of C)w.labels.add(V);const U=this.getMarkupComments(I,c);for(const V of U)w.comments.set(V.guid,V);const B=this.getMarkupViewpoints(I,c);for(const V of B){if(!(V&&V.Guid))continue;const j=f.list.get(V.Guid);j&&w.viewpoints.add(j.guid)}this.list.set(w.guid,w),g.push(w)}for(const _ in E){const T=this.list.get(_);if(!T)continue;const I=E[_];for(const v of I)T.relatedTopics.add(v)}return this.onBCFImported.trigger(g),{viewpoints:u,topics:g}}};R(Ef,"uuid","de977976-e4f6-4e4f-a01a-204727839802");R(Ef,"xmlParser",new wI.XMLParser({allowBooleanAttributes:!0,attributeNamePrefix:"",ignoreAttributes:!1,ignoreDeclaration:!0,ignorePiTags:!0,numberParseOptions:{leadingZeros:!0,hex:!0},parseAttributeValue:!0,preserveOrder:!1,processEntities:!1,removeNSPrefix:!0,trimValues:!0}));let Ii=Ef;const RI=class Vn extends We{constructor(e){super(e),R(this,"enabled",!0),R(this,"onDisposed",new oe),R(this,"_absoluteMin"),R(this,"_absoluteMax"),R(this,"_meshes",[]),this.components.add(Vn.uuid,this),this._absoluteMin=Vn.newBound(!0),this._absoluteMax=Vn.newBound(!1)}static getDimensions(e){const{min:t,max:i}=e,n=Math.abs(i.x-t.x),s=Math.abs(i.y-t.y),o=Math.abs(i.z-t.z),a=new F;return a.subVectors(i,t).divideScalar(2).add(t),{width:n,height:s,depth:o,center:a}}static newBound(e){const t=e?1:-1;return new F(t*Number.MAX_VALUE,t*Number.MAX_VALUE,t*Number.MAX_VALUE)}static getBounds(e,t,i){const n=i||this.newBound(!1),s=t||this.newBound(!0);for(const o of e)o.x<s.x&&(s.x=o.x),o.y<s.y&&(s.y=o.y),o.z<s.z&&(s.z=o.z),o.x>n.x&&(n.x=o.x),o.y>n.y&&(n.y=o.y),o.z>n.z&&(n.z=o.z);return new je(t,i)}dispose(){const e=this.components.get(xn);for(const t of this._meshes)e.destroy(t);this._meshes=[],this.onDisposed.trigger(Vn.uuid),this.onDisposed.reset()}get(){const e=this._absoluteMin.clone(),t=this._absoluteMax.clone();return new je(e,t)}getSphere(){const e=this._absoluteMin.clone(),t=this._absoluteMax.clone(),i=Math.abs((t.x-e.x)/2),n=Math.abs((t.y-e.y)/2),s=Math.abs((t.z-e.z)/2),o=new F(e.x+i,e.y+n,e.z+s),a=o.distanceTo(e);return new vi(o,a)}getMesh(){const e=new je(this._absoluteMin,this._absoluteMax),t=Vn.getDimensions(e),{width:i,height:n,depth:s,center:o}=t,a=new wt(i,n,s),l=new ge(a);return this._meshes.push(l),l.position.copy(o),l}reset(){this._absoluteMin=Vn.newBound(!0),this._absoluteMax=Vn.newBound(!1)}add(e){for(const t of e.items)this.addMesh(t.mesh)}addMesh(e,t){if(!e.geometry.index)return;const i=Vn.getFragmentBounds(e);e.updateMatrixWorld();const n=e.matrixWorld,s=new fe,o=e instanceof Bi,a=new Set;if(e instanceof Ac){t||(t=e.fragment.ids);for(const l of t){const c=e.fragment.getInstancesIDs(l);if(c)for(const h of c)a.add(h)}}else a.add(0);for(const l of a){const c=i.min.clone(),h=i.max.clone();o&&(e.getMatrixAt(l,s),c.applyMatrix4(s),h.applyMatrix4(s)),c.applyMatrix4(n),h.applyMatrix4(n),c.x<this._absoluteMin.x&&(this._absoluteMin.x=c.x),c.y<this._absoluteMin.y&&(this._absoluteMin.y=c.y),c.z<this._absoluteMin.z&&(this._absoluteMin.z=c.z),c.x>this._absoluteMax.x&&(this._absoluteMax.x=c.x),c.y>this._absoluteMax.y&&(this._absoluteMax.y=c.y),c.z>this._absoluteMax.z&&(this._absoluteMax.z=c.z),h.x>this._absoluteMax.x&&(this._absoluteMax.x=h.x),h.y>this._absoluteMax.y&&(this._absoluteMax.y=h.y),h.z>this._absoluteMax.z&&(this._absoluteMax.z=h.z),h.x<this._absoluteMin.x&&(this._absoluteMin.x=h.x),h.y<this._absoluteMin.y&&(this._absoluteMin.y=h.y),h.z<this._absoluteMin.z&&(this._absoluteMin.z=h.z)}}addFragmentIdMap(e){const t=this.components.get(Ze);for(const i in e){const n=t.list.get(i);if(!n)continue;const s=e[i];this.addMesh(n.mesh,s)}}static getFragmentBounds(e){const t=e.geometry.attributes.position,i=Number.MAX_VALUE,n=-i,s=new F(i,i,i),o=new F(n,n,n);if(!e.geometry.index)throw new Error("Geometry must be indexed!");const a=Array.from(e.geometry.index.array);for(let l=0;l<a.length;l++){if(l%3===0&&a[l]===0&&a[l+1]===0&&a[l+2]===0){l+=2;continue}const c=a[l],h=t.getX(c),d=t.getY(c),u=t.getZ(c);h<s.x&&(s.x=h),d<s.y&&(s.y=d),u<s.z&&(s.z=u),h>o.x&&(o.x=h),d>o.y&&(o.y=d),u>o.z&&(o.z=u)}return new je(s,o)}};R(RI,"uuid","d1444724-dba6-4cdd-a0c7-68ee1450d166");let Pc=RI;const GM=class MI extends We{constructor(e){super(e),R(this,"enabled",!0),e.add(MI.uuid,this)}async getIsolatedElements(e,t,i){const n=new Set;function s(l){if(n.has(l))return;const c=e.GetLine(t,l);if(c){n.add(l);for(const h in c){const d=c[h];d&&d.constructor.name==="Handle"&&d.value>0?s(d.value):Array.isArray(d)&&d.forEach(u=>{u&&u.constructor.name==="Handle"&&u.value>0&&s(u.value)})}}}for(const l of i)s(l);const o=[];for(const l of n)o.push(l);o.sort((l,c)=>l-c);const a=[];return o.forEach(l=>{const c=e.GetLine(t,l);a.push(c)}),a}async export(e,t,i){return i.forEach(n=>{e.WriteLine(t,n)}),e.SaveModel(t)}async splitIfc(e,t,i){const n=new Uint8Array(t),s=e.OpenModel(n),o=await this.getIsolatedElements(e,s,i),a=e.CreateModel({schema:H0.IFC2X3});return await this.export(e,a,o)}};R(GM,"uuid","6eb0ba2f-71c0-464e-bcec-2d7c335186b2");const FI=class PI{constructor(e){R(this,"onProgress",new oe),R(this,"inclusive",!1),R(this,"rules",[]),R(this,"ids",{}),R(this,"needsUpdate",new Map),R(this,"components"),this.components=e}static import(e,t){const i=PI.importers.get(t.type);return i?i(e,t):(console.warn("Invalid query data:.",t),null)}static importRules(e){const t=[];for(const i of e){const n={};for(const s in i){const o=i[s];o.regexp?n[s]=new RegExp(o.value):n[s]=o}t.push(n)}return t}static importIds(e){const t={};for(const i in e.ids)t[i]=new Set(e.ids[i]);return t}clear(e){if(e===void 0){this.ids={},this.needsUpdate.clear();return}delete this.ids[e],this.needsUpdate.delete(e)}addID(e,t){this.ids[e]||(this.ids[e]=new Set),this.ids[e].add(t)}getData(){const e={};for(const i in this.ids)e[i]=Array.from(this.ids[i]);const t=this.exportRules();return{name:this.name,inclusive:this.inclusive,type:"IfcFinderQuery",ids:e,rules:t}}exportRules(){const e=[];for(const t of this.rules){const i={};for(const n in t){const s=t[n];s instanceof RegExp?i[n]={regexp:!0,value:s.source}:i[n]=s}e.push(i)}return e}findInFile(e,t){return new Promise(i=>{const n=new FileReader,s=new TextDecoder("utf-8"),o=1e4*1024,a=1e3;let l=0;const c=/;/,h=()=>{if(l>=t.size){i();return}const d=Math.min(l+o+a,t.size),u=t.slice(l,d);n.readAsArrayBuffer(u)};n.onload=()=>{if(!(n.result instanceof ArrayBuffer))return;const d=new Uint8Array(n.result),u=s.decode(d).split(c);u.shift(),this.findInLines(e,u),this.onProgress.trigger(l/t.size),l+=o,h()},h()})}getIdFromLine(e){const t=e.slice(e.indexOf("#")+1,e.indexOf("="));return parseInt(t,10)}testRules(e){let t=null,i=null,n=null,s=!1;for(const o of this.rules){if(o.type==="category"){if(t===null&&(t=this.getCategoryFromLine(e),t===null)){if(this.inclusive)continue;break}if(!o.value.test(t)){if(this.inclusive)continue;s=!1;break}s=!0;continue}if(i===null&&(i=this.getAttributesFromLine(e),i===null)){if(this.inclusive)continue;s=!1;break}if(t===null&&(t=this.getCategoryFromLine(e),t===null)){if(this.inclusive)continue;s=!1;break}if(n===null&&(n=Object.keys(new W0[t]),n=n.slice(2),n===null)){if(this.inclusive)continue;s=!1;break}if(o.type==="property"){const{name:a,value:l}=o;if(!l.test(e)){if(this.inclusive)continue;s=!1;break}let c=!1;for(let h=0;h<i.length;h++){const d=i[h],u=n[h];if(l.test(d)&&a.test(u)){c=!0;break}}if(c)s=!0;else if(!this.inclusive){s=!1;break}}if(o.type==="operator"){const{name:a,value:l,operator:c}=o;let h=!1;for(let d=0;d<i.length;d++){const u=n[d],f=i[d].replace(/IFCLENGTHMEASURE\(|IFCVOLUMEMEASURE\(|\)/g,"");if(a.test(u)){if(c==="="&&parseFloat(f)===l){h=!0;break}else if(c==="<"&&parseFloat(f)<l){h=!0;break}else if(c===">"&&parseFloat(f)>l){h=!0;break}else if(c===">="&&parseFloat(f)>=l){h=!0;break}else if(c==="<="&&parseFloat(f)<=l){h=!0;break}}}if(h)s=!0;else if(!this.inclusive){s=!1;break}}}return s}getCategoryFromLine(e){const t=e.indexOf("=")+1,i=e.indexOf("("),n=e.slice(t,i).trim();return _R[n]||null}getAttributesFromLine(e){const t=/\((.*)\)/,i=e.match(t);if(!(i&&i[1]))return null;const n=/,(?![^()]*\))/g;return i[1].split(n).map(s=>s.trim())}};R(FI,"importers",new Map);let $n=FI;class wg{constructor(e){R(this,"list",new Map),R(this,"id",sr.generateUUID()),R(this,"mode","intersect"),R(this,"_components"),this._components=e}get queries(){return new Set(this.list.values())}get items(){const e=[];for(const t of this.queries)e.push(t.items);return this.mode==="combine"?yo.combine(e):yo.intersect(e)}add(e){if(this.list.has(e.name))throw new Error(`This group already has a query with the name ${e.name}.`);this.list.set(e.name,e)}clear(e){for(const t of this.queries)t.clear(e)}import(e){this.mode=e.mode,this.id=e.id;for(const t in e.queries){const i=$n.import(this._components,e.queries[t]);i&&this.list.set(t,i)}}export(){const e={};for(const[t,i]of this.list)e[t]=i.export();return{mode:this.mode,id:this.id,queries:e}}async update(e,t){for(const i of this.queries){const n=i.needsUpdate.get(e);(n===void 0||n)&&await i.update(e,t)}}}const LI=class OI extends $n{constructor(e,t){super(e),R(this,"name"),this.name=t.name,this.rules=t.rules,this.inclusive=t.inclusive}get items(){const e=this.components.get(Ze),t=[];for(const i in this.ids){const n=this.ids[i],s=e.groups.get(i);if(!s){console.warn(`Model ${i} not found!`);continue}const o=s.getFragmentMap(n);t.push(o)}return yo.combine(t)}export(){const e=this.getData();return e.type=OI.type,e}async update(e,t){this.ids[e]=new Set,await this.findInFile(e,t),this.needsUpdate.set(e,!1)}findInLines(e,t){for(const i of t)if(this.testRules(i)){const n=this.getIdFromLine(i);this.addID(e,n)}}};R(LI,"type","IfcBasicQuery");let Ag=LI;$n.importers.set(Ag.type,(r,e)=>{const t=new Ag(r,{name:e.name,rules:$n.importRules(e.rules),inclusive:e.inclusive});return t.ids=$n.importIds(e),t});const NI=class DI extends $n{constructor(e,t){super(e),R(this,"name"),R(this,"psets",[]),this.name=t.name,this.rules=t.rules,this.inclusive=t.inclusive}get items(){const e=this.components.get(zi),t=this.components.get(Ze),i=[];for(const n in this.ids){const s=t.groups.get(n);if(!s){console.log(`Model not found: ${n}.`);continue}const o=this.ids[n];for(const a of o){const l=e.getEntityRelations(n,a,"DefinesOcurrence");if(l){const c=s.getFragmentMap(l);i.push(c)}}}return yo.combine(i)}export(){const e=this.getData();return e.type=DI.type,e}async update(e,t){await this.findInFile(e,t);const i=new Set;for(const n of this.psets){const s=this.getAttributesFromLine(n);if(s===null)continue;const o=s[4].replace("(","[").replace(")","]").replace(/#/g,""),a=JSON.parse(o);for(const l of a){const c=this.ids[e];if(c&&c.has(l)){const h=this.getIdFromLine(n);i.add(h);break}}}this.ids[e]=i,this.psets=[],this.needsUpdate.set(e,!1)}findInLines(e,t){for(const i of t){const n=this.getCategoryFromLine(i);if(n==="IfcPropertySet"){this.psets.push(i);continue}if(n==="IfcPropertySingleValue"&&this.testRules(i)){const s=this.getIdFromLine(i);this.addID(e,s)}}}};R(NI,"type","IfcPropertyQuery");let Rg=NI;$n.importers.set(Rg.type,(r,e)=>{const t=new Rg(r,{name:e.name,inclusive:e.inclusive,rules:$n.importRules(e.rules)});return t.ids=$n.importIds(e),t});const HM=class UI extends We{constructor(e){super(e),R(this,"enabled",!0),R(this,"list",new Map),e.add(UI.uuid,this)}get queries(){const e=new Set;for(const[,t]of this.list)for(const i of t.queries)e.add(i);return e}import(e){for(const t in e){const i=new wg(this.components);i.import(e[t]),this.list.set(t,i)}}export(){const e={};for(const[t,i]of this.list)e[t]=i.export();return e}create(){const e=new wg(this.components);return this.list.set(e.id,e),e}delete(e){this.list.delete(e)}clear(){this.list.clear()}};R(HM,"uuid","0da7ad77-f734-42ca-942f-a074adfd1e3a");const BI=class zI extends We{constructor(e){super(e),R(this,"enabled",!0),R(this,"list",{}),R(this,"onDisposed",new oe),R(this,"onFragmentsDisposed",t=>{const{groupID:i,fragmentIDs:n}=t;for(const s in this.list){const o=this.list[s],a=Object.keys(o);if(a.includes(i))delete o[i],Object.values(o).length===0&&delete this.list[s];else for(const l of a){const c=o[l];for(const h of n)delete c.map[h];Object.values(c).length===0&&delete o[l]}}}),e.add(zI.uuid,this),e.get(Ze).onFragmentsDisposed.add(this.onFragmentsDisposed)}dispose(){this.list={},this.components.get(Ze).onFragmentsDisposed.remove(this.onFragmentsDisposed),this.onDisposed.trigger(),this.onDisposed.reset()}remove(e){for(const t in this.list){const i=this.list[t];for(const n in i){const s=i[n];delete s.map[e]}}}find(e){const t=this.components.get(Ze);if(!e){const o={};for(const[a,l]of t.list)o[a]=new Set(l.ids);return o}const i=Object.keys(e).length,n={};for(const o in e){const a=e[o];if(!this.list[o]){console.warn(`Classification ${o} does not exist.`);continue}for(const l of a){const c=this.list[o][l];if(c)for(const h in c.map){n[h]||(n[h]=new Map);for(const d of c.map[h]){const u=n[h].get(d);u===void 0?n[h].set(d,1):n[h].set(d,u+1)}}}}const s={};for(const o in n){const a=n[o];for(const[l,c]of a){if(c===void 0)throw new Error("Malformed fragments map!");c===i&&(s[o]||(s[o]=new Set),s[o].add(l))}}return s}byModel(e,t){this.list.models||(this.list.models={});const i=this.list.models;i[e]||(i[e]={map:{},id:null,name:e});const n=i[e];for(const[s,o]of t.data){const a=o[0];for(const l of a){const c=t.keyFragments.get(l);c&&(n.map[c]||(n.map[c]=new Set),n.map[c].add(s))}}}async byPredefinedType(e){var t;this.list.predefinedTypes||(this.list.predefinedTypes={});const i=this.list.predefinedTypes,n=e.getAllPropertiesIDs();for(const s of n){const o=await e.getProperties(s);if(!o)continue;const a=String((t=o.PredefinedType)==null?void 0:t.value).toUpperCase();i[a]||(i[a]={map:{},id:null,name:a});const l=i[a];for(const[c,h]of e.data){const d=h[0];for(const u of d){const f=e.keyFragments.get(u);if(!f)throw new Error("Fragment ID not found!");l.map[f]||(l.map[f]=new Set),l.map[f].add(o.expressID)}}}}byEntity(e){this.list.entities||(this.list.entities={});for(const[t,i]of e.data){const n=i[1][1],s=Fc[n];this.saveItem(e,"entities",s,t)}}async byIfcRel(e,t,i){tr.isRel(t)&&await tr.getRelationMap(e,t,async(n,s)=>{const{name:o}=await tr.getEntityName(e,n);for(const a of s)this.saveItem(e,i,o??"NO REL NAME",a)})}async bySpatialStructure(e,t={}){var i,n;const s=this.components.get(zi),o=s.relationMaps[e.uuid];if(!o)throw new Error(`Classifier: model relations of ${e.name||e.uuid} have to exists to group by spatial structure.`);const a=t.systemName??"spatialStructures",l=t.useProperties===void 0||t.useProperties;for(const[c]of o){if(t.isolate){const f=e.data.get(c);if(!f)continue;const m=f[1][1];if(m===void 0||!t.isolate.has(m))continue}const h=s.getEntityRelations(e,c,"Decomposes");if(h)for(const f of h){let m=f.toString();if(l){const E=await e.getProperties(f);if(!E)continue;m=(i=E.Name)==null?void 0:i.value}this.saveItem(e,a,m,c,f)}const d=s.getEntityRelations(e,c,"ContainsElements");if(!d)continue;let u=c.toString();if(l){const f=await e.getProperties(c);if(!f)continue;u=(n=f.Name)==null?void 0:n.value}for(const f of d){this.saveItem(e,a,u,f,c);const m=s.getEntityRelations(e,Number(f),"IsDecomposedBy");if(m)for(const E of m)this.saveItem(e,a,u,E,c)}}}setColor(e,t,i=!1){const n=this.components.get(Ze);for(const s in e){const o=n.list.get(s);if(!o)continue;const a=e[s];o.setColor(t,a,i)}}resetColor(e){const t=this.components.get(Ze);for(const i in e){const n=t.list.get(i);if(!n)continue;const s=e[i];n.resetColor(s)}}export(){const e={};for(const t in this.list){e[t]={};const i=this.list[t];for(const n in i){const s=i[n];e[t][n]={map:yo.export(s.map),name:s.name,id:s.id}}}return e}import(e){for(const t in e){this.list[t]||(this.list[t]={});const i=e[t];for(const n in i){const s=i[n];this.list[t][n]={map:yo.import(s.map),name:s.name,id:s.id}}}}saveItem(e,t,i,n,s=null){this.list[t]||(this.list[t]={});const o=e.data.get(n);if(o)for(const a of o[0]){const l=e.keyFragments.get(a);if(l){const c=this.list[t];c[i]||(c[i]={map:{},id:s,name:i}),c[i].map[l]||(c[i].map[l]=new Set),c[i].map[l].add(n)}}}};R(BI,"uuid","e25a7f3c-46c4-4a14-9d3d-5115f24ebeb7");let fd=BI;const WM=class VI extends We{constructor(e){super(e),R(this,"onDisposed",new oe),R(this,"enabled",!0),R(this,"height",10),R(this,"groupName","spatialStructures"),R(this,"list",new Set),e.add(VI.uuid,this)}dispose(){this.list.clear(),this.onDisposed.trigger(),this.onDisposed.reset()}set(e){if(!this.enabled)return;const t=this.components.get(fd),i=this.components.get(Ze),n=e?1:-1;let s=0;const o=t.list[this.groupName],a=new fe;for(const l in o){a.elements[13]=s*n*this.height;for(const c in o[l].map){const h=i.list.get(c),d=l+c,u=this.list.has(d);if(!h||e&&u||!e&&!u)continue;e?this.list.add(d):this.list.delete(d);const f=o[l].map[c];h.applyTransform(f,a),h.mesh.computeBoundingSphere(),h.mesh.computeBoundingBox()}s++}}};R(WM,"uuid","d260618b-ce88-4c7d-826c-6debb91de3e2");const kI=class GI extends We{constructor(e){super(e),R(this,"enabled",!0),this.components.add(GI.uuid,this)}set(e,t){const i=this.components.get(Ze);if(!t){for(const[n,s]of i.list)s&&(s.setVisibility(e),this.updateCulledVisibility(s));return}for(const n in t){const s=t[n],o=i.list.get(n);o&&(o.setVisibility(e,s),this.updateCulledVisibility(o))}}isolate(e){this.set(!1),this.set(!0,e)}updateCulledVisibility(e){const t=this.components.get($A);for(const[i,n]of t.list){const s=n.colorMeshes.get(e.id);s&&(s.count=e.mesh.count)}}};R(kI,"uuid","dd9ccf2d-8a21-4821-b7f6-2949add16a29");let YM=kI;class XM extends ff{constructor(){super(...arguments),R(this,"minGeometrySize",10),R(this,"minAssetsSize",1e3),R(this,"maxTriangles",null)}}const ZM=class HI extends We{constructor(e){super(e),R(this,"onGeometryStreamed",new jn),R(this,"onAssetStreamed",new jn),R(this,"onProgress",new jn),R(this,"onIfcLoaded",new jn),R(this,"onDisposed",new oe),R(this,"settings",new XM),R(this,"enabled",!0),R(this,"webIfc",new go),R(this,"_nextAvailableID",0),R(this,"_splittedGeometries",new Map),R(this,"_spatialTree",new lI),R(this,"_metaData",new hI),R(this,"_visitedGeometries",new Map),R(this,"_streamSerializer",new NE),R(this,"_geometries",new Map),R(this,"_geometryCount",0),R(this,"_civil",new cI),R(this,"_groupSerializer",new LE),R(this,"_assets",[]),R(this,"_meshesWithHoles",new Set),this.components.add(HI.uuid,this),this.settings.excludedCategories.add(Gg)}dispose(){this.onIfcLoaded.reset(),this.onGeometryStreamed.reset(),this.onAssetStreamed.reset(),this.webIfc=null,this.onDisposed.trigger(),this.onDisposed.reset()}async streamFromBuffer(e){await this.readIfcFile(e),await this.streamAllGeometries(),this.cleanUp()}async streamFromCallBack(e){await this.streamIfcFile(e),await this.streamAllGeometries(),this.cleanUp()}async readIfcFile(e){const{path:t,absolute:i,logLevel:n}=this.settings.wasm;this.webIfc.SetWasmPath(t,i),await this.webIfc.Init(),n&&this.webIfc.SetLogLevel(n),this.webIfc.OpenModel(e,this.settings.webIfc),this._nextAvailableID=this.webIfc.GetMaxExpressID(0)}async streamIfcFile(e){const{path:t,absolute:i,logLevel:n}=this.settings.wasm;this.webIfc.SetWasmPath(t,i),await this.webIfc.Init(),n&&this.webIfc.SetLogLevel(n),this.webIfc.OpenModelFromCallback(e,this.settings.webIfc),this._nextAvailableID=this.webIfc.GetMaxExpressID(0)}async streamAllGeometries(){console.log("Converting geometries to tiles...");const{minGeometrySize:e,minAssetsSize:t}=this.settings;this._spatialTree.setUp(this.webIfc);const i=this.webIfc.GetIfcEntityList(0),n=[[]],s=new hn;s.ifcMetadata={name:"",description:"",...this._metaData.getNameInfo(this.webIfc),...this._metaData.getDescriptionInfo(this.webIfc),schema:this.webIfc.GetModelSchema(0)||"IFC2X3",maxExpressID:this.webIfc.GetMaxExpressID(0)};let o=0,a=0;for(const m of i){if(!this.webIfc.IsIfcElement(m)&&m!==hr||this.settings.excludedCategories.has(m))continue;const E=this.webIfc.GetLineIDsWithType(0,m),g=E.size();for(let p=0;p<g;p++){o>e&&(o=0,a++,n.push([]));const _=E.get(p);n[a].push(_);const T=this.webIfc.GetLine(0,_);if(T.GlobalId){const v=(T==null?void 0:T.GlobalId.value)||(T==null?void 0:T.GlobalId);s.globalToExpressIDs.set(v,_)}const I=this._spatialTree.itemsByFloor[_]||0;s.data.set(_,[[],[I,m]]),o++}}this._spatialTree.cleanUp();let l=.01,c=0;for(const m of n){c++,this.webIfc.StreamMeshes(0,m,g=>{this.getMesh(this.webIfc,g,s)}),this._geometryCount>this.settings.minGeometrySize&&await this.streamGeometries(),this._assets.length>t&&await this.streamAssets();const E=c/n.length;E>l&&(l+=.01,l=Math.max(l,E),await this.onProgress.trigger(Math.round(l*100)/100))}this._geometryCount&&await this.streamGeometries(),this._assets.length&&await this.streamAssets();const{opaque:h,transparent:d}=s.geometryIDs;for(const[m,{index:E,uuid:g}]of this._visitedGeometries)s.keyFragments.set(E,g),(m>1?h:d).set(m,E);uI.get(s,this.webIfc);const u=this.webIfc.GetCoordinationMatrix(0);s.coordinationMatrix.fromArray(u),s.civilData=this._civil.read(this.webIfc);const f=this._groupSerializer.export(s);await this.onIfcLoaded.trigger(f),s.dispose(!0)}cleanUp(){try{this.webIfc.Dispose()}catch{}this.webIfc=null,this.webIfc=new go,this._visitedGeometries.clear(),this._geometries.clear(),this._assets=[],this._meshesWithHoles.clear()}getMesh(e,t,i){const n=t.geometries.size(),s=t.expressID,o={id:s,geometries:[]};for(let a=0;a<n;a++){const l=t.geometries.get(a),c=l.geometryExpressID,h=l.color.w===1,d=c*(h?1:-1);this._visitedGeometries.has(d)||this.getGeometry(e,c,h),this.registerGeometryData(i,s,l,o,c,d);const u=this._splittedGeometries.get(c);if(u)for(const f of u)this.registerGeometryData(i,s,l,o,f,f)}this._assets.push(o)}getGeometry(e,t,i){const n=e.GetGeometry(0,t),s=e.GetIndexArray(n.GetIndexData(),n.GetIndexDataSize()),o=e.GetVertexArray(n.GetVertexData(),n.GetVertexDataSize()),a=new Float32Array(o.length/2),l=new Float32Array(o.length/2);for(let u=0;u<o.length;u+=6)a[u/2]=o[u],a[u/2+1]=o[u+1],a[u/2+2]=o[u+2],l[u/2]=o[u+3],l[u/2+1]=o[u+4],l[u/2+2]=o[u+5];const c=i?1:-1;if(s.length===0){const u=new Float32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1]);this._geometries.set(t,{position:a,normal:l,index:s,boundingBox:u,hasHoles:!1});const f=this._visitedGeometries.size,m=sr.generateUUID(),E=t*c;this._visitedGeometries.set(E,{uuid:m,index:f}),this._geometryCount++,n.delete();return}const h=(this.settings.maxTriangles||s.length/3)*3;let d=!0;for(let u=0;u<s.length;u+=h){const f=s.length-u,m=Math.min(f,h),E=u+m,g=[],p=[],_=[];let T=0;for(let C=u;C<E;C++){g.push(T++);const U=s[C];p.push(a[U*3]),p.push(a[U*3+1]),p.push(a[U*3+2]),_.push(l[U*3]),_.push(l[U*3+1]),_.push(l[U*3+2])}const I=new Uint32Array(g),v=new Float32Array(p),b=new Float32Array(_),x=CA(v),A=new Float32Array(x.transformation.elements),y=!1,S=d?t:this._nextAvailableID++;this._geometries.set(S,{position:v,normal:b,index:I,boundingBox:A,hasHoles:y}),d||(this._splittedGeometries.has(t)||this._splittedGeometries.set(t,new Set),this._splittedGeometries.get(t).add(S));const O=this._visitedGeometries.size,w=sr.generateUUID(),N=S*c;this._visitedGeometries.set(N,{uuid:w,index:O}),this._geometryCount++,d=!1}n.delete()}async streamAssets(){await this.onAssetStreamed.trigger(this._assets),this._assets=null,this._assets=[]}async streamGeometries(){const e=new Map;for(const[t,i]of this._geometries)e.set(t,i),e.size>this.settings.minGeometrySize&&await this.outputGeometries(e);await this.outputGeometries(e),this._geometries.clear(),this._geometryCount=0}async outputGeometries(e){let t=this._streamSerializer.export(e),i={};for(const[n,{boundingBox:s,hasHoles:o}]of e)i[n]={boundingBox:s,hasHoles:o};await this.onGeometryStreamed.trigger({data:i,buffer:t}),i=null,t=null,e.clear()}registerGeometryData(e,t,i,n,s,o){const a=this._visitedGeometries.get(o);if(a===void 0)throw new Error("Error getting geometry data for streaming!");const l=e.data.get(t);if(!l)throw new Error("Data not found!");l[0].push(a.index);const{x:c,y:h,z:d,w:u}=i.color,f=[c,h,d,u],m=i.flatTransformation;n.geometries.push({color:f,geometryID:s,transformation:m})}};R(ZM,"uuid","d9999a00-e1f5-4d3f-8cfe-c56e08609764");class jM extends ff{constructor(){super(...arguments),R(this,"propertiesSize",100)}}class qM extends We{constructor(){super(...arguments),R(this,"onPropertiesStreamed",new jn),R(this,"onProgress",new jn),R(this,"onIndicesStreamed",new jn),R(this,"onDisposed",new oe),R(this,"enabled",!0),R(this,"settings",new jM),R(this,"webIfc",new go)}async dispose(){this.onIndicesStreamed.reset(),this.onPropertiesStreamed.reset(),this.webIfc=null,this.onDisposed.reset()}async streamFromBuffer(e){await this.readIfcFile(e),await this.streamAllProperties(),this.cleanUp()}async streamFromCallBack(e){await this.streamIfcFile(e),await this.streamAllProperties(),this.cleanUp()}async readIfcFile(e){const{path:t,absolute:i,logLevel:n}=this.settings.wasm;this.webIfc.SetWasmPath(t,i),await this.webIfc.Init(),n&&this.webIfc.SetLogLevel(n),this.webIfc.OpenModel(e,this.settings.webIfc)}async streamIfcFile(e){const{path:t,absolute:i,logLevel:n}=this.settings.wasm;this.webIfc.SetWasmPath(t,i),await this.webIfc.Init(),n&&this.webIfc.SetLogLevel(n),this.webIfc.OpenModelFromCallback(e,this.settings.webIfc)}async streamAllProperties(){const{propertiesSize:e}=this.settings,t=new Set(this.webIfc.GetIfcEntityList(0)),i=new Set([Ud,Bd,zd,Uc,hr]);for(const a of i)t.add(a);let n=.01,s=0;for(const a of t){if(s++,dI.has(a))continue;const l=i.has(a),c=this.webIfc.GetLineIDsWithType(0,a),h=c.size();let d=0;for(let u=0;u<h-e;u+=e){const f={};for(let m=0;m<e;m++){d++;const E=c.get(u+m);try{const g=this.webIfc.GetLine(0,E,l);f[g.expressID]=g}catch{console.log(`Could not get property: ${E}`)}}await this.onPropertiesStreamed.trigger({type:a,data:f})}if(d!==h){const u={};for(let f=d;f<h;f++){const m=c.get(f);try{const E=this.webIfc.GetLine(0,m,l);u[E.expressID]=E}catch{console.log(`Could not get property: ${m}`)}}await this.onPropertiesStreamed.trigger({type:a,data:u})}s/t.size>n&&(n=Math.round(n*100)/100,await this.onProgress.trigger(n),n+=.01)}await this.onProgress.trigger(1);const o=await this.components.get(zi).processFromWebIfc(this.webIfc,0);await this.onIndicesStreamed.trigger(o)}cleanUp(){this.webIfc.Dispose(),this.webIfc=null,this.webIfc=new go}}R(qM,"uuid","88d2c89c-ce32-47d7-8cb6-d51e4b311a0b");class WI{constructor(e,t,i){R(this,"title"),R(this,"guid",rs.create()),R(this,"clippingPlanes",new xs),R(this,"camera",{aspectRatio:1,fov:60,direction:{x:0,y:0,z:0},position:{x:0,y:0,z:0}}),R(this,"exceptionComponents",new xs),R(this,"selectionComponents",new xs),R(this,"componentColors",new fn),R(this,"spacesVisible",!1),R(this,"spaceBoundariesVisible",!1),R(this,"openingsVisible",!1),R(this,"defaultVisibility",!0),R(this,"_components"),R(this,"world");const n={setCamera:!0,...i},{data:s,setCamera:o}=n;this._components=e,this.world=t,s&&(this.guid=s.guid??this.guid,this.set(s)),o&&this.updateCamera()}get _selectionModelIdMap(){const e=this._components.get(Ze),t={};for(const[i,n]of e.groups){i in t||(t[i]=new Set);for(const s of this.selectionComponents){const o=n.globalToExpressIDs.get(s);o&&t[i].add(o)}}return t}get _exceptionModelIdMap(){const e=this._components.get(Ze),t={};for(const[i,n]of e.groups){i in t||(t[i]=new Set);for(const s of this.exceptionComponents){const o=n.globalToExpressIDs.get(s);o&&t[i].add(o)}}return t}get selection(){return this._components.get(Ze).modelIdToFragmentIdMap(this._selectionModelIdMap)}get exception(){return this._components.get(Ze).modelIdToFragmentIdMap(this._exceptionModelIdMap)}get projection(){return"fov"in this.camera?"Perspective":"Orthographic"}get position(){const e=this._components.get(Ze),{position:t}=this.camera,{x:i,y:n,z:s}=t,o=new F(i,n,s);return e.applyBaseCoordinateSystem(o,new fe),o}get direction(){const{direction:e}=this.camera,{x:t,y:i,z:n}=e;return new F(t,i,n)}get _managerVersion(){return this._components.get(Ii).config.version}get topics(){return[...this._components.get(Ii).list.values()].filter(e=>e.viewpoints.has(this.guid))}addComponentsFromMap(e){const t=this._components.get(Ze).fragmentIdMapToGuids(e);this.selectionComponents.add(...t),this._components.get(qn).list.set(this.guid,this)}set(e){const t=e,i=this;for(const n in e){if(n==="guid")continue;const s=t[n];if(n==="selectionComponents"){this.selectionComponents.clear(),this.selectionComponents.add(...s);continue}if(n==="exceptionComponents"){this.exceptionComponents.clear(),this.exceptionComponents.add(...s);continue}n in this&&(i[n]=s)}return this._components.get(qn).list.set(this.guid,this),this}async go(e,t=!0){const{camera:i}=e??this.world;if(!i.hasCameraControls())throw new Error("Viewpoint: the world's camera need controls to set the viewpoint.");i instanceof IR&&i.projection.set(this.projection);const n=new F(this.camera.position.x,this.camera.position.y,this.camera.position.z),s=new F(this.camera.direction.x,this.camera.direction.y,this.camera.direction.z);if(n.equals(new F)&&s.equals(new F))return;const o=this.position,a=this.direction;let l={x:o.x+a.x*80,y:o.y+a.y*80,z:o.z+a.z*80};const c=this.selection;if(Object.keys(c).length===0){const h=this._components.get(Ji).get(this.world).castRayFromVector(o,this.direction);h&&(l=h.point)}else{const h=this._components.get(Pc);h.reset(),h.addFragmentIdMap(c),l=h.getSphere().center,h.reset()}await i.controls.setLookAt(o.x,o.y,o.z,l.x,l.y,l.z,t)}updateCamera(e){const{camera:t,renderer:i}=e??this.world;if(!i)throw new Error("Viewpoint: the world needs to have a renderer!");if(!t.hasCameraControls())throw new Error("Viewpoint: world's camera need camera controls!");const n=new F;t.controls.getPosition(n);const s=t.three,o=new F(0,0,-1).applyEuler(s.rotation),{width:a,height:l}=i.getSize();let c=a/l;Number.isNaN(c)&&(c=1);const h=this._components.get(Ze);n.applyMatrix4(h.baseCoordinationMatrix.clone().invert());const d={aspectRatio:c,position:{x:n.x,y:n.y,z:n.z},direction:{x:o.x,y:o.y,z:o.z}};s instanceof Fi?this.camera={...d,fov:s.fov}:s instanceof wn&&(this.camera={...d,viewToWorldScale:s.top-s.bottom}),this._components.get(qn).list.set(this.guid,this)}applyVisibility(){const e=this._components.get(YM);e.set(this.defaultVisibility),e.set(!this.defaultVisibility,this.exception),e.set(!0,this.selection)}applyColors(){const e=this._components.get(qn),t=this._components.get(Ze),i=this._components.get(fd);for(const[n,s]of this.componentColors){const o=t.guidToFragmentIdMap(s);i.setColor(o,n,e.config.overwriteColors)}}resetColors(){const e=this._components.get(Ze),t=this._components.get(fd);for(const[i,n]of this.componentColors){const s=e.guidToFragmentIdMap(n);t.resetColor(s)}}async createComponentTags(e){var t,i;const n=this._components.get(Ze),s=this._components.get(Ii);let o="";if(s.config.includeSelectionTag){const a=e==="selection"?this._selectionModelIdMap:this._exceptionModelIdMap;for(const l in a){const c=n.groups.get(l);if(!c)continue;const h=a[l];for(const d of h){const u=await c.getProperties(d);if(!u)continue;const f=(t=u.GlobalId)==null?void 0:t.value;if(!f)continue;const m=(i=u.Tag)==null?void 0:i.value;let E=null;m&&(E=`AuthoringToolId="${m}"`),o+=`
<Component IfcGuid="${f}" ${E??""} />`}}}else o=[...this.selectionComponents].map(a=>`<Component IfcGuid="${a}" />`).join(`
`);return o}createColorTags(){let e="";for(const[t,i]of this.componentColors.entries()){const n=`#${t.getHexString()}`,s=i.map(o=>`
<Component IfcGuid="${o}" />`).join(`
`);e+=`<Color Color="${n}">
${s}
</Color>`}return e.length!==0?`<Coloring>
${e}
</Coloring>`:"<Coloring />"}async serialize(e=this._managerVersion){const t=this._components.get(Ze),i=this.position;i.applyMatrix4(t.baseCoordinationMatrix.clone().invert());const n=this.direction;n.normalize();const s=new fe().makeRotationX(Math.PI/2),o=n.clone().applyMatrix4(s);o.normalize();const a=`<CameraViewPoint>
      <X>${i.x}</X>
      <Y>${-i.z}</Y>
      <Z>${i.y}</Z>
    </CameraViewPoint>`,l=`<CameraDirection>
      <X>${n.x}</X>
      <Y>${-n.z}</Y>
      <Z>${n.y}</Z>
    </CameraDirection>`,c=`<CameraUpVector>
      <X>${o.x}</X>
      <Y>${-o.z}</Y>
      <Z>${o.y}</Z>
    </CameraUpVector>`,h=`<AspectRatio>${this.camera.aspectRatio}</AspectRatio>`;let d="";"viewToWorld"in this.camera?d=`<OrthogonalCamera>
        ${a}
        ${l}
        ${c}
        ${h}
        <ViewToWorldScale>${this.camera.viewToWorld}</ViewToWorldScale>
      </OrthogonalCamera>`:"fov"in this.camera&&(d=`<PerspectiveCamera>
        ${a}
        ${l}
        ${c}
        ${h}
        <FieldOfView>${this.camera.fov}</FieldOfView>
      </PerspectiveCamera>`);const u=`<ViewSetupHints SpacesVisible="${this.spacesVisible??!1}" SpaceBoundariesVisible="${this.spaceBoundariesVisible??!1}" OpeningsVisible="${this.openingsVisible??!1}" />`,f=(await this.createComponentTags("selection")).trim(),m=(await this.createComponentTags("exception")).trim(),E=this.createColorTags();return`<?xml version="1.0" encoding="UTF-8"?>
    <VisualizationInfo Guid="${this.guid}">
      <Components>
        ${e==="2.1"?u:""}
        ${f.length!==0?`<Selection>${f}</Selection>`:""}
        <Visibility DefaultVisibility="${this.defaultVisibility}">
          ${e==="3"?u:""}
          ${m.length!==0?`<Exceptions>${m}</Exceptions>`:""}
        </Visibility>
        ${E}
      </Components>
      ${d}
    </VisualizationInfo>`}}class KM extends Fo{constructor(){super(...arguments),R(this,"_config",{overwriteColors:{value:!1,type:"Boolean"}})}get overwriteColors(){return this._config.overwriteColors.value}set overwriteColors(e){this._config.overwriteColors.value=e}}const YI=class pd extends We{constructor(e){super(e),R(this,"enabled",!0),R(this,"list",new fn),R(this,"isSetup",!1),R(this,"onSetup",new oe),R(this,"config",new KM(this,this.components,"Viewpoints",pd.uuid)),R(this,"onDisposed",new oe),e.add(pd.uuid,this)}create(e,t){const i=new WI(this.components,e,{data:t});return t||this.list.set(i.guid,i),i}setup(){}dispose(){this.list.dispose(),this.onDisposed.trigger(),this.onDisposed.reset()}};R(YI,"uuid","ee867824-a796-408d-8aa0-4e5962a83c66");let qn=YI;class QM extends Fo{constructor(){super(...arguments),R(this,"_config",{visible:{value:!0,type:"Boolean"},lockRotation:{value:!0,type:"Boolean"},zoom:{type:"Number",interpolable:!0,value:.05,min:.001,max:5},frontOffset:{type:"Number",interpolable:!0,value:0,min:0,max:100},sizeX:{type:"Number",interpolable:!0,value:320,min:20,max:5e3},sizeY:{type:"Number",interpolable:!0,value:160,min:20,max:5e3},backgroundColor:{value:new Fe,type:"Color"}})}get visible(){return this._config.visible.value}set visible(e){this._config.visible.value=e;const t=this._component.renderer.domElement.style;t.display=e?"block":"none"}get lockRotation(){return this._config.lockRotation.value}set lockRotation(e){this._config.lockRotation.value=e,this._component.lockRotation=e}get zoom(){return this._config.zoom.value}set zoom(e){this._config.zoom.value=e,this._component.zoom=e}get frontOffset(){return this._config.frontOffset.value}set frontOffset(e){this._config.frontOffset.value=e,this._component.frontOffset=e}get sizeX(){return this._config.sizeX.value}set sizeX(e){this._config.sizeX.value=e;const{sizeX:t,sizeY:i}=this._config,n=new Re(t.value,i.value);this._component.resize(n)}get sizeY(){return this._config.sizeY.value}set sizeY(e){this._config.sizeY.value=e;const{sizeX:t,sizeY:i}=this._config,n=new Re(t.value,i.value);this._component.resize(n)}get backgroundColor(){return this._config.backgroundColor.value}set backgroundColor(e){this._config.backgroundColor.value=e,this._component.backgroundColor=e}}class JM{constructor(e,t){if(R(this,"onDisposed",new oe),R(this,"onAfterUpdate",new oe),R(this,"onBeforeUpdate",new oe),R(this,"onResize",new oe),R(this,"onSetup",new oe),R(this,"frontOffset",0),R(this,"overrideMaterial",new Kd),R(this,"backgroundColor",new Fe(395274)),R(this,"renderer"),R(this,"enabled",!0),R(this,"world"),R(this,"config"),R(this,"isSetup",!1),R(this,"_defaultConfig",{visible:!0,lockRotation:!1,zoom:.05,frontOffset:0,sizeX:320,sizeY:160,backgroundColor:new Fe(395274)}),R(this,"_lockRotation",!0),R(this,"_size",new Re(320,160)),R(this,"_camera"),R(this,"_plane"),R(this,"_tempVector1",new F),R(this,"_tempVector2",new F),R(this,"_tempTarget",new F),R(this,"down",new F(0,-1,0)),R(this,"updatePlanes",()=>{if(!this.world.renderer)throw new Error("The given world must have a renderer!");const s=[],o=this.world.renderer.three;for(const a of o.clippingPlanes)s.push(a);s.push(this._plane),this.renderer.clippingPlanes=s}),this.world=e,!this.world.renderer)throw new Error("The given world must have a renderer!");this.renderer=new _a,this.renderer.setSize(this._size.x,this._size.y);const i=1,n=this._size.x/this._size.y;this._camera=new wn(i*n/-2,i*n/2,i/2,i/-2),this.world.renderer.onClippingPlanesUpdated.add(this.updatePlanes),this._camera.position.set(0,200,0),this._camera.zoom=.1,this._camera.rotation.x=-Math.PI/2,this._plane=new Kt(this.down,200),this.updatePlanes(),this.config=new QM(this,t,"MiniMap")}get lockRotation(){return this._lockRotation}set lockRotation(e){this._lockRotation=e,e&&(this._camera.rotation.z=0)}get zoom(){return this._camera.zoom}set zoom(e){this._camera.zoom=e,this._camera.updateProjectionMatrix()}dispose(){this.enabled=!1,this.onBeforeUpdate.reset(),this.onAfterUpdate.reset(),this.onResize.reset(),this.overrideMaterial.dispose(),this.renderer.forceContextLoss(),this.renderer.dispose(),this.onDisposed.trigger(),this.onDisposed.reset()}get(){return this._camera}update(){if(!this.enabled)return;this.onBeforeUpdate.trigger();const e=this.world.scene.three,t=this.world.camera;if(!t.hasCameraControls())throw new Error("The given world must use camera controls!");if(!(e instanceof dr))throw new Error("The given world must have a THREE.Scene as a root!");const i=t.controls;if(i.getPosition(this._tempVector1),this._camera.position.x=this._tempVector1.x,this._camera.position.z=this._tempVector1.z,this.frontOffset!==0&&(i.getTarget(this._tempVector2),this._tempVector2.sub(this._tempVector1),this._tempVector2.normalize().multiplyScalar(this.frontOffset),this._camera.position.x+=this._tempVector2.x,this._camera.position.z+=this._tempVector2.z),!this._lockRotation){i.getTarget(this._tempTarget);const s=Math.atan2(this._tempTarget.x-this._tempVector1.x,this._tempTarget.z-this._tempVector1.z);this._camera.rotation.z=s+Math.PI}this._plane.set(this.down,this._tempVector1.y);const n=e.background;e.background=this.backgroundColor,this.renderer.render(e,this._camera),e.background=n,this.onAfterUpdate.trigger()}getSize(){return this._size}resize(e=this._size){this._size.copy(e),this.renderer.setSize(e.x,e.y);const t=e.x/e.y,i=1;this._camera.left=i*t/-2,this._camera.right=i*t/2,this._camera.top=i/2,this._camera.bottom=-1/2,this._camera.updateProjectionMatrix(),this.onResize.trigger(e)}setup(e){const t={...this._defaultConfig,...e};this.config.visible=!0,this.config.lockRotation=t.lockRotation,this.config.zoom=t.zoom,this.config.frontOffset=t.frontOffset,this.config.sizeX=t.sizeX,this.config.sizeY=t.sizeY,this.config.backgroundColor=t.backgroundColor,this.isSetup=!0,this.onSetup.trigger()}}const $M=class XI extends We{constructor(e){super(e),R(this,"onAfterUpdate",new oe),R(this,"onBeforeUpdate",new oe),R(this,"onDisposed",new oe),R(this,"onSetup",new oe),R(this,"enabled",!0),R(this,"list",new Map),this.components.add(XI.uuid,this)}create(e){if(this.list.has(e.uuid))throw new Error("This world already has a minimap!");const t=new JM(e,this.components);return this.list.set(e.uuid,t),t}delete(e){const t=this.list.get(e);t&&t.dispose(),this.list.delete(e)}dispose(){for(const[e,t]of this.list)t.dispose();this.list.clear(),this.onDisposed.trigger()}update(){for(const[e,t]of this.list)t.update()}};R($M,"uuid","39ad6aad-84c8-4adf-a1e0-7f25313a9e7f");const ZI=class jI extends We{constructor(e){super(e),R(this,"enabled",!0),e.add(jI.uuid,this)}static distanceFromPointToLine(e,t,i,n=!1){const s=new Ot,o=new F;return s.set(t,i),s.closestPointToPoint(e,n,o),o.distanceTo(e)}getFace(e,t,i){if(!e.geometry.index)throw new Error("Geometry must be indexed!");const n=new Map,s=e.geometry.index.array,{plane:o}=this.getFaceData(t,i,e),a=[];for(let d=0;d<s.length/3;d++){const{plane:u,edges:f}=this.getFaceData(d,i,e);if(u.equals(o)){a.push({index:d,edges:f});for(const{id:m,points:E,distance:g}of f)n.set(m,{points:E,distance:g})}}let l=0;const c=new Map,h=new Map;for(const{index:d,edges:u}of a){const f=new Map;for(const{id:I}of u)if(c.has(I)){const v=c.get(I);f.set(I,v)}const m=u.map(I=>I.id);if(!f.size){const I=l++;for(const{id:v}of u)c.set(v,I);h.set(I,{edges:new Set(m),indices:new Set([d])});continue}let E=null;const g=new Set,p=new Set(m);for(const[I,v]of f){E===null?E=v:v!==E&&g.add(v),c.delete(I);const{edges:b}=h.get(v);b.delete(I),p.delete(I)}if(E===null)throw new Error("Error computing face!");const _=h.get(E),{indices:T}=_;T.add(d);for(const I of p){c.set(I,E);const{edges:v}=_;v.add(I)}for(const I of g){const v=h.get(I),{edges:b,indices:x}=v,A=h.get(E),{edges:y,indices:S}=A;for(const O of b)y.add(O),c.set(O,E);for(const O of x)S.add(O);h.delete(I)}}for(const[d,{indices:u,edges:f}]of h)if(u.has(t)){const m=[];for(const E of f){const g=n.get(E);m.push(g)}return{edges:m,indices:u}}return null}getVerticesAndNormal(e,t,i){if(!e.geometry.index)throw new Error("Geometry must be indexed!");const n=e.geometry.index.array,s=e.geometry.attributes.position.array,o=e.geometry.attributes.normal.array,a=n[t*3]*3,l=n[t*3+1]*3,c=n[t*3+2]*3,h=new F(s[a],s[a+1],s[a+2]),d=new F(s[l],s[l+1],s[l+2]),u=new F(s[c],s[c+1],s[c+2]),f=new F(o[a],o[a+1],o[a+2]),m=new F(o[l],o[l+1],o[l+2]),E=new F(o[c],o[c+1],o[c+2]),g=(f.x+m.x+E.x)/3,p=(f.y+m.y+E.y)/3,_=(f.z+m.z+E.z)/3,T=new F(g,p,_);if(i!==void 0&&e instanceof Bi){const I=new fe;e.getMatrixAt(i,I);const v=new fe;v.extractRotation(I),T.applyMatrix4(v),h.applyMatrix4(I),d.applyMatrix4(I),u.applyMatrix4(I)}return{p1:h,p2:d,p3:u,faceNormal:T}}round(e){e.x=Math.trunc(e.x*1e3)/1e3,e.y=Math.trunc(e.y*1e3)/1e3,e.z=Math.trunc(e.z*1e3)/1e3}getVolumeFromFragments(e){const t=this.components.get(Ze),i=new fe,n=[];for(const o in e){const a=t.list.get(o);if(!a)continue;const l=e[o];let c=0;for(const u of l){const f=a.getInstancesIDs(u);f&&(c+=f.size)}const h=new Bi(a.mesh.geometry,void 0,c);let d=0;for(const u of l){const f=a.getInstancesIDs(u);if(f)for(const m of f)a.mesh.getMatrixAt(m,i),h.setMatrixAt(d++,i)}n.push(h)}const s=this.getVolumeFromMeshes(n);for(const o of n)o.geometry=null,o.material=[],o.dispose();return s}getVolumeFromMeshes(e){let t=0;for(const i of e)t+=this.getVolumeOfMesh(i);return t}getFaceData(e,t,i){const n=this.getVerticesAndNormal(i,e,t),{p1:s,p2:o,p3:a,faceNormal:l}=n;this.round(s),this.round(o),this.round(a),this.round(l);const c=[{id:`${s.x}|${s.y}|${s.z}`,value:s},{id:`${o.x}|${o.y}|${o.z}`,value:o},{id:`${a.x}|${a.y}|${a.z}`,value:a}];c.sort((_,T)=>_.id<T.id?-1:_.id>T.id?1:0);const[{id:h,value:d},{id:u,value:f},{id:m,value:E}]=c,g=[{id:`${h}|${u}`,distance:d.distanceTo(f),points:[d,f]},{id:`${u}|${m}`,distance:f.distanceTo(E),points:[f,E]},{id:`${h}|${m}`,distance:d.distanceTo(E),points:[d,E]}],p=new Kt;return p.setFromNormalAndCoplanarPoint(l,s),p.constant=Math.round(p.constant*10)/10,{plane:p,edges:g}}getVolumeOfMesh(e){let t=0;const i=new F,n=new F,s=new F,{index:o}=e.geometry,a=e.geometry.attributes.position.array;if(!o)return console.warn("Geometry must be indexed to compute its volume!"),0;const l=[];if(e instanceof Bi)for(let h=0;h<e.count;h++){const d=new fe;e.getMatrixAt(h,d),l.push(d)}else l.push(new fe().identity());const{matrixWorld:c}=e;for(let h=0;h<o.array.length-2;h+=3)for(const d of l){const u=d.multiply(c),f=o.array[h]*3,m=o.array[h+1]*3,E=o.array[h+2]*3;i.set(a[f],a[f+1],a[f+2]).applyMatrix4(u),n.set(a[m],a[m+1],a[m+2]).applyMatrix4(u),s.set(a[E],a[E+1],a[E+2]).applyMatrix4(u),t+=this.getSignedVolumeOfTriangle(i,n,s)}return Math.abs(t)}getSignedVolumeOfTriangle(e,t,i){const n=i.x*t.y*e.z,s=t.x*i.y*e.z,o=i.x*e.y*t.z,a=e.x*i.y*t.z,l=t.x*e.y*i.z,c=e.x*t.y*i.z;return 1/6*(-n+s+o-a-l+c)}};R(ZI,"uuid","267ca032-672f-4cb0-afa9-d24e904f39d6");let ir=ZI;class $c{constructor(e){R(this,"cardinality","required"),R(this,"instructions"),R(this,"evalRequirement",(t,i,n,s)=>{const o={parameter:n,currentValue:t,requiredValue:i.parameter,pass:!1};s&&this.addCheckResult(o,s);let a=!1;if(i.type==="simple"&&(a=t===i.parameter),i.type==="enumeration"&&(a=i.parameter.includes(t)),i.type==="pattern"&&(a=new RegExp(i.parameter).test(String(t))),i.type==="length"){const{min:l,length:c,max:h}=i.parameter;c!==void 0&&(a=String(t).length===c),l!==void 0&&(a=String(t).length>=l),h!==void 0&&(a=String(t).length<=h)}if(i.type==="bounds"&&typeof t=="number"){const{min:l,minInclusive:c,max:h,maxInclusive:d}=i.parameter;let u=!0,f=!0;l!==void 0&&(u=c?t>=l:t>l),h!==void 0&&(f=d?t<=h:t<h),a=u&&f}return this.cardinality==="prohibited"&&(a=!a),this.cardinality==="optional"&&(a=!0),o.pass=a,o.pass}),R(this,"testResult",[]),this.components=e}addCheckResult(e,t){const i=t.findIndex(({parameter:n})=>n===e.parameter);i!==-1?t[i]=e:t.push(e)}saveResult(e,t){const{GlobalId:i}=e;if(!i)return;const{value:n}=i,s={expressID:n,pass:t,checks:[],cardinality:this.cardinality};this.testResult.push(s)}}const es=(r,e)=>{let t="";return e?(e.type==="simple"&&(t=`<ids:simpleValue>${e.parameter}</ids:simpleValue>`),e.type==="enumeration"&&(t=`<xs:restriction base="xs:string">
    ${e.parameter.map(i=>`<xs:enumeration value="${i}" />`).join(`\r
`)}
    </xs:restriction>`),e.type==="pattern"&&(t=`<xs:restriction base="xs:string">
      <xs:pattern value="${e.parameter}" />
    </xs:restriction>`),`<ids:${r[0].toLowerCase()+r.slice(1)}>
    ${t}
  </ids:${r[0].toLowerCase()+r.slice(1)}>`):t};class e1 extends $c{constructor(e,t){super(e),R(this,"facetType","Attribute"),R(this,"name"),R(this,"value"),this.name=t}serialize(e){const t=es("Name",this.name),i=es("Value",this.value);let n="";return e==="requirement"&&(n+=`cardinality="${this.cardinality}"`,n+=this.instructions?`instructions="${this.instructions}"`:""),`<ids:attribute ${n}>
  ${t}
  ${i}
</ids:attribute>`}async getEntities(){return[]}async test(e){var t;this.testResult=[];for(const n in e){const s=Number(n),o=e[s],a=[],l={guid:(t=o.GlobalId)==null?void 0:t.value,expressID:s,pass:!1,checks:a,cardinality:this.cardinality};this.testResult.push(l);const c=Object.keys(o).filter(d=>{const u=this.evalRequirement(d,this.name,"Name"),f=o[d];return u&&f===null?this.cardinality==="optional"||this.cardinality==="prohibited":u&&(f==null?void 0:f.type)===3&&f.value===2||u&&Array.isArray(f)&&f.length===0||u&&(f==null?void 0:f.type)===1&&f.value.trim()===""?!1:u}),h=c.length>0;if(a.push({parameter:"Name",currentValue:h?c[0]:null,requiredValue:this.name.parameter,pass:this.cardinality==="prohibited"?!h:h}),this.value)if(c[0]){const d=o[c[0]];(d==null?void 0:d.type)===5?a.push({parameter:"Value",currentValue:null,requiredValue:this.value.parameter,pass:this.cardinality==="prohibited"}):this.evalRequirement(d?d.value:null,this.value,"Value",a)}else a.push({parameter:"Value",currentValue:null,requiredValue:this.value.parameter,pass:this.cardinality==="prohibited"});l.pass=a.every(({pass:d})=>d)}const i=[...this.testResult];return this.testResult=[],i}}class t1 extends $c{constructor(e,t){super(e),R(this,"facetType","Classification"),R(this,"system"),R(this,"value"),R(this,"uri"),this.system=t}serialize(e){const t=es("System",this.system),i=es("Value",this.value);let n="";return e==="requirement"&&(n+=`cardinality="${this.cardinality}"`,n+=this.uri?`uri=${this.uri}`:"",n+=this.instructions?`instructions="${this.instructions}"`:""),`<ids:classification ${n}>
  ${t}
  ${i}
</ids:classification>`}async getEntities(e,t={}){var i;const n=[],s=await e.getAllPropertiesOfType(Rn),o=await e.getAllPropertiesOfType(fr),a={...s,...o},l=[];for(const h in a){const d=Number(h),u=await e.getProperties(d);if(!u)continue;const f=(i=u.ReferencedSource)==null?void 0:i.value;if(!f)continue;const m=await e.getProperties(f);!m||!this.evalSystem(m)||!this.evalValue(u)||!this.evalURI(u)||l.push(d)}const c=this.components.get(zi);for(const h of l){const d=c.getEntitiesWithRelation(e,"HasAssociations",h);for(const u of d){if(u in t)continue;const f=await e.getProperties(u);f&&(t[u]=f,n.push(u))}}return n}async test(e,t){var i;this.testResult=[];for(const s in e){const o=Number(s),a=e[o],l=[],c={guid:(i=a.GlobalId)==null?void 0:i.value,expressID:o,pass:!1,checks:l,cardinality:this.cardinality};this.testResult.push(c);let h=!0;const d=await this.getSystems(t,o),u=d.map(f=>this.getSystemName(f)).filter(f=>f);for(const f of d){if(!this.evalSystem(f,l))continue;if(h=!1,!(this.value&&this.system))break;if(f.type!==Rn)continue;const m=!this.value||this.evalValue(f,l),E=!this.uri||this.evalURI(f,l);if(m&&E)break}h&&this.addCheckResult({parameter:"System",currentValue:u,requiredValue:this.system,pass:this.cardinality==="optional"},l),c.pass=l.every(({pass:f})=>f)}const n=[...this.testResult];return this.testResult=[],n}async processReferencedSource(e,t){var i;const n=(i=t.ReferencedSource)==null?void 0:i.value;if(!n)return null;const s=await e.getProperties(n);return s?(s.type===Rn&&(s.ReferencedSource=await this.processReferencedSource(e,s)),s):null}async getSystems(e,t){var i;const n=[],s=this.components.get(zi),o=s.getEntityRelations(e,t,"HasAssociations");if(o)for(const d of o){const u=await e.getProperties(d);u&&(u.type===fr&&n.push(u),u.type===Rn&&(u.ReferencedSource=await this.processReferencedSource(e,u),u.ReferencedSource&&n.push(u)))}const a=n.map(d=>{var u,f,m;return d.type===fr?(u=d.Name)==null?void 0:u.value:d.type===Rn?(m=(f=d.ReferencedSource)==null?void 0:f.Name)==null?void 0:m.value:null}).filter(d=>d),l=s.getEntityRelations(e,t,"IsTypedBy");if(!(l&&l[0]))return n;const c=l[0],h=s.getEntityRelations(e,c,"HasAssociations");if(h)for(const d of h){const u=await e.getProperties(d);if(u){if(u.type===fr){if(a.includes((i=u.Name)==null?void 0:i.value))continue;n.push(u)}u.type===Rn&&(u.ReferencedSource=await this.processReferencedSource(e,u),u.ReferencedSource&&n.push(u))}}return n}getSystemName(e){var t,i,n,s;if(e.type===fr)return(t=e.Name)==null?void 0:t.value;if(e.type===Rn){if(((i=e.ReferencedSource)==null?void 0:i.type)===Rn)return this.getSystemName(e.ReferencedSource);if(((n=e.ReferencedSource)==null?void 0:n.type)===fr)return(s=e.ReferencedSource.Name)==null?void 0:s.value}return null}getAllReferenceIdentifications(e){if(e.type!==Rn)return null;const t=[];if(e.Identification&&t.push(e.Identification.value),e.ReferencedSource){const i=this.getAllReferenceIdentifications(e.ReferencedSource);i&&t.push(...i)}return t}evalSystem(e,t){const i=this.getSystemName(e);return this.evalRequirement(i,this.system,"System",t)}evalValue(e,t){if(!this.value)return!0;const i=this.getAllReferenceIdentifications(e);if(!i)return!1;const n=i.find(s=>this.value?this.evalRequirement(s,this.value,"Value"):!1);return t&&this.addCheckResult({parameter:"Value",currentValue:n??null,requiredValue:this.value,pass:!!n},t),!!n}evalURI(e,t){var i;return this.uri?this.evalRequirement((i=e.Location)==null?void 0:i.value,{type:"simple",parameter:this.uri},"URI",t):!0}}class i1 extends $c{constructor(e,t){super(e),R(this,"facetType","Entity"),R(this,"name"),R(this,"predefinedType"),this.name=t}serialize(e){const t=es("Name",this.name),i=es("Name",this.predefinedType);let n="";return e==="requirement"&&(n+=`cardinality="${this.cardinality}"`,n+=this.instructions?`instructions="${this.instructions}"`:""),`<ids:entity ${n}>
  ${t}
  ${i}
</ids:entity>`}async getEntities(e,t={}){const i=Object.entries(Fc),n=[];for(const[a]of i)await this.evalName({type:a})&&n.push(Number(a));let s={};for(const a of n){const l=await e.getAllPropertiesOfType(a);l&&(s={...s,...l})}if(!this.predefinedType){for(const a in s)a in t||(t[a]=s[a]);return Object.keys(s).map(Number)}const o=[];for(const a in s){const l=Number(a);if(l in t)continue;const c=s[l];await this.evalPredefinedType(e,c)&&(t[l]=c,o.push(l))}return o}async test(e,t){var i;this.testResult=[];for(const n in e){const s=Number(n),o=e[s],a=[],l={guid:(i=o.GlobalId)==null?void 0:i.value,expressID:s,pass:!1,checks:a,cardinality:this.cardinality};this.testResult.push(l),await this.evalName(o,a),await this.evalPredefinedType(t,o,a),l.pass=a.every(({pass:c})=>c)}return this.testResult}async evalName(e,t){const i=Fc[e.type];return this.evalRequirement(i,this.name,"Name",t)}async evalPredefinedType(e,t,i){var n,s,o,a;if(!this.predefinedType)return null;const l=this.components.get(zi),c=typeof this.predefinedType.parameter=="string"&&this.predefinedType.parameter==="USERDEFINED";let h=(n=t.PredefinedType)==null?void 0:n.value;if(h==="USERDEFINED"&&!c){const d=Object.keys(t).find(u=>/^((?!Predefined).)*Type$/.test(u));h=d?(s=t[d])==null?void 0:s.value:"USERDEFINED"}if(!h){const d=l.getEntityRelations(e,t.expressID,"IsTypedBy");if(d&&d[0]){const u=await e.getProperties(d[0]);if(u&&(h=(o=u.PredefinedType)==null?void 0:o.value,h==="USERDEFINED"&&!c)){const f=Object.keys(u).find(m=>/^((?!Predefined).)*Type$/.test(m));h=f?(a=u[f])==null?void 0:a.value:"USERDEFINED"}}}return this.evalRequirement(h,this.predefinedType,"PredefinedType",i)}}class n1 extends $c{constructor(e,t,i){super(e),R(this,"facetType","Property"),R(this,"propertySet"),R(this,"baseName"),R(this,"value"),R(this,"dataType"),R(this,"uri"),R(this,"_unsupportedTypes",[j0,q0]),this.propertySet=t,this.baseName=i}serialize(e){const t=es("PropertySet",this.propertySet),i=es("BaseName",this.baseName),n=es("Value",this.value),s=this.dataType?`dataType=${this.dataType}`:"";let o="";return e==="requirement"&&(o+=`cardinality="${this.cardinality}"`,o+=this.uri?`uri=${this.uri}`:"",o+=this.instructions?`instructions="${this.instructions}"`:""),`<ids:property ${s} ${o}>
  ${t}
  ${i}
  ${n}
</ids:property>`}async getEntities(e,t={}){var i,n;let s={};const o=await e.getAllPropertiesOfType(uo);s={...s,...o};const a=await e.getAllPropertiesOfType(hc);if(s={...s,...a},Object.keys(s).length===0)return[];const l=[];for(const h in s){const d=Number(h),u=await e.getProperties(d);if(!u||((i=u.Name)==null?void 0:i.value)!==this.propertySet.parameter)continue;let f;if(u.type===uo&&(f="HasProperties"),u.type===hc&&(f="Quantities"),!!f)for(const m of u[f]){const E=await e.getProperties(m.value);if(!(!E||((n=E.Name)==null?void 0:n.value)!==this.baseName.parameter)){if(this.value){const g=Object.keys(E).find(p=>p.endsWith("Value"));if(!g||E[g].value!==this.value.parameter)continue}l.push(d)}}}const c=this.components.get(zi);for(const h of l){const d=c.getEntitiesWithRelation(e,"IsDefinedBy",h);for(const u of d){if(u in t)continue;const f=await e.getProperties(u);f&&(t[u]=f)}}return[]}async test(e,t){var i;this.testResult=[];for(const s in e){const o=Number(s),a=e[o],l=[],c={guid:(i=a.GlobalId)==null?void 0:i.value,expressID:o,pass:!1,checks:l,cardinality:this.cardinality};this.testResult.push(c);const h=(await this.getPsets(t,o)).filter(d=>this.evalRequirement(d.Name??null,this.propertySet,"PropertySet")?(l.push({currentValue:d.Name,parameter:"PropertySet",pass:!0,requiredValue:this.propertySet.parameter}),!0):!1);if(h.length===0){l.push({currentValue:null,parameter:"PropertySet",pass:!1,requiredValue:this.propertySet.parameter});continue}for(const d of h){if(!("Properties"in d)){l.push({currentValue:null,parameter:"BaseName",pass:!1,requiredValue:this.baseName.parameter});continue}const u=d.Properties.filter(f=>{var m;return this._unsupportedTypes.includes(f.type)||!this.evalRequirement(((m=f.Name)==null?void 0:m.value)??null,this.baseName,"BaseName")?!1:(l.push({currentValue:f.Name.value,parameter:"BaseName",pass:!0,requiredValue:this.baseName.parameter}),!0)});if(u.length===0){l.push({currentValue:null,parameter:"BaseName",pass:!1,requiredValue:this.baseName.parameter});continue}for(const f of u)this.evalValue(f,l),this.evalDataType(f,l),this.evalURI()}c.pass=l.every(({pass:d})=>d)}const n=[...this.testResult];return this.testResult=[],n}getItemsAttrName(e){let t;return e===uo&&(t="HasProperties"),e===hc&&(t="Quantities"),t}getValueKey(e){return Object.keys(e).find(t=>t.endsWith("Value")||t.endsWith("Values"))}async simplifyPset(e,t,i){var n;const s=[],o=t[i];if(!o)return t;for(const{value:a}of o){const l=await e.getProperties(a);l&&s.push(l)}return{Name:(n=t.Name)==null?void 0:n.value,Properties:s,type:t.type}}async getTypePsets(e,t){const i=[],n=this.components.get(zi).getEntityRelations(e,t,"IsTypedBy");if(!(n&&n[0]))return i;const s=await e.getProperties(n[0]);if(!(s&&"HasPropertySets"in s&&Array.isArray(s.HasPropertySets)))return i;for(const{value:o}of s.HasPropertySets){const a=await e.getProperties(o);if(!(a&&"HasProperties"in a&&Array.isArray(a.HasProperties)))continue;const l=await this.simplifyPset(e,a,"HasProperties");i.push(l)}return i}async getPsets(e,t){var i;const n=await this.getTypePsets(e,t),s=this.components.get(zi).getEntityRelations(e,t,"IsDefinedBy");if(!s)return n;const o=[];for(const a of s){const l=await e.getProperties(a);if(!l)continue;const c=this.getItemsAttrName(l.type);if(!c)continue;const h=await this.simplifyPset(e,l,c),d=n.find(({Name:u})=>u===h.Name);if(d)for(const u of d.Properties){const f=(i=u.Name)==null?void 0:i.value;h.Properties.find(({Name:m})=>m.value===f)||h.Properties.push(u)}o.push(h)}return o}evalValue(e,t){const i=this.getValueKey(e),n=e[i];if(this.value){if(!n)return t==null||t.push({parameter:"Value",currentValue:null,pass:!1,requiredValue:this.value.parameter}),!1;const s=structuredClone(this.value);if(n.name==="IFCLABEL"&&s.type==="simple"&&(s.parameter=String(s.parameter)),(e.type===Af||e.type===Rf)&&Array.isArray(n)){const o=n.map(l=>l.value),a=n.find(l=>s?this.evalRequirement(l.value,s,"Value"):!1);return t==null||t.push({currentValue:o,pass:!!a,parameter:"Value",requiredValue:s.parameter}),!!a}return this.evalRequirement(n.value,s,"Value",t)}return i?n.type===3&&n.value===2?(t==null||t.push({parameter:"Value",currentValue:null,pass:!1,requiredValue:null}),!1):n.type===1&&n.value.trim()===""?(t==null||t.push({parameter:"Value",currentValue:"",pass:!1,requiredValue:null}),!1):!0:!0}evalDataType(e,t){if(!this.dataType)return!0;const i=this.getValueKey(e),n=e[i];if(!n)return t==null||t.push({parameter:"DataType",currentValue:null,pass:!1,requiredValue:this.dataType}),!1;if((e.type===Af||e.type===Rf)&&Array.isArray(n)&&n[0]){const s=n[0].name;return this.evalRequirement(s,{type:"simple",parameter:this.dataType},"DataType",t)}return this.evalRequirement(n.name,{type:"simple",parameter:this.dataType},"DataType",t)}evalURI(){return!0}}class s1{constructor(e,t,i){R(this,"name"),R(this,"ifcVersion",new Set),R(this,"identifier",rs.create()),R(this,"description"),R(this,"instructions"),R(this,"requirementsDescription"),R(this,"applicability",new xs),R(this,"requirements",new xs),R(this,"components"),this.components=e,this.name=t;for(const n of i)this.ifcVersion.add(n)}set(e){const t=e,i=this;for(const n in e){if(n==="identifier")continue;const s=t[n];n in this&&(i[n]=s)}return this.components.get(l1).list.set(this.identifier,this),this}async test(e){let t=[];if(this.requirements.size===0)return t;const i={};for(const n of this.applicability)await n.getEntities(e,i);return t=await[...this.requirements][0].test(i,e),t}serialize(){const e=`name="${this.name}"`,t=this.identifier?`identifier="${this.identifier}"`:"",i=this.description?`description="${this.description}"`:"",n=this.instructions?`instructions="${this.instructions}"`:"";return`<ids:specification ifcVersion="${[...this.ifcVersion].join(" ")}" ${e} ${t} ${i} ${n}>
      <ids:applicability minOccurs="1" maxOccurs="unbounded">
        ${[...this.applicability].map(s=>s.serialize("applicability"))}
      </ids:applicability>
      <ids:requirements>
        ${[...this.requirements].map(s=>s.serialize("requirement"))}
      </ids:requirements>
    </ids:specification>`}}const ts=r=>{if(!r)return;const e={};if("simpleValue"in r&&(e.type="simple",e.parameter=r.simpleValue),"restriction"in r){const t=r.restriction;if("pattern"in t&&(e.type="pattern",e.parameter=t.pattern.value),"enumeration"in t){e.type="enumeration";const i=t.enumeration.map(({value:n})=>n);e.parameter=i}}if(e.parameter!==void 0)return e},Mg=(r,e)=>{const t=[];for(const i of e){const n=i.name,s=ts(n);if(!s)continue;const o=new i1(r,s);i.cardinality&&(o.cardinality=i.cardinality),o.predefinedType=ts(i.predefinedType),o.instructions=i.instructions,t.push(o)}return t},r1=(r,e)=>{const t=[];for(const i of e){const n=i.name,s=ts(n);if(!s)continue;const o=new e1(r,s);i.cardinality&&(o.cardinality=i.cardinality),o.value=ts(i.value),o.instructions=i.instructions,t.push(o)}return t},o1=(r,e)=>{const t=[];for(const i of e){const n=i.system,s=ts(n);if(!s)continue;const o=new t1(r,s);i.cardinality&&(o.cardinality=i.cardinality);const a=ts(i.value);(a==null?void 0:a.type)==="simple"&&(a.parameter=String(a.parameter)),(a==null?void 0:a.type)==="enumeration"&&Array.isArray(a.parameter)&&(a.parameter=a.parameter.map(String)),o.value=a,o.uri=i.uri,o.instructions=i.instructions,t.push(o)}return t},a1=(r,e)=>{const t=[];for(const i of e){const n=i.propertySet,s=i.baseName,o=ts(n),a=ts(s);if(!(a&&o))continue;const l=new n1(r,o,a);i.cardinality&&(l.cardinality=i.cardinality);const c=ts(i.value);(c==null?void 0:c.type)==="enumeration"&&Array.isArray(c.parameter)&&(c.parameter=c.parameter.map(String)),l.value=c,l.dataType=i.dataType,l.uri=i.uri,l.instructions=i.instructions,t.push(l)}return t},If=class md extends We{constructor(e){super(e),R(this,"enabled",!0),R(this,"list",new fn),e.add(md.uuid,this)}getFragmentIdMap(e,t){const i=t.filter(a=>a.pass).map(a=>a.expressID),n=e.getFragmentMap(i),s=t.filter(a=>!a.pass).map(a=>a.expressID),o=e.getFragmentMap(s);return{pass:n,fail:o}}create(e,t,i){const n=new s1(this.components,e,t);return i&&(n.identifier=i),this.list.set(n.identifier,n),n}load(e){const t=[],i=md.xmlParser.parse(e).ids,{specifications:n}=i;if(n&&n.specification){const s=Array.isArray(n.specification)?n.specification:[n.specification];for(const o of s){const{name:a,ifcVersion:l,description:c,instructions:h,identifier:d}=o;if(!(a&&l))continue;const u=[],f=[],{applicability:m,requirements:E}=o;if(m){const{maxOccurs:p,..._}=m,T=Array.isArray(_)?_:[_];for(const I of T)for(const v in I){const b=Array.isArray(I[v])?I[v]:[I[v]];if(v==="entity"){const x=Mg(this.components,b);u.push(...x)}}}let g;if(E){const{maxOccurs:p,..._}=E;g=E.description;const T=Array.isArray(_)?_:[_];for(const I of T)for(const v in I){const b=Array.isArray(I[v])?I[v]:[I[v]];if(v==="entity"){const x=Mg(this.components,b);f.push(...x)}if(v==="attribute"){const x=r1(this.components,b);f.push(...x)}if(v==="classification"){const x=o1(this.components,b);f.push(...x)}if(v==="property"){const x=a1(this.components,b);f.push(...x)}}}if(u.length>0&&f.length>0){const p=this.create(a,l.split(/\s+/),d);p.description=c,p.instructions=h,p.requirementsDescription=g,p.applicability.add(...u),p.requirements.add(...f),t.push(p)}}}return t}export(e,t=this.list.values()){const i=t??this.list;return`<ids:ids xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://standards.buildingsmart.org/IDS http://standards.buildingsmart.org/IDS/1.0/ids.xsd" xmlns:ids="http://standards.buildingsmart.org/IDS">
  <!-- Made with That Open Engine ${jE.release} (https://github.com/thatopen/engine_components) -->
  <ids:info>
    <ids:title>${e.title}</ids:title>
    ${e.copyright?`<ids:copyright>${e.copyright}</ids:copyright>`:""}
    ${e.version?`<ids:version>${e.version}</ids:version>`:""}
    ${e.description?`<ids:description>${e.description}</ids:description>`:""}
    ${e.author?`<ids:author>${e.author}</ids:author>`:""}
    ${e.date?`<ids:date>${e.date.toISOString().split("T")[0]}</ids:date>`:""}
    ${e.purpose?`<ids:purpose>${e.purpose}</ids:purpose>`:""}
    ${e.milestone?`<ids:milestone>${e.milestone}</ids:milestone>`:""}
  </ids:info>
  <ids:specifications>
    ${[...i].map(n=>n.serialize()).join(`
`)}
  </ids:specifications>
</ids:ids>`}};R(If,"uuid","9f0b9f78-9b2e-481a-b766-2fbfd01f342c");R(If,"xmlParser",new wI.XMLParser({allowBooleanAttributes:!0,attributeNamePrefix:"",ignoreAttributes:!1,ignoreDeclaration:!0,ignorePiTags:!0,numberParseOptions:{leadingZeros:!0,hex:!0},parseAttributeValue:!0,preserveOrder:!1,processEntities:!1,removeNSPrefix:!0,trimValues:!0}));let l1=If;const Fg=new je,nc=new F;class qI extends WS{constructor(){super(),this.isLineSegmentsGeometry=!0,this.type="LineSegmentsGeometry";const e=[-1,2,0,1,2,0,-1,1,0,1,1,0,-1,0,0,1,0,0,-1,-1,0,1,-1,0],t=[-1,2,1,2,-1,1,1,1,-1,-1,1,-1,-1,-2,1,-2],i=[0,2,1,2,3,1,2,4,3,4,5,3,4,6,5,6,7,5];this.setIndex(i),this.setAttribute("position",new ht(e,3)),this.setAttribute("uv",new ht(t,2))}applyMatrix4(e){const t=this.attributes.instanceStart,i=this.attributes.instanceEnd;return t!==void 0&&(t.applyMatrix4(e),i.applyMatrix4(e),t.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}setPositions(e){let t;e instanceof Float32Array?t=e:Array.isArray(e)&&(t=new Float32Array(e));const i=new Ou(t,6,1);return this.setAttribute("instanceStart",new vs(i,3,0)),this.setAttribute("instanceEnd",new vs(i,3,3)),this.computeBoundingBox(),this.computeBoundingSphere(),this}setColors(e){let t;e instanceof Float32Array?t=e:Array.isArray(e)&&(t=new Float32Array(e));const i=new Ou(t,6,1);return this.setAttribute("instanceColorStart",new vs(i,3,0)),this.setAttribute("instanceColorEnd",new vs(i,3,3)),this}fromWireframeGeometry(e){return this.setPositions(e.attributes.position.array),this}fromEdgesGeometry(e){return this.setPositions(e.attributes.position.array),this}fromMesh(e){return this.fromWireframeGeometry(new kS(e.geometry)),this}fromLineSegments(e){const t=e.geometry;return this.setPositions(t.attributes.position.array),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new je);const e=this.attributes.instanceStart,t=this.attributes.instanceEnd;e!==void 0&&t!==void 0&&(this.boundingBox.setFromBufferAttribute(e),Fg.setFromBufferAttribute(t),this.boundingBox.union(Fg))}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new vi),this.boundingBox===null&&this.computeBoundingBox();const e=this.attributes.instanceStart,t=this.attributes.instanceEnd;if(e!==void 0&&t!==void 0){const i=this.boundingSphere.center;this.boundingBox.getCenter(i);let n=0;for(let s=0,o=e.count;s<o;s++)nc.fromBufferAttribute(e,s),n=Math.max(n,i.distanceToSquared(nc)),nc.fromBufferAttribute(t,s),n=Math.max(n,i.distanceToSquared(nc));this.boundingSphere.radius=Math.sqrt(n),isNaN(this.boundingSphere.radius)&&console.error("THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.",this)}}toJSON(){}applyMatrix(e){return console.warn("THREE.LineSegmentsGeometry: applyMatrix() has been renamed to applyMatrix4()."),this.applyMatrix4(e)}}Ce.line={worldUnits:{value:1},linewidth:{value:1},resolution:{value:new Re(1,1)},dashOffset:{value:0},dashScale:{value:1},dashSize:{value:1},gapSize:{value:1}};Si.line={uniforms:Vc.merge([Ce.common,Ce.fog,Ce.line]),vertexShader:`
		#include <common>
		#include <color_pars_vertex>
		#include <fog_pars_vertex>
		#include <logdepthbuf_pars_vertex>
		#include <clipping_planes_pars_vertex>

		uniform float linewidth;
		uniform vec2 resolution;

		attribute vec3 instanceStart;
		attribute vec3 instanceEnd;

		attribute vec3 instanceColorStart;
		attribute vec3 instanceColorEnd;

		#ifdef WORLD_UNITS

			varying vec4 worldPos;
			varying vec3 worldStart;
			varying vec3 worldEnd;

			#ifdef USE_DASH

				varying vec2 vUv;

			#endif

		#else

			varying vec2 vUv;

		#endif

		#ifdef USE_DASH

			uniform float dashScale;
			attribute float instanceDistanceStart;
			attribute float instanceDistanceEnd;
			varying float vLineDistance;

		#endif

		void trimSegment( const in vec4 start, inout vec4 end ) {

			// trim end segment so it terminates between the camera plane and the near plane

			// conservative estimate of the near plane
			float a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column
			float b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column
			float nearEstimate = - 0.5 * b / a;

			float alpha = ( nearEstimate - start.z ) / ( end.z - start.z );

			end.xyz = mix( start.xyz, end.xyz, alpha );

		}

		void main() {

			#ifdef USE_COLOR

				vColor.xyz = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;

			#endif

			#ifdef USE_DASH

				vLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;
				vUv = uv;

			#endif

			float aspect = resolution.x / resolution.y;

			// camera space
			vec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );
			vec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );

			#ifdef WORLD_UNITS

				worldStart = start.xyz;
				worldEnd = end.xyz;

			#else

				vUv = uv;

			#endif

			// special case for perspective projection, and segments that terminate either in, or behind, the camera plane
			// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space
			// but we need to perform ndc-space calculations in the shader, so we must address this issue directly
			// perhaps there is a more elegant solution -- WestLangley

			bool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column

			if ( perspective ) {

				if ( start.z < 0.0 && end.z >= 0.0 ) {

					trimSegment( start, end );

				} else if ( end.z < 0.0 && start.z >= 0.0 ) {

					trimSegment( end, start );

				}

			}

			// clip space
			vec4 clipStart = projectionMatrix * start;
			vec4 clipEnd = projectionMatrix * end;

			// ndc space
			vec3 ndcStart = clipStart.xyz / clipStart.w;
			vec3 ndcEnd = clipEnd.xyz / clipEnd.w;

			// direction
			vec2 dir = ndcEnd.xy - ndcStart.xy;

			// account for clip-space aspect ratio
			dir.x *= aspect;
			dir = normalize( dir );

			#ifdef WORLD_UNITS

				vec3 worldDir = normalize( end.xyz - start.xyz );
				vec3 tmpFwd = normalize( mix( start.xyz, end.xyz, 0.5 ) );
				vec3 worldUp = normalize( cross( worldDir, tmpFwd ) );
				vec3 worldFwd = cross( worldDir, worldUp );
				worldPos = position.y < 0.5 ? start: end;

				// height offset
				float hw = linewidth * 0.5;
				worldPos.xyz += position.x < 0.0 ? hw * worldUp : - hw * worldUp;

				// don't extend the line if we're rendering dashes because we
				// won't be rendering the endcaps
				#ifndef USE_DASH

					// cap extension
					worldPos.xyz += position.y < 0.5 ? - hw * worldDir : hw * worldDir;

					// add width to the box
					worldPos.xyz += worldFwd * hw;

					// endcaps
					if ( position.y > 1.0 || position.y < 0.0 ) {

						worldPos.xyz -= worldFwd * 2.0 * hw;

					}

				#endif

				// project the worldpos
				vec4 clip = projectionMatrix * worldPos;

				// shift the depth of the projected points so the line
				// segments overlap neatly
				vec3 clipPose = ( position.y < 0.5 ) ? ndcStart : ndcEnd;
				clip.z = clipPose.z * clip.w;

			#else

				vec2 offset = vec2( dir.y, - dir.x );
				// undo aspect ratio adjustment
				dir.x /= aspect;
				offset.x /= aspect;

				// sign flip
				if ( position.x < 0.0 ) offset *= - 1.0;

				// endcaps
				if ( position.y < 0.0 ) {

					offset += - dir;

				} else if ( position.y > 1.0 ) {

					offset += dir;

				}

				// adjust for linewidth
				offset *= linewidth;

				// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...
				offset /= resolution.y;

				// select end
				vec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;

				// back to clip space
				offset *= clip.w;

				clip.xy += offset;

			#endif

			gl_Position = clip;

			vec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation

			#include <logdepthbuf_vertex>
			#include <clipping_planes_vertex>
			#include <fog_vertex>

		}
		`,fragmentShader:`
		uniform vec3 diffuse;
		uniform float opacity;
		uniform float linewidth;

		#ifdef USE_DASH

			uniform float dashOffset;
			uniform float dashSize;
			uniform float gapSize;

		#endif

		varying float vLineDistance;

		#ifdef WORLD_UNITS

			varying vec4 worldPos;
			varying vec3 worldStart;
			varying vec3 worldEnd;

			#ifdef USE_DASH

				varying vec2 vUv;

			#endif

		#else

			varying vec2 vUv;

		#endif

		#include <common>
		#include <color_pars_fragment>
		#include <fog_pars_fragment>
		#include <logdepthbuf_pars_fragment>
		#include <clipping_planes_pars_fragment>

		vec2 closestLineToLine(vec3 p1, vec3 p2, vec3 p3, vec3 p4) {

			float mua;
			float mub;

			vec3 p13 = p1 - p3;
			vec3 p43 = p4 - p3;

			vec3 p21 = p2 - p1;

			float d1343 = dot( p13, p43 );
			float d4321 = dot( p43, p21 );
			float d1321 = dot( p13, p21 );
			float d4343 = dot( p43, p43 );
			float d2121 = dot( p21, p21 );

			float denom = d2121 * d4343 - d4321 * d4321;

			float numer = d1343 * d4321 - d1321 * d4343;

			mua = numer / denom;
			mua = clamp( mua, 0.0, 1.0 );
			mub = ( d1343 + d4321 * ( mua ) ) / d4343;
			mub = clamp( mub, 0.0, 1.0 );

			return vec2( mua, mub );

		}

		void main() {

			#include <clipping_planes_fragment>

			#ifdef USE_DASH

				if ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps

				if ( mod( vLineDistance + dashOffset, dashSize + gapSize ) > dashSize ) discard; // todo - FIX

			#endif

			float alpha = opacity;

			#ifdef WORLD_UNITS

				// Find the closest points on the view ray and the line segment
				vec3 rayEnd = normalize( worldPos.xyz ) * 1e5;
				vec3 lineDir = worldEnd - worldStart;
				vec2 params = closestLineToLine( worldStart, worldEnd, vec3( 0.0, 0.0, 0.0 ), rayEnd );

				vec3 p1 = worldStart + lineDir * params.x;
				vec3 p2 = rayEnd * params.y;
				vec3 delta = p1 - p2;
				float len = length( delta );
				float norm = len / linewidth;

				#ifndef USE_DASH

					#ifdef USE_ALPHA_TO_COVERAGE

						float dnorm = fwidth( norm );
						alpha = 1.0 - smoothstep( 0.5 - dnorm, 0.5 + dnorm, norm );

					#else

						if ( norm > 0.5 ) {

							discard;

						}

					#endif

				#endif

			#else

				#ifdef USE_ALPHA_TO_COVERAGE

					// artifacts appear on some hardware if a derivative is taken within a conditional
					float a = vUv.x;
					float b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;
					float len2 = a * a + b * b;
					float dlen = fwidth( len2 );

					if ( abs( vUv.y ) > 1.0 ) {

						alpha = 1.0 - smoothstep( 1.0 - dlen, 1.0 + dlen, len2 );

					}

				#else

					if ( abs( vUv.y ) > 1.0 ) {

						float a = vUv.x;
						float b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;
						float len2 = a * a + b * b;

						if ( len2 > 1.0 ) discard;

					}

				#endif

			#endif

			vec4 diffuseColor = vec4( diffuse, alpha );

			#include <logdepthbuf_fragment>
			#include <color_fragment>

			gl_FragColor = vec4( diffuseColor.rgb, alpha );

			#include <tonemapping_fragment>
			#include <colorspace_fragment>
			#include <fog_fragment>
			#include <premultiplied_alpha_fragment>

		}
		`};class Pa extends Mt{constructor(e){super({type:"LineMaterial",uniforms:Vc.clone(Si.line.uniforms),vertexShader:Si.line.vertexShader,fragmentShader:Si.line.fragmentShader,clipping:!0}),this.isLineMaterial=!0,this.setValues(e)}get color(){return this.uniforms.diffuse.value}set color(e){this.uniforms.diffuse.value=e}get worldUnits(){return"WORLD_UNITS"in this.defines}set worldUnits(e){e===!0?this.defines.WORLD_UNITS="":delete this.defines.WORLD_UNITS}get linewidth(){return this.uniforms.linewidth.value}set linewidth(e){this.uniforms.linewidth&&(this.uniforms.linewidth.value=e)}get dashed(){return"USE_DASH"in this.defines}set dashed(e){e===!0!==this.dashed&&(this.needsUpdate=!0),e===!0?this.defines.USE_DASH="":delete this.defines.USE_DASH}get dashScale(){return this.uniforms.dashScale.value}set dashScale(e){this.uniforms.dashScale.value=e}get dashSize(){return this.uniforms.dashSize.value}set dashSize(e){this.uniforms.dashSize.value=e}get dashOffset(){return this.uniforms.dashOffset.value}set dashOffset(e){this.uniforms.dashOffset.value=e}get gapSize(){return this.uniforms.gapSize.value}set gapSize(e){this.uniforms.gapSize.value=e}get opacity(){return this.uniforms.opacity.value}set opacity(e){this.uniforms&&(this.uniforms.opacity.value=e)}get resolution(){return this.uniforms.resolution.value}set resolution(e){this.uniforms.resolution.value.copy(e)}get alphaToCoverage(){return"USE_ALPHA_TO_COVERAGE"in this.defines}set alphaToCoverage(e){this.defines&&(e===!0!==this.alphaToCoverage&&(this.needsUpdate=!0),e===!0?(this.defines.USE_ALPHA_TO_COVERAGE="",this.extensions.derivatives=!0):(delete this.defines.USE_ALPHA_TO_COVERAGE,this.extensions.derivatives=!1))}}const Pg=new F,Lg=new F,Jt=new bt,$t=new bt,_n=new bt,Tu=new F,vu=new fe,ii=new Ot,Og=new F,sc=new je,rc=new vi,Tn=new bt;let Sn,nr;function Ng(r,e,t){return Tn.set(0,0,-e,1).applyMatrix4(r.projectionMatrix),Tn.multiplyScalar(1/Tn.w),Tn.x=nr/t.width,Tn.y=nr/t.height,Tn.applyMatrix4(r.projectionMatrixInverse),Tn.multiplyScalar(1/Tn.w),Math.abs(Math.max(Tn.x,Tn.y))}function c1(r,e){const t=r.matrixWorld,i=r.geometry,n=i.attributes.instanceStart,s=i.attributes.instanceEnd,o=Math.min(i.instanceCount,n.count);for(let a=0,l=o;a<l;a++){ii.start.fromBufferAttribute(n,a),ii.end.fromBufferAttribute(s,a),ii.applyMatrix4(t);const c=new F,h=new F;Sn.distanceSqToSegment(ii.start,ii.end,h,c),h.distanceTo(c)<nr*.5&&e.push({point:h,pointOnLine:c,distance:Sn.origin.distanceTo(h),object:r,face:null,faceIndex:a,uv:null,uv1:null})}}function h1(r,e,t){const i=e.projectionMatrix,n=r.material.resolution,s=r.matrixWorld,o=r.geometry,a=o.attributes.instanceStart,l=o.attributes.instanceEnd,c=Math.min(o.instanceCount,a.count),h=-e.near;Sn.at(1,_n),_n.w=1,_n.applyMatrix4(e.matrixWorldInverse),_n.applyMatrix4(i),_n.multiplyScalar(1/_n.w),_n.x*=n.x/2,_n.y*=n.y/2,_n.z=0,Tu.copy(_n),vu.multiplyMatrices(e.matrixWorldInverse,s);for(let d=0,u=c;d<u;d++){if(Jt.fromBufferAttribute(a,d),$t.fromBufferAttribute(l,d),Jt.w=1,$t.w=1,Jt.applyMatrix4(vu),$t.applyMatrix4(vu),Jt.z>h&&$t.z>h)continue;if(Jt.z>h){const p=Jt.z-$t.z,_=(Jt.z-h)/p;Jt.lerp($t,_)}else if($t.z>h){const p=$t.z-Jt.z,_=($t.z-h)/p;$t.lerp(Jt,_)}Jt.applyMatrix4(i),$t.applyMatrix4(i),Jt.multiplyScalar(1/Jt.w),$t.multiplyScalar(1/$t.w),Jt.x*=n.x/2,Jt.y*=n.y/2,$t.x*=n.x/2,$t.y*=n.y/2,ii.start.copy(Jt),ii.start.z=0,ii.end.copy($t),ii.end.z=0;const f=ii.closestPointToPointParameter(Tu,!0);ii.at(f,Og);const m=sr.lerp(Jt.z,$t.z,f),E=m>=-1&&m<=1,g=Tu.distanceTo(Og)<nr*.5;if(E&&g){ii.start.fromBufferAttribute(a,d),ii.end.fromBufferAttribute(l,d),ii.start.applyMatrix4(s),ii.end.applyMatrix4(s);const p=new F,_=new F;Sn.distanceSqToSegment(ii.start,ii.end,_,p),t.push({point:_,pointOnLine:p,distance:Sn.origin.distanceTo(_),object:r,face:null,faceIndex:d,uv:null,uv1:null})}}}class u1 extends ge{constructor(e=new qI,t=new Pa({color:Math.random()*16777215})){super(e,t),this.isLineSegments2=!0,this.type="LineSegments2"}computeLineDistances(){const e=this.geometry,t=e.attributes.instanceStart,i=e.attributes.instanceEnd,n=new Float32Array(2*t.count);for(let o=0,a=0,l=t.count;o<l;o++,a+=2)Pg.fromBufferAttribute(t,o),Lg.fromBufferAttribute(i,o),n[a]=a===0?0:n[a-1],n[a+1]=n[a]+Pg.distanceTo(Lg);const s=new Ou(n,2,1);return e.setAttribute("instanceDistanceStart",new vs(s,1,0)),e.setAttribute("instanceDistanceEnd",new vs(s,1,1)),this}raycast(e,t){const i=this.material.worldUnits,n=e.camera;n===null&&!i&&console.error('LineSegments2: "Raycaster.camera" needs to be set in order to raycast against LineSegments2 while worldUnits is set to false.');const s=e.params.Line2!==void 0&&e.params.Line2.threshold||0;Sn=e.ray;const o=this.matrixWorld,a=this.geometry,l=this.material;nr=l.linewidth+s,a.boundingSphere===null&&a.computeBoundingSphere(),rc.copy(a.boundingSphere).applyMatrix4(o);let c;if(i)c=nr*.5;else{const d=Math.max(n.near,rc.distanceToPoint(Sn.origin));c=Ng(n,d,l.resolution)}if(rc.radius+=c,Sn.intersectsSphere(rc)===!1)return;a.boundingBox===null&&a.computeBoundingBox(),sc.copy(a.boundingBox).applyMatrix4(o);let h;if(i)h=nr*.5;else{const d=Math.max(n.near,sc.distanceToPoint(Sn.origin));h=Ng(n,d,l.resolution)}sc.expandByScalar(h),Sn.intersectsBox(sc)!==!1&&(i?c1(this,t):h1(this,n,t))}}class Lc extends qI{constructor(){super(),this.isLineGeometry=!0,this.type="LineGeometry"}setPositions(e){const t=e.length-3,i=new Float32Array(2*t);for(let n=0;n<t;n+=3)i[2*n]=e[n],i[2*n+1]=e[n+1],i[2*n+2]=e[n+2],i[2*n+3]=e[n+3],i[2*n+4]=e[n+4],i[2*n+5]=e[n+5];return super.setPositions(i),this}setColors(e){const t=e.length-3,i=new Float32Array(2*t);for(let n=0;n<t;n+=3)i[2*n]=e[n],i[2*n+1]=e[n+1],i[2*n+2]=e[n+2],i[2*n+3]=e[n+3],i[2*n+4]=e[n+4],i[2*n+5]=e[n+5];return super.setColors(i),this}fromLine(e){const t=e.geometry;return this.setPositions(t.attributes.position.array),this}}class KI extends u1{constructor(e=new Lc,t=new Pa({color:Math.random()*16777215})){super(e,t),this.isLine2=!0,this.type="Line2"}}const QI=class JI{constructor(e,t){D(this,"scene"),D(this,"onSelect",new oe),D(this,"type"),D(this,"selectCurve"),D(this,"selectPoints"),D(this,"hoverCurve"),D(this,"hoverPoints"),D(this,"caster",new Hc),this.scene=e,this.type=t,this.hoverCurve=this.newCurve(.003,4473924,!1),this.hoverPoints=this.newPoints(5,4473924),this.selectCurve=this.newCurve(.005,16777215,!0),this.selectPoints=this.newPoints(7,16777215)}dispose(){this.selectCurve&&this.scene.remove(this.selectCurve),this.selectCurve.material.dispose(),this.selectCurve.geometry.dispose(),this.selectCurve=null,this.hoverCurve.material.dispose(),this.hoverCurve.geometry.dispose(),this.hoverCurve=null,this.hoverPoints.material.dispose(),this.hoverPoints.geometry.dispose(),this.selectPoints.material.dispose(),this.selectPoints.geometry.dispose(),this.scene=null}castRay(e,t,i,n){const s=new Re,o=i.getBoundingClientRect();s.x=(e.clientX-o.left)/o.width*2-1,s.y=-((e.clientY-o.top)/o.height)*2+1,this.caster.setFromCamera(s,t);const a=this.caster.intersectObjects(n);return a.length?a[0]:null}select(e){this.highlight(e,this.selectCurve,this.selectPoints,!0),this.onSelect.trigger(e)}unSelect(){this.selectCurve.removeFromParent(),this.selectPoints.removeFromParent()}hover(e){this.highlight(e,this.hoverCurve,this.hoverPoints,!1)}unHover(){this.hoverCurve.removeFromParent(),this.hoverPoints.removeFromParent()}setResolution({x:e,y:t}){this.selectCurve.material.resolution.set(e/t,1),this.hoverCurve.material.resolution.set(e/t,1)}highlight(e,t,i,n){const{alignment:s}=e.curve;this.scene.add(t),this.scene.add(i);const o=[],a=[],l=[];for(const u of s[this.type]){const f=u.mesh.geometry.attributes.position;for(const p of f.array)o.push(p);if(n){let p;if(this.type==="absolute"){const{horizontal:T}=u.alignment;p=T[u.index].data.TYPE}else p=u.data.TYPE;const _=JI.settings.colors[p]||[1,1,1];for(let T=0;T<f.count;T++)a.push(..._)}const[m,E,g]=f.array;l.push(new F(m,E,g))}const c=o[o.length-3],h=o[o.length-2],d=o[o.length-1];l.push(new F(c,h,d)),o.length/3>t.geometry.attributes.position.count&&(t.geometry.dispose(),t.geometry=new Lc),t.geometry.setPositions(o),n&&t.geometry.setColors(a),i.geometry.setFromPoints(l)}newCurve(e,t,i){const n=new Lc,s=new Pa({color:t,linewidth:e,vertexColors:i,worldUnits:!1,depthTest:!1}),o=new KI(n,s);return this.scene.add(o),o}newPoints(e,t){const i=new Ve,n=new ot(new Float32Array,3);i.setAttribute("position",n);const s=new IE({size:e,color:t,sizeAttenuation:!1,depthTest:!1}),o=new yS(i,s);return o.frustumCulled=!1,this.scene.add(o),o}};D(QI,"settings",{colors:{LINE:[213/255,0/255,255/255],CIRCULARARC:[0/255,46,255/255],CLOTHOID:[0/255,255/255,0/255],PARABOLICARC:[0/255,255/255,72/255],CONSTANTGRADIENT:[213/255,0/255,255/255]}});let $I=QI;class d1 extends St{constructor(e=document.createElement("div")){super(),this.isCSS2DObject=!0,this.element=e,this.element.style.position="absolute",this.element.style.userSelect="none",this.element.setAttribute("draggable",!1),this.center=new Re(.5,.5),this.addEventListener("removed",function(){this.traverse(function(t){t.element instanceof Element&&t.element.parentNode!==null&&t.element.parentNode.removeChild(t.element)})})}copy(e,t){return super.copy(e,t),this.element=e.element.cloneNode(!0),this.center=e.center,this}}const to=new F,Dg=new fe,Ug=new fe,Bg=new F,zg=new F;class f1{constructor(e={}){const t=this;let i,n,s,o;const a={objects:new WeakMap},l=e.element!==void 0?e.element:document.createElement("div");l.style.overflow="hidden",this.domElement=l,this.getSize=function(){return{width:i,height:n}},this.render=function(f,m){f.matrixWorldAutoUpdate===!0&&f.updateMatrixWorld(),m.parent===null&&m.matrixWorldAutoUpdate===!0&&m.updateMatrixWorld(),Dg.copy(m.matrixWorldInverse),Ug.multiplyMatrices(m.projectionMatrix,Dg),c(f,f,m),u(f)},this.setSize=function(f,m){i=f,n=m,s=i/2,o=n/2,l.style.width=f+"px",l.style.height=m+"px"};function c(f,m,E){if(f.isCSS2DObject){to.setFromMatrixPosition(f.matrixWorld),to.applyMatrix4(Ug);const g=f.visible===!0&&to.z>=-1&&to.z<=1&&f.layers.test(E.layers)===!0;if(f.element.style.display=g===!0?"":"none",g===!0){f.onBeforeRender(t,m,E);const _=f.element;_.style.transform="translate("+-100*f.center.x+"%,"+-100*f.center.y+"%)translate("+(to.x*s+s)+"px,"+(-to.y*o+o)+"px)",_.parentNode!==l&&l.appendChild(_),f.onAfterRender(t,m,E)}const p={distanceToCameraSquared:h(E,f)};a.objects.set(f,p)}for(let g=0,p=f.children.length;g<p;g++)c(f.children[g],m,E)}function h(f,m){return Bg.setFromMatrixPosition(f.matrixWorld),zg.setFromMatrixPosition(m.matrixWorld),Bg.distanceToSquared(zg)}function d(f){const m=[];return f.traverse(function(E){E.isCSS2DObject&&m.push(E)}),m}function u(f){const m=d(f).sort(function(g,p){if(g.renderOrder!==p.renderOrder)return p.renderOrder-g.renderOrder;const _=a.objects.get(g).distanceToCameraSquared,T=a.objects.get(p).distanceToCameraSquared;return _-T}),E=m.length;for(let g=0,p=m.length;g<p;g++)m[g].element.style.zIndex=E-g}}}class wi{constructor(e,t,i){D(this,"three"),D(this,"world"),D(this,"onDisposed",new oe),this.world=e;let n;t?n=t:(n=document.createElement("div"),n.style.width="15px",n.style.height="15px",n.style.border="5px solid red"),this.three=new d1(n),(i||e.scene.three).add(this.three),this.visible=!0}set visible(e){this.three.visible=e}get visible(){return this.three.visible}toggleVisibility(){this.visible=!this.visible}dispose(){this.three.removeFromParent(),this.three.element.remove(),this.onDisposed.trigger(),this.onDisposed.reset()}}class p1 extends HA{constructor(e,t,i){super(e,t,i),D(this,"three2D",new f1),this.onAfterUpdate.add(()=>{if(this.onBeforeUpdate.trigger(this),!this.enabled||!this.currentWorld)return;const n=this.currentWorld.scene.three,s=this.currentWorld.camera.three;n instanceof dr&&this.three2D.render(n,s)}),this.onDisposed.add(()=>{this.three2D.domElement.remove()}),this.onResize.add(({x:n,y:s})=>{this.three2D.setSize(n,s)}),this.setupHtmlRenderer(),this.resize()}setupHtmlRenderer(){this.three2D.domElement.style.position="absolute",this.three2D.domElement.style.top="0px",this.three2D.domElement.style.pointerEvents="none",this.container&&this.container.appendChild(this.three2D.domElement)}}const e0=class t0 extends We{constructor(e){super(e),D(this,"onDisposed",new oe),D(this,"enabled",!0),D(this,"threshold",50),D(this,"autoCluster",!0),D(this,"list",new Map),D(this,"clusterLabels",new Set),D(this,"currentKeys",new Set),D(this,"_color","white"),D(this,"_markerKey",0),D(this,"_clusterKey",0),D(this,"_worldEvents",new Map),D(this,"_setupWorlds",new Set),e.add(t0.uuid,this)}get color(){return this._color}set color(e){this._color=e;for(const[t,i]of this.list)for(const[n,s]of i)s.label.three.element.style.color=e}create(e,t,i,n=!1){this.setupEvents(e,!0);const s=this._markerKey.toString(),o=this.getWorldMarkerList(e);if(o.has(s))return;const a=document.createElement("span");a.innerHTML=t,a.style.color=this._color;const l=new wi(e,a);return l.three.position.copy(i),o.set(s,{key:s,label:l,merged:!1,static:n}),this._markerKey++,s}delete(e){for(const[t,i]of this.list){const n=i.get(e);n&&n.label.dispose(),i.delete(e)}}getWorldMarkerList(e){return this.list.has(e.uuid)||this.list.set(e.uuid,new Map),this.list.get(e.uuid)}dispose(e){for(const[t,i]of this.list){const n=[...i.keys()];for(const s of n){const o=i.get(s);e&&o.type!==e||(o.label.dispose(),i.delete(s))}}if(!e){this.list.clear(),this._markerKey=0;for(const t of this.clusterLabels)t.label.dispose();this.clusterLabels.clear(),this._clusterKey=0,this.currentKeys.clear()}this.onDisposed.trigger()}setupEvents(e,t){if(t&&this._setupWorlds.has(e.uuid)||!e.camera.hasCameraControls())return;const i=this.getWorldEvent(e);e.camera.controls.removeEventListener("sleep",i),e.camera.controls.removeEventListener("rest",i),t&&(e.camera.controls.addEventListener("sleep",i),e.camera.controls.addEventListener("rest",i))}cluster(e){if(!this.autoCluster)return;this.resetMarkers();const t=this.list.get(e.uuid);if(t){for(const[i,n]of t)if(!n.merged&&!n.static){this.currentKeys.clear();for(const[s,o]of t)o.static||n.key!==o.key&&!o.merged&&this.distance(n.label,o.label)<this.threshold&&(this.currentKeys.add(o.key),o.merged=!0);if(this.currentKeys.size>0){this.currentKeys.add(n.key),n.merged=!0;const s=Array.from(this.currentKeys),o=this.getAveragePositionFromLabels(s),a=new wi(n.label.world,this.createClusterElement(this._clusterKey.toString())),{element:l}=a.three;l.textContent=s.length.toString(),a.three.position.copy(o),this.clusterLabels.add({key:this._clusterKey.toString(),markerKeys:s,label:a}),this._clusterKey++}}this.removeMergeMarkers(e)}}getWorldEvent(e){if(!this._worldEvents.has(e.uuid)){const t=()=>{this.cluster(e)};this._worldEvents.set(e.uuid,t)}return this._worldEvents.get(e.uuid)}resetMarkers(){for(const[e,t]of this.list)for(const[i,n]of t)n.merged=!1;for(const e of this.clusterLabels)e.label.dispose();this.clusterLabels.clear(),this._clusterKey=0}removeMergeMarkers(e){const t=this.list.get(e.uuid);if(t){for(const[i,n]of t)n.merged?n.label.dispose():n.label.world.scene.three.add(n.label.three);for(const i of this.clusterLabels)if(i.markerKeys.length===1){for(const[n,s]of this.list){const o=s.get(i.markerKeys[0]);o&&(o.label.world.scene.three.add(o.label.three),o.merged=!1)}i.label.dispose(),this.clusterLabels.delete(i)}}}getAveragePositionFromLabels(e){const t=e.map(i=>{for(const[n,s]of this.list){const o=s.get(i);if(o)return o.label.three.position}return new F});return t.reduce((i,n)=>i.add(n),new F).divideScalar(t.length)}createClusterElement(e){const t=document.createElement("div");return t.textContent=e,t.style.color="#000000",t.style.background="#FFFFFF",t.style.fontSize="1.2rem",t.style.fontWeight="500",t.style.pointerEvents="auto",t.style.borderRadius="50%",t.style.padding="5px 11px",t.style.textAlign="center",t.style.cursor="pointer",t.addEventListener("pointerdown",()=>{this.navigateToCluster(e)}),t.addEventListener("pointerover",()=>{t.style.background="#BCF124"}),t.addEventListener("pointerout",()=>{t.style.background="#FFFFFF"}),t}getScreenPosition(e){const t=new F;if(!e.world.renderer)throw new Error("Renderer not found!");const i=e.three.position.clone();i.project(e.world.camera.three);const n=e.world.renderer.getSize();return t.x=i.x*n.x/2+n.x/2,t.y=-(i.y*n.y/2)+n.y/2,t}distance(e,t){const i=this.getScreenPosition(e),n=this.getScreenPosition(t),s=i.x-n.x,o=i.y-n.y,a=Math.sqrt(s*s+o*o)*.5;return a===0?this.threshold+1:a}navigateToCluster(e){const t=[],i=Array.from(this.clusterLabels).find(c=>c.key===e);if(!i)return;const n=i.label.world.camera;if(!n.hasCameraControls()){console.warn("Zoom to clusters only supported with Camera Controls!");return}for(const c of i.markerKeys)for(const[h,d]of this.list){const u=d.get(c);if(u){const{x:f,y:m,z:E}=u.label.three.position;t.push(f,m,E)}}i.label.dispose(),this.clusterLabels.delete(i);const s=new Ve,o=new Float32Array(t),a=new ot(o,3);s.setAttribute("position",a);const l=new ge(s);l.geometry.computeBoundingSphere(),l.geometry.boundingSphere&&n.controls.fitToSphere(l,!0),s.dispose(),l.clear(),t.length=0}};D(e0,"uuid","4079eb91-79b0-4ede-bcf2-15b837129236");let Gs=e0;function m1(r){return r&&r.__esModule&&Object.prototype.hasOwnProperty.call(r,"default")?r.default:r}var _f={exports:{}};_f.exports=eh;_f.exports.default=eh;function eh(r,e,t){t=t||2;var i=e&&e.length,n=i?e[0]*t:r.length,s=i0(r,0,n,t,!0),o=[];if(!s||s.next===s.prev)return o;var a,l,c,h,d,u,f;if(i&&(s=T1(r,e,s,t)),r.length>80*t){a=c=r[0],l=h=r[1];for(var m=t;m<n;m+=t)d=r[m],u=r[m+1],d<a&&(a=d),u<l&&(l=u),d>c&&(c=d),u>h&&(h=u);f=Math.max(c-a,h-l),f=f!==0?32767/f:0}return wa(s,o,t,a,l,f,0),o}function i0(r,e,t,i,n){var s,o;if(n===Id(r,e,t,i)>0)for(s=e;s<t;s+=i)o=Vg(s,r[s],r[s+1],o);else for(s=t-i;s>=e;s-=i)o=Vg(s,r[s],r[s+1],o);return o&&th(o,o.next)&&(Ra(o),o=o.next),o}function cr(r,e){if(!r)return r;e||(e=r);var t=r,i;do if(i=!1,!t.steiner&&(th(t,t.next)||Lt(t.prev,t,t.next)===0)){if(Ra(t),t=e=t.prev,t===t.next)break;i=!0}else t=t.next;while(i||t!==e);return e}function wa(r,e,t,i,n,s,o){if(r){!o&&s&&S1(r,i,n,s);for(var a=r,l,c;r.prev!==r.next;){if(l=r.prev,c=r.next,s?E1(r,i,n,s):g1(r)){e.push(l.i/t|0),e.push(r.i/t|0),e.push(c.i/t|0),Ra(r),r=c.next,a=c.next;continue}if(r=c,r===a){o?o===1?(r=I1(cr(r),e,t),wa(r,e,t,i,n,s,2)):o===2&&_1(r,e,t,i,n,s):wa(cr(r),e,t,i,n,s,1);break}}}}function g1(r){var e=r.prev,t=r,i=r.next;if(Lt(e,t,i)>=0)return!1;for(var n=e.x,s=t.x,o=i.x,a=e.y,l=t.y,c=i.y,h=n<s?n<o?n:o:s<o?s:o,d=a<l?a<c?a:c:l<c?l:c,u=n>s?n>o?n:o:s>o?s:o,f=a>l?a>c?a:c:l>c?l:c,m=i.next;m!==e;){if(m.x>=h&&m.x<=u&&m.y>=d&&m.y<=f&&ho(n,a,s,l,o,c,m.x,m.y)&&Lt(m.prev,m,m.next)>=0)return!1;m=m.next}return!0}function E1(r,e,t,i){var n=r.prev,s=r,o=r.next;if(Lt(n,s,o)>=0)return!1;for(var a=n.x,l=s.x,c=o.x,h=n.y,d=s.y,u=o.y,f=a<l?a<c?a:c:l<c?l:c,m=h<d?h<u?h:u:d<u?d:u,E=a>l?a>c?a:c:l>c?l:c,g=h>d?h>u?h:u:d>u?d:u,p=gd(f,m,e,t,i),_=gd(E,g,e,t,i),T=r.prevZ,I=r.nextZ;T&&T.z>=p&&I&&I.z<=_;){if(T.x>=f&&T.x<=E&&T.y>=m&&T.y<=g&&T!==n&&T!==o&&ho(a,h,l,d,c,u,T.x,T.y)&&Lt(T.prev,T,T.next)>=0||(T=T.prevZ,I.x>=f&&I.x<=E&&I.y>=m&&I.y<=g&&I!==n&&I!==o&&ho(a,h,l,d,c,u,I.x,I.y)&&Lt(I.prev,I,I.next)>=0))return!1;I=I.nextZ}for(;T&&T.z>=p;){if(T.x>=f&&T.x<=E&&T.y>=m&&T.y<=g&&T!==n&&T!==o&&ho(a,h,l,d,c,u,T.x,T.y)&&Lt(T.prev,T,T.next)>=0)return!1;T=T.prevZ}for(;I&&I.z<=_;){if(I.x>=f&&I.x<=E&&I.y>=m&&I.y<=g&&I!==n&&I!==o&&ho(a,h,l,d,c,u,I.x,I.y)&&Lt(I.prev,I,I.next)>=0)return!1;I=I.nextZ}return!0}function I1(r,e,t){var i=r;do{var n=i.prev,s=i.next.next;!th(n,s)&&n0(n,i,i.next,s)&&Aa(n,s)&&Aa(s,n)&&(e.push(n.i/t|0),e.push(i.i/t|0),e.push(s.i/t|0),Ra(i),Ra(i.next),i=r=s),i=i.next}while(i!==r);return cr(i)}function _1(r,e,t,i,n,s){var o=r;do{for(var a=o.next.next;a!==o.prev;){if(o.i!==a.i&&A1(o,a)){var l=s0(o,a);o=cr(o,o.next),l=cr(l,l.next),wa(o,e,t,i,n,s,0),wa(l,e,t,i,n,s,0);return}a=a.next}o=o.next}while(o!==r)}function T1(r,e,t,i){var n=[],s,o,a,l,c;for(s=0,o=e.length;s<o;s++)a=e[s]*i,l=s<o-1?e[s+1]*i:r.length,c=i0(r,a,l,i,!1),c===c.next&&(c.steiner=!0),n.push(w1(c));for(n.sort(v1),s=0;s<n.length;s++)t=C1(n[s],t);return t}function v1(r,e){return r.x-e.x}function C1(r,e){var t=y1(r,e);if(!t)return e;var i=s0(t,r);return cr(i,i.next),cr(t,t.next)}function y1(r,e){var t=e,i=r.x,n=r.y,s=-1/0,o;do{if(n<=t.y&&n>=t.next.y&&t.next.y!==t.y){var a=t.x+(n-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(a<=i&&a>s&&(s=a,o=t.x<t.next.x?t:t.next,a===i))return o}t=t.next}while(t!==e);if(!o)return null;var l=o,c=o.x,h=o.y,d=1/0,u;t=o;do i>=t.x&&t.x>=c&&i!==t.x&&ho(n<h?i:s,n,c,h,n<h?s:i,n,t.x,t.y)&&(u=Math.abs(n-t.y)/(i-t.x),Aa(t,r)&&(u<d||u===d&&(t.x>o.x||t.x===o.x&&b1(o,t)))&&(o=t,d=u)),t=t.next;while(t!==l);return o}function b1(r,e){return Lt(r.prev,r,e.prev)<0&&Lt(e.next,r,r.next)<0}function S1(r,e,t,i){var n=r;do n.z===0&&(n.z=gd(n.x,n.y,e,t,i)),n.prevZ=n.prev,n.nextZ=n.next,n=n.next;while(n!==r);n.prevZ.nextZ=null,n.prevZ=null,x1(n)}function x1(r){var e,t,i,n,s,o,a,l,c=1;do{for(t=r,r=null,s=null,o=0;t;){for(o++,i=t,a=0,e=0;e<c&&(a++,i=i.nextZ,!!i);e++);for(l=c;a>0||l>0&&i;)a!==0&&(l===0||!i||t.z<=i.z)?(n=t,t=t.nextZ,a--):(n=i,i=i.nextZ,l--),s?s.nextZ=n:r=n,n.prevZ=s,s=n;t=i}s.nextZ=null,c*=2}while(o>1);return r}function gd(r,e,t,i,n){return r=(r-t)*n|0,e=(e-i)*n|0,r=(r|r<<8)&16711935,r=(r|r<<4)&252645135,r=(r|r<<2)&858993459,r=(r|r<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,r|e<<1}function w1(r){var e=r,t=r;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==r);return t}function ho(r,e,t,i,n,s,o,a){return(n-o)*(e-a)>=(r-o)*(s-a)&&(r-o)*(i-a)>=(t-o)*(e-a)&&(t-o)*(s-a)>=(n-o)*(i-a)}function A1(r,e){return r.next.i!==e.i&&r.prev.i!==e.i&&!R1(r,e)&&(Aa(r,e)&&Aa(e,r)&&M1(r,e)&&(Lt(r.prev,r,e.prev)||Lt(r,e.prev,e))||th(r,e)&&Lt(r.prev,r,r.next)>0&&Lt(e.prev,e,e.next)>0)}function Lt(r,e,t){return(e.y-r.y)*(t.x-e.x)-(e.x-r.x)*(t.y-e.y)}function th(r,e){return r.x===e.x&&r.y===e.y}function n0(r,e,t,i){var n=ac(Lt(r,e,t)),s=ac(Lt(r,e,i)),o=ac(Lt(t,i,r)),a=ac(Lt(t,i,e));return!!(n!==s&&o!==a||n===0&&oc(r,t,e)||s===0&&oc(r,i,e)||o===0&&oc(t,r,i)||a===0&&oc(t,e,i))}function oc(r,e,t){return e.x<=Math.max(r.x,t.x)&&e.x>=Math.min(r.x,t.x)&&e.y<=Math.max(r.y,t.y)&&e.y>=Math.min(r.y,t.y)}function ac(r){return r>0?1:r<0?-1:0}function R1(r,e){var t=r;do{if(t.i!==r.i&&t.next.i!==r.i&&t.i!==e.i&&t.next.i!==e.i&&n0(t,t.next,r,e))return!0;t=t.next}while(t!==r);return!1}function Aa(r,e){return Lt(r.prev,r,r.next)<0?Lt(r,e,r.next)>=0&&Lt(r,r.prev,e)>=0:Lt(r,e,r.prev)<0||Lt(r,r.next,e)<0}function M1(r,e){var t=r,i=!1,n=(r.x+e.x)/2,s=(r.y+e.y)/2;do t.y>s!=t.next.y>s&&t.next.y!==t.y&&n<(t.next.x-t.x)*(s-t.y)/(t.next.y-t.y)+t.x&&(i=!i),t=t.next;while(t!==r);return i}function s0(r,e){var t=new Ed(r.i,r.x,r.y),i=new Ed(e.i,e.x,e.y),n=r.next,s=e.prev;return r.next=e,e.prev=r,t.next=n,n.prev=t,i.next=t,t.prev=i,s.next=i,i.prev=s,i}function Vg(r,e,t,i){var n=new Ed(r,e,t);return i?(n.next=i.next,n.prev=i,i.next.prev=n,i.next=n):(n.prev=n,n.next=n),n}function Ra(r){r.next.prev=r.prev,r.prev.next=r.next,r.prevZ&&(r.prevZ.nextZ=r.nextZ),r.nextZ&&(r.nextZ.prevZ=r.prevZ)}function Ed(r,e,t){this.i=r,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}eh.deviation=function(r,e,t,i){var n=e&&e.length,s=n?e[0]*t:r.length,o=Math.abs(Id(r,0,s,t));if(n)for(var a=0,l=e.length;a<l;a++){var c=e[a]*t,h=a<l-1?e[a+1]*t:r.length;o-=Math.abs(Id(r,c,h,t))}var d=0;for(a=0;a<i.length;a+=3){var u=i[a]*t,f=i[a+1]*t,m=i[a+2]*t;d+=Math.abs((r[u]-r[m])*(r[f+1]-r[u+1])-(r[u]-r[f])*(r[m+1]-r[u+1]))}return o===0&&d===0?0:Math.abs((d-o)/o)};function Id(r,e,t,i){for(var n=0,s=e,o=t-i;s<t;s+=i)n+=(r[o]-r[s])*(r[s+1]+r[o+1]),o=s;return n}eh.flatten=function(r){for(var e=r[0][0].length,t={vertices:[],holes:[],dimensions:e},i=0,n=0;n<r.length;n++){for(var s=0;s<r[n].length;s++)for(var o=0;o<e;o++)t.vertices.push(r[n][s][o]);n>0&&(i+=r[n-1].length,t.holes.push(i))}return t};var F1=_f.exports;const P1=m1(F1),L1={name:"CopyShader",uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:`

		varying vec2 vUv;

		void main() {

			vUv = uv;
			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:`

		uniform float opacity;

		uniform sampler2D tDiffuse;

		varying vec2 vUv;

		void main() {

			vec4 texel = texture2D( tDiffuse, vUv );
			gl_FragColor = opacity * texel;


		}`};class Po{constructor(){this.isPass=!0,this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1}setSize(){}render(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}dispose(){}}const O1=new wn(-1,1,1,-1,0,1);class N1 extends Ve{constructor(){super(),this.setAttribute("position",new ht([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new ht([0,2,0,0,2,0],2))}}const D1=new N1;class r0{constructor(e){this._mesh=new ge(D1,e)}dispose(){this._mesh.geometry.dispose()}render(e){e.render(this._mesh,O1)}get material(){return this._mesh.material}set material(e){this._mesh.material=e}}class o0 extends Po{constructor(e,t){super(),this.textureID=t!==void 0?t:"tDiffuse",e instanceof Mt?(this.uniforms=e.uniforms,this.material=e):e&&(this.uniforms=Vc.clone(e.uniforms),this.material=new Mt({name:e.name!==void 0?e.name:"unspecified",defines:Object.assign({},e.defines),uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader})),this.fsQuad=new r0(this.material)}render(e,t,i){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=i.texture),this.fsQuad.material=this.material,this.renderToScreen?(e.setRenderTarget(null),this.fsQuad.render(e)):(e.setRenderTarget(t),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),this.fsQuad.render(e))}dispose(){this.material.dispose(),this.fsQuad.dispose()}}class kg extends Po{constructor(e,t){super(),this.scene=e,this.camera=t,this.clear=!0,this.needsSwap=!1,this.inverse=!1}render(e,t,i){const n=e.getContext(),s=e.state;s.buffers.color.setMask(!1),s.buffers.depth.setMask(!1),s.buffers.color.setLocked(!0),s.buffers.depth.setLocked(!0);let o,a;this.inverse?(o=0,a=1):(o=1,a=0),s.buffers.stencil.setTest(!0),s.buffers.stencil.setOp(n.REPLACE,n.REPLACE,n.REPLACE),s.buffers.stencil.setFunc(n.ALWAYS,o,4294967295),s.buffers.stencil.setClear(a),s.buffers.stencil.setLocked(!0),e.setRenderTarget(i),this.clear&&e.clear(),e.render(this.scene,this.camera),e.setRenderTarget(t),this.clear&&e.clear(),e.render(this.scene,this.camera),s.buffers.color.setLocked(!1),s.buffers.depth.setLocked(!1),s.buffers.color.setMask(!0),s.buffers.depth.setMask(!0),s.buffers.stencil.setLocked(!1),s.buffers.stencil.setFunc(n.EQUAL,1,4294967295),s.buffers.stencil.setOp(n.KEEP,n.KEEP,n.KEEP),s.buffers.stencil.setLocked(!0)}}class U1 extends Po{constructor(){super(),this.needsSwap=!1}render(e){e.state.buffers.stencil.setLocked(!1),e.state.buffers.stencil.setTest(!1)}}class B1{constructor(e,t){if(this.renderer=e,this._pixelRatio=e.getPixelRatio(),t===void 0){const i=e.getSize(new Re);this._width=i.width,this._height=i.height,t=new Qt(this._width*this._pixelRatio,this._height*this._pixelRatio,{type:ws}),t.texture.name="EffectComposer.rt1"}else this._width=t.width,this._height=t.height;this.renderTarget1=t,this.renderTarget2=t.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,this.passes=[],this.copyPass=new o0(L1),this.copyPass.material.blending=Kn,this.clock=new yE}swapBuffers(){const e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e}addPass(e){this.passes.push(e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}insertPass(e,t){this.passes.splice(t,0,e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}removePass(e){const t=this.passes.indexOf(e);t!==-1&&this.passes.splice(t,1)}isLastEnabledPass(e){for(let t=e+1;t<this.passes.length;t++)if(this.passes[t].enabled)return!1;return!0}render(e){e===void 0&&(e=this.clock.getDelta());const t=this.renderer.getRenderTarget();let i=!1;for(let n=0,s=this.passes.length;n<s;n++){const o=this.passes[n];if(o.enabled!==!1){if(o.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(n),o.render(this.renderer,this.writeBuffer,this.readBuffer,e,i),o.needsSwap){if(i){const a=this.renderer.getContext(),l=this.renderer.state.buffers.stencil;l.setFunc(a.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,e),l.setFunc(a.EQUAL,1,4294967295)}this.swapBuffers()}kg!==void 0&&(o instanceof kg?i=!0:o instanceof U1&&(i=!1))}}this.renderer.setRenderTarget(t)}reset(e){if(e===void 0){const t=this.renderer.getSize(new Re);this._pixelRatio=this.renderer.getPixelRatio(),this._width=t.width,this._height=t.height,e=this.renderTarget1.clone(),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=e,this.renderTarget2=e.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2}setSize(e,t){this._width=e,this._height=t;const i=this._width*this._pixelRatio,n=this._height*this._pixelRatio;this.renderTarget1.setSize(i,n),this.renderTarget2.setSize(i,n);for(let s=0;s<this.passes.length;s++)this.passes[s].setSize(i,n)}setPixelRatio(e){this._pixelRatio=e,this.setSize(this._width,this._height)}dispose(){this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.copyPass.dispose()}}class z1 extends Po{constructor(e,t,i=null,n=null,s=null){super(),this.scene=e,this.camera=t,this.overrideMaterial=i,this.clearColor=n,this.clearAlpha=s,this.clear=!0,this.clearDepth=!1,this.needsSwap=!1,this._oldClearColor=new Fe}render(e,t,i){const n=e.autoClear;e.autoClear=!1;let s,o;this.overrideMaterial!==null&&(o=this.scene.overrideMaterial,this.scene.overrideMaterial=this.overrideMaterial),this.clearColor!==null&&(e.getClearColor(this._oldClearColor),e.setClearColor(this.clearColor)),this.clearAlpha!==null&&(s=e.getClearAlpha(),e.setClearAlpha(this.clearAlpha)),this.clearDepth==!0&&e.clearDepth(),e.setRenderTarget(this.renderToScreen?null:i),this.clear===!0&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),e.render(this.scene,this.camera),this.clearColor!==null&&e.setClearColor(this._oldClearColor),this.clearAlpha!==null&&e.setClearAlpha(s),this.overrideMaterial!==null&&(this.scene.overrideMaterial=o),e.autoClear=n}}const La=new Ve;La.setAttribute("position",new ot(new Float32Array([-1,-1,3,-1,-1,3]),2));La.setAttribute("uv",new ot(new Float32Array([0,0,2,0,0,2]),2));La.boundingSphere=new vi;La.computeBoundingSphere=function(){};const V1=new wn;class lc{constructor(e){this._mesh=new ge(La,e),this._mesh.frustumCulled=!1}render(e){e.render(this._mesh,V1)}get material(){return this._mesh.material}set material(e){this._mesh.material=e}dispose(){this._mesh.material.dispose(),this._mesh.geometry.dispose()}}const k1={uniforms:{sceneDiffuse:{value:null},sceneDepth:{value:null},sceneNormal:{value:null},projMat:{value:new fe},viewMat:{value:new fe},projViewMat:{value:new fe},projectionMatrixInv:{value:new fe},viewMatrixInv:{value:new fe},cameraPos:{value:new F},resolution:{value:new Re},time:{value:0},samples:{value:[]},samplesR:{value:[]},bluenoise:{value:null},distanceFalloff:{value:1},radius:{value:5},near:{value:.1},far:{value:1e3},logDepth:{value:!1},ortho:{value:!1},screenSpaceRadius:{value:!1}},vertexShader:`
varying vec2 vUv;
void main() {
  vUv = uv;
  gl_Position = vec4(position, 1);
}`,fragmentShader:`
    #define SAMPLES 16
    #define FSAMPLES 16.0
uniform sampler2D sceneDiffuse;
uniform sampler2D sceneNormal;
uniform highp sampler2D sceneDepth;
uniform mat4 projectionMatrixInv;
uniform mat4 viewMatrixInv;
uniform mat4 projMat;
uniform mat4 viewMat;
uniform mat4 projViewMat;
uniform vec3 cameraPos;
uniform vec2 resolution;
uniform float time;
uniform vec3[SAMPLES] samples;
uniform float[SAMPLES] samplesR;
uniform float radius;
uniform float distanceFalloff;
uniform float near;
uniform float far;
uniform bool logDepth;
uniform bool ortho;
uniform bool screenSpaceRadius;
uniform sampler2D bluenoise;
    varying vec2 vUv;
    highp float linearize_depth(highp float d, highp float zNear,highp float zFar)
    {
        return (zFar * zNear) / (zFar - d * (zFar - zNear));
    }
    highp float linearize_depth_ortho(highp float d, highp float nearZ, highp float farZ) {
      return nearZ + (farZ - nearZ) * d;
    }
    highp float linearize_depth_log(highp float d, highp float nearZ,highp float farZ) {
      float depth = pow(2.0, d * log2(farZ + 1.0)) - 1.0;
      float a = farZ / (farZ - nearZ);
      float b = farZ * nearZ / (nearZ - farZ);
      float linDepth = a + b / depth;
      return ortho ? linearize_depth_ortho(
        linDepth,
        nearZ,
        farZ
      ) :linearize_depth(linDepth, nearZ, farZ);
    }

    vec3 getWorldPosLog(vec3 posS) {
      vec2 uv = posS.xy;
      float z = posS.z;
      float nearZ =near;
      float farZ = far;
      float depth = pow(2.0, z * log2(farZ + 1.0)) - 1.0;
      float a = farZ / (farZ - nearZ);
      float b = farZ * nearZ / (nearZ - farZ);
      float linDepth = a + b / depth;
      vec4 clipVec = vec4(uv, linDepth, 1.0) * 2.0 - 1.0;
      vec4 wpos = viewMatrixInv * projectionMatrixInv * clipVec;
      return wpos.xyz / wpos.w;
    }
    vec3 getWorldPos(float depth, vec2 coord) {
      #ifdef LOGDEPTH
        return getWorldPosLog(vec3(coord, depth));
      #endif
      float z = depth * 2.0 - 1.0;
      vec4 clipSpacePosition = vec4(coord * 2.0 - 1.0, z, 1.0);
      vec4 viewSpacePosition = projectionMatrixInv * clipSpacePosition;
      // Perspective division
     vec4 worldSpacePosition = viewMatrixInv * viewSpacePosition;
     worldSpacePosition.xyz /= worldSpacePosition.w;
      return worldSpacePosition.xyz;
  }

  vec3 computeNormal(vec3 worldPos, vec2 vUv) {
    ivec2 p = ivec2(vUv * resolution);
    float c0 = texelFetch(sceneDepth, p, 0).x;
    float l2 = texelFetch(sceneDepth, p - ivec2(2, 0), 0).x;
    float l1 = texelFetch(sceneDepth, p - ivec2(1, 0), 0).x;
    float r1 = texelFetch(sceneDepth, p + ivec2(1, 0), 0).x;
    float r2 = texelFetch(sceneDepth, p + ivec2(2, 0), 0).x;
    float b2 = texelFetch(sceneDepth, p - ivec2(0, 2), 0).x;
    float b1 = texelFetch(sceneDepth, p - ivec2(0, 1), 0).x;
    float t1 = texelFetch(sceneDepth, p + ivec2(0, 1), 0).x;
    float t2 = texelFetch(sceneDepth, p + ivec2(0, 2), 0).x;

    float dl = abs((2.0 * l1 - l2) - c0);
    float dr = abs((2.0 * r1 - r2) - c0);
    float db = abs((2.0 * b1 - b2) - c0);
    float dt = abs((2.0 * t1 - t2) - c0);

    vec3 ce = getWorldPos(c0, vUv).xyz;

    vec3 dpdx = (dl < dr) ? ce - getWorldPos(l1, (vUv - vec2(1.0 / resolution.x, 0.0))).xyz
                          : -ce + getWorldPos(r1, (vUv + vec2(1.0 / resolution.x, 0.0))).xyz;
    vec3 dpdy = (db < dt) ? ce - getWorldPos(b1, (vUv - vec2(0.0, 1.0 / resolution.y))).xyz
                          : -ce + getWorldPos(t1, (vUv + vec2(0.0, 1.0 / resolution.y))).xyz;

    return normalize(cross(dpdx, dpdy));
}

void main() {
      vec4 diffuse = texture2D(sceneDiffuse, vUv);
      float depth = texture2D(sceneDepth, vUv).x;
      if (depth == 1.0) {
        gl_FragColor = vec4(vec3(1.0), 1.0);
        return;
      }
      vec3 worldPos = getWorldPos(depth, vUv);
    //  vec3 normal = texture2D(sceneNormal, vUv).rgb;//computeNormal(worldPos, vUv);
      #ifdef HALFRES
        vec3 normal = texture2D(sceneNormal, vUv).rgb;
      #else
        vec3 normal = computeNormal(worldPos, vUv);
      #endif
      vec4 noise = texture2D(bluenoise, gl_FragCoord.xy / 128.0);
      vec3 randomVec = normalize(noise.rgb * 2.0 - 1.0);
      vec3 tangent = normalize(randomVec - normal * dot(randomVec, normal));
      vec3 bitangent = cross(normal, tangent);
      mat3 tbn = mat3(tangent, bitangent, normal);
      float occluded = 0.0;
      float totalWeight = 0.0;
     /* float radiusScreen = distance(
        worldPos,
        getWorldPos(depth, vUv + 
          vec2(48.0, 0.0) / resolution)
      );/*vUv.x < 0.5 ? radius : min(distance(
        worldPos,
        getWorldPos(depth, vUv + 
          vec2(100.0, 0.0) / resolution)
      ), radius);
      float distanceFalloffScreen = radiusScreen * 0.2;*/
      float radiusToUse = screenSpaceRadius ? distance(
        worldPos,
        getWorldPos(depth, vUv +
          vec2(radius, 0.0) / resolution)
      ) : radius;
      float distanceFalloffToUse =screenSpaceRadius ?
          radiusToUse * distanceFalloff
      : distanceFalloff;
      float bias = (0.1 / near) * fwidth(distance(worldPos, cameraPos)) / radiusToUse;
      for(float i = 0.0; i < FSAMPLES; i++) {
        vec3 sampleDirection = 
        tbn * 
        samples[int(i)];
        ;
        float moveAmt = samplesR[int(mod(i + noise.a * FSAMPLES, FSAMPLES))];
        vec3 samplePos = worldPos + radiusToUse * moveAmt * sampleDirection;
        vec4 offset = projViewMat * vec4(samplePos, 1.0);
        offset.xyz /= offset.w;
        offset.xyz = offset.xyz * 0.5 + 0.5;
        float sampleDepth = textureLod(sceneDepth, offset.xy, 0.0).x;
        /*float distSample = logDepth ? linearize_depth_log(sampleDepth, near, far) 
         (ortho ?  linearize_depth_ortho(sampleDepth, near, far) : linearize_depth(sampleDepth, near, far));*/
        #ifdef LOGDEPTH
        float distSample = linearize_depth_log(sampleDepth, near, far);
        #else
        float distSample = ortho ? linearize_depth_ortho(sampleDepth, near, far) : linearize_depth(sampleDepth, near, far);
        #endif
        float distWorld = ortho ? linearize_depth_ortho(offset.z, near, far) : linearize_depth(offset.z, near, far);
        float rangeCheck = smoothstep(0.0, 1.0, distanceFalloffToUse / (abs(distSample - distWorld)));
        vec2 diff = gl_FragCoord.xy - ( offset.xy * resolution);
        float weight = dot(sampleDirection, normal);
          occluded += rangeCheck * weight * 
            (distSample + bias
               < distWorld ? 1.0 : 0.0) * (
          (dot(
            diff,
            diff
             
            ) < 1.0 || (sampleDepth == depth) || (
              offset.x < 0.0 || offset.x > 1.0 || offset.y < 0.0 || offset.y > 1.0
            ) ? 0.0 : 1.0)
          );
          totalWeight += weight;
      }
      float occ = clamp(1.0 - occluded / totalWeight, 0.0, 1.0);
      gl_FragColor = vec4(0.5 + 0.5 * normal, occ);
}`},G1={uniforms:{sceneDiffuse:{value:null},sceneDepth:{value:null},tDiffuse:{value:null},projMat:{value:new fe},viewMat:{value:new fe},projectionMatrixInv:{value:new fe},viewMatrixInv:{value:new fe},cameraPos:{value:new F},resolution:{value:new Re},color:{value:new F(0,0,0)},blueNoise:{value:null},downsampledDepth:{value:null},time:{value:0},intensity:{value:10},renderMode:{value:0},gammaCorrection:{value:!1},logDepth:{value:!1},ortho:{value:!1},near:{value:.1},far:{value:1e3},screenSpaceRadius:{value:!1},radius:{value:0},distanceFalloff:{value:1}},vertexShader:`
		varying vec2 vUv;
		void main() {
			vUv = uv;
			gl_Position = vec4(position, 1);
		}`,fragmentShader:`
		uniform sampler2D sceneDiffuse;
    uniform sampler2D sceneDepth;
    uniform sampler2D downsampledDepth;
    uniform sampler2D tDiffuse;
    uniform sampler2D blueNoise;
    uniform vec2 resolution;
    uniform vec3 color;
    uniform mat4 projectionMatrixInv;
    uniform mat4 viewMatrixInv;
    uniform float intensity;
    uniform float renderMode;
    uniform float near;
    uniform float far;
    uniform bool gammaCorrection;
    uniform bool logDepth;
    uniform bool ortho;
    uniform bool screenSpaceRadius;
    uniform float radius;
    uniform float distanceFalloff;
    varying vec2 vUv;
    highp float linearize_depth(highp float d, highp float zNear,highp float zFar)
    {
        return (zFar * zNear) / (zFar - d * (zFar - zNear));
    }
    highp float linearize_depth_ortho(highp float d, highp float nearZ, highp float farZ) {
      return nearZ + (farZ - nearZ) * d;
    }
    highp float linearize_depth_log(highp float d, highp float nearZ,highp float farZ) {
      float depth = pow(2.0, d * log2(farZ + 1.0)) - 1.0;
      float a = farZ / (farZ - nearZ);
      float b = farZ * nearZ / (nearZ - farZ);
      float linDepth = a + b / depth;
      return ortho ? linearize_depth_ortho(
        linDepth,
        nearZ,
        farZ
      ) :linearize_depth(linDepth, nearZ, farZ);
    }
    vec3 getWorldPosLog(vec3 posS) {
        vec2 uv = posS.xy;
        float z = posS.z;
        float nearZ =near;
        float farZ = far;
        float depth = pow(2.0, z * log2(farZ + 1.0)) - 1.0;
        float a = farZ / (farZ - nearZ);
        float b = farZ * nearZ / (nearZ - farZ);
        float linDepth = a + b / depth;
        vec4 clipVec = vec4(uv, linDepth, 1.0) * 2.0 - 1.0;
        vec4 wpos = viewMatrixInv * projectionMatrixInv * clipVec;
        return wpos.xyz / wpos.w;
      }
      vec3 getWorldPos(float depth, vec2 coord) {
       // if (logDepth) {
        #ifdef LOGDEPTH
          return getWorldPosLog(vec3(coord, depth));
        #endif
      //  }
        float z = depth * 2.0 - 1.0;
        vec4 clipSpacePosition = vec4(coord * 2.0 - 1.0, z, 1.0);
        vec4 viewSpacePosition = projectionMatrixInv * clipSpacePosition;
        // Perspective division
       vec4 worldSpacePosition = viewMatrixInv * viewSpacePosition;
       worldSpacePosition.xyz /= worldSpacePosition.w;
        return worldSpacePosition.xyz;
    }
  
    vec3 computeNormal(vec3 worldPos, vec2 vUv) {
      ivec2 p = ivec2(vUv * resolution);
      float c0 = texelFetch(sceneDepth, p, 0).x;
      float l2 = texelFetch(sceneDepth, p - ivec2(2, 0), 0).x;
      float l1 = texelFetch(sceneDepth, p - ivec2(1, 0), 0).x;
      float r1 = texelFetch(sceneDepth, p + ivec2(1, 0), 0).x;
      float r2 = texelFetch(sceneDepth, p + ivec2(2, 0), 0).x;
      float b2 = texelFetch(sceneDepth, p - ivec2(0, 2), 0).x;
      float b1 = texelFetch(sceneDepth, p - ivec2(0, 1), 0).x;
      float t1 = texelFetch(sceneDepth, p + ivec2(0, 1), 0).x;
      float t2 = texelFetch(sceneDepth, p + ivec2(0, 2), 0).x;
  
      float dl = abs((2.0 * l1 - l2) - c0);
      float dr = abs((2.0 * r1 - r2) - c0);
      float db = abs((2.0 * b1 - b2) - c0);
      float dt = abs((2.0 * t1 - t2) - c0);
  
      vec3 ce = getWorldPos(c0, vUv).xyz;
  
      vec3 dpdx = (dl < dr) ? ce - getWorldPos(l1, (vUv - vec2(1.0 / resolution.x, 0.0))).xyz
                            : -ce + getWorldPos(r1, (vUv + vec2(1.0 / resolution.x, 0.0))).xyz;
      vec3 dpdy = (db < dt) ? ce - getWorldPos(b1, (vUv - vec2(0.0, 1.0 / resolution.y))).xyz
                            : -ce + getWorldPos(t1, (vUv + vec2(0.0, 1.0 / resolution.y))).xyz;
  
      return normalize(cross(dpdx, dpdy));
  }

    #include <common>
    #include <dithering_pars_fragment>
    void main() {
        //vec4 texel = texture2D(tDiffuse, vUv);//vec3(0.0);
        vec4 sceneTexel = texture2D(sceneDiffuse, vUv);

        #ifdef HALFRES 
        float depth = texture2D(
            sceneDepth,
            vUv
        ).x;
        vec4 texel;
        if (depth == 1.0) {
            texel = vec4(0.0, 0.0, 0.0, 1.0);
        } else {
        vec3 worldPos = getWorldPos(depth, vUv);
        vec3 normal = computeNormal(getWorldPos(depth, vUv), vUv);
       // vec4 texel = texture2D(tDiffuse, vUv);
       // Find closest depth;
       float totalWeight = 0.0;
       float radiusToUse = screenSpaceRadius ? distance(
        worldPos,
        getWorldPos(depth, vUv +
          vec2(radius, 0.0) / resolution)
      ) : radius;
      float distanceFalloffToUse =screenSpaceRadius ?
          radiusToUse * distanceFalloff
      : distanceFalloff;
        for(float x = -1.0; x <= 1.0; x++) {
            for(float y = -1.0; y <= 1.0; y++) {
                vec2 offset = vec2(x, y);
                ivec2 p = ivec2(
                    (vUv * resolution * 0.5) + offset
                );
                vec2 pUv = vec2(p) / (resolution * 0.5);
                float sampleDepth = texelFetch(downsampledDepth,p, 0).x;
                vec4 sampleInfo = texelFetch(tDiffuse, p, 0);
                vec3 normalSample = sampleInfo.xyz * 2.0 - 1.0;
                vec3 worldPosSample = getWorldPos(sampleDepth, pUv);
                float tangentPlaneDist = abs(dot(worldPos - worldPosSample, normal));
                float rangeCheck = exp(-1.0 * tangentPlaneDist * (1.0 / distanceFalloffToUse)) * max(dot(normal, normalSample), 0.0);
                float weight = rangeCheck;
                totalWeight += weight;
                texel += sampleInfo * weight;
            }
        }
        if (totalWeight == 0.0) {
            texel = texture2D(tDiffuse, vUv);
        } else {
            texel /= totalWeight;
        }
    }
        #else
        vec4 texel = texture2D(tDiffuse, vUv);
        #endif

     
        float finalAo = pow(texel.a, intensity);
        if (renderMode == 0.0) {
            gl_FragColor = vec4( mix(sceneTexel.rgb, color * sceneTexel.rgb, 1.0 - finalAo), sceneTexel.a);
        } else if (renderMode == 1.0) {
            gl_FragColor = vec4( mix(vec3(1.0), color * sceneTexel.rgb, 1.0 - finalAo), sceneTexel.a);
        } else if (renderMode == 2.0) {
            gl_FragColor = vec4( sceneTexel.rgb, sceneTexel.a);
        } else if (renderMode == 3.0) {
            if (vUv.x < 0.5) {
                gl_FragColor = vec4( sceneTexel.rgb, sceneTexel.a);
            } else if (abs(vUv.x - 0.5) < 1.0 / resolution.x) {
                gl_FragColor = vec4(1.0);
            } else {
                gl_FragColor = vec4( mix(sceneTexel.rgb, color * sceneTexel.rgb, 1.0 - finalAo), sceneTexel.a);
            }
        } else if (renderMode == 4.0) {
            if (vUv.x < 0.5) {
                gl_FragColor = vec4( sceneTexel.rgb, sceneTexel.a);
            } else if (abs(vUv.x - 0.5) < 1.0 / resolution.x) {
                gl_FragColor = vec4(1.0);
            } else {
                gl_FragColor = vec4( mix(vec3(1.0), color * sceneTexel.rgb, 1.0 - finalAo), sceneTexel.a);
            }
        }
        #include <dithering_fragment>
        if (gammaCorrection) {
            gl_FragColor = LinearTosRGB(gl_FragColor);
        }
    }
    `},H1={uniforms:{sceneDiffuse:{value:null},sceneDepth:{value:null},tDiffuse:{value:null},projMat:{value:new fe},viewMat:{value:new fe},projectionMatrixInv:{value:new fe},viewMatrixInv:{value:new fe},cameraPos:{value:new F},resolution:{value:new Re},time:{value:0},r:{value:5},blueNoise:{value:null},radius:{value:12},worldRadius:{value:5},index:{value:0},poissonDisk:{value:[]},distanceFalloff:{value:1},near:{value:.1},far:{value:1e3},logDepth:{value:!1},screenSpaceRadius:{value:!1}},vertexShader:`
		varying vec2 vUv;
		void main() {
			vUv = uv;
			gl_Position = vec4(position, 1.0);
		}`,fragmentShader:`
		uniform sampler2D sceneDiffuse;
    uniform highp sampler2D sceneDepth;
    uniform sampler2D tDiffuse;
    uniform sampler2D blueNoise;
    uniform mat4 projectionMatrixInv;
    uniform mat4 viewMatrixInv;
    uniform vec2 resolution;
    uniform float r;
    uniform float radius;
     uniform float worldRadius;
    uniform float index;
     uniform float near;
     uniform float far;
     uniform float distanceFalloff;
     uniform bool logDepth;
     uniform bool screenSpaceRadius;
    varying vec2 vUv;

    highp float linearize_depth(highp float d, highp float zNear,highp float zFar)
    {
        highp float z_n = 2.0 * d - 1.0;
        return 2.0 * zNear * zFar / (zFar + zNear - z_n * (zFar - zNear));
    }
    highp float linearize_depth_log(highp float d, highp float nearZ,highp float farZ) {
     float depth = pow(2.0, d * log2(farZ + 1.0)) - 1.0;
     float a = farZ / (farZ - nearZ);
     float b = farZ * nearZ / (nearZ - farZ);
     float linDepth = a + b / depth;
     return linearize_depth(linDepth, nearZ, farZ);
   }
   highp float linearize_depth_ortho(highp float d, highp float nearZ, highp float farZ) {
     return nearZ + (farZ - nearZ) * d;
   }
   vec3 getWorldPosLog(vec3 posS) {
     vec2 uv = posS.xy;
     float z = posS.z;
     float nearZ =near;
     float farZ = far;
     float depth = pow(2.0, z * log2(farZ + 1.0)) - 1.0;
     float a = farZ / (farZ - nearZ);
     float b = farZ * nearZ / (nearZ - farZ);
     float linDepth = a + b / depth;
     vec4 clipVec = vec4(uv, linDepth, 1.0) * 2.0 - 1.0;
     vec4 wpos = viewMatrixInv * projectionMatrixInv * clipVec;
     return wpos.xyz / wpos.w;
   }
    vec3 getWorldPos(float depth, vec2 coord) {
     #ifdef LOGDEPTH
          return getWorldPosLog(vec3(coord, depth));
     #endif
        
        float z = depth * 2.0 - 1.0;
        vec4 clipSpacePosition = vec4(coord * 2.0 - 1.0, z, 1.0);
        vec4 viewSpacePosition = projectionMatrixInv * clipSpacePosition;
        // Perspective division
       vec4 worldSpacePosition = viewMatrixInv * viewSpacePosition;
       worldSpacePosition.xyz /= worldSpacePosition.w;
        return worldSpacePosition.xyz;
    }
    #include <common>
    #define NUM_SAMPLES 16
    uniform vec2 poissonDisk[NUM_SAMPLES];
    void main() {
        const float pi = 3.14159;
        vec2 texelSize = vec2(1.0 / resolution.x, 1.0 / resolution.y);
        vec2 uv = vUv;
        vec4 data = texture2D(tDiffuse, vUv);
        float occlusion = data.a;
        float baseOcc = data.a;
        vec3 normal = data.rgb * 2.0 - 1.0;
        float count = 1.0;
        float d = texture2D(sceneDepth, vUv).x;
        vec3 worldPos = getWorldPos(d, vUv);
        float size = radius;
        float angle;
        if (index == 0.0) {
             angle = texture2D(blueNoise, gl_FragCoord.xy / 128.0).x * PI2;
        } else if (index == 1.0) {
             angle = texture2D(blueNoise, gl_FragCoord.xy / 128.0).y * PI2;
        } else if (index == 2.0) {
             angle = texture2D(blueNoise, gl_FragCoord.xy / 128.0).z * PI2;
        } else {
             angle = texture2D(blueNoise, gl_FragCoord.xy / 128.0).w * PI2;
        }

        mat2 rotationMatrix = mat2(cos(angle), -sin(angle), sin(angle), cos(angle));
        float radiusToUse = screenSpaceRadius ? distance(
          worldPos,
          getWorldPos(d, vUv +
            vec2(worldRadius, 0.0) / resolution)
        ) : worldRadius;
        float distanceFalloffToUse =screenSpaceRadius ?
            radiusToUse * distanceFalloff
        : distanceFalloff;


        for(int i = 0; i < NUM_SAMPLES; i++) {
            vec2 offset = (rotationMatrix * poissonDisk[i]) * texelSize * size;
            vec4 dataSample = texture2D(tDiffuse, uv + offset);
            float occSample = dataSample.a;
            vec3 normalSample = dataSample.rgb * 2.0 - 1.0;
            float dSample = texture2D(sceneDepth, uv + offset).x;
            vec3 worldPosSample = getWorldPos(dSample, uv + offset);
            float tangentPlaneDist = abs(dot(worldPos - worldPosSample, normal));
            float rangeCheck = exp(-1.0 * tangentPlaneDist * (1.0 / distanceFalloffToUse)) * max(dot(normal, normalSample), 0.0) * (1.0 - abs(occSample - baseOcc));
            occlusion += occSample * rangeCheck;
            count += rangeCheck;
        }
        occlusion /= count;
        gl_FragColor = vec4(0.5 + 0.5 * normal, occlusion);
    }
    `},W1={uniforms:{sceneDepth:{value:null},resolution:{value:new Re},near:{value:.1},far:{value:1e3},viewMatrixInv:{value:new fe},projectionMatrixInv:{value:new fe},logDepth:{value:!1}},vertexShader:`
    varying vec2 vUv;
    void main() {
        vUv = uv;
        gl_Position = vec4(position, 1);
    }`,fragmentShader:`
    uniform sampler2D sceneDepth;
    uniform vec2 resolution;
    uniform float near;
    uniform float far;
    uniform bool logDepth;
    uniform mat4 viewMatrixInv;
    uniform mat4 projectionMatrixInv;
    varying vec2 vUv;
    layout(location = 1) out vec4 gNormal;
    vec3 getWorldPosLog(vec3 posS) {
        vec2 uv = posS.xy;
        float z = posS.z;
        float nearZ =near;
        float farZ = far;
        float depth = pow(2.0, z * log2(farZ + 1.0)) - 1.0;
        float a = farZ / (farZ - nearZ);
        float b = farZ * nearZ / (nearZ - farZ);
        float linDepth = a + b / depth;
        vec4 clipVec = vec4(uv, linDepth, 1.0) * 2.0 - 1.0;
        vec4 wpos = viewMatrixInv * projectionMatrixInv * clipVec;
        return wpos.xyz / wpos.w;
      }
      vec3 getWorldPos(float depth, vec2 coord) {
        if (logDepth) {
          return getWorldPosLog(vec3(coord, depth));
        }
        float z = depth * 2.0 - 1.0;
        vec4 clipSpacePosition = vec4(coord * 2.0 - 1.0, z, 1.0);
        vec4 viewSpacePosition = projectionMatrixInv * clipSpacePosition;
        // Perspective division
       vec4 worldSpacePosition = viewMatrixInv * viewSpacePosition;
       worldSpacePosition.xyz /= worldSpacePosition.w;
        return worldSpacePosition.xyz;
    }
  
    vec3 computeNormal(vec3 worldPos, vec2 vUv) {
      ivec2 p = ivec2(vUv * resolution);
      float c0 = texelFetch(sceneDepth, p, 0).x;
      float l2 = texelFetch(sceneDepth, p - ivec2(2, 0), 0).x;
      float l1 = texelFetch(sceneDepth, p - ivec2(1, 0), 0).x;
      float r1 = texelFetch(sceneDepth, p + ivec2(1, 0), 0).x;
      float r2 = texelFetch(sceneDepth, p + ivec2(2, 0), 0).x;
      float b2 = texelFetch(sceneDepth, p - ivec2(0, 2), 0).x;
      float b1 = texelFetch(sceneDepth, p - ivec2(0, 1), 0).x;
      float t1 = texelFetch(sceneDepth, p + ivec2(0, 1), 0).x;
      float t2 = texelFetch(sceneDepth, p + ivec2(0, 2), 0).x;
  
      float dl = abs((2.0 * l1 - l2) - c0);
      float dr = abs((2.0 * r1 - r2) - c0);
      float db = abs((2.0 * b1 - b2) - c0);
      float dt = abs((2.0 * t1 - t2) - c0);
  
      vec3 ce = getWorldPos(c0, vUv).xyz;
  
      vec3 dpdx = (dl < dr) ? ce - getWorldPos(l1, (vUv - vec2(1.0 / resolution.x, 0.0))).xyz
                            : -ce + getWorldPos(r1, (vUv + vec2(1.0 / resolution.x, 0.0))).xyz;
      vec3 dpdy = (db < dt) ? ce - getWorldPos(b1, (vUv - vec2(0.0, 1.0 / resolution.y))).xyz
                            : -ce + getWorldPos(t1, (vUv + vec2(0.0, 1.0 / resolution.y))).xyz;
  
      return normalize(cross(dpdx, dpdy));
  }
    void main() {
        vec2 uv = vUv - vec2(0.5) / resolution;
        vec2 pixelSize = vec2(1.0) / resolution;
        vec2[] uvSamples = vec2[4](
            uv,
            uv + vec2(pixelSize.x, 0.0),
            uv + vec2(0.0, pixelSize.y),
            uv + pixelSize
        );
        float depth00 = texture2D(sceneDepth, uvSamples[0]).r;
        float depth10 = texture2D(sceneDepth, uvSamples[1]).r;
        float depth01 = texture2D(sceneDepth, uvSamples[2]).r;
        float depth11 = texture2D(sceneDepth, uvSamples[3]).r;
        float minDepth = min(min(depth00, depth10), min(depth01, depth11));
        float maxDepth = max(max(depth00, depth10), max(depth01, depth11));
        float targetDepth = minDepth;
        // Checkerboard pattern to avoid artifacts
        if (mod(gl_FragCoord.x + gl_FragCoord.y, 2.0) > 0.5) { 
            targetDepth = maxDepth;
        }
        int chosenIndex = 0;
        float[] samples = float[4](depth00, depth10, depth01, depth11);
        for(int i = 0; i < 4; ++i) {
            if (samples[i] == targetDepth) {
                chosenIndex = i;
                break;
            }
        }
        gl_FragColor = vec4(samples[chosenIndex], 0.0, 0.0, 1.0);
        gNormal = vec4(computeNormal(
            getWorldPos(samples[chosenIndex], uvSamples[chosenIndex]), uvSamples[chosenIndex]
        ), 0.0);
       /* float[] samples = float[4](depth00, depth10, depth01, depth11);
        float c = 0.25 * (depth00 + depth10 + depth01 + depth11);
        float[] distances = float[4](depth00, depth10, depth01, depth11);
        float maxDistance = max(max(distances[0], distances[1]), max(distances[2], distances[3]));

        int remaining[3];
        int rejected[3];
        int i, j, k;

        for(i = 0, j = 0, k = 0; i < 4; ++i) {
            if (distances[i] < maxDistance) {
                remaining[j++] = i;
            } else {
                rejected[k++] = i;
            }
        }
        for(;j < 3;++j) {
            remaining[j] = rejected[--k];
        }
        vec3 s = vec3(
            samples[remaining[0]],
            samples[remaining[1]],
            samples[remaining[2]]
        );
        c = (s.x + s.y + s.z) / 3.0;

        distances[0] = abs(c - s.x);
        distances[1] = abs(c - s.y);
        distances[2] = abs(c - s.z);

        float minDistance = min(min(distances[0], distances[1]), distances[2]);

        for(i = 0; i < 3; ++i) {
            if (distances[i] == minDistance) {
                break;
            }
        }*/
      /*  gl_FragColor = vec4(samples[remaining[i]], 0.0, 0.0, 0.0);
        gNormal = vec4(computeNormal(
            getWorldPos(samples[remaining[i]], uvSamples[remaining[i]]), uvSamples[remaining[i]]
        ), 0.0);*/
    }`};var a0="";Uint8Array.from(atob(a0),r=>r.charCodeAt(0));const Y1=Uint8Array.from(atob(a0),r=>r.charCodeAt(0));function l0(r,e,t){if(e.getQueryParameter(r,e.QUERY_RESULT_AVAILABLE)){const i=e.getQueryParameter(r,e.QUERY_RESULT)/1e6;t.lastTime=i}else setTimeout(()=>{l0(r,e,t)},1)}class X1 extends Po{constructor(e,t,i=512,n=512){super(),this.width=i,this.height=n,this.clear=!0,this.camera=t,this.scene=e,this.configuration=new Proxy({aoSamples:16,aoRadius:5,denoiseSamples:8,denoiseRadius:12,distanceFalloff:1,intensity:5,denoiseIterations:2,renderMode:0,color:new Fe(0,0,0),gammaCorrection:!0,logarithmicDepthBuffer:!1,screenSpaceRadius:!1,halfRes:!1,depthAwareUpsampling:!0},{set:(s,o,a)=>{const l=s[o];return s[o]=a,o==="aoSamples"&&l!==a&&this.configureAOPass(this.configuration.logarithmicDepthBuffer),o==="denoiseSamples"&&l!==a&&this.configureDenoisePass(this.configuration.logarithmicDepthBuffer),o==="halfRes"&&l!==a&&(this.configureAOPass(this.configuration.logarithmicDepthBuffer),this.configureHalfResTargets(),this.configureEffectCompositer(this.configuration.logarithmicDepthBuffer),this.setSize(this.width,this.height)),o==="depthAwareUpsampling"&&l!==a&&this.configureEffectCompositer(this.configuration.logarithmicDepthBuffer),!0}}),this.samples=[],this.samplesR=[],this.samplesDenoise=[],this.configureEffectCompositer(this.configuration.logarithmicDepthBuffer),this.configureSampleDependentPasses(),this.configureHalfResTargets(),this.beautyRenderTarget=new Qt(this.width,this.height,{minFilter:ri,magFilter:Et}),this.beautyRenderTarget.depthTexture=new qd(this.width,this.height,Wn),this.beautyRenderTarget.depthTexture.format=Ss,this.writeTargetInternal=new Qt(this.width,this.height,{minFilter:ri,magFilter:ri,depthBuffer:!1}),this.readTargetInternal=new Qt(this.width,this.height,{minFilter:ri,magFilter:ri,depthBuffer:!1}),this.bluenoise=new vS(Y1,128,128),this.bluenoise.colorSpace=Li,this.bluenoise.wrapS=ga,this.bluenoise.wrapT=ga,this.bluenoise.minFilter=Et,this.bluenoise.magFilter=Et,this.bluenoise.needsUpdate=!0,this.lastTime=0,this._r=new Re,this._c=new Fe}configureHalfResTargets(){this.configuration.halfRes?(this.depthDownsampleTarget=new vT(this.width/2,this.height/2,2),this.depthDownsampleTarget.texture[0].format=jg,this.depthDownsampleTarget.texture[0].type=Yn,this.depthDownsampleTarget.texture[0].minFilter=Et,this.depthDownsampleTarget.texture[0].magFilter=Et,this.depthDownsampleTarget.texture[0].depthBuffer=!1,this.depthDownsampleTarget.texture[1].format=Pi,this.depthDownsampleTarget.texture[1].type=ws,this.depthDownsampleTarget.texture[1].minFilter=Et,this.depthDownsampleTarget.texture[1].magFilter=Et,this.depthDownsampleTarget.texture[1].depthBuffer=!1,this.depthDownsampleQuad=new lc(new Mt(W1))):(this.depthDownsampleTarget&&(this.depthDownsampleTarget.dispose(),this.depthDownsampleTarget=null),this.depthDownsampleQuad&&(this.depthDownsampleQuad.dispose(),this.depthDownsampleQuad=null))}configureSampleDependentPasses(){this.configureAOPass(this.configuration.logarithmicDepthBuffer),this.configureDenoisePass(this.configuration.logarithmicDepthBuffer)}configureAOPass(e=!1){this.samples=this.generateHemisphereSamples(this.configuration.aoSamples),this.samplesR=this.generateHemisphereSamplesR(this.configuration.aoSamples);const t={...k1};t.fragmentShader=t.fragmentShader.replace("16",this.configuration.aoSamples).replace("16.0",this.configuration.aoSamples+".0"),e&&(t.fragmentShader=`#define LOGDEPTH
`+t.fragmentShader),this.configuration.halfRes&&(t.fragmentShader=`#define HALFRES
`+t.fragmentShader),this.effectShaderQuad?(this.effectShaderQuad.material.dispose(),this.effectShaderQuad.material=new Mt(t)):this.effectShaderQuad=new lc(new Mt(t))}configureDenoisePass(e=!1){this.samplesDenoise=this.generateDenoiseSamples(this.configuration.denoiseSamples,11);const t={...H1};t.fragmentShader=t.fragmentShader.replace("16",this.configuration.denoiseSamples),e&&(t.fragmentShader=`#define LOGDEPTH
`+t.fragmentShader),this.poissonBlurQuad?(this.poissonBlurQuad.material.dispose(),this.poissonBlurQuad.material=new Mt(t)):this.poissonBlurQuad=new lc(new Mt(t))}configureEffectCompositer(e=!1){const t={...G1};e&&(t.fragmentShader=`#define LOGDEPTH
`+t.fragmentShader),this.configuration.halfRes&&this.configuration.depthAwareUpsampling&&(t.fragmentShader=`#define HALFRES
`+t.fragmentShader),this.effectCompositerQuad?(this.effectCompositerQuad.material.dispose(),this.effectCompositerQuad.material=new Mt(t)):this.effectCompositerQuad=new lc(new Mt(t))}generateHemisphereSamples(e){const t=[];for(let i=0;i<e;i++){const n=2.399963*i,s=Math.sqrt(i+.5)/Math.sqrt(e),o=s*Math.cos(n),a=s*Math.sin(n),l=Math.sqrt(1-(o*o+a*a));t.push(new F(o,a,l))}return t}generateHemisphereSamplesR(e){let t=[];for(let i=0;i<e;i++)t.push((i+1)/e);return t}generateDenoiseSamples(e,t){const i=2*Math.PI*t/e,n=1/e,s=n,o=[];let a=n,l=0;for(let c=0;c<e;c++)o.push(new Re(Math.cos(l),Math.sin(l)).multiplyScalar(Math.pow(a,.75))),a+=s,l+=i;return o}setSize(e,t){this.width=e,this.height=t;const i=this.configuration.halfRes?.5:1;this.beautyRenderTarget.setSize(e,t),this.writeTargetInternal.setSize(e*i,t*i),this.readTargetInternal.setSize(e*i,t*i),this.configuration.halfRes&&this.depthDownsampleTarget.setSize(e*i,t*i)}render(e,t,i,n,s){e.capabilities.logarithmicDepthBuffer!==this.configuration.logarithmicDepthBuffer&&(this.configuration.logarithmicDepthBuffer=e.capabilities.logarithmicDepthBuffer,this.configureAOPass(this.configuration.logarithmicDepthBuffer),this.configureDenoisePass(this.configuration.logarithmicDepthBuffer),this.configureEffectCompositer(this.configuration.logarithmicDepthBuffer));let o,a,l;this.debugMode&&(o=e.getContext(),a=o.getExtension("EXT_disjoint_timer_query_webgl2"),a===null&&(console.error("EXT_disjoint_timer_query_webgl2 not available, disabling debug mode."),this.debugMode=!1)),e.setRenderTarget(this.beautyRenderTarget),e.render(this.scene,this.camera),this.debugMode&&(l=o.createQuery(),o.beginQuery(a.TIME_ELAPSED_EXT,l));const c=e.xr.enabled;e.xr.enabled=!1,this.camera.updateMatrixWorld(),this._r.set(this.width,this.height);let h=this.configuration.aoRadius;this.configuration.halfRes&&this.configuration.screenSpaceRadius&&(h*=.5),this.configuration.halfRes&&(e.setRenderTarget(this.depthDownsampleTarget),this.depthDownsampleQuad.material.uniforms.sceneDepth.value=this.beautyRenderTarget.depthTexture,this.depthDownsampleQuad.material.uniforms.resolution.value=this._r,this.depthDownsampleQuad.material.uniforms.near.value=this.camera.near,this.depthDownsampleQuad.material.uniforms.far.value=this.camera.far,this.depthDownsampleQuad.material.uniforms.projectionMatrixInv.value=this.camera.projectionMatrixInverse,this.depthDownsampleQuad.material.uniforms.viewMatrixInv.value=this.camera.matrixWorld,this.depthDownsampleQuad.material.uniforms.logDepth.value=this.configuration.logarithmicDepthBuffer,this.depthDownsampleQuad.render(e)),this.effectShaderQuad.material.uniforms.sceneDiffuse.value=this.beautyRenderTarget.texture,this.effectShaderQuad.material.uniforms.sceneDepth.value=this.configuration.halfRes?this.depthDownsampleTarget.texture[0]:this.beautyRenderTarget.depthTexture,this.effectShaderQuad.material.uniforms.sceneNormal.value=this.configuration.halfRes?this.depthDownsampleTarget.texture[1]:null,this.effectShaderQuad.material.uniforms.projMat.value=this.camera.projectionMatrix,this.effectShaderQuad.material.uniforms.viewMat.value=this.camera.matrixWorldInverse,this.effectShaderQuad.material.uniforms.projViewMat.value=this.camera.projectionMatrix.clone().multiply(this.camera.matrixWorldInverse.clone()),this.effectShaderQuad.material.uniforms.projectionMatrixInv.value=this.camera.projectionMatrixInverse,this.effectShaderQuad.material.uniforms.viewMatrixInv.value=this.camera.matrixWorld,this.effectShaderQuad.material.uniforms.cameraPos.value=this.camera.position,this.effectShaderQuad.material.uniforms.resolution.value=this.configuration.halfRes?this._r.clone().multiplyScalar(.5).floor():this._r,this.effectShaderQuad.material.uniforms.time.value=performance.now()/1e3,this.effectShaderQuad.material.uniforms.samples.value=this.samples,this.effectShaderQuad.material.uniforms.samplesR.value=this.samplesR,this.effectShaderQuad.material.uniforms.bluenoise.value=this.bluenoise,this.effectShaderQuad.material.uniforms.radius.value=h,this.effectShaderQuad.material.uniforms.distanceFalloff.value=this.configuration.distanceFalloff,this.effectShaderQuad.material.uniforms.near.value=this.camera.near,this.effectShaderQuad.material.uniforms.far.value=this.camera.far,this.effectShaderQuad.material.uniforms.logDepth.value=e.capabilities.logarithmicDepthBuffer,this.effectShaderQuad.material.uniforms.ortho.value=this.camera.isOrthographicCamera,this.effectShaderQuad.material.uniforms.screenSpaceRadius.value=this.configuration.screenSpaceRadius,e.setRenderTarget(this.writeTargetInternal),this.effectShaderQuad.render(e);for(let d=0;d<this.configuration.denoiseIterations;d++)[this.writeTargetInternal,this.readTargetInternal]=[this.readTargetInternal,this.writeTargetInternal],this.poissonBlurQuad.material.uniforms.tDiffuse.value=this.readTargetInternal.texture,this.poissonBlurQuad.material.uniforms.sceneDepth.value=this.configuration.halfRes?this.depthDownsampleTarget.texture[0]:this.beautyRenderTarget.depthTexture,this.poissonBlurQuad.material.uniforms.projMat.value=this.camera.projectionMatrix,this.poissonBlurQuad.material.uniforms.viewMat.value=this.camera.matrixWorldInverse,this.poissonBlurQuad.material.uniforms.projectionMatrixInv.value=this.camera.projectionMatrixInverse,this.poissonBlurQuad.material.uniforms.viewMatrixInv.value=this.camera.matrixWorld,this.poissonBlurQuad.material.uniforms.cameraPos.value=this.camera.position,this.poissonBlurQuad.material.uniforms.resolution.value=this.configuration.halfRes?this._r.clone().multiplyScalar(.5).floor():this._r,this.poissonBlurQuad.material.uniforms.time.value=performance.now()/1e3,this.poissonBlurQuad.material.uniforms.blueNoise.value=this.bluenoise,this.poissonBlurQuad.material.uniforms.radius.value=this.configuration.denoiseRadius*(this.configuration.halfRes?.5:1),this.poissonBlurQuad.material.uniforms.worldRadius.value=h,this.poissonBlurQuad.material.uniforms.distanceFalloff.value=this.configuration.distanceFalloff,this.poissonBlurQuad.material.uniforms.index.value=d,this.poissonBlurQuad.material.uniforms.poissonDisk.value=this.samplesDenoise,this.poissonBlurQuad.material.uniforms.near.value=this.camera.near,this.poissonBlurQuad.material.uniforms.far.value=this.camera.far,this.poissonBlurQuad.material.uniforms.logDepth.value=e.capabilities.logarithmicDepthBuffer,this.poissonBlurQuad.material.uniforms.screenSpaceRadius.value=this.configuration.screenSpaceRadius,e.setRenderTarget(this.writeTargetInternal),this.poissonBlurQuad.render(e);this.effectCompositerQuad.material.uniforms.sceneDiffuse.value=this.beautyRenderTarget.texture,this.effectCompositerQuad.material.uniforms.sceneDepth.value=this.beautyRenderTarget.depthTexture,this.effectCompositerQuad.material.uniforms.near.value=this.camera.near,this.effectCompositerQuad.material.uniforms.far.value=this.camera.far,this.effectCompositerQuad.material.uniforms.projectionMatrixInv.value=this.camera.projectionMatrixInverse,this.effectCompositerQuad.material.uniforms.viewMatrixInv.value=this.camera.matrixWorld,this.effectCompositerQuad.material.uniforms.logDepth.value=e.capabilities.logarithmicDepthBuffer,this.effectCompositerQuad.material.uniforms.ortho.value=this.camera.isOrthographicCamera,this.effectCompositerQuad.material.uniforms.downsampledDepth.value=this.configuration.halfRes?this.depthDownsampleTarget.texture[0]:this.beautyRenderTarget.depthTexture,this.effectCompositerQuad.material.uniforms.resolution.value=this._r,this.effectCompositerQuad.material.uniforms.blueNoise.value=this.bluenoise,this.effectCompositerQuad.material.uniforms.intensity.value=this.configuration.intensity,this.effectCompositerQuad.material.uniforms.renderMode.value=this.configuration.renderMode,this.effectCompositerQuad.material.uniforms.screenSpaceRadius.value=this.configuration.screenSpaceRadius,this.effectCompositerQuad.material.uniforms.radius.value=h,this.effectCompositerQuad.material.uniforms.distanceFalloff.value=this.configuration.distanceFalloff,this.effectCompositerQuad.material.uniforms.gammaCorrection.value=this.configuration.gammaCorrection,this.effectCompositerQuad.material.uniforms.tDiffuse.value=this.writeTargetInternal.texture,this.effectCompositerQuad.material.uniforms.color.value=this._c.copy(this.configuration.color).convertSRGBToLinear(),e.setRenderTarget(this.renderToScreen?null:t),this.effectCompositerQuad.render(e),this.debugMode&&(o.endQuery(a.TIME_ELAPSED_EXT),l0(l,o,this)),e.xr.enabled=c}enableDebugMode(){this.debugMode=!0}disableDebugMode(){this.debugMode=!1}setDisplayMode(e){this.configuration.renderMode=["Combined","AO","No AO","Split","Split AO"].indexOf(e)}setQualityMode(e){e==="Performance"?(this.configuration.aoSamples=8,this.configuration.denoiseSamples=4,this.configuration.denoiseRadius=12):e==="Low"?(this.configuration.aoSamples=16,this.configuration.denoiseSamples=4,this.configuration.denoiseRadius=12):e==="Medium"?(this.configuration.aoSamples=16,this.configuration.denoiseSamples=8,this.configuration.denoiseRadius=12):e==="High"?(this.configuration.aoSamples=64,this.configuration.denoiseSamples=8,this.configuration.denoiseRadius=6):e==="Ultra"&&(this.configuration.aoSamples=64,this.configuration.denoiseSamples=16,this.configuration.denoiseRadius=6)}}const Z1={name:"GammaCorrectionShader",uniforms:{tDiffuse:{value:null}},vertexShader:`

		varying vec2 vUv;

		void main() {

			vUv = uv;
			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:`

		uniform sampler2D tDiffuse;

		varying vec2 vUv;

		void main() {

			vec4 tex = texture2D( tDiffuse, vUv );

			gl_FragColor = sRGBTransferOETF( tex );

		}`};function j1(){return new Mt({side:2,clipping:!0,uniforms:{},vertexShader:`
    varying vec4 vColor;
    
    #include <clipping_planes_pars_vertex>
  
    void main() {
       #include <begin_vertex>
    
       vec4 absPosition = vec4(position, 1.0);
       vec3 trueNormal = normal;
       
       #ifdef USE_INSTANCING
          absPosition = instanceMatrix * absPosition;
          trueNormal = (instanceMatrix * vec4(normal, 0.)).xyz;
       #endif
       
       absPosition = modelMatrix * absPosition;
       trueNormal = (normalize(modelMatrix * vec4(trueNormal, 0.))).xyz;
       
       vec3 planePosition = absPosition.xyz / 40.;
       float d = abs(dot(trueNormal, planePosition));
       vColor = vec4(abs(trueNormal), d);
       gl_Position = projectionMatrix * viewMatrix * absPosition;
       
       #include <project_vertex>
       #include <clipping_planes_vertex>
    }
    `,fragmentShader:`
    varying vec4 vColor;
    
    #include <clipping_planes_pars_fragment>
  
    void main() {
      #include <clipping_planes_fragment>
      gl_FragColor = vColor;
    }
    `})}function q1(){return new Mt({side:2,clipping:!0,uniforms:{},vertexShader:`
    varying vec3 vCameraPosition;
    varying vec3 vPosition;
    varying vec3 vNormal;
    
    #include <clipping_planes_pars_vertex>
  
    void main() {
       #include <begin_vertex>
       
       vec4 absPosition = vec4(position, 1.0);
       vNormal = normal;
       
       #ifdef USE_INSTANCING
          absPosition = instanceMatrix * absPosition;
          vNormal = (instanceMatrix * vec4(normal, 0.)).xyz;
       #endif
       
       absPosition = modelMatrix * absPosition;
       vNormal = (normalize(modelMatrix * vec4(vNormal, 0.))).xyz;
       
       gl_Position = projectionMatrix * viewMatrix * absPosition;
       
       vCameraPosition = cameraPosition;
       vPosition = absPosition.xyz;
       
       #include <project_vertex>
       #include <clipping_planes_vertex>
    }
    `,fragmentShader:`
    varying vec3 vCameraPosition;
    varying vec3 vPosition;
    varying vec3 vNormal;
    
    #include <clipping_planes_pars_fragment>
  
    void main() {
      #include <clipping_planes_fragment>
      vec3 cameraPixelVec = normalize(vCameraPosition - vPosition);
      float difference = abs(dot(vNormal, cameraPixelVec));
      
      // This achieves a double gloss effect: when the surface is perpendicular and when it's parallel
      difference = abs((difference * 2.) - 1.);
      
      gl_FragColor = vec4(difference, difference, difference, 1.);
    }
    `})}class K1 extends Po{constructor(e,t,i,n,s){if(super(),D(this,"components"),D(this,"resolution"),D(this,"renderScene"),D(this,"renderCamera"),D(this,"fsQuad"),D(this,"normalOverrideMaterial"),D(this,"glossOverrideMaterial"),D(this,"planeBuffer"),D(this,"glossBuffer"),D(this,"outlineBuffer"),D(this,"excludedMeshes",[]),D(this,"outlinedMeshes",{}),D(this,"outlineScene",new dr),D(this,"_outlineEnabled",!1),D(this,"_lineColor",10066329),D(this,"_opacity",.4),D(this,"_tolerance",3),D(this,"_glossEnabled",!0),D(this,"_glossExponent",1.9),D(this,"_minGloss",-.1),D(this,"_maxGloss",.1),!i.renderer)throw new Error("The given world must have a renderer!");this.components=t,this.renderScene=n,this.renderCamera=s,this.resolution=new Re(e.x,e.y),this.fsQuad=new r0,this.fsQuad.material=this.createOutlinePostProcessMaterial(),this.planeBuffer=this.newRenderTarget(),this.glossBuffer=this.newRenderTarget(),this.outlineBuffer=this.newRenderTarget();const o=j1();o.clippingPlanes=i.renderer.clippingPlanes,this.normalOverrideMaterial=o;const a=q1();a.clippingPlanes=i.renderer.clippingPlanes,this.glossOverrideMaterial=a}get lineColor(){return this._lineColor}set lineColor(e){this._lineColor=e,this.fsQuad.material.uniforms.lineColor.value.set(e)}get tolerance(){return this._tolerance}set tolerance(e){this._tolerance=e;const t=this.fsQuad.material;t.uniforms.tolerance.value=e}get opacity(){return this._opacity}set opacity(e){this._opacity=e;const t=this.fsQuad.material;t.uniforms.opacity.value=e}get glossEnabled(){return this._glossEnabled}set glossEnabled(e){if(e===this._glossEnabled)return;this._glossEnabled=e;const t=this.fsQuad.material;t.uniforms.glossEnabled.value=e?1:0}get glossExponent(){return this._glossExponent}set glossExponent(e){this._glossExponent=e;const t=this.fsQuad.material;t.uniforms.glossExponent.value=e}get minGloss(){return this._minGloss}set minGloss(e){this._minGloss=e;const t=this.fsQuad.material;t.uniforms.minGloss.value=e}get maxGloss(){return new Ti().color.convertLinearToSRGB(),this._maxGloss}set maxGloss(e){this._maxGloss=e;const t=this.fsQuad.material;t.uniforms.maxGloss.value=e}get outlineEnabled(){return this._outlineEnabled}set outlineEnabled(e){if(e===this._outlineEnabled)return;this._outlineEnabled=e;const t=this.fsQuad.material;t.uniforms.outlineEnabled.value=e?1:0}async dispose(){this.planeBuffer.dispose(),this.glossBuffer.dispose(),this.outlineBuffer.dispose(),this.normalOverrideMaterial.dispose(),this.glossOverrideMaterial.dispose(),this.fsQuad.material.dispose(),this.fsQuad.dispose(),this.excludedMeshes=[],this.outlineScene.children=[];const e=this.components.get(xn);for(const t in this.outlinedMeshes){const i=this.outlinedMeshes[t];for(const n of i.meshes){e.destroy(n,!0,!0);const s=n;s.fragment&&s.fragment.dispose(!0)}i.material.dispose()}}setSize(e,t){this.planeBuffer.setSize(e,t),this.glossBuffer.setSize(e,t),this.outlineBuffer.setSize(e,t),this.resolution.set(e,t);const i=this.fsQuad.material;i.uniforms.screenSize.value.set(this.resolution.x,this.resolution.y,1/this.resolution.x,1/this.resolution.y),i.uniformsNeedUpdate=!0}render(e,t,i){const n=t.depthBuffer;t.depthBuffer=!1;const s=this.renderScene.overrideMaterial,o=this.renderScene.background;this.renderScene.background=null;for(const l of this.excludedMeshes)l.visible=!1;e.setRenderTarget(this.planeBuffer),this.renderScene.overrideMaterial=this.normalOverrideMaterial,e.render(this.renderScene,this.renderCamera),this._glossEnabled&&(e.setRenderTarget(this.glossBuffer),this.renderScene.overrideMaterial=this.glossOverrideMaterial,e.render(this.renderScene,this.renderCamera)),this.renderScene.overrideMaterial=s,e.setRenderTarget(this.outlineBuffer),this._outlineEnabled?e.render(this.outlineScene,this.renderCamera):e.clear();for(const l of this.excludedMeshes)l.visible=!0;this.renderScene.background=o;const a=this.fsQuad.material;a.uniforms.planeBuffer.value=this.planeBuffer.texture,a.uniforms.glossBuffer.value=this.glossBuffer.texture,a.uniforms.outlineBuffer.value=this.outlineBuffer.texture,a.uniforms.sceneColorBuffer.value=i.texture,this.renderToScreen?(e.setRenderTarget(null),this.fsQuad.render(e)):(e.setRenderTarget(t),this.fsQuad.render(e)),t.depthBuffer=n}get vertexShader(){return`
	  varying vec2 vUv;
	  void main() {
	  	vUv = uv;
	  	gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
	  }
	`}get fragmentShader(){return`
	  uniform sampler2D sceneColorBuffer;
	  uniform sampler2D planeBuffer;
	  uniform sampler2D glossBuffer;
	  uniform sampler2D outlineBuffer;
	  uniform vec4 screenSize;
	  uniform vec3 lineColor;
	  
	  uniform float outlineEnabled;
	  
      uniform int width;
	  uniform float opacity;
      uniform float tolerance;
      uniform float glossExponent;
      uniform float minGloss;
      uniform float maxGloss;
      uniform float glossEnabled;

	  varying vec2 vUv;

	  vec4 getValue(sampler2D buffer, int x, int y) {
	  	return texture2D(buffer, vUv + screenSize.zw * vec2(x, y));
	  }

      float normalDiff(vec3 normal1, vec3 normal2) {
        return ((dot(normal1, normal2) - 1.) * -1.) / 2.;
      }

      // Returns 0 if it's background, 1 if it's not
      float getIsBackground(vec3 normal) {
        float background = 1.0;
        background *= step(normal.x, 0.);
        background *= step(normal.y, 0.);
        background *= step(normal.z, 0.);
        background = (background - 1.) * -1.;
        return background;
      }

	  void main() {
	  
	    vec4 sceneColor = getValue(sceneColorBuffer, 0, 0);
	    vec3 normSceneColor = normalize(sceneColor.rgb);
  
        vec4 plane = getValue(planeBuffer, 0, 0);
	    vec3 normal = plane.xyz;
        float distance = plane.w;
  
        vec3 normalTop = getValue(planeBuffer, 0, width).rgb;
        vec3 normalBottom = getValue(planeBuffer, 0, -width).rgb;
        vec3 normalRight = getValue(planeBuffer, width, 0).rgb;
        vec3 normalLeft = getValue(planeBuffer, -width, 0).rgb;
        vec3 normalTopRight = getValue(planeBuffer, width, width).rgb;
        vec3 normalTopLeft = getValue(planeBuffer, -width, width).rgb;
        vec3 normalBottomRight = getValue(planeBuffer, width, -width).rgb;
        vec3 normalBottomLeft = getValue(planeBuffer, -width, -width).rgb;
  
        float distanceTop = getValue(planeBuffer, 0, width).a;
        float distanceBottom = getValue(planeBuffer, 0, -width).a;
        float distanceRight = getValue(planeBuffer, width, 0).a;
        float distanceLeft = getValue(planeBuffer, -width, 0).a;
        float distanceTopRight = getValue(planeBuffer, width, width).a;
        float distanceTopLeft = getValue(planeBuffer, -width, width).a;
        float distanceBottomRight = getValue(planeBuffer, width, -width).a;
        float distanceBottomLeft = getValue(planeBuffer, -width, -width).a;
        
        vec3 sceneColorTop = normalize(getValue(sceneColorBuffer, 1, 0).rgb);
        vec3 sceneColorBottom = normalize(getValue(sceneColorBuffer, -1, 0).rgb);
        vec3 sceneColorLeft = normalize(getValue(sceneColorBuffer, 0, -1).rgb);
        vec3 sceneColorRight = normalize(getValue(sceneColorBuffer, 0, 1).rgb);
        vec3 sceneColorTopRight = normalize(getValue(sceneColorBuffer, 1, 1).rgb);
        vec3 sceneColorBottomRight = normalize(getValue(sceneColorBuffer, -1, 1).rgb);
        vec3 sceneColorTopLeft = normalize(getValue(sceneColorBuffer, 1, 1).rgb);
        vec3 sceneColorBottomLeft = normalize(getValue(sceneColorBuffer, -1, 1).rgb);

        // Checks if the planes of this texel and the neighbour texels are different

        float planeDiff = 0.0;

        planeDiff += step(0.001, normalDiff(normal, normalTop));
        planeDiff += step(0.001, normalDiff(normal, normalBottom));
        planeDiff += step(0.001, normalDiff(normal, normalLeft));
        planeDiff += step(0.001, normalDiff(normal, normalRight));
        planeDiff += step(0.001, normalDiff(normal, normalTopRight));
        planeDiff += step(0.001, normalDiff(normal, normalTopLeft));
        planeDiff += step(0.001, normalDiff(normal, normalBottomRight));
        planeDiff += step(0.001, normalDiff(normal, normalBottomLeft));
        
        planeDiff += step(0.001, normalDiff(normSceneColor, sceneColorTop));
        planeDiff += step(0.001, normalDiff(normSceneColor, sceneColorBottom));
        planeDiff += step(0.001, normalDiff(normSceneColor, sceneColorLeft));
        planeDiff += step(0.001, normalDiff(normSceneColor, sceneColorRight));
       	planeDiff += step(0.001, normalDiff(normSceneColor, sceneColorTopRight));
        planeDiff += step(0.001, normalDiff(normSceneColor, sceneColorTopLeft));
        planeDiff += step(0.001, normalDiff(normSceneColor, sceneColorBottomRight));
        planeDiff += step(0.001, normalDiff(normSceneColor, sceneColorBottomLeft));

        planeDiff += step(0.001, abs(distance - distanceTop));
        planeDiff += step(0.001, abs(distance - distanceBottom));
        planeDiff += step(0.001, abs(distance - distanceLeft));
        planeDiff += step(0.001, abs(distance - distanceRight));
        planeDiff += step(0.001, abs(distance - distanceTopRight));
        planeDiff += step(0.001, abs(distance - distanceTopLeft));
        planeDiff += step(0.001, abs(distance - distanceBottomRight));
        planeDiff += step(0.001, abs(distance - distanceBottomLeft));

        // Add extra background outline

        int width2 = width + 1;
        vec3 normalTop2 = getValue(planeBuffer, 0, width2).rgb;
        vec3 normalBottom2 = getValue(planeBuffer, 0, -width2).rgb;
        vec3 normalRight2 = getValue(planeBuffer, width2, 0).rgb;
        vec3 normalLeft2 = getValue(planeBuffer, -width2, 0).rgb;
        vec3 normalTopRight2 = getValue(planeBuffer, width2, width2).rgb;
        vec3 normalTopLeft2 = getValue(planeBuffer, -width2, width2).rgb;
        vec3 normalBottomRight2 = getValue(planeBuffer, width2, -width2).rgb;
        vec3 normalBottomLeft2 = getValue(planeBuffer, -width2, -width2).rgb;

        planeDiff += -(getIsBackground(normalTop2) - 1.);
        planeDiff += -(getIsBackground(normalBottom2) - 1.);
        planeDiff += -(getIsBackground(normalRight2) - 1.);
        planeDiff += -(getIsBackground(normalLeft2) - 1.);
        planeDiff += -(getIsBackground(normalTopRight2) - 1.);
        planeDiff += -(getIsBackground(normalBottomRight2) - 1.);
        planeDiff += -(getIsBackground(normalBottomRight2) - 1.);
        planeDiff += -(getIsBackground(normalBottomLeft2) - 1.);

        // Tolerance sets the minimum amount of differences to consider
        // this texel an edge

        float line = step(tolerance, planeDiff);

        // Exclude background and apply opacity

        float background = getIsBackground(normal);
        line *= background;
        line *= opacity;
        
        // Add gloss
        
        vec3 gloss = getValue(glossBuffer, 0, 0).xyz;
        float diffGloss = abs(maxGloss - minGloss);
        vec3 glossExpVector = vec3(glossExponent,glossExponent,glossExponent);
        gloss = min(pow(gloss, glossExpVector), vec3(1.,1.,1.));
        gloss *= diffGloss;
        gloss += minGloss;
        vec4 glossedColor = sceneColor + vec4(gloss, 1.) * glossEnabled;
        
        vec4 corrected = mix(sceneColor, glossedColor, background);
        
        // Draw lines
        
        corrected = mix(corrected, vec4(lineColor, 1.), line);
        
        // Add outline
        
        vec4 outlinePreview =getValue(outlineBuffer, 0, 0);
        float outlineColorCorrection = 1. / max(0.2, outlinePreview.a);
        vec3 outlineColor = outlinePreview.rgb * outlineColorCorrection;
        
        // thickness between 10 and 2, opacity between 1 and 0.2
	    int outlineThickness = int(outlinePreview.a * 10.);
	    
	    float outlineDiff = 0.;
        
        outlineDiff += step(0.1, getValue(outlineBuffer, 0, 0).a);
        outlineDiff += step(0.1, getValue(outlineBuffer, 1, 0).a);
        outlineDiff += step(0.1, getValue(outlineBuffer, -1, 0).a);
        outlineDiff += step(0.1, getValue(outlineBuffer, 0, -1).a);
        outlineDiff += step(0.1, getValue(outlineBuffer, 0, 1).a);
        outlineDiff += step(0.1, getValue(outlineBuffer, outlineThickness, 0).a);
        outlineDiff += step(0.1, getValue(outlineBuffer, -outlineThickness, 0).a);
        outlineDiff += step(0.1, getValue(outlineBuffer, 0, -outlineThickness).a);
        outlineDiff += step(0.1, getValue(outlineBuffer, 0, outlineThickness).a);
        outlineDiff += step(0.1, getValue(outlineBuffer, outlineThickness, outlineThickness).a);
        outlineDiff += step(0.1, getValue(outlineBuffer, -outlineThickness, outlineThickness).a);
        outlineDiff += step(0.1, getValue(outlineBuffer, -outlineThickness, -outlineThickness).a);
        outlineDiff += step(0.1, getValue(outlineBuffer, outlineThickness, -outlineThickness).a);
        
        float outLine = step(4., outlineDiff) * step(outlineDiff, 12.) * outlineEnabled;
        corrected = mix(corrected, vec4(outlineColor, 1.), outLine);
        
        gl_FragColor = corrected;
	}
			`}createOutlinePostProcessMaterial(){return new Mt({uniforms:{opacity:{value:this._opacity},debugVisualize:{value:0},sceneColorBuffer:{value:null},tolerance:{value:this._tolerance},planeBuffer:{value:null},glossBuffer:{value:null},outlineBuffer:{value:null},glossEnabled:{value:1},minGloss:{value:this._minGloss},maxGloss:{value:this._maxGloss},outlineEnabled:{value:0},glossExponent:{value:this._glossExponent},width:{value:1},lineColor:{value:new Fe(this._lineColor)},screenSize:{value:new bt(this.resolution.x,this.resolution.y,1/this.resolution.x,1/this.resolution.y)}},vertexShader:this.vertexShader,fragmentShader:this.fragmentShader})}newRenderTarget(){const e=new Qt(this.resolution.x,this.resolution.y);return e.texture.colorSpace="srgb-linear",e.texture.format=Pi,e.texture.type=ws,e.texture.minFilter=Et,e.texture.magFilter=Et,e.texture.generateMipmaps=!1,e.stencilBuffer=!1,e}}class Q1{constructor(e,t,i){if(D(this,"composer"),D(this,"overrideClippingPlanes",!1),D(this,"_components"),D(this,"_world"),D(this,"_renderTarget"),D(this,"_enabled",!1),D(this,"_initialized",!1),D(this,"_n8ao"),D(this,"_customEffects"),D(this,"_basePass"),D(this,"_gammaPass"),D(this,"_depthTexture"),D(this,"_renderer"),D(this,"_settings",{gamma:!0,custom:!0,ao:!1}),!i.renderer)throw new Error("The given world must have a renderer!");this._components=e,this._renderer=t,this._world=i,this._renderTarget=new Qt(window.innerWidth,window.innerHeight),this._renderTarget.texture.colorSpace="srgb-linear",this.composer=new B1(t,this._renderTarget),this.composer.setSize(window.innerWidth,window.innerHeight)}get basePass(){if(!this._basePass)throw new Error("Custom effects not initialized!");return this._basePass}get gammaPass(){if(!this._gammaPass)throw new Error("Custom effects not initialized!");return this._gammaPass}get customEffects(){if(!this._customEffects)throw new Error("Custom effects not initialized!");return this._customEffects}get n8ao(){if(!this._n8ao)throw new Error("Custom effects not initialized!");return this._n8ao}get enabled(){return this._enabled}set enabled(e){this._initialized||this.initialize(),this._enabled=e}get settings(){return{...this._settings}}dispose(){var e,t,i,n;this.composer.dispose(),this._renderTarget.dispose(),(e=this._depthTexture)==null||e.dispose(),(t=this._customEffects)==null||t.dispose(),(i=this._gammaPass)==null||i.dispose(),(n=this._n8ao)==null||n.dispose()}setPasses(e){let t=!1;for(const i in e){const n=i;if(this.settings[n]!==e[n]){t=!0;break}}if(t){for(const i in e){const n=i;this._settings[n]!==void 0&&(this._settings[n]=e[n])}this.updatePasses()}}setSize(e,t){if(!(e===0||t===0)&&this._initialized){const i=this._settings.custom;i&&this.setPasses({custom:!1}),this.setPasses({custom:!1}),this.composer.setSize(e,t),this.basePass.setSize(e,t),this.n8ao.setSize(e,t),this.customEffects.setSize(e,t),this.gammaPass.setSize(e,t),i&&this.setPasses({custom:!0})}}update(){this._enabled&&this.composer.render()}updateCamera(){const e=this._world.camera.three;this._n8ao&&(this._n8ao.camera=e),this._customEffects&&(this._customEffects.renderCamera=e),this._basePass&&(this._basePass.camera=e)}updateProjection(e){this.composer.passes.forEach(t=>{t.camera=e}),this.update()}initialize(){if(!this._world.renderer)throw new Error("The given world must have a renderer!");const e=this._world.scene.three,t=this._world.camera.three;if(!(e instanceof dr))throw new Error("The given scene must have a THREE.Scene as core!");const i=this._world.camera;i.projection&&i.projection.onChanged.add(()=>{this.updateCamera()});const n=this._world.renderer;this.overrideClippingPlanes||(this._renderer.clippingPlanes=n.clippingPlanes),this._renderer.outputColorSpace="srgb",this._renderer.toneMapping=Qn,this.newBasePass(e,t),this.newSaoPass(e,t),this.newGammaPass(),this.newCustomPass(e,t),this._initialized=!0,this.updatePasses()}updatePasses(){for(const e of this.composer.passes)this.composer.removePass(e);this._basePass&&this.composer.addPass(this.basePass),this._settings.gamma&&this.composer.addPass(this.gammaPass),this._settings.ao&&this.composer.addPass(this.n8ao),this._settings.custom&&this.composer.addPass(this.customEffects)}newCustomPass(e,t){this._customEffects=new K1(new Re(window.innerWidth,window.innerHeight),this._components,this._world,e,t)}newGammaPass(){this._gammaPass=new o0(Z1)}newSaoPass(e,t){if(!this._world.renderer)throw new Error("The given world must have a renderer!");const{width:i,height:n}=this._world.renderer.getSize();this._n8ao=new X1(e,t,i,n);const{configuration:s}=this._n8ao;s.aoSamples=16,s.denoiseSamples=1,s.denoiseRadius=13,s.aoRadius=1,s.distanceFalloff=4,s.aoRadius=1,s.intensity=4,s.halfRes=!0,s.color=new Fe().setHex(13421772,"srgb-linear")}newBasePass(e,t){this._basePass=new z1(e,t)}}class _d extends p1{constructor(e,t,i){super(e,t,i),D(this,"_postproduction"),this.onResize.add(n=>this.resizePostproduction(n)),this.onWorldChanged.add(()=>{this.currentWorld&&(this._postproduction&&this._postproduction.dispose(),this._postproduction=new Q1(e,this.three,this.currentWorld),this.setPostproductionSize())})}get postproduction(){if(!this._postproduction)throw new Error("Renderer not initialized yet with a world!");return this._postproduction}update(){if(!this.enabled||!this.currentWorld)return;this.onBeforeUpdate.trigger();const e=this.currentWorld.scene.three,t=this.currentWorld.camera.three;this.postproduction.enabled?this.postproduction.composer.render():this.three.render(e,t),e instanceof dr&&this.three2D.render(e,t),this.onAfterUpdate.trigger()}dispose(){super.dispose(),this.postproduction.dispose()}resizePostproduction(e){this.postproduction&&this.setPostproductionSize(e)}setPostproductionSize(e){if(!this.container)return;const t=e?e.x:this.container.clientWidth,i=e?e.y:this.container.clientHeight;this.postproduction.setSize(t,i)}}class J1{constructor(e,t,i,n,s){D(this,"mesh",new ge(new Ve)),D(this,"components"),D(this,"world"),D(this,"styleName"),D(this,"_precission",1e4),D(this,"_tempVector",new F),D(this,"_plane"),D(this,"_geometry"),D(this,"_outlinedMesh"),D(this,"_plane2DCoordinateSystem",new fe),D(this,"_planeAxis"),this.components=e,this.world=t,this.mesh.material=s,this.mesh.frustumCulled=!1,this.mesh.userData.indexFragmentMap=new Map,this._plane=i;const{x:o,y:a,z:l}=i.normal;Math.abs(o)===1?this._planeAxis="x":Math.abs(a)===1?this._planeAxis="y":Math.abs(l)===1&&(this._planeAxis="z"),this._geometry=n,this.mesh.geometry.attributes.position=n.attributes.position;const c=i.normal.clone().multiplyScalar(.01);this._outlinedMesh=new ge(this.mesh.geometry),this.mesh.position.copy(c),this._outlinedMesh.position.copy(c),this.visible=!0}get visible(){return this.mesh.parent!==null}set visible(e){const t=this.getStyleAndScene();if(e){if(this.world.scene.three.add(this.mesh),t){const{style:i,outlineScene:n}=t;this._outlinedMesh.material=i.material,i.meshes.add(this._outlinedMesh),n.add(this._outlinedMesh)}}else if(this.mesh.removeFromParent(),t){const{style:i}=t;i.meshes.delete(this._outlinedMesh),this._outlinedMesh.removeFromParent()}}set geometry(e){this._geometry=e,this.mesh.geometry.attributes.position=e.attributes.position}dispose(){const e=this.getStyleAndScene();if(e){const{style:t}=e;t.meshes.delete(this._outlinedMesh),this._outlinedMesh.removeFromParent()}this.mesh.material=[],this._outlinedMesh.material=[],this.mesh.userData.indexFragmentMap.clear(),this.mesh.userData={},this.mesh.geometry.dispose(),this.mesh.removeFromParent(),this.mesh.geometry=null,this._outlinedMesh.geometry=null,this.mesh=null,this._plane=null,this._geometry=null,this.components=null}update(e,t){const i=this._geometry.attributes.position.array;if(!i)return;this.updatePlane2DCoordinateSystem();const{userData:n}=this.mesh,s=n.indexFragmentMap;s.clear();let o=0;const a=[];let l=0;const c=this.components.get(Ze);for(const[h,d]of t)for(const u in d){const f=c.list.get(u);f&&(f.mesh.userData.fills||(f.mesh.userData.fills=new Set),f.mesh.userData.fills.add(this.mesh))}for(let h=0;h<e.length;h++){const d=e[h],u=[];for(let g=l;g<d;g+=2)u.push(g*3);const f=this.computeFill(u,i),m=t.get(d);let E=0;for(const g of f)a.push(g),m&&E%3===0&&s.set(o++,m),E++;l=d}this.mesh.geometry.setIndex(a)}computeFill(e,t){const i=new Map,n={},s=new Map;let o=0;const a=new Map,l=new Map,c=new Set,h=this._precission;for(let u=0;u<e.length;u++){const f=e[u];let m=0,E=0,g=0,p=0;const _=t[f],T=t[f+1],I=t[f+2],v=t[f+3],b=t[f+4],x=t[f+5];if(this._tempVector.set(_,T,I),this._tempVector.applyMatrix4(this._plane2DCoordinateSystem),m=Math.trunc(this._tempVector.x*h)/h,E=Math.trunc(this._tempVector.y*h)/h,this._tempVector.set(v,b,x),this._tempVector.applyMatrix4(this._plane2DCoordinateSystem),g=Math.trunc(this._tempVector.x*h)/h,p=Math.trunc(this._tempVector.y*h)/h,m===g&&E===p)continue;const A=`${m}|${E}`,y=`${g}|${p}`;i.has(A)||i.set(A,f/3),i.has(y)||i.set(y,f/3+1);const S=i.get(A),O=i.get(y);n[S]=[m,E],n[O]=[g,p];const w=l.has(S),N=a.has(S),C=l.has(O),U=a.has(O);if(!w&&!N&&!C&&!U)l.set(S,o),a.set(O,o),c.add(o),s.set(o,[S,O]),o++;else if(w&&U){const B=l.get(S),V=a.get(O);if(B!==V){const j=s.get(V),G=s.get(B);if(!j||!G)continue;s.delete(B),c.delete(B),a.set(G[G.length-1],V),a.delete(j[j.length-1]);for(const se of G)j.push(se)}else c.delete(V);l.delete(S),a.delete(O)}else if(N&&C){const B=l.get(O),V=a.get(S);if(B!==V){const j=s.get(V),G=s.get(B);if(!j||!G)continue;s.delete(B),c.delete(B),a.set(G[G.length-1],V),a.delete(j[j.length-1]);for(const se of G)j.push(se)}else c.delete(V);l.delete(O),a.delete(S)}else if(w&&C){const B=l.get(O),V=l.get(S),j=s.get(V),G=s.get(B);if(!j||!G)continue;s.delete(B),c.delete(B),l.delete(j[0]),l.delete(G[0]),a.delete(G[G.length-1]),l.set(G[G.length-1],V),G.reverse(),j.splice(0,0,...G)}else if(N&&U){const B=a.get(O),V=a.get(S),j=s.get(V),G=s.get(B);if(!j||!G)continue;s.delete(B),c.delete(B),a.delete(j[j.length-1]),a.delete(G[G.length-1]),l.delete(G[0]),a.set(G[0],V),G.reverse(),j.push(...G)}else if(w){const B=l.get(S),V=s.get(B);if(!V)continue;V.unshift(O),l.delete(S),l.set(O,B)}else if(N){const B=a.get(S),V=s.get(B);if(!V)continue;V.push(O),a.delete(S),a.set(O,B)}else if(C){const B=l.get(O),V=s.get(B);if(!V)continue;V.unshift(S),l.delete(O),l.set(S,B)}else if(U){const B=a.get(O),V=s.get(B);if(!V)continue;V.push(S),a.delete(O),a.set(S,B)}}const d=[];for(const[u,f]of s){if(c.has(u))continue;const m=[],E=new Map;let g=0;for(const _ of f){const T=n[_];m.push(T[0],T[1]),E.set(g++,_)}const p=P1(m);for(const _ of p){const T=E.get(_);if(T===void 0)throw new Error("Map error!");d.push(T)}}return d}updatePlane2DCoordinateSystem(){this._plane2DCoordinateSystem=new fe;const e=new F(1,0,0),t=new F(0,1,0),i=this._plane.normal,n=new F;this._plane.coplanarPoint(n),this._planeAxis==="x"?e.crossVectors(t,i):this._planeAxis==="y"?t.crossVectors(i,e):this._planeAxis==="z"||(e.crossVectors(t,i).normalize(),t.crossVectors(i,e)),this._plane2DCoordinateSystem.fromArray([e.x,e.y,e.z,0,t.x,t.y,t.z,0,i.x,i.y,i.z,0,n.x,n.y,n.z,1]),this._plane2DCoordinateSystem.invert()}getStyleAndScene(){if(!this.world.renderer)return null;const e=this.world.renderer instanceof _d;if(this.styleName&&e){const t=this.world.renderer,i=t.postproduction.customEffects.outlinedMeshes[this.styleName],n=t.postproduction.customEffects.outlineScene;return{style:i,outlineScene:n}}return null}}class $1{constructor(e,t,i){D(this,"onDisposed",new oe),D(this,"onAfterUpdate",new oe),D(this,"onBeforeUpdate",new oe),D(this,"enabled",!0),D(this,"fillNeedsUpdate",!1),D(this,"components"),D(this,"world"),D(this,"_edges",{}),D(this,"_visible",!0),D(this,"_inverseMatrix",new fe),D(this,"_localPlane",new Kt),D(this,"_tempLine",new Ot),D(this,"_tempVector",new F),D(this,"_plane"),this.components=e,this.world=t,this._plane=i}get visible(){return this._visible}set visible(e){this._visible=e;for(const t in this._edges){const i=this._edges[t];e?this.world.scene.three.add(i.mesh):i.mesh.removeFromParent(),i.fill&&(i.fill.visible=e)}}get fillMeshes(){const e=[];for(const t in this._edges){const i=this._edges[t];i.fill&&e.push(i.fill.mesh)}return e}update(){const e=this.components.get(cc).styles.list;this.updateDeletedEdges(e);for(const t in e)this.drawEdges(t);this.fillNeedsUpdate=!1}get(){return this._edges}dispose(){const e=Object.keys(this._edges);for(const t of e)this.disposeEdge(t);this.onDisposed.trigger(),this.onDisposed.reset()}newEdgesMesh(e){const t=this.components.get(cc).styles.list[e].lineMaterial,i=new Ve,n=new Float32Array(3e5),s=new ot(n,3,!1);s.setUsage(eT),i.setAttribute("position",s);const o=new EE(i,t);return o.frustumCulled=!1,o}newFillMesh(e,t){const i=this.components.get(cc).styles.list[e],n=i.fillMaterial;if(n){const s=new J1(this.components,this.world,this._plane,t,n);return this.newFillOutline(e,s,i),s}}newFillOutline(e,t,i){if(!i.outlineMaterial||!this.world.renderer)return;const n=this.world.renderer;if(n instanceof _d){const s=n.postproduction.customEffects.outlinedMeshes;s[e]||(s[e]={meshes:new Set,material:i.outlineMaterial}),t.styleName=e}}drawEdges(e){const t=this.components.get(cc).styles.list[e];this._edges[e]||this.initializeStyle(e);const i=this._edges[e];let n=0;const s=i.mesh.geometry.attributes.position;s.array.fill(0);const o=[];let a=0;const l=new Map;for(const h of t.meshes)if(h.geometry){if(!h.geometry.boundsTree)throw new Error("Bounds tree not found for clipping edges subset.");if(h instanceof Bi){if(h.count===0)continue;const d=h;for(let u=0;u<d.count;u++){const f=d instanceof Ac,m=d,E=t.fragments[m.fragment.id];if(f&&E){const _=m.fragment.getItemID(u);if(_===null||!E.has(_))continue}const g=new ge(h.geometry);g.matrix.copy(h.matrix);const p=new fe;if(d.getMatrixAt(u,p),g.applyMatrix4(p),g.applyMatrix4(h.matrixWorld),g.updateMatrix(),g.updateMatrixWorld(),this._inverseMatrix.copy(g.matrixWorld).invert(),this._localPlane.copy(this._plane).applyMatrix4(this._inverseMatrix),n=this.shapecast(g,s,n),n!==a){if(f&&E){const _=m.fragment.getItemID(u);_!==null&&l.set(n,{[m.fragment.id]:new Set([_])})}o.push(n),a=n}}}else this._inverseMatrix.copy(h.matrixWorld).invert(),this._localPlane.copy(this._plane).applyMatrix4(this._inverseMatrix),n=this.shapecast(h,s,n),n!==a&&(o.push(n),a=n)}i.mesh.geometry.setDrawRange(0,n),i.mesh.position.copy(this._plane.normal).multiplyScalar(1e-4),s.needsUpdate=!0;const c=i.mesh.geometry.attributes.position;Number.isNaN(c.array[0])||this.fillNeedsUpdate&&i.fill&&(i.fill.geometry=i.mesh.geometry,i.fill.update(o,l),i.fill.visible=this._visible)}initializeStyle(e){const t=this.newEdgesMesh(e),i=t.geometry,n=this.newFillMesh(e,i);this._edges[e]={mesh:t,name:e,fill:n}}shapecast(e,t,i){return e.geometry.boundsTree.shapecast({intersectsBounds:n=>this._localPlane.intersectsBox(n),intersectsTriangle:n=>{let s=0;if(this._tempLine.start.copy(n.a),this._tempLine.end.copy(n.b),this._localPlane.intersectLine(this._tempLine,this._tempVector)){const o=this._tempVector.applyMatrix4(e.matrixWorld);t.setXYZ(i,o.x,o.y,o.z),s++,i++}if(this._tempLine.start.copy(n.b),this._tempLine.end.copy(n.c),this._localPlane.intersectLine(this._tempLine,this._tempVector)){const o=this._tempVector.applyMatrix4(e.matrixWorld);t.setXYZ(i,o.x,o.y,o.z),s++,i++}if(this._tempLine.start.copy(n.c),this._tempLine.end.copy(n.a),this._localPlane.intersectLine(this._tempLine,this._tempVector)){const o=this._tempVector.applyMatrix4(e.matrixWorld);t.setXYZ(i,o.x,o.y,o.z),s++,i++}s!==2&&(i-=s)}}),i}updateDeletedEdges(e){const t=Object.keys(this._edges);for(const i of t)e[i]===void 0&&(this.disposeEdge(i),this.disposeOutline(i))}disposeOutline(e){if(!this.world.renderer)return;const t=this.world.renderer;if(t instanceof _d){const i=t.postproduction.customEffects.outlinedMeshes;delete i[e]}}disposeEdge(e){const t=this.components.get(xn),i=this._edges[e];i.fill&&i.fill.dispose(),t.destroy(i.mesh,!1),delete this._edges[e]}}class Oc extends Qc{constructor(e,t,i,n,s,o=5,a=!0){super(e,t,i,n,s,o,a),D(this,"edges"),D(this,"edgesMaxUpdateRate",50),D(this,"_visible",!0),D(this,"_edgesVisible",!0),D(this,"updateFill",()=>{this.edges.fillNeedsUpdate=!0,this.edges.update()}),this.edges=new $1(e,t,this.three),this.toggleControls(!0),this.edges.visible=!0,this.onDraggingEnded.add(()=>{this.updateFill(),this.edges.visible=!0}),this.onDraggingStarted.add(()=>this.edges.visible=!1)}get visible(){return this._visible}set visible(e){super.visible=e,this.toggleControls(e)}set enabled(e){this._enabled=e,this.world.renderer&&this.world.renderer.setPlane(e,this.three)}get enabled(){return super.enabled}dispose(){super.dispose(),this.edges.dispose()}}class eF{constructor(){D(this,"onDisposed",new oe),D(this,"enabled",!0),D(this,"list",{}),D(this,"_defaultLineMaterial",new pn({color:0,linewidth:.001})),D(this,"onAfterUpdate",new oe),D(this,"onBeforeUpdate",new oe)}update(e){this.onBeforeUpdate.trigger(this.list),this.onAfterUpdate.trigger(this.list)}create(e,t,i,n,s,o){if(!i.renderer)throw new Error("The given world doesn't have a renderer!");n||(n=this._defaultLineMaterial);for(const c of t)c.geometry.boundsTree||c.geometry.computeBoundsTree();const a=i.renderer;n.clippingPlanes=a.clippingPlanes;const l={name:e,lineMaterial:n,meshes:t,fillMaterial:s,outlineMaterial:o,fragments:{}};return this.list[e]=l,l}dispose(){const e=Object.keys(this.list);for(const t of e)this.deleteStyle(t);this.list={},this.onDisposed.trigger(),this.onDisposed.reset()}deleteStyle(e,t=!0){var i,n;const s=this.list[e];s&&(s.meshes.clear(),t&&(s.lineMaterial.dispose(),(i=s.fillMaterial)==null||i.dispose(),(n=s.outlineMaterial)==null||n.dispose())),delete this.list[e]}}const c0=class h0 extends We{constructor(e){super(e),D(this,"onDisposed",new oe),D(this,"enabled",!0),D(this,"styles"),D(this,"fillsNeedUpdate",!1),D(this,"_visible",!0),this.components.list.set(h0.uuid,this),this.styles=new eF}get visible(){return this._visible}set visible(e){this._visible=e;const t=this.components.get(bo);for(const i of t.list)i instanceof Oc&&(i.edges.visible=e)}dispose(){this.styles.dispose(),this.onDisposed.trigger()}async update(e=!1){if(!this.enabled)return;const t=this.components.get(bo);for(const i of t.list)i instanceof Oc&&(e||this.fillsNeedUpdate?i.updateFill():i.update());this.fillsNeedUpdate=!1}};D(c0,"uuid","24dfc306-a3c4-410f-8071-babc4afa5e4d");let cc=c0;const tF={name:"HorizontalBlurShader",uniforms:{tDiffuse:{value:null},h:{value:1/512}},vertexShader:`

		varying vec2 vUv;

		void main() {

			vUv = uv;
			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:`

		uniform sampler2D tDiffuse;
		uniform float h;

		varying vec2 vUv;

		void main() {

			vec4 sum = vec4( 0.0 );

			sum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * h, vUv.y ) ) * 0.051;
			sum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * h, vUv.y ) ) * 0.0918;
			sum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * h, vUv.y ) ) * 0.12245;
			sum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * h, vUv.y ) ) * 0.1531;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;
			sum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * h, vUv.y ) ) * 0.1531;
			sum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * h, vUv.y ) ) * 0.12245;
			sum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * h, vUv.y ) ) * 0.0918;
			sum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * h, vUv.y ) ) * 0.051;

			gl_FragColor = sum;

		}`},iF={name:"VerticalBlurShader",uniforms:{tDiffuse:{value:null},v:{value:1/512}},vertexShader:`

		varying vec2 vUv;

		void main() {

			vUv = uv;
			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:`

		uniform sampler2D tDiffuse;
		uniform float v;

		varying vec2 vUv;

		void main() {

			vec4 sum = vec4( 0.0 );

			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * v ) ) * 0.051;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * v ) ) * 0.0918;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * v ) ) * 0.12245;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * v ) ) * 0.1531;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * v ) ) * 0.1531;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * v ) ) * 0.12245;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * v ) ) * 0.0918;
			sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * v ) ) * 0.051;

			gl_FragColor = sum;

		}`},u0=class io extends We{constructor(e){super(e),D(this,"onDisposed",new oe),D(this,"enabled",!0),D(this,"cameraHeight",10),D(this,"darkness",1.2),D(this,"opacity",1),D(this,"resolution",512),D(this,"amount",3.5),D(this,"planeColor",16777215),D(this,"shadowOffset",0),D(this,"shadowExtraScaleFactor",1.5),D(this,"list",{}),D(this,"tempMaterial",new Ti({visible:!1})),D(this,"depthMaterial",new Kd),this.components.add(io.uuid,this),this.initializeDepthMaterial()}dispose(){for(const e in this.list)this.deleteShadow(e);this.tempMaterial.dispose(),this.depthMaterial.dispose(),this.components=null,this.onDisposed.trigger(io.uuid),this.onDisposed.reset()}create(e,t,i){if(this.list[t])throw new Error(`There is already a shadow with ID ${t}`);const{size:n,center:s,min:o}=this.getSizeCenterMin(e),a=this.createShadow(t,n,i);return this.initializeShadow(a,s,o),this.createPlanes(a,n),this.bakeShadow(e,a),a.root}deleteShadow(e){const t=this.components.get(xn),i=this.list[e];if(delete this.list[e],!i)throw new Error(`No shadow with ID ${e} was found.`);t.destroy(i.root),t.destroy(i.blurPlane),i.rt.dispose(),i.rtBlur.dispose()}createPlanes(e,t){const i=new ur(t.x,t.z).rotateX(Math.PI/2);this.createBasePlane(e,i),io.createBlurPlane(e,i)}initializeShadow(e,t,i){this.initializeRoot(e,t,i),io.initializeRenderTargets(e),io.initializeCamera(e)}bakeShadow(e,t){const i=t.world.scene.three;if(!(i instanceof dr))throw new Error("The core of the scene of the world must be a scene!");if(!t.world.renderer)throw new Error("The given world must have a renderer!");const n=t.world.renderer.three,s=e.map(c=>!!c.parent);for(let c=0;c<e.length;c++)s[c]||i.add(e[c]);const o=i.children.filter(c=>!e.includes(c)&&c!==t.root);for(let c=o.length-1;c>=0;c--)i.remove(o[c]);const a=i.background;i.background=null,i.overrideMaterial=this.depthMaterial;const l=[];for(const c of e)l.push(c.visible),c.visible=!0;n.setRenderTarget(t.rt),n.render(i,t.camera),i.overrideMaterial=null,this.blurShadow(t,this.amount),this.blurShadow(t,this.amount*.4),n.setRenderTarget(null),i.background=a;for(let c=0;c<e.length;c++)e[c].visible=l[c];for(let c=o.length-1;c>=0;c--)i.add(o[c]);for(let c=0;c<e.length;c++)s[c]||i.remove(e[c])}static initializeCamera(e){e.camera.rotation.x=Math.PI/2,e.root.add(e.camera)}static initializeRenderTargets(e){e.rt.texture.generateMipmaps=!1,e.rtBlur.texture.generateMipmaps=!1}initializeRoot(e,t,i){const n=e.world.scene.three;e.root.position.set(t.x,i.y-this.shadowOffset,t.z),n.add(e.root)}createBasePlane(e,t){const i=this.createPlaneMaterial(e),n=new ge(t,i);n.renderOrder=2,e.root.add(n),n.scale.y=-1}static createBlurPlane(e,t){e.blurPlane.geometry=t,e.blurPlane.visible=!1,e.root.add(e.blurPlane)}createPlaneMaterial(e){if(!e.world.renderer)throw new Error("The given world must have a renderer!");const t=e.world.renderer.three;return new Ti({map:e.rt.texture,opacity:this.opacity,transparent:!0,depthWrite:!1,clippingPlanes:t.clippingPlanes})}initializeDepthMaterial(){this.depthMaterial.depthTest=!1,this.depthMaterial.depthWrite=!1;const e="gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );",t="gl_FragColor = vec4( vec3( 0.0 ), ( 1.0 - fragCoordZ ) * darkness );";this.depthMaterial.userData.darkness={value:this.darkness},this.depthMaterial.onBeforeCompile=i=>{i.uniforms.darkness=this.depthMaterial.userData.darkness,i.fragmentShader=`
						uniform float darkness;
						${i.fragmentShader.replace(e,t)}
					`}}createShadow(e,t,i){return this.list[e]={root:new Zn,world:i,rt:new Qt(this.resolution,this.resolution),rtBlur:new Qt(this.resolution,this.resolution),blurPlane:new ge,camera:this.createCamera(t)},this.list[e]}createCamera(e){return new wn(-e.x/2,e.x/2,e.z/2,-e.z/2,0,this.cameraHeight)}getSizeCenterMin(e){const t=e[0].parent,i=new Zn;i.children=e;const n=new je().setFromObject(i);t==null||t.add(...e);const s=new F;n.getSize(s),s.x*=this.shadowExtraScaleFactor,s.z*=this.shadowExtraScaleFactor;const o=new F;n.getCenter(o);const a=n.min;return{size:s,center:o,min:a}}blurShadow(e,t){if(!e.world.renderer)throw new Error("The given world must have a renderer!");const i=new Mt(tF);i.depthTest=!1;const n=new Mt(iF);n.depthTest=!1,e.blurPlane.visible=!0,e.blurPlane.material=i,e.blurPlane.material.uniforms.tDiffuse.value=e.rt.texture,i.uniforms.h.value=t*1/256;const s=e.world.renderer.three;s.setRenderTarget(e.rtBlur),s.render(e.blurPlane,e.camera),e.blurPlane.material=n,e.blurPlane.material.uniforms.tDiffuse.value=e.rtBlur.texture,n.uniforms.v.value=t*1/256,s.setRenderTarget(e.rt),s.render(e.blurPlane,e.camera),e.blurPlane.visible=!1}};D(u0,"uuid","f833a09a-a3ab-4c58-b03e-da5298c7a1b6");let mF=u0;const nF=class d0 extends We{constructor(e){super(e),D(this,"enabled",!0),D(this,"inputs",["OBC","BUI"]),D(this,"_requestEventID","thatOpenCompanyComponentRequested"),D(this,"_createEventID","thatOpenCompanyComponentCreated"),e.add(d0.uuid,this)}async import(e){return new Promise(t=>{const i=document.createElement("script"),n=`
        function main() {
          const { ${this.inputs} } = window.ThatOpenCompany;
        
          ${e}
        
          const onComponentRequested = () => {
            window.removeEventListener("${this._requestEventID}", onComponentRequested);
            const event = new CustomEvent("${this._createEventID}", { detail: main });
            window.dispatchEvent(event);
          };
          
          window.addEventListener("${this._requestEventID}", onComponentRequested);
        }
        
        main();
      `,s=o=>{window.removeEventListener(this._createEventID,s);const a=o.detail,l=this.components.get(a);i.remove(),t(l)};i.addEventListener("load",()=>{window.addEventListener(this._createEventID,s),window.dispatchEvent(new Event(this._requestEventID))}),i.src=URL.createObjectURL(new File([n],"temp.js")),document.head.appendChild(i)})}};D(nF,"uuid","74c0c370-1af8-4ca9-900a-4a4196c0f2f5");const sF=["Station","Radius","Length","InitialKP","FinalKP","KP","Slope","Height","InitialKPV","FinalKPV"],f0=class p0 extends We{constructor(e){super(e),D(this,"enabled",!0),D(this,"world",null),D(this,"_markerKey",0),D(this,"_list",new Map),D(this,"type","horizontal"),D(this,"divisionLength",100),e.add(p0.uuid,this)}addKPStation(e,t,i){const n=this.components.get(Gs),s=document.createElement("div"),o=document.createElement("div");s.appendChild(o),o.innerHTML=t,o.style.color=n.color,o.style.borderBottom="1px dotted white",o.style.width="160px",o.style.textAlign="left";const a=new wi(e,s),l=new F;l.x=i.geometry.attributes.position.getX(i.geometry.attributes.position.count-1),l.y=i.geometry.attributes.position.getY(i.geometry.attributes.position.count-1),l.z=i.geometry.attributes.position.getZ(i.geometry.attributes.position.count-1);const c=new F;c.x=i.geometry.attributes.position.getX(i.geometry.attributes.position.count-2),c.y=i.geometry.attributes.position.getY(i.geometry.attributes.position.count-2),c.z=i.geometry.attributes.position.getZ(i.geometry.attributes.position.count-2);const h=new F;h.x=(l.x+c.x)/2,h.y=(l.y+c.y)/2,h.z=(l.z+c.z)/2,a.three.position.copy(h);const d=new F;d.subVectors(l,c).normalize();const u=new si;u.setFromUnitVectors(new F(0,1,0),d);const f=new wo().setFromQuaternion(u).z,m=sr.radToDeg(f);o.style.transform=`rotate(${-m-90}deg) translate(-35%, -50%)`;const E=this._markerKey.toString();n.setupEvents(e,!0),n.getWorldMarkerList(e).set(E,{label:a,key:E,merged:!1,static:!1}),this._markerKey++,this.save(E,"KP")}addVerticalMarker(e,t,i,n,s){const o=this.components.get(Gs),a=document.createElement("span");a.innerHTML=t,a.style.color=o.color;const l=new wi(e,a,s);if(n==="Height"){const h=document.createElement("span");h.innerHTML=t,h.style.color=o.color;const{position:d}=i.geometry.attributes,u=(d.array.length/3-1)*3,f=d.array.slice(u,u+3);l.three.position.set(f[0],f[1]+10,f[2])}else if(n==="InitialKPV"){const{position:h}=i.geometry.attributes,d=h.getX(0),u=h.getY(0),f=h.getZ(0);l.three.position.set(d-20,u,f)}else if(n==="FinalKPV"){const{position:h}=i.geometry.attributes,d=h.getX(i.geometry.attributes.position.count-1),u=h.getY(i.geometry.attributes.position.count-1),f=h.getZ(i.geometry.attributes.position.count-1);l.three.position.set(d+20,u,f)}else if(n==="Slope"){a.style.color="grey";const{position:h}=i.geometry.attributes,d=new F;d.x=h.getX(0),d.y=h.getY(0),d.z=h.getZ(0);const u=new F;u.x=h.getX(h.count-1),u.y=h.getY(h.count-1),u.z=h.getZ(h.count-1);const f=new F;f.addVectors(d,u).multiplyScalar(.5),l.three.position.set(f.x,f.y-10,f.z)}const c=this._markerKey.toString();return o.setupEvents(e,!0),o.getWorldMarkerList(e).set(c,{label:l,key:c,type:n,merged:!1,static:!1}),this._markerKey++,this.save(c,n),l}addCivilMarker(e,t,i,n){const s=this.components.get(Gs),o=document.createElement("span");o.innerHTML=t,o.style.color=s.color;const a=new wi(e,o);if(n==="InitialKP"){const c=i.geometry.attributes.position.getX(0),h=i.geometry.attributes.position.getY(0),d=i.geometry.attributes.position.getZ(0);a.three.position.set(c+2,h+2,d)}else if(n==="FinalKP"){const c=i.geometry.attributes.position.getX(i.geometry.attributes.position.count-1),h=i.geometry.attributes.position.getY(i.geometry.attributes.position.count-1),d=i.geometry.attributes.position.getZ(i.geometry.attributes.position.count-1);a.three.position.set(c+2,h-2,d)}else if(n==="Length"){const c=new F;c.x=i.geometry.attributes.position.getX(0),c.y=i.geometry.attributes.position.getY(0),c.z=i.geometry.attributes.position.getZ(0);const h=new F;h.x=i.geometry.attributes.position.getX(i.geometry.attributes.position.count-1),h.y=i.geometry.attributes.position.getY(i.geometry.attributes.position.count-1),h.z=i.geometry.attributes.position.getZ(i.geometry.attributes.position.count-1);const d=c.distanceTo(h);a.three.element.innerText=d.toFixed(2);const u=h.clone().add(c).divideScalar(2);a.three.position.copy(u)}const l=this._markerKey.toString();return s.setupEvents(e,!0),s.getWorldMarkerList(e).set(l,{label:a,key:l,type:n,merged:!1,static:!1}),this._markerKey++,this.save(l,n),a}showKPStations(e){if(!this.world)throw new Error("A world is needed for this component to work!");if(this.type==="horizontal"){const t=this.generateStartAndEndKP(e);for(const[,n]of t)this.addKPStation(this.world,n.value,n.normal);const i=this.generateConstantKP(e);for(const[,n]of i)this.addKPStation(this.world,n.value,n.normal)}}showCurveLength(e,t){if(!this.world)throw new Error("A world is needed for this component to work!");const i=this.components.get(Gs),n=e.length,s=`${t.toFixed(2)} m`,o=Math.round(n/2),a=e[o],l=i.create(this.world,s,a,!0);l!==void 0&&this.save(l,"Radius")}showLineLength(e,t){if(!this.world)throw new Error("A world is needed for this component to work!");const i=this.components.get(Gs),n=new F;n.x=e.geometry.getAttribute("position").getX(0),n.y=e.geometry.getAttribute("position").getY(0),n.z=e.geometry.getAttribute("position").getZ(0);const s=new F;s.x=e.geometry.getAttribute("position").getX(1),s.y=e.geometry.getAttribute("position").getY(1),s.z=e.geometry.getAttribute("position").getZ(1);const o=`${t.toFixed(2)} m`,a=new F;a.addVectors(n,s).multiplyScalar(.5);const l=i.create(this.world,o,a,!0);l!==void 0&&this.save(l,"Radius")}showCurveRadius(e,t){if(!this.world)throw new Error("A world is needed for this component to work!");const i=this.components.get(Gs),n=new F;n.x=e.geometry.getAttribute("position").getX(0),n.y=e.geometry.getAttribute("position").getY(0),n.z=e.geometry.getAttribute("position").getZ(0);const s=new F;s.x=e.geometry.getAttribute("position").getX(1),s.y=e.geometry.getAttribute("position").getY(1),s.z=e.geometry.getAttribute("position").getZ(1);const o=`R = ${t.toFixed(2)} m`,a=new F;a.addVectors(n,s).multiplyScalar(.5);const l=i.create(this.world,o,a,!0);l!==void 0&&this.save(l,"Radius")}deleteByType(e=sF){const t=this.components.get(Gs);for(const i of e){const n=this._list.get(i);if(n){for(const s of n)t.delete(s);this._list.delete(i)}}}generateStartAndEndKP(e){const{alignment:t}=e.curve,i=new Map;for(const n of t.horizontal){const s=n.getLength();if(i.size>0){const o=n.index-1,a=i.get(o).distance+s,l=n.mesh.geometry.getAttribute("position"),c=l.count-1,h=new F;h.x=l.getX(c),h.y=l.getY(c),h.z=l.getZ(c);const d=this.createNormalLine(n.mesh);i.set(n.index,{value:this.getShortendKPValue(a),distance:a,point:h,normal:d})}else{const o=n.mesh.geometry.getAttribute("position"),a=o.count-1,l=new F;l.x=o.getX(a),l.y=o.getY(a),l.z=o.getZ(a);const c=this.createNormalLine(n.mesh);i.set(n.index,{value:this.getShortendKPValue(s),distance:s,point:l,normal:c})}}return i}createNormalLine(e){const t=e.geometry.attributes.position.count-1,i=t-1,n=new F;n.x=e.geometry.attributes.position.getX(t),n.y=e.geometry.attributes.position.getY(t),n.z=e.geometry.attributes.position.getZ(t);const s=new F;s.x=e.geometry.attributes.position.getX(i),s.y=e.geometry.attributes.position.getY(i),s.z=e.geometry.attributes.position.getZ(i);const o=new F().subVectors(n,s).clone().applyAxisAngle(new F(0,0,1),Math.PI*.5).normalize(),a=new Ve().setFromPoints([o.clone().setLength(10).add(n),o.clone().setLength(-10).add(n)]);return new Dt(a)}generateConstantKP(e){const{alignment:t}=e.curve,i=new Map,n=t.getLength("horizontal"),s=Math.floor(n/this.divisionLength);for(let o=0;o<s;o++){const a=o/s,l=t.getPointAt(a,"horizontal"),c=n*a,h=this.getNormal(t,l);i.set(o,{value:this.getShortendKPValue(c),distance:c,point:l,normal:h})}return i}getNormal(e,t){const i=[],n={start:new F,end:new F};for(let a=0;a<e.horizontal.length;a++){const l=e.horizontal[a].mesh.geometry.attributes.position,c=l.count;for(let h=0;h<c;h++){const d=l.getX(h),u=l.getY(h),f=l.getZ(h);i.push(new F(d,u,f))}}for(let a=0;a<i.length-1;a++){const l=i[a],c=i[a+1],h=l.distanceTo(t),d=c.distanceTo(t),u=l.distanceTo(c);Math.abs(h+d-u)<1e-5&&(n.start=l,n.end=c)}const s=new F().subVectors(n.end,n.start).clone().applyAxisAngle(new F(0,0,1),Math.PI*.5).normalize(),o=new Ve().setFromPoints([s.clone().setLength(10).add(t),s.clone().setLength(-10).add(t)]);return new Dt(o,new pn({color:16711680}))}getShortendKPValue(e){const t=e.toFixed(2),[i,n]=t.toString().split("."),s=n||"00";if(parseInt(i,10)>1e3&&parseInt(i,10)<1e4){const[o,...a]=i;return`${o}+${a.join("")}.${s}`}if(parseInt(i,10)>1e4){const[o,a,...l]=i;return`${o}${a}+${l.join("")}.${s}`}return`0+${i.padStart(3,"0")}.${s}`}save(e,t){this._list.has(t)||this._list.set(t,new Set),this._list.get(t).add(e)}};D(f0,"uuid","0af12c32-81ee-4100-a030-e9ae546f6170");let ma=f0;class m0 extends We{constructor(e){super(e),D(this,"onHighlight",new oe),D(this,"onMarkerChange",new oe),D(this,"onMarkerHidden",new oe),D(this,"onDisposed",new oe),D(this,"enabled",!0),D(this,"mouseMarkers"),D(this,"_curves",[]),D(this,"_previousAlignment",null),D(this,"_highlighter"),D(this,"_world",null),D(this,"updateLinesResolution",t=>{var i;(i=this._highlighter)==null||i.setResolution(t)}),D(this,"onMouseMove",t=>{var i,n,s;if(!this._world)throw new Error("No world was given for this navigator!");if(!this._world.renderer)return;const o=this._world.renderer.three.domElement.parentElement,a=this._world.camera.three,l=(i=this._highlighter)==null?void 0:i.castRay(t,a,o,this._curves);if(l){const{object:c}=l;(n=this._highlighter)==null||n.hover(c),this.updateMarker(l,"hover");return}this.mouseMarkers&&(this.mouseMarkers.hover.visible=!1),(s=this._highlighter)==null||s.unHover(),this.onMarkerHidden.trigger({type:"hover"})}),D(this,"onClick",t=>{var i,n;if(!this._world)throw new Error("No world was given for this navigator!");if(!this._world.renderer)return;const s=this._world.renderer.three.domElement.parentElement,o=this._world.camera.three,a=(i=this._highlighter)==null?void 0:i.castRay(t,o,s,this._curves);if(a){const l=a,c=l.object;if((n=this._highlighter)==null||n.select(c),this.updateMarker(l,"select"),this._world.camera.hasCameraControls()&&(c.geometry.boundingBox||c.geometry.computeBoundingBox(),c.geometry.boundingBox)){const h=this.getScaledBox(c.geometry.boundingBox,2);this._world.camera.controls.fitToBox(h,!0)}this.onHighlight.trigger({mesh:c,point:l.point}),this._previousAlignment!==c.curve.alignment&&(this.components.get(ma).showKPStations(c),this._previousAlignment=c.curve.alignment)}}),D(this,"onControlsUpdated",()=>{if(!this._world)throw new Error("No world was given for this navigator!");if(!(this._world.camera.three instanceof wn)||!this._highlighter)return;const{zoom:t,left:i,right:n,top:s,bottom:o}=this._world.camera.three,a=i-n,l=s-o,c=Math.max(a,l)/t,h=40,{caster:d}=this._highlighter;d.params.Line.threshold=c/h})}get highlighter(){if(!this._highlighter)throw new Error("Highlighter not initialized. You must set a world first!");return this._highlighter}get world(){return this._world}set world(e){var t,i,n;if(e===this._world||(this._world&&this.setupEvents(!1),this._world=e,(t=this._highlighter)==null||t.dispose(),(i=this.mouseMarkers)==null||i.hover.dispose(),(n=this.mouseMarkers)==null||n.select.dispose(),!e))return;const s=e.scene.three;this._highlighter=new $I(s,this.view),this.mouseMarkers={select:this.newMouseMarker("#ffffff",e),hover:this.newMouseMarker("#575757",e)},this.setupEvents(!0)}async draw(e,t){if(!e.civilData)throw new Error("The provided model doesn't have civil data!");if(!this._world)throw new Error("No world was given for this navigator!");const{alignments:i}=e.civilData,n=t||i.values(),s=this._world.scene.three,o=new je;o.makeEmpty(),o.min.set(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),o.max.set(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);for(const l of n){if(!l)throw new Error("Alignment not found!");for(const c of l[this.view])if(s.add(c.mesh),this._curves.push(c.mesh),!o.isEmpty())o.expandByObject(c.mesh);else{c.mesh.geometry.computeBoundingBox();const h=c.mesh.geometry.boundingBox;h instanceof je&&o.copy(h).applyMatrix4(c.mesh.matrixWorld)}}const a=this.getScaledBox(o,1.2);this._world.camera.hasCameraControls()&&await this._world.camera.controls.fitToBox(a,!1)}async dispose(){var e;(e=this._highlighter)==null||e.dispose(),this.clear(),this.onHighlight.reset(),this._curves=[],this.onDisposed.trigger(),this.onDisposed.reset()}clear(){var e,t;(e=this._highlighter)==null||e.unSelect(),(t=this._highlighter)==null||t.unHover();for(const i of this._curves)i.removeFromParent();this._curves=[]}setMarker(e,t,i){if(!this._curves.length)return;const n=e.getCurveAt(t,this.view),s=e.getPointAt(t,this.view),{index:o}=n.curve.getSegmentAt(n.percentage);this.setMouseMarker(s,n.curve.mesh,o,i)}setDefSegments(e){const t=[],i=[],n=(s,o)=>{const a=o[1]-s[1],l=o[0]-s[0];return a/l};for(let s=0;s<e.length;s++){const o=e[s];let a,l,c,h;for(let u=0;u<Object.keys(o).length/3;u++)if(o[u*3]!==void 0&&o[u*3+1]!==void 0){a=o[u*3],l=o[u*3+1];break}for(let u=Object.keys(o).length/3-1;u>=0;u--)if(o[u*3]!==void 0&&o[u*3+1]!==void 0){c=o[u*3],h=o[u*3+1];break}const d=(n([a,l],[c,h])*100).toFixed(2);i.push({slope:d})}for(const s of e)for(let o=0;o<s.length-3;o+=3){const a=s[o],l=s[o+1],c=s[o+2],h=s[o+3],d=s[o+4],u=s[o+5];t.push({start:new F(a,l,c),end:new F(h,d,u)})}return{defSegments:t,slope:i}}hideMarker(e){this.mouseMarkers&&(this.mouseMarkers[e].visible=!1)}setupEvents(e){var t,i;if(!this._world)throw new Error("No world was given for this navigator!");if(this._world.isDisposing||!this._world.renderer)return;const n=this._world.renderer.three.domElement.parentElement;(t=this._world.renderer)==null||t.onResize.remove(this.updateLinesResolution),n.removeEventListener("pointermove",this.onMouseMove),n.removeEventListener("click",this.onClick),this._world.camera.hasCameraControls()&&this._world.camera.controls.removeEventListener("update",this.onControlsUpdated),e&&(n.addEventListener("pointermove",this.onMouseMove),n.addEventListener("click",this.onClick),(i=this._world.renderer)==null||i.onResize.add(this.updateLinesResolution),this._world.camera.hasCameraControls()&&this._world.camera.controls.addEventListener("update",this.onControlsUpdated))}newMouseMarker(e,t){if(!this._world)throw new Error("No world was given for this navigator!");const i=t.scene.three,n=document.createElement("div"),s=document.createElement("div");n.appendChild(s),s.style.backgroundColor=e,s.style.width="3rem",s.style.height="3px";const o=new wi(this._world,n,i);return o.visible=!1,o}setMouseMarker(e,t,i,n){if(i===void 0||!this.mouseMarkers)return;this.mouseMarkers[n].visible=!0;const s=this.mouseMarkers[n].three;s.position.copy(e);const o=t,{startPoint:a,endPoint:l}=o.curve.getSegment(i),c=Math.atan2(l.y-a.y,l.x-a.x),h=s.element.children[0],d=90-c/Math.PI*180;h.style.transform=`rotate(${d}deg)`}updateMarker(e,t){const{point:i,index:n,object:s}=e,o=s,a=o.curve,l=o.curve.alignment,c=l.getPercentageAt(i,this.view),h=i.clone();this.setMouseMarker(h,o,n,t),c!==null&&this.onMarkerChange.trigger({alignment:l,percentage:c,type:t,curve:a})}getScaledBox(e,t){const i=new je,n=new F,s=new F;return e.getCenter(s),e.getSize(n),n.multiplyScalar(t),i.setFromCenterAndSize(s,n),i}}class rF{constructor(e,t,i){D(this,"components"),D(this,"_scene"),D(this,"_world"),D(this,"offset",10),D(this,"markupLines",[]),D(this,"currentCurveMesh"),D(this,"markupMaterial",new pn({color:6842472})),this.components=e,this._scene=t,this._world=i}showCurveInfo(e){switch(this.disposeMarkups(),this.currentCurveMesh=e,e.curve.data.TYPE){case"LINE":this.showLineInfo(e,this.offset);break;case"CIRCULARARC":this.showCircularArcInfo(e,this.offset);break;case"CLOTHOID":this.showClothoidInfo(e,this.offset);break;default:console.log("Unknown curve type:",e.curve.data.TYPE);break}}updateOffset(e,t,i){const n=Math.max(e.height,e.width)/(t*150);n!==this.offset&&(this.offset=n,i&&this.currentCurveMesh&&this.showCurveInfo(this.currentCurveMesh))}dispose(){for(const e of this.markupLines)e.removeFromParent();this.disposeMarkups(),this.markupMaterial.dispose()}disposeMarkups(){for(const e of this.markupLines)e.geometry.dispose(),e.removeFromParent();this.markupLines=[]}unSelect(){this.disposeMarkups()}calculateTangent(e,t){const i=t*3,n=Math.max(0,i-3),s=Math.min(e.length-3,i+3),o=new F().fromArray(e,n);return new F().fromArray(e,s).clone().sub(o).normalize()}calculateParallelCurve(e,t,i){const n=[];for(let s=0;s<t;s++){const o=this.calculateTangent(e,s).clone().applyAxisAngle(new F(0,0,1),Math.PI/2);o.normalize();const a=o.clone().multiplyScalar(i),l=s*3,c=new F().fromArray(e,l).add(a);n.push(c)}return n}calculateDimensionLines(e,t){const i=[],n=e.geometry.attributes.position.array,s=t.geometry.attributes.position.array;if(n.length<6&&s.length<6)throw new Error("Line must have at least two vertices");const o=new F(n[0],n[1],n[2]),a=new F(s[0],s[1],s[2]),l=[],c=n.length-3,h=new F(n[c],n[c+1],n[c+2]),d=s.length-3,u=new F(s[d],s[d+1],s[d+2]);return i.push(o,a),l.push(h,u),{startDimensionPoints:i,endDimensionPoints:l}}offsetDimensionLine(e,t){const i=new F().copy(e[e.length-1]).sub(e[0]).normalize().clone().multiplyScalar(t);return e.map(n=>n.clone().add(i))}showLineInfo(e,t){const i=this.components.get(ma);i.world=this._world,i.deleteByType(["Length","Radius"]);const n=e.geometry.attributes.position.array,s=this.calculateParallelCurve(n,n.length/3,t),o=new Ve().setFromPoints(s),a=new Dt(o,this.markupMaterial);i.showLineLength(a,e.curve.getLength()),this._scene.add(a),this.markupLines.push(a);const{startDimensionPoints:l,endDimensionPoints:c}=this.calculateDimensionLines(e,a),h=this.offsetDimensionLine(l,t*.1),d=this.offsetDimensionLine(c,t*.1),u=new Ve().setFromPoints(h),f=new Ve().setFromPoints(d),m=new Dt(u,this.markupMaterial);this._scene.add(m),this.markupLines.push(m);const E=new Dt(f,this.markupMaterial);this._scene.add(E),this.markupLines.push(E)}showClothoidInfo(e,t){const i=this.components.get(ma);i.world=this._world,i.deleteByType(["Length","Radius"]);const n=e.geometry.attributes.position.array,s=this.calculateParallelCurve(n,n.length/3,t),o=new Ve().setFromPoints(s);i.showCurveLength(s,e.curve.getLength());const a=new Dt(o,this.markupMaterial);this._scene.add(a),this.markupLines.push(a);const{startDimensionPoints:l,endDimensionPoints:c}=this.calculateDimensionLines(e,a),h=this.offsetDimensionLine(l,t*.1),d=this.offsetDimensionLine(c,t*.1),u=new Ve().setFromPoints(h),f=new Ve().setFromPoints(d),m=new Dt(u,this.markupMaterial);this._scene.add(m),this.markupLines.push(m);const E=new Dt(f,this.markupMaterial);this._scene.add(E),this.markupLines.push(E)}showCircularArcInfo(e,t){const i=this.components.get(ma);i.world=this._world,i.deleteByType(["Length","Radius"]);const n=e.curve.data.RADIUS,s=e.geometry.attributes.position.array,o=e.geometry.attributes.position.count,a=[],l=new F(s[0],s[1],s[2]),c=(o-1)*3,h=new F(s[c],s[c+1],s[c+2]),d=o/2*3,u=new F(s[d],s[d+1],s[d+2]),f=h.clone().sub(l).normalize(),m=new F(-f.y,f.x,0);m.multiplyScalar(n);const E=u.clone().add(m);a.push(u),a.push(E);const g=new Ve().setFromPoints(a),p=new Dt(g,this.markupMaterial);i.showCurveRadius(p,Math.abs(n)),this._scene.add(p),this.markupLines.push(p);const _=[];for(let N=0;N<o;N++){const C=this.calculateTangent(s,N),U=e.curve.data.RADIUS,B=new F(C.y,-C.x,0);B.normalize(),U<0&&B.negate();const V=B.clone().multiplyScalar(t),j=N*3,G=new F(s[j]+V.x,s[j+1]+V.y,s[j+2]+V.z);_.push(G)}const T=new Ve().setFromPoints(_);i.showCurveLength(_,e.curve.getLength());const I=new Dt(T,this.markupMaterial);this._scene.add(I),this.markupLines.push(I);const{startDimensionPoints:v,endDimensionPoints:b}=this.calculateDimensionLines(e,I),x=this.offsetDimensionLine(v,t*.1),A=this.offsetDimensionLine(b,t*.1),y=new Ve().setFromPoints(x),S=new Ve().setFromPoints(A),O=new Dt(y,this.markupMaterial);this._scene.add(O),this.markupLines.push(O);const w=new Dt(S,this.markupMaterial);this._scene.add(w),this.markupLines.push(w)}}const g0=class E0 extends m0{constructor(e){super(e),D(this,"view","horizontal"),D(this,"planHighlighter"),this.components.add(E0.uuid,this),this.onHighlight.add(({mesh:t})=>{!this._highlighter||!this.planHighlighter||this.planHighlighter.showCurveInfo(t)})}get world(){return super.world}set world(e){var t;super.world=e,e&&((t=this.planHighlighter)==null||t.dispose(),this.planHighlighter=new rF(this.components,e.scene.three,e))}};D(g0,"uuid","3096dea0-5bc2-41c7-abce-9089b6c9431b");let gF=g0;const I0=class _0 extends m0{constructor(e){super(e),D(this,"enabled",!0),D(this,"view","vertical"),this.components.add(_0.uuid,this)}get world(){return super.world}set world(e){this.world!==e&&(super.world=e,this._highlighter&&this._highlighter.onSelect.add(t=>{if(!this.world)throw new Error("A world is needed to work with this component!");const i=this.components.get(ma);i.deleteByType(["Slope","Height","InitialKPV","FinalKPV"]);const{alignment:n}=t.curve,s=[];for(const c of n.vertical){const h=c.mesh.geometry.attributes.position.array;s.push(h)}const{defSegments:o,slope:a}=this.setDefSegments(s),l=this.world.scene.three;for(let c=0;c<n.vertical.length;c++){const h=n.vertical[c];i.addVerticalMarker(this.world,`S: ${a[c].slope}%`,h.mesh,"Slope",l),i.addVerticalMarker(this.world,`H: ${o[c].end.y.toFixed(2)}`,h.mesh,"Height",l)}i.addVerticalMarker(this.world,"KP: 0",n.vertical[0].mesh,"InitialKPV",l),i.addVerticalMarker(this.world,`KP: ${n.vertical.length}`,n.vertical[n.vertical.length-1].mesh,"FinalKPV",l)}))}};D(I0,"uuid","097eea29-2d5a-431a-a247-204d44670621");let EF=I0;const T0=class v0 extends We{constructor(e){super(e),D(this,"onHighlight",new oe),D(this,"onMarkerChange",new oe),D(this,"onMarkerHidden",new oe),D(this,"enabled",!0),D(this,"mouseMarkers"),D(this,"_highlighter"),D(this,"_curves",[]),D(this,"_world",null),D(this,"updateLinesResolution",t=>{var i;(i=this.highlighter)==null||i.setResolution(t)}),D(this,"onClick",t=>{if(!this.enabled||!this._highlighter)return;if(!this.world)throw new Error("No world found!");if(!this.world.renderer)return;const i=this.world.renderer.three.domElement,n=this.world.camera.three,s=this._highlighter.castRay(t,n,i,this._curves);if(s){const o=s.object;this._highlighter.select(o),this.updateMarker(s,"select");const{point:a,index:l}=s;l!==void 0&&this.onHighlight.trigger({curve:o,point:a,index:l});return}this._highlighter.unSelect(),this.mouseMarkers&&(this.mouseMarkers.hover.visible=!1),this.onMarkerHidden.trigger({type:"hover"})}),D(this,"onMouseMove",async t=>{if(!this.enabled||!this._highlighter)return;if(!this.world)throw new Error("No world found!");if(!this.world.renderer)return;const i=this.world.renderer.three.domElement,n=this.world.camera.three,s=this._highlighter.castRay(t,n,i,this._curves);if(s){this._highlighter.hover(s.object),this.updateMarker(s,"hover");return}this._highlighter.unHover()}),this.components.add(v0.uuid,this)}get world(){return this._world}set world(e){var t,i,n;if(e===this._world||(this._world&&this.setupEvents(!1),this._world=e,(t=this._highlighter)==null||t.dispose(),(i=this.mouseMarkers)==null||i.hover.dispose(),(n=this.mouseMarkers)==null||n.select.dispose(),!e))return;const s=e.scene.three;this._highlighter=new $I(s,"absolute"),this.mouseMarkers={select:this.newMouseMarker("#ffffff",e),hover:this.newMouseMarker("#575757",e)},this.setupEvents(!0)}get highlighter(){if(!this._highlighter)throw new Error("Navigator not initialized!");return this._highlighter}draw(e){if(!e.civilData)throw new Error("Model must have civil data!");if(!this.world)throw new Error("A world must be given before drawing an alignment!");const t=this.world.scene.three;for(const[i,n]of e.civilData.alignments)for(const{mesh:s}of n.absolute)t.add(s),this._curves.push(s)}setMarker(e,t,i){if(!this.mouseMarkers)throw new Error("No mouse markers found! Initialize the world before using this.");const n=e.getPointAt(t,"absolute");this.mouseMarkers[i].visible=!0,this.mouseMarkers[i].three.position.copy(n)}hideMarker(e){if(!this.mouseMarkers)throw new Error("No mouse markers found! Initialize the world before using this.");const t=this.mouseMarkers[e].three;t.visible=!1}newMouseMarker(e,t){const i=t.scene.three,n=document.createElement("div");n.style.backgroundColor=e,n.style.width="1rem",n.style.height="1rem",n.style.borderRadius="1rem";const s=new wi(t,n,i);return s.visible=!1,s}setupEvents(e){var t,i;if(!this.world)throw new Error("No world found!");if(this.world.isDisposing||!this.world.renderer)return;const n=this.world.renderer.three.domElement;(t=this.world.renderer)==null||t.onResize.remove(this.updateLinesResolution),n.removeEventListener("click",this.onClick),n.removeEventListener("pointermove",this.onMouseMove),e&&(n.addEventListener("click",this.onClick),n.addEventListener("pointermove",this.onMouseMove),(i=this.world.renderer)==null||i.onResize.add(this.updateLinesResolution))}updateMarker(e,t){if(!this.mouseMarkers)return;const{point:i,object:n}=e,s=n,o=s.curve,a=s.curve.alignment,l=a.getPercentageAt(i,"absolute");this.mouseMarkers[t].visible=!0,this.mouseMarkers[t].three.position.copy(i),l!==null&&this.onMarkerChange.trigger({alignment:a,percentage:l,type:t,curve:o})}};D(T0,"uuid","0a59c09e-2b49-474a-9320-99f51f40f182");let IF=T0;const C0=class y0 extends We{constructor(e){super(e),D(this,"enabled",!0),D(this,"world",null),D(this,"plane"),D(this,"_world3D",null),this.components.add(y0.uuid,this)}get world3D(){return this._world3D}set world3D(e){var t;if(this._world3D=e,(t=this.plane)==null||t.dispose(),!e)return;const i=this.components.get(bo),n=i.Type;i.Type=Oc,this.plane=i.createFromNormalAndCoplanarPoint(e,new F(1,0,0),new F),i.Type=n,this.plane.visible=!1,this.plane.enabled=!1}async set(e,t){if(!this.world||!this.plane)throw new Error("You must set a world before using this component");this.plane.enabled=!0;const i=e.curve.getPercentageAt(t);if(i===null)return;const{startPoint:n,endPoint:s}=e.curve.getSegmentAt(i);if(e.geometry.index===null)throw new Error("Geometry must be indexed!");const o=new F;o.subVectors(s,n),o.normalize(),this.plane.setFromNormalAndCoplanarPoint(o,t),this.plane.edges.update();const a=this.plane.helper.matrix.clone();a.invert();const l=this.world.scene.three,c=this.plane.edges.get();for(const h in c){const{mesh:d}=c[h];d.position.set(0,0,0),d.rotation.set(0,0,0),d.updateMatrix(),d.applyMatrix4(a),d.parent!==l&&l.add(d)}this.plane.enabled=!1}};D(C0,"uuid","96b2c87e-d90b-4639-8257-8f01136fe324");let _F=C0;function Ms(){const r=document.createElement("div");return r.style.backgroundColor="black",r.style.color="white",r.style.padding="8px",r.style.borderRadius="8px",r.style.fontFamily="sans-serif",r}const _c=class Tc{constructor(e,t,i){D(this,"label"),D(this,"boundingBox",new ge),D(this,"world"),D(this,"components"),D(this,"_length"),D(this,"_visible",!0),D(this,"_start"),D(this,"_end"),D(this,"_root",new Zn),D(this,"_endpoints",[]),D(this,"_line"),this.components=e,this.world=t,this._start=i.start,this._end=i.end,this._length=this.getLength(),this._line=this.createLine(i),this.newEndpointElement(i.endpointElement),this.newEndpointElement(i.endpointElement.cloneNode(!0)),this.label=this.newText(),this._root.renderOrder=2,this.world.scene.three.add(this._root)}get visible(){return this._visible}set visible(e){this._visible=e,this.label.visible=e,this._endpoints[0].visible=e,this._endpoints[1].visible=e;const[t,i]=this._endpoints,n=t.three,s=i.three,o=this.label.three;e?(this.world.scene.three.add(this._root),this._root.add(o,n,s)):(o.removeFromParent(),n.removeFromParent(),s.removeFromParent(),this._root.removeFromParent())}get endPoint(){return this._end}set endPoint(e){this._end=e;const t=this._line.geometry.attributes.position;t.setXYZ(1,e.x,e.y,e.z),t.needsUpdate=!0,this._endpoints[1].three.position.copy(e),this.updateLabel()}get startPoint(){return this._start}set startPoint(e){this._start=e;const t=this._line.geometry.attributes.position;t.setXYZ(0,e.x,e.y,e.z),t.needsUpdate=!0,this._endpoints[0].three.position.copy(e),this.updateLabel()}get _center(){let e=this._end.clone().sub(this._start);const t=e.length()*.5;return e=e.normalize().multiplyScalar(t),this._start.clone().add(e)}dispose(){const e=this.components.get(xn);this.visible=!1,e.destroy(this._root),e.destroy(this._line);for(const t of this._endpoints)t.dispose();this._endpoints.length=0,this.label.dispose(),this.boundingBox&&e.destroy(this.boundingBox),this.components=null}createBoundingBox(){this.boundingBox.geometry=new wt(1,1,this._length),this.boundingBox.position.copy(this._center),this.boundingBox.lookAt(this._end),this.boundingBox.visible=!1,this._root.add(this.boundingBox)}toggleLabel(){this.label.toggleVisibility()}newEndpointElement(e){const t=this._endpoints.length===0?this._start:this._end,i=new wi(this.world,e);i.three.position.copy(t),this._endpoints.push(i),this._root.add(i.three)}updateLabel(){this._length=this.getLength(),this.label.three.element.textContent=this.getTextContent(),this.label.three.position.copy(this._center),this._line.computeLineDistances()}createLine(e){const t=new Ve;t.setFromPoints([e.start,e.end]);const i=new Dt(t,e.lineMaterial);return this._root.add(i),i}newText(){const e=Ms();e.textContent=this.getTextContent();const t=new wi(this.world,e);return t.three.position.copy(this._center),this._root.add(t.three),t}getTextContent(){return`${(this._length/Tc.scale).toFixed(Tc.rounding)} ${Tc.units}`}getLength(){return this._start.distanceTo(this._end)}};D(_c,"scale",1),D(_c,"units","m"),D(_c,"rounding",2);let Tf=_c;class oF{constructor(e,t,i){D(this,"enabled",!0),D(this,"points",[]),D(this,"workingPlane",null),D(this,"labelMarker"),D(this,"world"),D(this,"components"),D(this,"onDisposed",new oe),D(this,"onAreaComputed",new oe),D(this,"onWorkingPlaneComputed",new oe),D(this,"onPointAdded",new oe),D(this,"onPointRemoved",new oe),D(this,"_visible",!0),D(this,"_rotationMatrix",null),D(this,"_dimensionLines",[]),D(this,"_defaultLineMaterial",new pn({color:"red"})),this.world=t,this.components=e;const n=Ms();this.labelMarker=new wi(t,n),this.labelMarker.visible=!1,this.onPointAdded.add(s=>{this.points.length===3&&!this._dimensionLines[2]&&(this.addDimensionLine(s,this.points[0]),this.labelMarker.visible=!0)}),i==null||i.forEach(s=>this.setPoint(s))}get visible(){return this._visible}set visible(e){this._visible=e;for(const t of this._dimensionLines)t.visible=e,t.label.visible=!1;this.labelMarker.visible=e}setPoint(e,t){let i;if(t?i=t:i=this.points.length===0?0:this.points.length,i===0){this.points[0]=e;return}if(i<0||i>this.points.length)return;const n=this.points.length>i;this.points[i]=e,this.onPointAdded.trigger(e),n||this.addDimensionLine(this.points[i-1],e);const{previousLine:s,nextLine:o}=this.getLinesBetweenIndex(i);s&&(s.endPoint=e),o&&(o.startPoint=e)}removePoint(e){if(this.points.length===3)return;this.points.splice(e,1);const{previousLine:t,nextLine:i}=this.getLinesBetweenIndex(e);i&&(t.endPoint=i.endPoint),i==null||i.dispose(),this._dimensionLines.splice(e,1),this.onPointRemoved.trigger()}toggleLabel(){this.labelMarker.toggleVisibility()}addDimensionLine(e,t){const i=new Tf(this.components,this.world,{start:e,end:t,lineMaterial:this._defaultLineMaterial,endpointElement:Ms()});return i.toggleLabel(),this._dimensionLines.length>1?this._dimensionLines.splice(this._dimensionLines.length-1,0,i):this._dimensionLines.push(i),i}getLinesBetweenIndex(e){const t=e===0?this._dimensionLines.length-1:e-1,i=this._dimensionLines[t],n=this._dimensionLines[e];return{previousLine:i,nextLine:n}}computeWorkingPlane(){this.workingPlane=new Kt().setFromCoplanarPoints(this.points[0],this.points[1],this.points[2]);const e=new F(0,1,0),t=this.workingPlane.normal.angleTo(e),i=new F().crossVectors(this.workingPlane.normal,e).normalize();this._rotationMatrix=new fe().makeRotationAxis(i,t),this.onWorkingPlaneComputed.trigger(this.workingPlane)}computeArea(){if(!(this._rotationMatrix&&this.workingPlane))return this.onAreaComputed.trigger(0),0;let e=0,t=0;const i=this._rotationMatrix,n=this.points.map(o=>{const a=o.clone().applyMatrix4(i),l=new Re(a.x,a.z);return e+=l.x,t+=l.y,l}),s=Math.abs($d.area(n));return this.labelMarker.three.element.textContent=`${s.toFixed(2)} m²`,this.labelMarker.three.position.set(e/n.length,-this.workingPlane.constant,t/n.length).applyMatrix4(i.clone().invert()),this.onAreaComputed.trigger(s),s}dispose(){this.onAreaComputed.reset(),this.onWorkingPlaneComputed.reset(),this.onPointAdded.reset(),this.onPointRemoved.reset();for(const e of this._dimensionLines)e.dispose();this.labelMarker.dispose(),this._dimensionLines=[],this.points=[],this._rotationMatrix=null,this.workingPlane=null,this._defaultLineMaterial.dispose(),this.onDisposed.trigger(),this.onDisposed.reset()}get(){return{points:this.points,workingPlane:this.workingPlane,area:this.computeArea()}}}class vf extends yA{constructor(e,t){super(e,t),D(this,"onDisposed",new oe),D(this,"marker",null),D(this,"_className","default-vertex-picker"),this.onEnabled.add(i=>{this.marker&&(this.marker.visible=i)})}get className(){return this._className}set className(e){this._className=e,this.marker&&(this.marker.three.element.className=e)}dispose(){this.marker&&this.marker.dispose(),super.dispose()}get(e){const t=super.get(e);return t?(this.marker||(this.marker=new wi(e),this.marker.three.element.className=this._className),this.marker.world!==e&&(this.marker.world=e,this.marker.three.removeFromParent(),e.scene.three.add(this.marker.three)),this.marker.visible=!0,this.marker.three.position.copy(t)):this.marker&&(this.marker.visible=!1),t}}const b0=class Td extends We{constructor(e){super(e),D(this,"onDisposed",new oe),D(this,"list",[]),D(this,"world"),D(this,"_enabled",!1),D(this,"_visible",!0),D(this,"_vertexPicker"),D(this,"_currentAreaElement",null),D(this,"_clickCount",0),D(this,"create",()=>{if(!this.enabled)return;if(!this.world)throw new Error("World not defined for the area measurement!");const t=this._vertexPicker.get(this.world);if(t){if(!this._currentAreaElement){const i=new oF(this.components,this.world);i.onPointAdded.add(()=>{this._clickCount===2&&!i.workingPlane&&(i.computeWorkingPlane(),this._vertexPicker.workingPlane=i.workingPlane)}),i.onPointRemoved.add(()=>this._clickCount--),this._currentAreaElement=i}this._currentAreaElement.setPoint(t,this._clickCount),this._currentAreaElement.computeArea(),this._clickCount++}}),D(this,"onMouseMove",()=>{if(!this.world){console.log("No world given for the area measurement!");return}const t=this._vertexPicker.get(this.world);t&&this._currentAreaElement&&(this._currentAreaElement.setPoint(t,this._clickCount),this._currentAreaElement.computeArea())}),D(this,"onKeydown",t=>{this.enabled&&(t.key==="z"&&t.ctrlKey&&this._currentAreaElement&&this._currentAreaElement.removePoint(this._clickCount-1),t.key==="Enter"&&this._currentAreaElement&&this.endCreation(),t.key==="Escape"&&(this._clickCount===0&&!this._currentAreaElement?this.enabled=!1:this.cancelCreation()))}),this.components.add(Td.uuid,this),this._vertexPicker=new vf(e)}set enabled(e){this._enabled=e,this._vertexPicker.enabled=e,this.setupEvents(e),e||this.cancelCreation()}get enabled(){return this._enabled}set workingPlane(e){this._vertexPicker.workingPlane=e}get workingPlane(){return this._vertexPicker.workingPlane}get visible(){return this._visible}set visible(e){this._visible=e;for(const t of this.list)t.visible=e}dispose(){this.setupEvents(!1),this._vertexPicker.dispose(),this._currentAreaElement&&this._currentAreaElement.dispose();for(const e of this.list)e.dispose();this.components=null,this.onDisposed.trigger(Td.uuid),this.onDisposed.reset()}delete(){}deleteAll(){for(const e of this.list)e.dispose();this.list=[]}endCreation(){this._currentAreaElement&&(this._currentAreaElement.points.length<3||(this._currentAreaElement&&(this.list.push(this._currentAreaElement),this._currentAreaElement.removePoint(this._clickCount),this._currentAreaElement.computeWorkingPlane(),this._currentAreaElement.computeArea(),this._currentAreaElement=null),this._vertexPicker.workingPlane=null,this._clickCount=0))}cancelCreation(){this._currentAreaElement&&(this._currentAreaElement.dispose(),this._currentAreaElement=null),this._vertexPicker.workingPlane=null,this._clickCount=0}setupEvents(e){if(!this.world)throw new Error("The area measurement needs a world to work!");if(this.world.isDisposing)return;if(!this.world.renderer)throw new Error("The world of the area measurement needs a renderer!");const t=this.world.renderer.three.domElement.parentElement;e?(t.addEventListener("pointermove",this.onMouseMove),window.addEventListener("keydown",this.onKeydown)):(t.removeEventListener("pointermove",this.onMouseMove),window.removeEventListener("keydown",this.onKeydown))}};D(b0,"uuid","c453a99e-f054-4781-9060-33df617db4a5");let TF=b0;class aF{constructor(e,t){D(this,"enabled",!0),D(this,"visible",!0),D(this,"points",[]),D(this,"world"),D(this,"onDisposed",new oe),D(this,"_lineMaterial",new Pa({color:6629591,linewidth:2})),D(this,"_lineGeometry",new Lc),D(this,"_line",new KI(this._lineGeometry,this._lineMaterial)),D(this,"_labelMarker"),D(this,"onAngleComputed",new oe),D(this,"onPointAdded",new oe),this.world=e;const i=Ms();this._labelMarker=new wi(e,i),this.labelMarker.visible=!0,this.onPointAdded.add(()=>{this.points.length===1&&e.scene.three.add(this._line),this.points.length===3&&(this.labelMarker.visible=!0)}),this.onAngleComputed.add(n=>{this.labelMarker.three.element.textContent=`${n.toFixed(2)}°`,this.labelMarker.three.position.copy(this.points[1]??new F)}),t==null||t.forEach(n=>this.setPoint(n))}set lineMaterial(e){this._lineMaterial.dispose(),this._lineMaterial=e,this._line.material=e,this._lineMaterial.resolution.set(window.innerWidth,window.innerHeight)}get lineMaterial(){return this._lineMaterial}set labelMarker(e){this._labelMarker.dispose(),this._labelMarker=e}get labelMarker(){return this._labelMarker}get angle(){return{points:this.points,angle:this.computeAngle()}}setPoint(e,t){let i;if(t?i=t:i=this.points.length===0?0:this.points.length,![0,1,2].includes(i))return;this.points[i]=e,this.onPointAdded.trigger(e);const n=this.points.map(s=>[s.x,s.y,s.z]);this._lineGeometry.setPositions(n.flat())}toggleLabel(){this.labelMarker.toggleVisibility()}computeAngle(){const e=this.points[0],t=this.points[1],i=this.points[2];if(!(e&&t&&i))return 0;const n=new F().subVectors(t,e),s=new F().subVectors(t,i),o=sr.radToDeg(n.angleTo(s));return this.onAngleComputed.trigger(o),o}dispose(){this.points=[],this.labelMarker.dispose(),this.onAngleComputed.reset(),this.onPointAdded.reset(),this.labelMarker.dispose(),this._line.removeFromParent(),this._lineMaterial.dispose(),this._lineGeometry.dispose(),this.onDisposed.trigger(),this.onDisposed.reset()}}const S0=class vd extends We{constructor(e){super(e),D(this,"onDisposed",new oe),D(this,"world"),D(this,"list",[]),D(this,"_lineMaterial"),D(this,"_enabled",!1),D(this,"_vertexPicker"),D(this,"_currentAngleElement",null),D(this,"_clickCount",0),D(this,"create",()=>{if(!this.enabled)return;if(!this.world){console.log("No world selected for angle measurement!");return}const t=this._vertexPicker.get(this.world);if(t){if(!this._currentAngleElement){const i=new aF(this.world);i.lineMaterial=this.lineMaterial,this._currentAngleElement=i}this._currentAngleElement.setPoint(t,this._clickCount),this._currentAngleElement.setPoint(t,this._clickCount+1),this._currentAngleElement.setPoint(t,this._clickCount+2),this._currentAngleElement.computeAngle(),this._clickCount++,this._clickCount===3&&this.endCreation()}}),D(this,"onMouseMove",()=>{if(!this.world){console.log("No world selected for angle measurement!");return}const t=this._vertexPicker.get(this.world);t&&this._currentAngleElement&&(this._currentAngleElement.setPoint(t,this._clickCount),this._currentAngleElement.computeAngle())}),D(this,"onKeyDown",t=>{this.enabled&&t.key==="Escape"&&this.cancelCreation()}),this.components.add(vd.uuid,this),this._vertexPicker=new vf(e),this._lineMaterial=new Pa({color:6629591,linewidth:2})}get enabled(){return this._enabled}set enabled(e){this._enabled=e,this.setupEvents(e),this._vertexPicker.enabled=e,e||this.cancelCreation()}get lineMaterial(){return this._lineMaterial}set lineMaterial(e){this._lineMaterial.dispose(),this._lineMaterial=e,this._lineMaterial.resolution.set(window.innerWidth,window.innerHeight)}get workingPlane(){return this._vertexPicker.workingPlane}set workingPlane(e){this._vertexPicker.workingPlane=e}dispose(){this.setupEvents(!1),this._lineMaterial.dispose(),this._vertexPicker.dispose();for(const e of this.list)e.dispose();this._currentAngleElement&&this._currentAngleElement.dispose(),this.components=null,this.onDisposed.trigger(vd.uuid),this.onDisposed.reset()}delete(){}deleteAll(){for(const e of this.list)e.dispose();this.list=[]}endCreation(){this._currentAngleElement&&(this.list.push(this._currentAngleElement),this._currentAngleElement.computeAngle(),this._currentAngleElement=null),this._clickCount=0}cancelCreation(){this._currentAngleElement&&(this._currentAngleElement.dispose(),this._currentAngleElement=null),this._clickCount=0}setupEvents(e){if(!this.world)throw new Error("No world selected for angle measurement!");if(this.world.isDisposing)return;if(!this.world.renderer)throw new Error("The given world doesn't have a renderer!");const t=this.world.renderer.three.domElement.parentElement;e?(t.addEventListener("pointermove",this.onMouseMove),window.addEventListener("keydown",this.onKeyDown)):(t.removeEventListener("pointermove",this.onMouseMove),window.removeEventListener("keydown",this.onKeyDown))}};D(S0,"uuid","622fb2c9-528c-4b0a-8a0e-6a1375f0a3aa");let vF=S0;const x0=class Cd extends We{constructor(e){super(e),D(this,"onDisposed",new oe),D(this,"onBeforeUpdate",new oe),D(this,"onAfterUpdate",new oe),D(this,"onCleaned",new oe),D(this,"snapDistance",.25),D(this,"list",[]),D(this,"world"),D(this,"_vertexPicker"),D(this,"_lineMaterial",new pn({color:"#DC2626",linewidth:2,depthTest:!1})),D(this,"_visible",!0),D(this,"_enabled",!1),D(this,"_temp",{isDragging:!1,start:new F,end:new F,dimension:void 0}),D(this,"create",t=>{const i=t instanceof St?t:void 0;if(this._enabled){if(!this._temp.isDragging){this.drawStart(i);return}this.endCreation()}}),D(this,"onMouseMove",()=>{this.world&&this._vertexPicker.get(this.world)}),D(this,"onKeydown",t=>{this.enabled&&t.key==="Escape"&&this.cancelCreation()}),this.components.add(Cd.uuid,this),this._vertexPicker=new vf(e,{previewElement:Ms(),snapDistance:this.snapDistance})}get enabled(){return this._enabled}set enabled(e){e||this.cancelCreation(),this._enabled=e,this._vertexPicker.enabled=e,this.setupEvents(e)}get visible(){return this._visible}set visible(e){this._visible=e;for(const t of this.list)t.visible=e}get color(){return this._lineMaterial.color}set color(e){this._lineMaterial.color=e}dispose(){this.setupEvents(!1),this.enabled=!1;for(const e of this.list)e.dispose();this._lineMaterial.dispose(),this.list=[],this._vertexPicker.dispose(),this.onDisposed.trigger(Cd.uuid),this.onDisposed.reset()}async update(e){this._enabled&&this._temp.isDragging&&this.drawInProcess()}createOnPoints(e,t){const i=this.drawDimension();return i.startPoint=e,i.endPoint=t,i.createBoundingBox(),this.list.push(i),i}delete(){if(!this.world)throw new Error("World is needed for Length Measurement!");if(!this._enabled||this.list.length===0)return;const e=this.getBoundingBoxes(),t=this.components.get(Ji).get(this.world).castRay(e);if(!t)return;const i=this.list.find(n=>n.boundingBox===t.object);if(i){const n=this.list.indexOf(i);this.list.splice(n,1),i.dispose()}}async deleteMeasurement(e){if(e){const t=this.list.indexOf(e);this.list.splice(t,1),e.dispose()}}deleteAll(){for(const e of this.list)e.dispose();this.list=[],this.onCleaned.trigger(null)}cancelCreation(){var e;this._temp.dimension&&(this._temp.isDragging=!1,(e=this._temp.dimension)==null||e.dispose(),this._temp.dimension=void 0)}endCreation(){this._temp.dimension&&(this._temp.dimension.createBoundingBox(),this.list.push(this._temp.dimension),this._temp.dimension=void 0,this._temp.isDragging=!1)}drawStart(e){if(!this.world)throw new Error("The length measurement needs a world to work!");const t=e?[e]:void 0,i=this.components.get(Ji).get(this.world).castRay(t),n=this._vertexPicker.get(this.world);i&&n&&(this._temp.isDragging=!0,this._temp.start=e?i.point:n)}drawInProcess(){if(!this.world)throw new Error("The length measurement needs a world to work!");if(!this.components.get(Ji).get(this.world).castRay())return;const e=this._vertexPicker.get(this.world);e&&(this._temp.end=e,this._temp.dimension||(this._temp.dimension=this.drawDimension()),this._temp.dimension.endPoint=this._temp.end)}drawDimension(){if(!this.world)throw new Error("The length measurement needs a world to work!");return new Tf(this.components,this.world,{start:this._temp.start,end:this._temp.end,lineMaterial:this._lineMaterial,endpointElement:Ms()})}getBoundingBoxes(){return this.list.map(e=>e.boundingBox).filter(e=>e!==void 0)}setupEvents(e){if(!this.world)throw new Error("The length measurement needs a world to work!");if(this.world.isDisposing)return;if(!this.world.renderer)throw new Error("The world of the length measurement needs a renderer!");const t=this.world.renderer.three.domElement.parentElement;t&&(t.removeEventListener("pointermove",this.onMouseMove),window.removeEventListener("keydown",this.onKeydown),e&&(t.addEventListener("pointermove",this.onMouseMove),window.addEventListener("keydown",this.onKeydown)))}};D(x0,"uuid","2f9bcacf-18a9-4be6-a293-e898eae64ea1");let aa=x0;const w0=class A0 extends We{constructor(e){super(e),D(this,"onDisposed",new oe),D(this,"onVolumeFound",new oe),D(this,"label",null),D(this,"world"),D(this,"_enabled",!1),D(this,"create",()=>{if(!this.enabled)return;if(!this.world)throw new Error("World is needed for Volume Measurement!");const t=this.components.get(Ji).get(this.world).castRay(),i=this.components.get(ir);if(!t||!t.object)return;const{object:n}=t;if(n instanceof ge){const s=i.getVolumeFromMeshes([n]);this.onVolumeFound.trigger(s)}}),D(this,"onMouseMove",()=>{}),D(this,"onKeydown",t=>{}),this.components.add(A0.uuid,this)}set enabled(e){this._enabled=e,this.setupEvents(e),e||this.cancelCreation()}get enabled(){return this._enabled}async dispose(){var e;this.setupEvents(!1),(e=this.label)==null||e.dispose(),this.onDisposed.trigger(),this.onDisposed.reset(),this.components=null}delete(){}async deleteAll(){}endCreation(){}cancelCreation(){}getVolumeFromFragments(e){const t=this.components.get(ir).getVolumeFromFragments(e),i=this.components.get(Pc);i.reset(),i.addFragmentIdMap(e);const n=i.getSphere();return this.setLabel(n,t),t}getVolumeFromMeshes(e){const t=this.components.get(ir),i=this.components.get(Pc);i.reset();for(const o of e)i.addMesh(o);const n=i.getSphere(),s=t.getVolumeFromMeshes(e);return this.setLabel(n,s),s}clear(){this.label&&(this.label.visible=!1)}newLabel(){if(!this.world)throw new Error("World is needed for Volume Measurement!");const e=Ms();return new wi(this.world,e)}setupEvents(e){if(!this.world)throw new Error("The volume measurement needs a world to work!");if(this.world.isDisposing)return;if(!this.world.renderer)throw new Error("The world of the volume measurement needs a renderer!");const t=this.world.renderer.three.domElement.parentElement;e?(t.addEventListener("click",this.create),t.addEventListener("pointermove",this.onMouseMove),window.addEventListener("keydown",this.onKeydown)):(t.removeEventListener("click",this.create),t.removeEventListener("pointermove",this.onMouseMove),window.removeEventListener("keydown",this.onKeydown))}setLabel(e,t){if(!this.world)throw new Error("World is needed for Volume Measurement!");this.label||(this.label=this.newLabel(),this.label.three.removeFromParent()),this.label.visible=!0,this.world.scene.three.add(this.label.three),this.label.three.position.copy(e.center);const i=Math.trunc(t*100)/100;this.label.three.element.textContent=i.toString()}};D(w0,"uuid","811da532-7af3-4635-b592-1c06ae494af5");let CF=w0;const R0=class M0 extends We{constructor(e){super(e),D(this,"onDisposed",new oe),D(this,"selection",[]),D(this,"preview",new ge(new Ve,new Ti({side:2,depthTest:!1,transparent:!0,opacity:.25,color:"#BCF124"}))),D(this,"selectionMaterial",new Ti({side:2,depthTest:!1,transparent:!0,color:"#BCF124",opacity:.75})),D(this,"world"),D(this,"_enabled",!1),D(this,"_currentSelelection",null),D(this,"create",()=>{if(!this.world)throw new Error("No world given to the face measurement!");if(!this.enabled||!this._currentSelelection)return;const t=this.world.scene.three,i=new Ve,n=new ge(i,this.selectionMaterial);i.setAttribute("position",this.preview.geometry.attributes.position),n.position.copy(this.preview.position),t.add(n),i.computeBoundingSphere();const{area:s,perimeter:o}=this._currentSelelection,a=this.newLabel(i,s);n.add(a.three),this.selection.push({area:s,perimeter:o,mesh:n,label:a})}),D(this,"onMouseMove",()=>{if(!this.world)throw new Error("The face measurement needs a world to work!");if(!this.enabled){this.unselect();return}const t=this.components.get(Ji).get(this.world).castRay();if(!t||!t.object||t.faceIndex===void 0){this.unselect();return}const{object:i,faceIndex:n}=t;i instanceof ge||i instanceof Bi?this.updateSelection(i,n,t.instanceId):this.unselect()}),D(this,"onKeydown",t=>{}),this.components.add(M0.uuid,this),this.preview.frustumCulled=!1}set enabled(e){if(!this.world)throw new Error("No world given for the Face measurement!");this._enabled=e,this.setupEvents(e),e?this.world.scene.three.add(this.preview):(this.preview.removeFromParent(),this.cancelCreation()),this.setVisibility(e)}get enabled(){return this._enabled}dispose(){this.setupEvents(!1),this.deleteAll(),this.preview.removeFromParent(),this.preview.material.dispose(),this.preview.geometry.dispose(),this.selectionMaterial.dispose(),this.onDisposed.trigger(),this.onDisposed.reset(),this.components=null}delete(){if(!this.world)throw new Error("No world given to the face measurement!");const e=this.selection.map(s=>s.mesh),t=this.components.get(Ji).get(this.world).castRay(e);if(!t||!t.object)return;const i=this.selection.find(s=>s.mesh===t.object);if(!i)return;i.mesh.removeFromParent(),i.mesh.geometry.dispose(),i.label.dispose();const n=this.selection.indexOf(i);this.selection.splice(n,1)}deleteAll(){for(const e of this.selection)e.mesh.removeFromParent(),e.mesh.geometry.dispose(),e.label.dispose();this.selection=[]}endCreation(){}cancelCreation(){}get(){const e=[];for(const t of this.selection){const i=t.mesh.geometry,{area:n,perimeter:s}=t,o=i.attributes.position.array;e.push({position:o,area:n,perimeter:s})}return e}set(e){if(!this.world)throw new Error("No world given to the face measurement!");const t=this.world.scene.three;for(const i of e){const n=new Ve,s=new ge(n,this.selectionMaterial);t.add(s);const o=new ot(i.position,3);n.setAttribute("position",o),n.computeBoundingSphere();const{area:a,perimeter:l}=i,c=this.newLabel(n,a);s.add(c.three),this.selection.push({area:a,perimeter:l,mesh:s,label:c})}}setupEvents(e){if(!this.world)throw new Error("The face measurement needs a world to work!");if(this.world.isDisposing)return;if(!this.world.renderer)throw new Error("The world of the face measurement needs a renderer!");const t=this.world.renderer.three.domElement.parentElement;t.removeEventListener("pointermove",this.onMouseMove),window.removeEventListener("keydown",this.onKeydown),e&&(t.addEventListener("pointermove",this.onMouseMove),window.addEventListener("keydown",this.onKeydown))}setVisibility(e){if(!this.world)throw new Error("The face measurement needs a world to work!");if(this.world.isDisposing)return;const t=this.world.scene.three;for(const i of this.selection){const n=i.label.three;e?(t.add(i.mesh),i.mesh.add(n)):(i.mesh.removeFromParent(),n.removeFromParent())}}unselect(){this.preview.removeFromParent(),this._currentSelelection=null}updateSelection(e,t,i){if(!this.world)throw new Error("The face measurement needs a world to work!");this.world.scene.three.add(this.preview);const n=this.components.get(ir).getFace(e,t,i);if(n===null)return;const s=this.regenerateHighlight(e,n.indices,i);let o=0;for(const{distance:a}of n.edges)o+=a;this._currentSelelection={perimeter:o,area:s}}newLabel(e,t){if(!e.boundingSphere)throw new Error("Error computing area geometry");if(!this.world)throw new Error("The face measurement needs a world to work!");const{center:i}=e.boundingSphere,n=Ms(),s=Math.trunc(t*100)/100;n.textContent=s.toString();const o=new wi(this.world,n);return o.three.position.copy(i),o}regenerateHighlight(e,t,i){const n=[],s=[];let o=0,a=0;const l=new yt,c=this.components.get(ir);for(const u of t){const{p1:f,p2:m,p3:E}=c.getVerticesAndNormal(e,u,i);n.push(f.x,f.y,f.z),n.push(m.x,m.y,m.z),n.push(E.x,E.y,E.z),l.set(f,m,E),a+=l.getArea(),s.push(o,o+1,o+2),o+=3}this.preview.position.set(0,0,0),this.preview.rotation.set(0,0,0),this.preview.scale.set(1,1,1),this.preview.updateMatrix(),this.preview.applyMatrix4(e.matrixWorld);const h=new Float32Array(n),d=new ot(h,3);return this.preview.geometry.setAttribute("position",d),this.preview.geometry.setIndex(s),a}};D(R0,"uuid","30279548-1309-44f6-aa97-ce26eed73522");let yF=R0;const F0=class P0 extends We{constructor(e){super(e),D(this,"onDisposed",new oe),D(this,"preview"),D(this,"tolerance",.3),D(this,"world"),D(this,"_enabled",!1),D(this,"_lineMaterial",new pn({color:"#DC2626",linewidth:2,depthTest:!1,transparent:!0})),D(this,"create",async()=>{if(!this.preview||!this.enabled||!this.preview.visible)return;const t=this.components.get(aa);t.world=this.world;const i=this.preview.startPoint.clone(),n=this.preview.endPoint.clone();t.createOnPoints(i,n)}),D(this,"onMouseMove",()=>{if(!this.preview)return;if(!this.world)throw new Error("The edge measurement needs a world to work!");if(!this.enabled){this.preview.visible=!1;return}const t=this.components.get(Ji).get(this.world).castRay();if(!t||!t.object){this.preview.visible=!1;return}const{object:i,faceIndex:n,point:s}=t;if(n===void 0){this.preview.visible=!1;return}i instanceof ge||i instanceof Bi?this.updateSelection(i,s,n,t.instanceId):this.preview.visible=!1}),D(this,"onKeydown",t=>{}),this.components.add(P0.uuid,this)}set enabled(e){if(this._enabled=e,this.setupEvents(e),e){if(!this.world)throw new Error("The edge measurement needs a world to work!");if(!this.preview){const t=document.createElement("div");t.className="w-2 h-2 bg-red-600 rounded-full",this.preview=new Tf(this.components,this.world,{start:new F,end:new F,lineMaterial:this._lineMaterial,endpointElement:t}),this.preview.visible=!1}}else this.cancelCreation()}get enabled(){return this._enabled}dispose(){this.preview&&this.preview.dispose(),this._lineMaterial.dispose(),this.setupEvents(!1),this.onDisposed.trigger(),this.onDisposed.reset(),this.components=null}delete(){if(!this.enabled)return;const e=this.components.get(aa),t=e.enabled;e.enabled=!0,e.delete(),e.enabled=t}deleteAll(){this.components.get(aa).deleteAll()}endCreation(){}cancelCreation(){}get(){const e=this.components.get(aa).list,t=[];for(const i of e){const n=i.startPoint,s=i.endPoint,o=[n.x,n.y,n.z,s.x,s.y,s.z];t.push(o)}return t}set(e){const t=this.components.get(aa);t.world=this.world;for(const i of e){const[n,s,o,a,l,c]=i,h=new F(n,s,o),d=new F(a,l,c);t.createOnPoints(h,d)}}setupEvents(e){if(!this.world)throw new Error("The edge measurement needs a world to work!");if(this.world.isDisposing)return;if(!this.world.renderer)throw new Error("The world of the edge measurement needs a renderer!");const t=this.world.renderer.three.domElement.parentElement;e?(t.addEventListener("pointermove",this.onMouseMove),window.addEventListener("keydown",this.onKeydown)):(t.removeEventListener("pointermove",this.onMouseMove),window.removeEventListener("keydown",this.onKeydown))}updateSelection(e,t,i,n){if(!this.preview||!e.geometry.index)return;const s=this.components.get(ir).getFace(e,i,n);if(!s)return;const{edges:o}=s;let a=Number.MAX_VALUE,l=[];for(const d of o){const[u,f]=d.points,m=ir.distanceFromPointToLine(t,u,f,!0);m<this.tolerance&&m<a&&(a=m,l=d.points)}if(!l.length){this.preview.visible=!1;return}const[c,h]=l;this.preview.startPoint=c,this.preview.endPoint=h,this.preview.visible=!0}};D(F0,"uuid","e7be5749-89df-4514-8d25-83aa38ce12d8");let bF=F0;class lF extends iI{constructor(e,t){super(e,t),D(this,"threshold",50),D(this,"bboxThreshold",200),D(this,"maxLostTime",3e4),D(this,"maxHiddenTime",5e3),D(this,"boxes",new Map),D(this,"_staticGeometries",{culled:{},unculled:{}}),D(this,"_geometry"),D(this,"_material",new Ti({transparent:!0,side:2,opacity:1})),D(this,"onViewUpdated",new jn),D(this,"_modelIDIndex",new Map),D(this,"_indexModelID",new Map),D(this,"_nextModelID",0),D(this,"_geometries",new Map),D(this,"_geometriesGroups",new Map),D(this,"_geometriesInMemory",new Set),D(this,"_intervalID",null),D(this,"codes",new Map),D(this,"handleWorkerMessage",async n=>{const s=n.data.colors,o={},a={},l={},c={},h=performance.now();let d=!1;const u=new Set(this._geometriesInMemory);for(const[f,m]of s){const E=this._geometries.get(f);if(!E||!(m>this.threshold))continue;u.delete(f);const{exists:g}=E,p=this._indexModelID.get(E.modelIndex);g?(E.time=h,c[p]||(c[p]=new Set),c[p].add(E.geometryID),this._geometriesInMemory.add(f),d=!0):(o[p]||(o[p]=new Map),E.time=h,E.exists=!0,o[p].has(m)||o[p].set(m,new Set),o[p].get(m).add(E.geometryID),this._geometriesInMemory.add(f),d=!0)}for(const f of u){const m=this._geometries.get(f);m&&(this.handleLostGeometries(h,f,m,a,l),d=!0)}d&&await this.onViewUpdated.trigger({toLoad:o,toRemove:a,toHide:l,toShow:c}),this._isWorkerBusy=!1}),this.config.updateInterval=500,this._geometry=new wt(1,1,1),this._geometry.groups=[],this._geometry.deleteAttribute("uv");const i=this._geometry.attributes.position.array;for(let n=0;n<i.length;n++)i[n]+=.5;this._geometry.attributes.position.needsUpdate=!0,this.worker.addEventListener("message",this.handleWorkerMessage)}dispose(){super.dispose(),this.onViewUpdated.reset(),this._intervalID!==null&&(window.clearInterval(this._intervalID),this._intervalID=null);for(const[e,t]of this._geometriesGroups){t.removeFromParent();const i=[...t.children];for(const n of i)n.removeFromParent()}this._geometriesGroups.clear();for(const[e,t]of this.boxes)t.dispose(!0);this.boxes.clear();for(const[e,t]of this._geometries)t.fragment&&(t.fragment.dispose(!0),t.fragment=void 0);this._geometries.clear(),this._staticGeometries={culled:{},unculled:{}},this._geometry.dispose(),this._material.dispose(),this._modelIDIndex.clear(),this._indexModelID.clear(),this.codes.clear()}add(e,t,i){const n=this.createModelIndex(e),s=rt.enabled;rt.enabled=!1;const o=new Map,a=new fe,l=new Co(this._geometry,this._material,10);this.boxes.set(n,l),this.scene.add(l.mesh);const c=new Zn;this.scene.add(c),this._geometriesGroups.set(n,c);const h=new Map;for(const u of t)for(const f of u.geometries){const{geometryID:m,transformation:E,color:g}=f,p=new Fe;p.setRGB(g[0],g[1],g[2],"srgb");const _=this.getInstanceID(u.id,m),T=i[m];if(!T){console.log(`Geometry not found: ${m}`);continue}const{boundingBox:I}=T;let v;o.has(m)?v=o.get(m):(v=this.getAvailableColor(),this.increaseColor(),o.set(m,v));const{r:b,g:x,b:A,code:y}=v,S=new Fe;S.setRGB(b/255,x/255,A/255,"srgb"),this.codes.has(n)||this.codes.set(n,new Map),this.codes.get(n).set(m,y);const O=new fe,w=Object.values(I);if(O.fromArray(E),a.fromArray(w),O.multiply(a),h.has(_)){const N=h.get(_);if(N===void 0||!N.colors)throw new Error("Malformed item!");N.colors.push(S),N.geometryColors.push(p),N.transforms.push(O)}else h.set(_,{id:_,colors:[S],geometryColors:[p],transforms:[O]});if(this._geometries.has(y))this._geometries.get(y).assetIDs.add(u.id);else{const N=new Set([u.id]);this._geometries.set(y,{modelIndex:n,geometryID:m,assetIDs:N,exists:!1,hidden:!1,time:0})}}const d=Array.from(h.values());l.add(d),rt.enabled=s}remove(e){const t=this._modelIDIndex.get(e);if(t===void 0)throw new Error("Model doesn't exist!");const i=this._geometriesGroups.get(t);i.removeFromParent();const n=[...i.children];for(const o of n)o.removeFromParent();this._geometriesGroups.delete(t),this.boxes.get(t).dispose(!1),this.boxes.delete(t);const s=this.codes.get(t);this.codes.delete(t);for(const[o,a]of s){const l=this._geometries.get(a);l&&l.fragment&&(l.fragment.dispose(!1),l.fragment=void 0),this._geometries.delete(a)}this._modelIDIndex.delete(e),this._indexModelID.delete(t),this._geometriesInMemory.clear()}addFragment(e,t,i){const n=rt.enabled;rt.enabled=!1;const s=this._modelIDIndex.get(e),o=this.codes.get(s).get(t),a=this._geometries.get(o);if(this.setGeometryVisibility(a,!1,!1),!a.fragment){a.fragment=new Co(i.mesh.geometry,this._material,i.capacity);const u=this._geometriesGroups.get(s);if(!u)throw new Error("Group not found!");u.add(a.fragment.mesh)}const[l,c,h]=o.split("-").map(u=>parseInt(u,10)),d=[];for(const u of i.ids){const f=i.get(u);if(!f.colors)throw new Error("Malformed fragments!");for(const m of f.colors)m.setRGB(l/255,c/255,h/255,"srgb");d.push(f)}a.fragment.add(d),rt.enabled=n,this.needsUpdate=!0}removeFragment(e,t){const i=this._modelIDIndex.get(e),n=this.codes.get(i).get(t),s=this._geometries.get(n);if(s.hidden||this.setGeometryVisibility(s,!0,!1),s.fragment){const{fragment:o}=s;o.dispose(!1),s.fragment=void 0}}setModelTransformation(e,t){const i=this._modelIDIndex.get(e);if(i===void 0)throw new Error("Model not found!");const n=this.boxes.get(i);n&&(n.mesh.position.set(0,0,0),n.mesh.rotation.set(0,0,0),n.mesh.scale.set(1,1,1),n.mesh.applyMatrix4(t));const s=this._geometriesGroups.get(i);s&&(s.position.set(0,0,0),s.rotation.set(0,0,0),s.scale.set(1,1,1),s.applyMatrix4(t))}setVisibility(e,t,i){const n=this._modelIDIndex.get(t);if(n!==void 0)for(const[s,o]of i){const a=this.codes.get(n);if(a===void 0)throw new Error("Map not found!");const l=a.get(s),c=this._geometries.get(l);if(c===void 0)throw new Error("Geometry not found!");c.hidden=!e,this.setGeometryVisibility(c,e,!0,o)}}updateTransformations(e){const t=this._modelIDIndex.get(e);if(t===void 0)return;const i=this.components.get(Ze).groups.get(e);if(i){i.updateWorldMatrix(!0,!1),i.updateMatrix();const n=this.boxes.get(t);n&&(n.mesh.position.set(0,0,0),n.mesh.rotation.set(0,0,0),n.mesh.scale.set(1,1,1),n.mesh.updateMatrix(),n.mesh.applyMatrix4(i.matrixWorld),n.mesh.updateMatrix());const s=this._geometriesGroups.get(t);s&&(s.position.set(0,0,0),s.rotation.set(0,0,0),s.scale.set(1,1,1),s.updateMatrix(),s.applyMatrix4(i.matrixWorld),s.updateMatrix())}}async addStaticGeometries(e,t=!0){const i={data:{colors:new Map}},n=this.threshold+1e3;for(const s in e){const o=this._modelIDIndex.get(s);if(o===void 0)continue;const a=this.codes.get(o);if(!a)continue;const l=e[s];for(const c of l){const h=a.get(c);if(!h)continue;const d=this._geometries.get(h);if(!d)continue;d.exists=!0,t||(d.hidden=!1,d.time=performance.now(),i.data.colors.set(h,n)),this._geometriesInMemory.add(h);const u=t?this._staticGeometries.culled:this._staticGeometries.unculled;u[s]||(u[s]=new Set),u[s].add(c)}}t||await this.handleWorkerMessage(i)}removeStaticGeometries(e,t){const i=[];t===void 0?i.push("culled","unculled"):t===!0?i.push("culled"):i.push("unculled");for(const n in e){const s=e[n];for(const o of i){const a=this._staticGeometries[o][n];if(a)for(const l of s)a.delete(l)}}}cancel(e){for(const t in e){const i=this._modelIDIndex.get(t);if(i===void 0)throw new Error("Model not found.");const n=this.codes.get(i);if(n===void 0)throw new Error("Codes not found.");for(const s of e[t]){const o=n.get(s);if(o===void 0)throw new Error("Color code not found.");this._geometriesInMemory.delete(o);const a=this._geometries.get(o);if(!a)throw new Error("Geometry not found.");a.exists=!1}}}getBoundingBoxes(e){const t=new hn;for(const i in e){const n=e[i],s=this._modelIDIndex.get(i);if(s===void 0)continue;const o=this.boxes.get(s);if(!o)continue;const a=o.clone(n);t.add(a.mesh),t.items.push(a)}return t}getInstanceID(e,t){const i=10**(Math.log(t)*Math.LOG10E+1|0);return e+t/i}setGeometryVisibility(e,t,i,n){const{modelIndex:s,geometryID:o,assetIDs:a}=e,l=this.boxes.get(s);if(l===void 0)throw new Error("Model not found!");const c=n||a;if(i&&e.fragment)e.fragment.setVisibility(t,c);else{const h=new Set;for(const d of c){const u=this.getInstanceID(d,o);h.add(u)}l.setVisibility(t,h)}}handleLostGeometries(e,t,i,n,s){var o,a,l;const c=this._indexModelID.get(i.modelIndex),h=e-i.time,{culled:d,unculled:u}=this._staticGeometries;if(h>this.maxLostTime){if((o=d[c])!=null&&o.has(i.geometryID)||(a=u[c])!=null&&a.has(i.geometryID))return;n[c]||(n[c]=new Set),i.exists=!1,n[c].add(i.geometryID),this._geometriesInMemory.delete(t)}else if(h>this.maxHiddenTime){if((l=u[c])!=null&&l.has(i.geometryID))return;s[c]||(s[c]=new Set),s[c].add(i.geometryID)}}createModelIndex(e){if(this._modelIDIndex.has(e))throw new Error("Can't load the same model twice!");const t=this._nextModelID;return this._nextModelID++,this._modelIDIndex.set(e,t),this._indexModelID.set(t,e),t}}const L0=class yd extends We{constructor(e){super(e),D(this,"enabled",!0),D(this,"onFragmentsDeleted",new oe),D(this,"onFragmentsLoaded",new oe),D(this,"onDisposed",new oe),D(this,"models",{}),D(this,"serializer",new NE),D(this,"maxRamTime",5e3),D(this,"useCache",!0),D(this,"cancel",!1),D(this,"url",""),D(this,"fetch",async t=>fetch(this.url+t)),D(this,"fileDB",new OE("that-open-company-streaming")),D(this,"_culler",null),D(this,"_world",null),D(this,"_ramCache",new Map),D(this,"_isDisposing",!1),D(this,"_geometryInstances",{}),D(this,"_loadedFragments",{}),D(this,"fragIDData",new Map),D(this,"_baseMaterial",new vo),D(this,"_baseMaterialT",new vo({transparent:!0,opacity:.5})),D(this,"disposeStreamedGroup",t=>{this._isDisposing=!0;const{groupID:i,fragmentIDs:n}=t;if(this.models[i]){delete this.models[i],delete this._geometryInstances[i],delete this._loadedFragments[i];for(const s of n)this.fragIDData.delete(s);this.culler.remove(i),this._isDisposing=!1}}),this.components.add(yd.uuid,this),this.components.get(Ze).onFragmentsDisposed.add(this.disposeStreamedGroup),hn.setPropertiesDB(!0)}get world(){if(!this._world)throw new Error("You must set a world before using the streamer!");return this._world}set world(e){var t;this._world=e,(t=this._culler)==null||t.dispose(),this._culler=new lF(this.components,e),this._culler.onViewUpdated.add(async({toLoad:i,toRemove:n,toShow:s,toHide:o})=>{await this.loadFoundGeometries(i),await this.unloadLostGeometries(n),this.setMeshVisibility(s,!0),this.setMeshVisibility(o,!1)})}get culler(){if(!this._culler)throw new Error("You must set a world before using the streamer!");return this._culler}dispose(){var e;this._isDisposing=!0,this.onFragmentsLoaded.reset(),this.onFragmentsDeleted.reset(),this._ramCache.clear(),this.components.get(Ze).onFragmentsDisposed.remove(this.disposeStreamedGroup),this.models={},this._geometryInstances={},this._loadedFragments={},this.fragIDData.clear(),this._baseMaterial.dispose(),this._baseMaterialT.dispose(),(e=this._culler)==null||e.dispose(),this.onDisposed.trigger(yd.uuid),this.onDisposed.reset(),this._isDisposing=!1,hn.setPropertiesDB(!1)}async load(e,t,i){const{assets:n,geometries:s,globalDataFileId:o}=e,a=await(await this.fetch(o)).arrayBuffer(),l=new Uint8Array(a),c=this.components.get(Ze).load(l,{coordinate:t,isStreamed:!0});c.name=o.replace("-processed-global",""),this.world.scene.three.add(c);const{opaque:h,transparent:d}=c.geometryIDs;for(const[E,g]of h){const p=c.keyFragments.get(g);if(p===void 0)throw new Error("Malformed fragments group!");this.fragIDData.set(p,[c,E,new Set])}for(const[E,g]of d){const p=c.keyFragments.get(g);if(p===void 0)throw new Error("Malformed fragments group!");this.fragIDData.set(p,[c,Math.abs(E),new Set])}this.culler.add(c.uuid,n,s);const u=new Map;for(const E of n)u.set(E.id,E);const f={assetsMap:u,geometries:s};Object.defineProperty(f,"assets",{get:()=>Array.from(f.assetsMap.values())}),this.models[c.uuid]=f;const m=new Map;for(const E of n){const g=E.id;for(const{transformation:p,geometryID:_,color:T}of E.geometries){m.has(_)||m.set(_,[]);const I=m.get(_);if(!I)throw new Error("Malformed instances");I.push({id:g,transformation:p,color:T})}}if(this._geometryInstances[c.uuid]=m,i){const E=new Map,g=new Map;for(const v in i.ids){const b=i.ids[v],x=parseInt(v,10);E.set(x,b)}for(const v in i.types){const b=i.types[v],x=parseInt(v,10);g.set(x,b)}const p=o.replace("-global","-properties");hn.url=this.url,c.streamSettings={baseFileName:p,ids:E,types:g};const{indexesFile:_}=i,T=await(await this.fetch(_)).text(),I=this.components.get(zi);I.setRelationMap(c,I.getRelationsMapFromJSON(T))}return this.culler.updateTransformations(c.uuid),this.culler.needsUpdate=!0,c}remove(e){const t=this.components.get(Ze),i=t.groups.get(e);i&&t.disposeGroup(i)}setVisibility(e,t){const i=new Map;if(!t){const n=this.components.get(Ze),s={};for(const[,o]of n.groups){const a=o.getFragmentMap();for(const l in a)s[l]=a[l]}t=s}for(const n in t){const s=this.fragIDData.get(n);if(s===void 0)throw new Error("Geometry not found!");const[o,a,l]=s,c=o.uuid;i.has(c)||i.set(c,new Map);const h=i.get(c),d=t[n];for(const f of d)e?l.delete(f):l.add(f);h.get(a)||h.set(a,new Set);const u=h.get(a);for(const f of d)u.add(f)}for(const[n,s]of i){this.culler.setVisibility(e,n,s);for(const[o]of s){const a=this._loadedFragments[n];if(!a)continue;const l=a[o];if(l)for(const c of l){const h=t[c.id];h&&c.setVisibility(e,h)}}}this.culler.needsUpdate=!0}async clearCache(){await this.fileDB.clear()}async setStatic(e,t,i){const n={};for(const s of e){const o=this.fragIDData.get(s);if(!o){console.log(`Item not found: ${s}.`);continue}const[a,l]=o,c=a.uuid;n[c]||(n[c]=new Set),n[c].add(l)}if(t){const s={};for(const o in n){const a=new Map;a.set(1,n[o]),s[o]=a}await this.loadFoundGeometries(s,!1),await this.culler.addStaticGeometries(n,i)}else this.culler.removeStaticGeometries(n,i)}getBoundingBoxes(e){const t={},i=this.components.get(Ze),n=new Map;for(const[o,a]of i.groups)for(const[,l]of a.keyFragments)n.set(l,o);const s=new Set;for(const o in e){const a=n.get(o);if(a===void 0){console.log("Fragment group not found!");continue}const l=e[o];s.has(a)||(t[a]=new Set,s.add(a));for(const c of l){const h=this.models[a].assetsMap.get(c);if(h)for(const d of h.geometries){const u=d.geometryID,f=this.culler.getInstanceID(c,u);t[a].add(f)}}}return this.culler.getBoundingBoxes(t)}async loadFoundGeometries(e,t=!0){this.cancel=!1;const i={};for(const n in e){const s=new Set;for(const[,o]of e[n])for(const a of o)s.add(a);i[n]=s}for(const n in e){if(this._isDisposing)return;if(this.cancel){this.cancelLoading(i);return}const s=this.components.get(Ze).groups.get(n);if(!s)return;const{geometries:o}=this.models[n],a=new Map,l=new Set;for(const[f,m]of e[n])for(const E of m){if(this.cancel){this.cancelLoading(i);return}l.add(E);const g=o[E];if(!g)throw new Error("Geometry not found");if(g.geometryFile){const p=g.geometryFile,_=a.get(p)||0;a.set(p,_+f)}}if(this.useCache){const f=a.entries();for(const[m,E]of f)this.fileDB.isCached(m)&&a.set(m,E+99999)}const c=Array.from(a).sort((f,m)=>m[1]-f[1]),h=[];for(const[f]of c){const m=this.loadFragmentFile(n,s,t,f,l,i);h.push(m)}await Promise.all(h);const d=new Set,u=performance.now();for(const[f,{time:m}]of this._ramCache)u-m>this.maxRamTime&&d.add(f);for(const f of d)this._ramCache.delete(f)}}async unloadLostGeometries(e){if(this._isDisposing)return;const t=[],i=this.components.get(Ze);for(const n in e){const s=i.groups.get(n);if(!s)throw new Error("Fragment group not found!");if(!this._loadedFragments[n])continue;const o=this._loadedFragments[n],a=e[n];for(const l of a){if(this.culler.removeFragment(s.uuid,l),!o[l])continue;const c=o[l];for(const h of c)s.items.splice(s.items.indexOf(h),1),t.push(h);delete o[l]}}t.length&&this.onFragmentsDeleted.trigger(t);for(const n of t)i.list.delete(n.id),this.world.meshes.delete(n.mesh),n.mesh.material=[],n.dispose(!0)}setMeshVisibility(e,t){for(const i in e)for(const n of e[i]){const s=this._loadedFragments[i];if(!s)continue;const o=s[n];if(o)for(const a of o)a.mesh.visible=t}}newFragment(e,t,i,n,s,o,a){if(n.length===0||this._isDisposing)return;const l=e.geometryIDs,c=s?l.transparent:l.opaque,h=t*(s?-1:1),d=c.get(h);if(d===void 0)return;const u=e.keyFragments.get(d);if(u===void 0)return;const f=this.components.get(Ze);if(f.list.has(u))return;const m=s?this._baseMaterialT:this._baseMaterial,E=new Co(i,m,n.length);E.mesh.visible=a,E.id=u,E.mesh.uuid=u,E.group=e,e.add(E.mesh),e.items.push(E),f.list.set(E.id,E),this.world.meshes.add(E.mesh),this._loadedFragments[e.uuid]||(this._loadedFragments[e.uuid]={});const g=this._loadedFragments[e.uuid];g[t]||(g[t]=[]),g[t].push(E);const p=new Map;for(let v=0;v<n.length;v++){const b=new fe,x=new Fe,{id:A,transformation:y,color:S}=n[v];b.fromArray(y);const[O,w,N]=S;if(x.setRGB(O,w,N,"srgb"),p.has(A)){const C=p.get(A);if(!C)continue;C.transforms.push(b),C.colors&&C.colors.push(x)}else p.set(A,{id:A,colors:[x],transforms:[b]})}const _=Array.from(p.values());E.add(_);const T=this.fragIDData.get(E.id);if(!T)throw new Error("Fragment data not found!");const I=T[2];I.size&&E.setVisibility(!1,I),this.culler.addFragment(e.uuid,t,E),o.push(E)}cancelLoading(e){this.cancel=!1,this.culler.cancel(e)}async loadFragmentFile(e,t,i,n,s,o){if(!this._ramCache.has(n)){let c=new Uint8Array;if(this.useCache){const d=await this.fileDB.get(n);if(d){const u=await d.arrayBuffer();c=new Uint8Array(u)}else{const u=await(await this.fetch(n)).arrayBuffer();c=new Uint8Array(u),await this.fileDB.add(n,c)}}else{const d=await(await this.fetch(n)).arrayBuffer();c=new Uint8Array(d)}const h=this.serializer.import(c);this._ramCache.set(n,{data:h,time:performance.now()})}const a=this._ramCache.get(n);if(!a)return;a.time=performance.now();const l=[];if(a)for(const[c,{position:h,index:d,normal:u}]of a.data){if(this._isDisposing)return;if(this.cancel){this.cancelLoading(o);return}if(o[e].delete(c),!s.has(c)||!this._geometryInstances[e]||!this._geometryInstances[e].has(c))continue;const f=this._geometryInstances[e].get(c);if(!f)throw new Error("Instances not found!");const m=new Ve,E=new ot(h,3),g=new ot(u,3);m.setAttribute("position",E),m.setAttribute("normal",g),m.setIndex(Array.from(d));const p=[],_=[];for(const T of f)T.color[3]===1?_.push(T):p.push(T);this.newFragment(t,c,m,p,!0,l,i),this.newFragment(t,c,m,_,!1,l,i)}l.length&&!this._isDisposing&&this.onFragmentsLoaded.trigger(l)}};D(L0,"uuid","22437e8d-9dbc-4b99-a04f-d2da280d50c8");let SF=L0;class cF{constructor(){D(this,"_meshes",new Map)}highlight(e,t,i,n){if(!t.userData.indexFragmentMap||!t.geometry.index)return;const{userData:s}=t,o=s.indexFragmentMap,a=[],l=t.geometry.index.array;for(const[d,u]of o)for(const f in u)if(n[f]){for(const m of u[f])if(n[f].has(m)){const E=l[d*3],g=l[d*3+1],p=l[d*3+2];a.push(E,g,p)}}this._meshes.has(e)||this._meshes.set(e,new Map);const c=this._meshes.get(e);if(!c.has(t.uuid)){const d=new Ti({depthTest:!1,side:2,color:i}),u=new Ve;u.attributes=t.geometry.attributes;const f=new ge(u,d);f.frustumCulled=!1,c.set(t.uuid,f)}const h=c.get(t.uuid);h.position.copy(t.position),t.parent&&t.parent!==h.parent&&t.parent.add(h),h.geometry.setIndex(a),h.material.color.copy(i)}clear(e){for(const[t,i]of this._meshes)if(!(e&&e!==t))for(const[n,s]of i)s.removeFromParent()}dispose(){for(const[e,t]of this._meshes)for(const[i,n]of t)n.removeFromParent(),n.geometry.attributes={},n.geometry.dispose(),n.material.dispose();this._meshes.clear()}}const O0=class bd extends We{constructor(e){super(e),D(this,"onDisposed",new oe),D(this,"onBeforeUpdate",new oe),D(this,"onAfterUpdate",new oe),D(this,"onSetup",new oe),D(this,"isSetup",!1),D(this,"enabled",!0),D(this,"events",{}),D(this,"multiple","ctrlKey"),D(this,"zoomFactor",1.5),D(this,"zoomToSelection",!1),D(this,"backupColor",null),D(this,"selection",{}),D(this,"config",{selectName:"select",hoverName:"hover",selectionColor:new Fe("#BCF124"),hoverColor:new Fe("#6528D7"),autoHighlightOnClick:!0,world:null,selectEnabled:!0,hoverEnabled:!0}),D(this,"colors",new Map),D(this,"autoToggle",new Set),D(this,"mouseDownPosition",{x:0,y:0}),D(this,"mouseMoveThreshold",5),D(this,"selectable",{}),D(this,"eventManager",new fA),D(this,"_fills",new cF),D(this,"_mouseState",{down:!1,moved:!1}),D(this,"_colorsBeforeSelect",{}),D(this,"saveHighlightersBeforeSelect",t=>{var i;const n=this.components.get(Ze);for(const s in t){const o=n.list.get(s);if(!o)continue;const a=(i=o.group)==null?void 0:i.uuid;if(a)for(const l in this.selection){if(l===this.config.selectName||l===this.config.hoverName)continue;const c=this.selection[l][s];if(c){l in this._colorsBeforeSelect||(this._colorsBeforeSelect[l]={}),a in this._colorsBeforeSelect[l]||(this._colorsBeforeSelect[l]={[a]:new Set});for(const h of c)this._colorsBeforeSelect[l][a].add(h)}}}}),D(this,"restoreHighlightersAfterDeselect",()=>{const t=this.components.get(Ze);for(const i in this._colorsBeforeSelect){let n={};const s=this._colorsBeforeSelect[i];for(const o in s){const a=t.groups.get(o);if(!a)continue;const l=a.getFragmentMap(s[o]);n={...n,...l}}this.highlightByID(i,n,!1,!1)}this._colorsBeforeSelect={}}),D(this,"clearHover",()=>{this.selection[this.config.hoverName]={}}),D(this,"onMouseDown",t=>{this.enabled&&(this.mouseDownPosition={x:t.clientX,y:t.clientY},this._mouseState.down=!0)}),D(this,"onMouseUp",async t=>{if(!this.enabled)return;const{world:i,autoHighlightOnClick:n,selectEnabled:s}=this.config;if(!i)throw new Error("No world found!");if(!i.renderer)throw new Error("This world doesn't have a renderer!");if(t.target===i.renderer.three.domElement){if(this._mouseState.down=!1,this._mouseState.moved||t.button!==0){this._mouseState.moved=!1;return}if(this._mouseState.moved=!1,n&&s){const o=this.multiple==="none"?!0:!t[this.multiple];await this.highlight(this.config.selectName,o,this.zoomToSelection)}}}),D(this,"onMouseMove",async t=>{if(!this.enabled)return;const i=t.clientX-this.mouseDownPosition.x,n=t.clientY-this.mouseDownPosition.y,s=Math.sqrt(i*i+n*n),{hoverName:o,hoverEnabled:a}=this.config;if(this._mouseState.moved){this.clear(o);return}if(s>this.mouseMoveThreshold){this._mouseState.moved=this._mouseState.down;const l={};for(const c in this.selection){if(c===o)continue;const h=this.selection[c];for(const d in h){d in l||(l[d]=new Set);const u=h[d];for(const f of u)l[d].add(f)}}a&&await this.highlight(this.config.hoverName,!0,!1,l)}}),this.components.add(bd.uuid,this),this.eventManager.list.add(this.onSetup),this.eventManager.list.add(this.onDisposed)}async dispose(){this.setupEvents(!1),this._fills.dispose(),this.onBeforeUpdate.reset(),this.onAfterUpdate.reset(),this.selection={};for(const e in this.events){const{onClear:t,onHighlight:i}=this.events[e];this.eventManager.list.delete(t),this.eventManager.list.delete(i)}this.onDisposed.trigger(bd.uuid),this.eventManager.reset()}add(e,t){if(this.selection[e]||this.colors.has(e))throw new Error("A selection with that name already exists!");this.colors.set(e,t),this.selection[e]={};const i=new oe,n=new oe,s=new oe;this.events[e]={onHighlight:i,onClear:s,onBeforeHighlight:n},this.eventManager.add([s,i,n])}remove(e){if(this.clear(e),delete this.selection[e],this.colors.delete(e),this.selection[e]||this.colors.has(e))throw new Error("A selection with that name already exists!");if(this.events[e]){const{onHighlight:t,onClear:i,onBeforeHighlight:n}=this.events[e];this.eventManager.remove([i,t,n]),delete this.events[e]}}async highlight(e,t=!0,i=this.zoomToSelection,n={}){if(!this.enabled)return null;if(!this.config.world)throw new Error("No world found in config!");const s=this.config.world;if(!this.selection[e])throw new Error(`Selection ${e} does not exist.`);const o=[],a=this.components.get(Ze).meshes;for(const g of a)o.push(g);const l=this.components.get(bo);for(const g of l.list){const p=g;if(p.edges){const _=p.edges.fillMeshes;for(const T of _)o.push(T)}}const c=this.components.get(Ji).get(s).castRay(o);if(!c||!c.face)return this.clear(e),null;const h=c.object;if(!h.fragment&&h.userData.indexFragmentMap){if(c.faceIndex===void 0||!h.geometry.index)return null;const{userData:g}=h,p=g.indexFragmentMap.get(c.faceIndex);if(p){await this.highlightByID(e,p,t,i,n,h,!0);const _=Object.keys(p)[0];return{id:Array.from(p[_])[0],fragments:p}}return null}const d=h.geometry,u=c.instanceId;if(!d||u===void 0)return null;const f=h.fragment.getItemID(u);if(f===null)throw new Error("Item ID not found!");const m=h.fragment.group;if(!m)throw new Error("Fragment must belong to a FragmentsGroup!");const E=m.getFragmentMap([f]);return await this.highlightByID(e,E,t,i,n,void 0,!0),{id:f,fragments:E}}async highlightByID(e,t,i=!0,n=this.zoomToSelection,s={},o=void 0,a=!1){if(!this.enabled)return;this.events[e].onBeforeHighlight.trigger(this.selection[e]),i&&this.clear(e);const l=this.components.get(Ze),c=this.colors.get(e);if(c===void 0)throw new Error("Color for selection not found!");const h={};for(const d in t){const u=t[d],f=s[d];for(const m of u)if(!(f&&f.has(m))){if(this.selectable[e]){const E=this.selectable[e];if(!E[d]||!E[d].has(m))continue}h[d]||(h[d]=new Set),h[d].add(m)}}for(const d in h){this.selection[e][d]||(this.selection[e][d]=new Set);const u=h[d],f=new Set,m=new Set;for(const g of u){const p=this.selection[e][d];a&&this.autoToggle.has(e)&&p.has(g)?(f.add(g),p.delete(g)):(p.add(g),m.add(g))}const E=l.list.get(d);if(E&&(f.size&&(this.backupColor?E.setColor(this.backupColor,f):E.resetColor(f)),m.size&&c!==null&&E.setColor(c,m),E.mesh.userData.fills&&c!==null))for(const g of E.mesh.userData.fills)this._fills.highlight(e,g,c,t)}this.events[e].onHighlight.trigger(this.selection[e]),o&&c!==null&&this._fills.highlight(e,o,c,t),n&&await this.zoomSelection(e)}clear(e,t){const i=e?[e]:Object.keys(this.selection);for(const n of i){this._fills.clear(n);const s=this.components.get(Ze),o=this.selection[n];for(const a in o){const l=s.list.get(a);if(!l)continue;let c=o[a];if(c){if(t){const h=t[a];if(!h)continue;const d=new Set,u=new Set;for(const f of c)h.has(f)?d.add(f):u.add(f);c=d,u.size?o[a]=u:delete o[a]}this.backupColor?l.setColor(this.backupColor,c):l.resetColor(c)}}t||(this.selection[n]={}),this.events[n].onClear.trigger(null)}}setup(e){this.config={...this.config,...e},this.add(this.config.selectName,this.config.selectionColor),this.autoToggle.add(this.config.selectName),this.add(this.config.hoverName,this.config.hoverColor),this.setupEvents(!0),this.enabled=!0,this.isSetup=!0,this.onSetup.trigger(this)}updateFragments(e){for(const t of e)for(const i in this.selection){const n=this.selection[i][t.id],s=this.colors.get(i);n&&s&&t.setColor(s,n)}}async zoomSelection(e){if(!this.config.world)throw new Error("No world found in config!");const t=this.config.world;if(!t.camera.hasCameraControls())return;const i=this.components.get(Pc),n=this.components.get(Ze);i.reset();const s=this.selection[e];if(!Object.keys(s).length)return;for(const E in s){const g=n.list.get(E);if(!g)continue;const p=s[E];i.addMesh(g.mesh,p)}const o=i.getSphere(),a=1/0,l=-1/0,{x:c,y:h,z:d}=o.center,u=o.radius===a||c===a||h===a||d===a,f=o.radius===l||c===l||h===l||d===l,m=o.radius===0;u||f||m||(o.radius*=this.zoomFactor,await t.camera.controls.fitToSphere(o,!0))}setupEvents(e){if(!this.config.world){console.log("No world found while setting up events!");return}if(this.config.world.isDisposing)return;if(!this.config.world.renderer)throw new Error("The given world doesn't have a renderer!");const t=this.config.world.renderer.three.domElement,i=this.events[this.config.selectName].onHighlight;i.remove(this.clearHover),i.remove(this.saveHighlightersBeforeSelect);const n=this.events[this.config.selectName].onClear;n.remove(this.restoreHighlightersAfterDeselect),t.removeEventListener("mousedown",this.onMouseDown),t.removeEventListener("mouseup",this.onMouseUp),t.removeEventListener("pointermove",this.onMouseMove),e&&(i.add(this.clearHover),i.add(this.saveHighlightersBeforeSelect),n.add(this.restoreHighlightersAfterDeselect),t.addEventListener("mousedown",this.onMouseDown),t.addEventListener("mouseup",this.onMouseUp),t.addEventListener("pointermove",this.onMouseMove))}};D(O0,"uuid","cb8a76f2-654a-4b50-80c6-66fd83cafd77");let xF=O0;class hF extends We{constructor(){super(...arguments),D(this,"onDisposed",new oe),D(this,"world")}get enabled(){return!this.world||this.world.isDisposing?!1:this.getRenderer().postproduction.customEffects.outlineEnabled}set enabled(e){if(!this.world||this.world.isDisposing)return;const t=this.getRenderer();t.postproduction.customEffects.outlineEnabled=e}create(e,t){const i=this.getRenderer();if(i.postproduction.customEffects.outlinedMeshes[e]!==void 0)throw new Error(`There's already a style with the name ${e}.`);i.postproduction.customEffects.outlinedMeshes[e]={material:t,meshes:new Set}}add(e,t){const i=this.getRenderer(),n=this.getStyles()[e];if(!n)throw new Error(`The style ${e} does not exist`);const s=i.postproduction.customEffects.outlineScene,o=this.components.get(Ze);for(const a in t){const l=o.list.get(a);if(!l)continue;const c=t[a],h=l.clone(c);h.mesh.position.set(0,0,0),h.mesh.rotation.set(0,0,0),h.mesh.applyMatrix4(l.mesh.matrixWorld),h.mesh.instanceColor=null,h.mesh.material=[n.material],n.meshes.add(h.mesh),s.add(h.mesh)}}clear(e){if(e){this.clearStyle(e,!1);return}const t=this.getStyles(),i=Object.keys(t);for(const n of i)this.clearStyle(n,!1);this.world=void 0}dispose(){if(this.world&&!this.world.isDisposing){const e=this.getStyles(),t=Object.keys(e);for(const i of t)this.clearStyle(i,!0)}this.onDisposed.trigger(),this.onDisposed.reset()}clearStyle(e,t){const i=this.getStyles(),n=i[e];if(!n)return;const s=this.components.get(xn);for(const o of n.meshes){const a=o;a.fragment&&a.fragment.dispose(!1),s.destroy(o)}n.meshes.clear(),t&&(n.material.dispose(),delete i[e])}getStyles(){return this.getRenderer().postproduction.customEffects.outlinedMeshes}getRenderer(){if(!this.world)throw new Error("You must set a world to use the outliner!");const e=this.world.renderer;if(!e.postproduction)throw new Error("The world given to the outliner must use the postproduction renderer.");return e}}D(hF,"uuid","2fd3bcc5-b3b6-4ded-9f64-f47a02854a10");class kn extends We{constructor(){super(...arguments),D(this,"enabled",!1),D(this,"onDisposed",new oe),D(this,"onNavigated",new oe),D(this,"onExited",new oe),D(this,"planeType","section"),D(this,"offset",100),D(this,"list",new Map),D(this,"world"),D(this,"current",null),D(this,"cached3DCamera",{position:new F,target:new F,projection:"Perspective",zoom:1,top:10,bottom:-10,right:10,left:-10})}create(e){const t=this.getWorld(),{id:i,point:n,normal:s,type:o}=e;let{name:a,offset:l}=e;const c=this.components.get(bo),h=c.Type;c.Type=Oc;const d=c.createFromNormalAndCoplanarPoint(t,s,n);d.visible=!1,d.edges.visible=!1,d.enabled=!1,a=a||i,l=l||this.offset,d.type=o||this.planeType,d.updateFill();const u=s.clone().multiplyScalar(-l).add(n),f=n.clone(),m={id:i,name:a,plane:d,offset:l,cached:{position:u,target:f,zoom:1,size:10}};return this.list.set(i,m),c.Type=h,m}delete(e){const t=this.list.get(e);t&&(t.plane.dispose(),this.list.delete(e))}async goTo(e,t=!1){var i;const n=this.getCamera();if(((i=this.current)==null?void 0:i.id)===e)return;const s=this.list.get(e);if(!s)throw new Error(`There's no section with the ID: ${e}.`);this.cacheCameraPosition(),await this.hidePreviousClippingPlane(),await n.projection.set("Orthographic"),this.current=s;const o=new F,a=new F,{cached:l}=s,{position:c,target:h}=l;o.copy(h),a.copy(c),await n.controls.setLookAt(a.x,a.y,a.z,o.x,o.y,o.z,t);const d=s.cached.size,u=n.threePersp.aspect;n.threeOrtho.top=d,n.threeOrtho.bottom=-d,n.threeOrtho.left=-d*u,n.threeOrtho.right=d*u,n.threeOrtho.updateProjectionMatrix(),await n.controls.zoomTo(l.zoom,!1),n.set("Plan"),this.current.plane&&(this.current.plane.enabled=!0,this.current.plane.edges.fillNeedsUpdate=!0,this.current.plane.edges.visible=!0),this.enabled=!0,this.onNavigated.trigger({id:e})}async exit(e=!1){if(!this.enabled||!this.world)return;this.cacheCameraPosition();const t=this.getCamera();t.set("Orbit");const{position:i,target:n,projection:s}=this.cached3DCamera;await t.projection.set(s),this.current&&(this.current.plane.enabled=!1,this.current.plane.edges.enabled=!1,this.current.plane.edges.visible=!1),this.current=null;const{x:o,y:a,z:l}=i,{x:c,y:h,z:d}=n;await t.controls.setLookAt(o,a,l,c,h,d,e),t.projection.current==="Orthographic"&&(await t.controls.zoomTo(this.cached3DCamera.zoom,!1),t.threeOrtho.left=this.cached3DCamera.left,t.threeOrtho.right=this.cached3DCamera.right,t.threeOrtho.top=this.cached3DCamera.top,t.threeOrtho.bottom=this.cached3DCamera.bottom),this.enabled=!1,this.onExited.trigger()}dispose(){for(const[,{plane:e}]of this.list)e.dispose();this.list.clear(),this.onDisposed.trigger(),this.onDisposed.reset()}getWorld(){if(!this.world)throw new Error("World is needed to create sections!");return this.world}getCamera(){const e=this.getWorld().camera;if(!e.hasCameraControls()||!e.projection)throw new Error("The world given to sections must have an OrthoPerspective camera.");return e}cacheCameraPosition(){if(!this.world)throw new Error("World is needed to create clipping planes!");const e=this.getCamera();if(this.enabled){if(!this.current)throw new Error("Current section not found!");const{cached:t}=this.current,{position:i,target:n}=t;e.controls.getPosition(i),e.controls.getTarget(n),t.zoom=e.threeOrtho.zoom,t.size=e.threeOrtho.top}else{e.three.getWorldPosition(this.cached3DCamera.position),e.controls.getTarget(this.cached3DCamera.target),this.cached3DCamera.projection=e.projection.current,this.cached3DCamera.zoom=e.threeOrtho.zoom;const{top:t,bottom:i,left:n,right:s}=e.threeOrtho;this.cached3DCamera.top=t,this.cached3DCamera.bottom=i,this.cached3DCamera.left=n,this.cached3DCamera.right=s}}async hidePreviousClippingPlane(){if(this.current){const e=this.current.plane;e&&(e.enabled=!1),this.current.plane.edges.visible=!1}}}D(kn,"uuid","45b41ba3-7bb8-4e08-909f-e0fa87973965");const N0=class D0 extends We{constructor(e){super(e),D(this,"onDisposed",new oe),D(this,"planeType","floorplan"),D(this,"onNavigated",new oe),D(this,"onExited",new oe),D(this,"enabled",!1),D(this,"currentPlan",null),D(this,"offset",1.5),D(this,"list",[]),D(this,"_cachedPlanCamera",null),this.components.add(D0.uuid,this)}get world(){return this.components.get(kn).world}set world(e){const t=this.components.get(kn);t.world=e}get defaultCameraOffset(){return this.components.get(kn).offset}set defaultCameraOffset(e){const t=this.components.get(kn);t.offset=e}dispose(){this.onExited.reset(),this.onNavigated.reset();const e=this.components.get(kn);for(const t of this.list)e.delete(t.id);this.list=[],this.onDisposed.trigger(),this.onDisposed.reset()}async generate(e){if(!e.hasProperties)throw new Error("Properties are needed to compute plan views!");const t=await e.getAllPropertiesOfType(Uc);if(!t)throw new Error("Floorplans not found!");const i=e.coordinationMatrix.elements[13],n=await tr.getUnits(e);for(const s of Object.values(t)){const o={value:0};this.getAbsoluteFloorHeight(s.ObjectPlacement,o);const a=o.value*n+i+this.offset;this.create({name:s.Name.value,id:s.GlobalId.value,normal:new F(0,-1,0),point:new F(0,a,0)})}}create(e){const t=this.components.get(kn);e.type=e.type||this.planeType;const i={...t.create(e),planOffset:this.offset};this.list.push(i)}async goTo(e,t=!1){this.enabled&&this.cachePlanCamera(),await this.components.get(kn).goTo(e,t),await this.applyCachedPlanCamera();const i=this.list.find(n=>n.id===e);i&&(this.currentPlan=i),this.enabled=!0}async exitPlanView(e=!1){this.enabled&&(this.cachePlanCamera(),await this.components.get(kn).exit(e),this.currentPlan=null,this.enabled=!1,this.onExited.trigger())}cachePlanCamera(){var e;const t=(e=this.world)==null?void 0:e.camera,i=new F,n=new F;t.controls.getTarget(i),t.controls.getPosition(n),this._cachedPlanCamera={target:i,position:n,zoom:t.threeOrtho.zoom,top:t.threeOrtho.top,right:t.threeOrtho.right,bottom:t.threeOrtho.bottom,left:t.threeOrtho.left}}async applyCachedPlanCamera(){var e;if(!this._cachedPlanCamera)return;const t=(e=this.world)==null?void 0:e.camera,{position:i,target:n}=this._cachedPlanCamera,s=new F,o=new F;t.controls.getPosition(s),t.controls.getTarget(o);const a=s.y,l=o.y;await t.controls.setLookAt(i.x,a,i.z,n.x,l,n.z),await t.controls.zoomTo(this._cachedPlanCamera.zoom),t.threeOrtho.top=this._cachedPlanCamera.top,t.threeOrtho.bottom=this._cachedPlanCamera.bottom,t.threeOrtho.left=this._cachedPlanCamera.left,t.threeOrtho.right=this._cachedPlanCamera.right,t.threeOrtho.updateProjectionMatrix()}getAbsoluteFloorHeight(e,t){const i=e.RelativePlacement.Location.Coordinates;t.value+=i[2].value,e.PlacementRelTo&&this.getAbsoluteFloorHeight(e.PlacementRelTo,t)}};D(N0,"uuid","a80874aa-1c93-43a4-80f2-df346da086b1");let wF=N0;export{IF as A,wt as B,Fe as C,fF as D,_F as F,Zn as G,Bi as I,xF as L,dF as M,bF as N,CF as O,yF as P,EF as S,mF as T,F as V,_d as W,p1 as X,ge as a,kn as b,Ti as c,pn as d,wF as e,SF as f,Gs as g,Oc as h,aa as i,fe as j,hF as k,Zd as l,ot as m,Ve as n,EE as o,Fi as p,CE as q,pF as r,St as s,Re as t,vi as u,vF as v,TF as w,cc as x,gF as y};
