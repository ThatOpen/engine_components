import{a as y,v as m,C as u}from"./index-lvtjgYNN.js";import{a as C,R as g,m as b}from"./index-bERBRksd.js";import{C as v,W as I,S,a as R,O as k,F as f,I as F,b as M,c as P}from"./index-BPZgAaC0.js";const n=new v,U=n.get(I),a=U.create();a.scene=new S(n);a.scene.setup();a.scene.three.background=null;const D=document.getElementById("container");a.renderer=new R(n,D);a.camera=new k(n);await a.camera.controls.setLookAt(78,20,-2.2,26,-4,25);n.init();const x="https://thatopen.github.io/engine_fragment/resources/worker.mjs",L=await fetch(x),O=await L.blob(),j=new File([O],"worker.mjs",{type:"text/javascript"}),E=URL.createObjectURL(j),s=n.get(f);s.init(E);a.camera.controls.addEventListener("rest",()=>s.core.update(!0));a.onCameraChanged.add(t=>{for(const[,o]of s.list)o.useCamera(t.three);s.core.update(!0)});s.list.onItemSet.add(({value:t})=>{t.useCamera(a.camera.three),a.scene.three.add(t.object),s.core.update(!0)});const H=["https://thatopen.github.io/engine_components/resources/frags/school_arq.frag"];await Promise.all(H.map(async t=>{var r;const o=(r=t.split("/").pop())==null?void 0:r.split(".").shift();if(!o)return null;const e=await(await fetch(t)).arrayBuffer();return s.core.load(e,{modelId:o})}));const h=n.get(F),d=h.create("Sample",["IFC4"]);d.description="All doors must have FireRating specified in Pset_DoorCommon";const _=new M(n,{type:"simple",parameter:"IFCDOOR"}),B=new P(n,{type:"simple",parameter:"Pset_DoorCommon"},{type:"simple",parameter:"FireRating"});d.applicability.add(_);d.requirements.add(B);const p=new Map,N=t=>{const i=[...t.get(f).core.models.materials.list.values()];for(const e of i){if(e.userData.customId)continue;let r;"color"in e?r=e.color.getHex():r=e.lodColor.getHex(),p.set(e,{color:r,transparent:e.transparent,opacity:e.opacity}),e.transparent=!0,e.opacity=.05,e.needsUpdate=!0,"color"in e?e.color.setColorName("white"):e.lodColor.setColorName("white")}},q=()=>{for(const[t,o]of p){const{color:i,transparent:e,opacity:r}=o;t.transparent=e,t.opacity=r,"color"in t?t.color.setHex(i):t.lodColor.setHex(i),t.needsUpdate=!0}p.clear()},w=()=>{p.size?q():N(n)},A=async()=>{const t=await d.test([/arq/]),{fail:o,pass:i}=h.getModelIdMap(t),e=[s.resetHighlight()];e.push(s.highlight({customId:"green",color:new u("green"),renderedFaces:m.ONE,opacity:1,transparent:!1},i)),e.push(s.highlight({customId:"red",color:new u("red"),renderedFaces:m.ONE,opacity:1,transparent:!1},o)),e.push(s.core.update(!0)),await Promise.all(e),w()};C.init();const l=g.create(()=>b`
    <bim-panel active label="IDS Specifications Tutorial" class="options-menu">
      <bim-panel-section label="General">
        <bim-button label="Toogle Ghost" @click=${w}></bim-button>
      </bim-panel-section>
      <bim-panel-section label="Specification">
        <bim-button label="Review Model" @click=${async({target:o})=>{o.loading=!0,await A(),o.loading=!1}}></bim-button>
      </bim-panel-section>
    </bim-panel>
  `);document.body.append(l);const G=g.create(()=>b`
      <bim-button class="phone-menu-toggler" icon="solar:settings-bold"
        @click="${()=>{l.classList.contains("options-menu-visible")?l.classList.remove("options-menu-visible"):l.classList.add("options-menu-visible")}}">
      </bim-button>
    `);document.body.append(G);const c=new y;c.showPanel(2);document.body.append(c.dom);c.dom.style.left="0px";c.dom.style.zIndex="unset";a.renderer.onBeforeUpdate.add(()=>c.begin());a.renderer.onAfterUpdate.add(()=>c.end());
