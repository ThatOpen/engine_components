import{u as y,V as f,f as g,a as C,z as m,C as u}from"./index-BVinSk0X.js";import{C as I,W as S,S as v,a as M,O as P,F as b,I as D,b as F,c as k}from"./index-DBG1qVuX.js";const n=new I,R=n.get(S),a=R.create();a.scene=new v(n);a.scene.setup();a.scene.three.background=null;const x=document.getElementById("container");a.renderer=new M(n,x);a.camera=new P(n);await a.camera.controls.setLookAt(78,20,-2.2,26,-4,25);n.init();const O="https://thatopen.github.io/engine_fragment/resources/worker.mjs",s=n.get(b);s.init(O);a.camera.controls.addEventListener("rest",()=>s.core.update(!0));a.onCameraChanged.add(t=>{for(const[,o]of s.list)o.useCamera(t.three);s.core.update(!0)});s.list.onItemSet.add(({value:t})=>{t.useCamera(a.camera.three),a.scene.three.add(t.object),s.core.update(!0)});const E=["/resources/frags/school_arq.frag"];await Promise.all(E.map(async t=>{var r;const o=(r=t.split("/").pop())==null?void 0:r.split(".").shift();if(!o)return null;const e=await(await fetch(t)).arrayBuffer();return s.core.load(e,{modelId:o})}));const h=n.get(D),p=h.create("Sample",["IFC4"]);p.description="All doors must have FireRating specified in Pset_DoorCommon";const H=new F(n,{type:"simple",parameter:"IFCDOOR"}),L=new k(n,{type:"simple",parameter:"Pset_DoorCommon"},{type:"simple",parameter:"FireRating"});p.applicability.add(H);p.requirements.add(L);const d=new Map,U=t=>{const i=[...t.get(b).core.models.materials.list.values()];for(const e of i){if(e.userData.customId)continue;let r;"color"in e?r=e.color.getHex():r=e.lodColor.getHex(),d.set(e,{color:r,transparent:e.transparent,opacity:e.opacity}),e.transparent=!0,e.opacity=.05,e.needsUpdate=!0,"color"in e?e.color.setColorName("white"):e.lodColor.setColorName("white")}},z=()=>{for(const[t,o]of d){const{color:i,transparent:e,opacity:r}=o;t.transparent=e,t.opacity=r,"color"in t?t.color.setHex(i):t.lodColor.setHex(i),t.needsUpdate=!0}d.clear()},w=()=>{d.size?z():U(n)},N=async()=>{const t=await p.test([/arq/]),{fail:o,pass:i}=h.getModelIdMap(t),e=[s.resetHighlight()];e.push(s.highlight({customId:"green",color:new u("green"),renderedFaces:m.ONE,opacity:1,transparent:!1},i)),e.push(s.highlight({customId:"red",color:new u("red"),renderedFaces:m.ONE,opacity:1,transparent:!1},o)),e.push(s.core.update(!0)),await Promise.all(e),w()};y.init();const c=f.create(()=>g`
    <bim-panel active label="IDS Specifications Tutorial" class="options-menu">
      <bim-panel-section label="General">
        <bim-button label="Toogle Ghost" @click=${w}></bim-button>
      </bim-panel-section>
      <bim-panel-section label="Specification">
        <bim-button label="Review Model" @click=${async({target:o})=>{o.loading=!0,await N(),o.loading=!1}}></bim-button>
      </bim-panel-section>
    </bim-panel>
  `);document.body.append(c);const _=f.create(()=>g`
      <bim-button class="phone-menu-toggler" icon="solar:settings-bold"
        @click="${()=>{c.classList.contains("options-menu-visible")?c.classList.remove("options-menu-visible"):c.classList.add("options-menu-visible")}}">
      </bim-button>
    `);document.body.append(_);const l=new C;l.showPanel(2);document.body.append(l.dom);l.dom.style.left="0px";l.dom.style.zIndex="unset";a.renderer.onBeforeUpdate.add(()=>l.begin());a.renderer.onAfterUpdate.add(()=>l.end());
