var G=Object.defineProperty;var J=(o,t,e)=>t in o?G(o,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):o[t]=e;var n=(o,t,e)=>(J(o,typeof t!="symbol"?t+"":t,e),e);import{P as b,C as O,aA as K,aB as B,Y as Q,V as P,a as X}from"./index-D7EC26VF.js";import{a as Z,R as U,m as k,F as ee}from"./index-bERBRksd.js";import{E as R,U as te,O as T,D as se,d as re,F as E,e as ae,C as ne,W as oe,S as le,a as ie,R as de}from"./index-Bv9-N0Ab.js";class z{constructor(t,e){n(this,"_components");n(this,"_cameraOffset",10);n(this,"_planeHelper");n(this,"_farPlaneHelper");n(this,"_cameraHelper");n(this,"onStateChanged",new R);n(this,"onUpdated",new R);n(this,"onDisposed",new R);n(this,"camera");n(this,"plane",new b);n(this,"farPlane",new b);n(this,"id",te.create());n(this,"_open",!1);n(this,"_range",f.defaultRange);n(this,"_world",null);n(this,"_helpersVisible",!1);n(this,"_planesEnabled",!1);this._components=t,this.camera=new T(this._components);const{threeOrtho:s}=this.camera;if(e!=null&&e.id&&(this.id=e.id),e!=null&&e.normal&&(e!=null&&e.point)){const{normal:r,point:a}=e;this.plane.setFromNormalAndCoplanarPoint(r,a)}this._cameraHelper=new K(s),this._planeHelper=new B(this.plane,50),this._farPlaneHelper=new B(this.farPlane,50),this.farPlaneHelperColor=new O("blue"),this.update()}get _planeNormalOpposite(){return this.plane.normal.clone().negate()}get _planePosition(){return this.plane.normal.clone().multiplyScalar(-this.plane.constant)}get _cameraPosition(){return this._planePosition.addScaledVector(this._planeNormalOpposite,this._cameraOffset)}set open(t){this._open=t,this.onStateChanged.trigger(["open"])}get open(){return this._open}set planeHelperColor(t){!Array.isArray(this._planeHelper.material)&&"color"in this._planeHelper.material&&this._planeHelper.material.color instanceof O&&(this._planeHelper.material.color=t)}set farPlaneHelperColor(t){!Array.isArray(this._farPlaneHelper.material)&&"color"in this._farPlaneHelper.material&&this._farPlaneHelper.material.color instanceof O&&(this._farPlaneHelper.material.color=t)}set range(t){this._range=t,this.update()}get range(){return this._range}set distance(t){this.plane.constant=t,this.update()}get distance(){return this.plane.constant}set world(t){this._world=t,this.camera.currentWorld=t,t&&(this.camera.projection.set("Orthographic"),this.camera.set("Plan"),this.camera.controls.dollySpeed=6,this.camera.controls.restThreshold=.005,this.update())}get world(){return this._world}set helpersVisible(t){if(!t){this._helpersVisible=t,this._planeHelper.removeFromParent(),this._farPlaneHelper.removeFromParent(),this._cameraHelper.removeFromParent();return}this.world&&(this._helpersVisible=t,this.world.scene.three.add(this._planeHelper,this._farPlaneHelper))}get helpersVisible(){return this._helpersVisible}set planesEnabled(t){const{world:e}=this;if(!e)return;const{renderer:s}=e;s&&(s.setPlane(t,this.plane),s.setPlane(t,this.farPlane),this._planesEnabled=t)}get planesEnabled(){return this._planesEnabled}dispose(){this.helpersVisible=!1;const t=this._components.get(se);t.destroy(this._planeHelper),t.destroy(this._farPlaneHelper),t.destroy(this._cameraHelper),this.camera.dispose(),this.onDisposed.trigger()}update(){if(this.world){const t=this._cameraPosition,e=this._planePosition;this.camera.controls.setLookAt(t.x,t.y,t.z,e.x,e.y,e.z,!1)}this.farPlane.normal.copy(this._planeNormalOpposite),this.farPlane.constant=this.range-this.plane.constant,this.onUpdated.trigger()}flip(){this.plane.normal.negate(),this.update()}}const V=class V extends re{constructor(e){super(e);n(this,"list",new Q);n(this,"enabled",!0);n(this,"world",null);n(this,"_fragmentsUpdateEvent",()=>{this.components.get(E).core.update(!0)});e.add(V.uuid,this),this.setupEvents()}get hasOpenViews(){return[...this.list.values()].some(e=>e.open)}setupEvents(){this.list.onBeforeDelete.add(({key:e,value:s})=>{s.open&&this.close(e),s.dispose()})}create(e,s,r){const a=new z(this.components,{id:r==null?void 0:r.id,normal:e,point:s});return a.world=(r==null?void 0:r.world)??this.world,this.list.set(a.id,a),a}createFromPlane(e,s){const r=new z(this.components,{id:s==null?void 0:s.id});return r.plane.copy(e),r.update(),r.world=(s==null?void 0:s.world)??this.world,this.list.set(r.id,r),r}async createFromIfcStoreys(e){const s=[],r=this.components.get(E),a=(e==null?void 0:e.offset)===void 0?.25:e.offset;for(const[d,u]of r.list){if(e&&e.modelIds&&!e.modelIds.some(h=>h.test(d)))continue;const l=Object.values(await u.getItemsOfCategories([/BUILDINGSTOREY/])).flat();if(l.length===0)continue;const w=await u.getItemsData(l),[,c]=await u.getCoordinates(),v=new P(0,-1,0);for(const h of w){if(!("value"in h.Name&&"value"in h.Elevation))continue;const{value:H}=h.Name;if(e!=null&&e.storeyNames&&!e.storeyNames.some(N=>N.test(H)))continue;const $=h.Elevation.value+c+a,g=new b(v,$),I=this.createFromPlane(g,{id:H,world:e==null?void 0:e.world});s.push(I)}}return s}createElevations(e){const s=[],r=this.components.get(E),a=(e==null?void 0:e.combine)===void 0?!1:e.combine,d=(e==null?void 0:e.namingCallback)??(l=>({front:`${a?"Front":`${l}: Front`}`,back:`${a?"Back":`${l}: Back`}`,left:`${a?"Left":`${l}: Left`}`,right:`${a?"Right":`${l}: Right`}`}));let u=[];for(const[l,w]of r.list)e&&e.modelIds&&!e.modelIds.some(c=>c.test(l))||u.push({id:l,box:w.box});if(a){const l=this.components.get(ae);l.list.clear(),l.list.add(...u.map(c=>c.box)),u=[{id:"combined",box:l.get()}]}for(const{id:l,box:w}of u){const{min:c,max:v}=w,h=Math.abs(v.x-c.x),H=Math.abs(v.z-c.z),$=new P;w.getCenter($);const g=new b(new P(0,0,-1),v.z),I=new b(new P(0,0,1),-c.z),N=new b(new P(-1,0,0),v.x),j=new b(new P(1,0,0),-c.x),{front:M,back:W,left:Y,right:q}=d(l),L=this.createFromPlane(g,{id:M,world:e==null?void 0:e.world});L.range=H;const S=this.createFromPlane(I,{id:W,world:e==null?void 0:e.world});S.range=H;const A=this.createFromPlane(N,{id:Y,world:e==null?void 0:e.world});A.range=h;const D=this.createFromPlane(j,{id:q,world:e==null?void 0:e.world});D.range=h,s.push(L,S,A,D)}return s}open(e){const s=this.list.get(e);if(!s)throw new Error(`Views: the view with id ${e} doesn't exist.`);if(s.open)return;const{world:r}=s;if(!r)throw new Error(`Views: no world found for view with id ${e}.`);const{renderer:a}=r;if(!a)throw new Error(`Views: no renderer found for world with id ${r.uuid}.`);for(const[,d]of this.list)d.world===r&&this.close(d.id);a.setPlane(!0,s.plane),a.setPlane(!0,s.farPlane),s.camera.controls.addEventListener("rest",this._fragmentsUpdateEvent),r.camera=s.camera,s.open=!0}close(e){let s;if(e?s=this.list.get(e):s=[...this.list.values()].find(d=>d.open),e&&!s)throw new Error(`Views: the view with id ${e} doesn't exist.`);if(!s||!s.open)return;const{world:r}=s;if(!r)throw new Error(`Views: no world found for view with id ${e}.`);const{renderer:a}=r;if(!a)throw new Error(`Views: no renderer found for world with id ${r.uuid}.`);a.setPlane(!1,s.plane),a.setPlane(!1,s.farPlane),s.camera.controls.removeEventListener("rest",this._fragmentsUpdateEvent),r.useDefaultCamera(),s.open=!1}};n(V,"uuid","fb22f1f5-6598-4664-a11d-de8963ae420f"),n(V,"defaultRange",15);let f=V;const m=new ne,ce=m.get(oe),i=ce.create();i.scene=new le(m);i.scene.setup();i.scene.three.background=null;const pe=document.getElementById("container");i.renderer=new ie(m,pe);i.camera=new T(m);await i.camera.controls.setLookAt(78,20,-2.2,26,-4,25);m.init();const me="https://thatopen.github.io/engine_fragment/resources/worker.mjs",he=await fetch(me),ue=await he.blob(),we=new File([ue],"worker.mjs",{type:"text/javascript"}),be=URL.createObjectURL(we),_=m.get(E);_.init(be);i.camera.controls.addEventListener("rest",()=>_.core.update(!0));i.onCameraChanged.add(o=>{for(const[,t]of _.list)t.useCamera(o.three);_.core.update(!0)});_.list.onItemSet.add(({value:o})=>{o.useCamera(i.camera.three),i.scene.three.add(o.object),_.core.update(!0)});const fe=["https://thatopen.github.io/engine_components/resources/frags/school_arq.frag","https://thatopen.github.io/engine_components/resources/frags/school_str.frag"];await Promise.all(fe.map(async o=>{var r;const t=(r=o.split("/").pop())==null?void 0:r.split(".").shift();if(!t)return null;const s=await(await fetch(o)).arrayBuffer();return _.core.load(s,{modelId:t})}));const p=m.get(f);f.defaultRange=100;p.world=i;await p.createFromIfcStoreys({modelIds:[/arq/]});p.createElevations({combine:!0});const _e=m.get(de),ve=_e.get(i);window.addEventListener("dblclick",async()=>{const o=await ve.castRay();if(!o)return;const{normal:t,point:e}=o;if(!(t&&e))return;const s=t.clone().negate(),r=p.create(s,e.addScaledVector(t,1),{id:`View - ${p.list.size+1}`,world:i});r.range=10,r.helpersVisible=!0});Z.init();const Pe=o=>{const{components:t}=o,e=t.get(f);return k`<bim-table ${ee(r=>{if(!r)return;const a=r;a.data=[...e.list.keys()].map(d=>({data:{Name:d,Actions:""}}))})}></bim-table>`},[C,ye]=U.create(Pe,{components:m});C.headersHidden=!0;C.noIndentation=!0;C.columns=["Name",{name:"Actions",width:"auto"}];C.dataTransform={Actions:(o,t)=>{const{Name:e}=t;if(!e)return o;const s=m.get(f);return s.list.get(e)?k`
      <bim-button label-hidden icon="solar:cursor-bold" label="Open" @click=${()=>{s.open(e)}}></bim-button>
      <bim-button label-hidden icon="material-symbols:delete" label="Remove" @click=${()=>{s.list.delete(e)}}></bim-button>
    `:o}};const F=()=>ye();p.list.onItemSet.add(F);p.list.onItemDeleted.add(F);p.list.onItemUpdated.add(F);p.list.onCleared.add(F);const x=U.create(()=>k`
    <bim-panel active label="2D Views Tutorial" class="options-menu">
      <bim-panel-section  label="Info">
        <bim-label style="width: 16rem; white-space: normal;" icon="noto-v1:light-bulb">Tip: Go inside the building and double click a wall to create a section</bim-label>
      </bim-panel-section>
      <bim-panel-section  label="Views">
        <bim-button label="Close Active 2D View" @click=${()=>p.close()}></bim-button>
        ${C}
      </bim-panel-section>
    </bim-panel>
  `);document.body.append(x);const He=U.create(()=>k`
      <bim-button class="phone-menu-toggler" icon="solar:settings-bold"
        @click="${()=>{x.classList.contains("options-menu-visible")?x.classList.remove("options-menu-visible"):x.classList.add("options-menu-visible")}}">
      </bim-button>
    `);document.body.append(He);const y=new X;y.showPanel(2);document.body.append(y.dom);y.dom.style.left="0px";y.dom.style.zIndex="unset";i.renderer.onBeforeUpdate.add(()=>y.begin());i.renderer.onAfterUpdate.add(()=>y.end());
