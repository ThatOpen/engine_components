var B=Object.defineProperty;var j=(r,t,e)=>t in r?B(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e;var i=(r,t,e)=>(j(r,typeof t!="symbol"?t+"":t,e),e);import{U as y,M as _,D as x,a as m,b as V,E as c,G as z}from"./graphic-vertex-picker-DJhsmSZm.js";import{L as k,M as C,G as E,W as d,V as a,B as U,P as v,c as I,d as M,e as F,f as b,g as A,h as R,C as g,i as D,D as P,F as N,z as w,j as $}from"./index-CZukAoYd.js";function L(){const r=document.createElement("div");return r.style.backgroundColor="blue",r.style.color="white",r.style.padding="6px",r.style.borderRadius="6px",r.style.boxShadow="0px 4px 6px rgba(0, 0, 0, 0.6)",r.style.zIndex="-10",r}function G(r={}){const{color:t="white",size:e="4px",border:n="2px solid blue",background:s="white"}=r,o=document.createElement("div");return o.style.backgroundColor=s,o.style.color=t,o.style.height=e,o.style.width=e,o.style.borderRadius="50%",o.style.border=n,o.style.zIndex="-20",o}class u extends k{constructor(){super(...arguments);i(this,"id",y.create());i(this,"_units","m");i(this,"_rounding",2)}set units(e){this._units=e}get units(){return this._units}set rounding(e){this._rounding=e}get rounding(){return this._rounding}get value(){const e=this.distance();return _.convertUnits(e,"m",this.units,this.rounding)}}class f{constructor(t,e,n,s=2,o="m"){i(this,"label");i(this,"boundingBox",new C);i(this,"world");i(this,"_components");i(this,"_units","m");i(this,"_rounding",2);i(this,"startNormal",null);i(this,"line");i(this,"rectangleComponentLines",[]);i(this,"projectionComponentLines",[]);i(this,"_visible",!0);i(this,"_root",new E);i(this,"_endpoints",new d);i(this,"lineElement");i(this,"rectangleDimensions",new d);i(this,"projectionDimensions",new d);i(this,"isSelected",!1);i(this,"_latestRectangularInversion",!1);i(this,"_endpointElement",G());i(this,"_material");i(this,"_componentsMaterial",new I({depthTest:!1,gapSize:.2,dashSize:.2,transparent:!0,opacity:.5,color:3026478}));this._components=t,this.world=e,this._material=n.lineMaterial,this._rounding=s,this._units=o,this.line=n.line,this.startNormal=n.startNormal??null,this.rectangleComponentLines=[new u,new u],this.updateRectangleComponents(),this.updateProjectionComponents(),this.lineElement=this.createLine(n),this._endpoints.onItemAdded.add(l=>{this._root.add(l.three);const h=this._endpoints.size===1?this.line.start:this.line.end;l.three.position.copy(h)}),this._endpoints.onBeforeDelete.add(l=>l.dispose()),this.createEndpoints();for(const l of this._endpoints)l.three.element.style.borderColor=`#${n.lineMaterial.color.getHexString()}`;this.label=this.newText(),this.label.three.element.style.backgroundColor=`#${n.lineMaterial.color.getHexString()}`,this.label.three.renderOrder=1,this._root.renderOrder=2,this.world.scene.three.add(this._root),this.setupEvents()}set units(t){for(const e of this.rectangleDimensions)e.units=t;for(const e of this.projectionDimensions)e.units=t;this._units=t,this.updateLabel()}get units(){return this._units}set rounding(t){for(const e of this.rectangleDimensions)e.rounding=t;for(const e of this.projectionDimensions)e.rounding=t;this._rounding=t,this.updateLabel()}get rounding(){return this._rounding}get visible(){return this._visible}set visible(t){for(const h of this.rectangleDimensions)h.visible=t;for(const h of this.projectionDimensions)h.visible=t;this._visible=t,this.label.visible=t;for(const h of this._endpoints)h.visible=t;const[e,n]=this._endpoints,s=e.three,o=n.three,l=this.label.three;t?(this.world.scene.three.add(this._root),this._root.add(l,s,o)):(l.removeFromParent(),s.removeFromParent(),o.removeFromParent(),this._root.removeFromParent())}set end(t){this.line.end=t;const e=this.lineElement.geometry.attributes.position;e.setXYZ(1,t.x,t.y,t.z),e.needsUpdate=!0,this.update()}set start(t){this.line.start=t;const e=this.lineElement.geometry.attributes.position;e.setXYZ(0,t.x,t.y,t.z),e.needsUpdate=!0,this.update()}setupEvents(){this.rectangleDimensions.onBeforeDelete.add(t=>t.dispose()),this.projectionDimensions.onBeforeDelete.add(t=>t.dispose())}dispose(){this.visible=!1;const t=this._components.get(x);t.destroy(this._root),t.destroy(this.lineElement),this._endpoints.clear(),this.label.dispose(),this.boundingBox&&t.destroy(this.boundingBox),this.rectangleDimensions.clear(),this.projectionDimensions.clear(),this._components=null}createBoundingBox(){const t=new a;this.line.getCenter(t);const e=this.line.distance();this.boundingBox.geometry=new U(1,1,e),this.boundingBox.position.copy(t),this.boundingBox.lookAt(this.line.end),this.boundingBox.visible=!1,this._root.add(this.boundingBox)}invertRectangularDimensions(){this.rectangleDimensions.size!==0&&(this.rectangleDimensions.clear(),this._latestRectangularInversion=!this._latestRectangularInversion,this.updateRectangleComponents(this._latestRectangularInversion),this.displayRectangularDimensions())}displayRectangularDimensions(){this.rectangleDimensions.clear();for(const t of this.rectangleComponentLines){const e=new f(this._components,this.world,{line:t,lineMaterial:this._componentsMaterial,endpointElement:this.endpointElement});e.lineElement.computeLineDistances(),this.rectangleDimensions.add(e)}}displayProjectionDimensions(){this.projectionDimensions.clear();for(const t of this.projectionComponentLines){const e=new f(this._components,this.world,{line:t,lineMaterial:this._componentsMaterial,endpointElement:this.endpointElement});e.lineElement.computeLineDistances(),this.projectionDimensions.add(e)}}set endpointElement(t){for(const e of this.rectangleDimensions)e.endpointElement=t;for(const e of this.projectionDimensions)e.endpointElement=t;this._endpointElement=t,this.createEndpoints()}get endpointElement(){return this._endpointElement}createEndpoints(){this._endpoints.clear();const t=new m(this.world,this._endpointElement),e=new m(this.world,this._endpointElement.cloneNode(!0));this._endpoints.add(t,e)}updateProjectionComponents(){if(!this.startNormal)return;const t=new v().setFromNormalAndCoplanarPoint(this.startNormal,this.line.start),e=new a;t.projectPoint(this.line.end,e);let[n]=this.projectionComponentLines;n||(n=new u,this.projectionComponentLines.push(n)),n.set(this.line.end,e),n.distance()<.01&&this.projectionComponentLines.shift();for(const s of this.projectionDimensions)s&&s.update()}updateRectangleComponents(t=!1){const e=t?this.line.end:this.line.start,n=t?this.line.start:this.line.end,s=new a;s.subVectors(n,e),Math.abs(n.y-e.y)>=.1?s.y=0:s.x=0;const l=e.clone().add(s),[h,S]=this.rectangleComponentLines;h.set(l,e),S.set(l,n);for(const T of this.rectangleDimensions)T.update()}updateLabel(){this.label.three.element.textContent=this.getTextContent();const t=new a;this.line.getCenter(t),this.label.three.position.copy(t)}updateGeometry(){this.updateRectangleComponents(),this.updateProjectionComponents(),[...this._endpoints][0].three.position.copy(this.line.start),[...this._endpoints][1].three.position.copy(this.line.end),this.lineElement.geometry.computeBoundingSphere()}update(){this.updateGeometry(),this.updateLabel()}set material(t){this._material.dispose(),this._material=t,this.lineElement.material=t}get material(){return this._material}createLine(t){const e=new M;e.setFromPoints([t.line.start,t.line.end]);const n=new F(e,t.lineMaterial);return this._root.add(n),n}newText(){const t=L();t.textContent=this.getTextContent();const e=new m(this.world,t),n=new a;return this.line.getCenter(n),e.three.position.copy(n),this._root.add(e.three),e}getTextContent(t=this.line.distance()){return`${_.convertUnits(t,"m",this._units,this.rounding)} ${this._units}`}set color(t){const e=`#${t.getHexString()}`;this.label.three.element.style.backgroundColor=e;for(const n of this._endpoints)n.three.element.style.borderColor=e;this._material.color.set(t)}}class p{constructor(t){i(this,"id",y.create());i(this,"points",new d);i(this,"tolerance",.005);i(this,"_plane",null);i(this,"_rounding",2);i(this,"_units","m2");this.points.guard=e=>{const n=[...this.points].some(o=>o.equals(e)),s=this.isPointInPlane(e);return!n&&s},this.points.onItemAdded.add(e=>{if(this.plane){const n=new a;this.plane.projectPoint(e,n),e.copy(n)}this.points.size<3||this.points.size===3&&this.computePlane()}),this.points.onItemDeleted.add(()=>{this.points.size>=3||(this._plane=null)}),this.points.onCleared.add(()=>{this._plane=null}),t&&this.points.add(...t)}get plane(){return this._plane}get _coordinateSystem(){if(!this.plane)return null;const t=this.plane.normal,e=new a,n=new a;return Math.abs(t.x)>Math.abs(t.z)?e.set(-t.y,t.x,0).normalize():e.set(0,-t.z,t.y).normalize(),n.crossVectors(t,e).normalize(),{normal:t.clone(),x:e.clone(),y:n.clone()}}get points2D(){if(!this.plane)if(this.points.size>=3)this.computePlane();else return null;return[...this.points].map(e=>this.convertPointTo2D(e)).filter(e=>e!==null)}get center(){if(!this.plane||this.points.size<3)return null;const t=this.points2D;if(!t||t.length===0)return null;const e=t.reduce((n,s)=>n.add(s),new b).divideScalar(t.length);return this.convertPointTo3D(e)}get value(){const t=this.points2D;if(!t)return 0;const e=Math.abs(A.area(t));return _.convertUnits(e,"m2",this.units,this.rounding)}get boundingBox(){if(this.points.size===0)return null;const t=new R;for(const e of this.points)t.expandByPoint(e);return t}get perimeter(){const t=this.points2D;if(!t||t.length<2)return 0;let e=0;for(let n=0;n<t.length;n++){const s=t[n],o=t[(n+1)%t.length];e+=s.distanceTo(o)}return e}set rounding(t){this._rounding=t}get rounding(){return this._rounding}set units(t){this._units=t}get units(){return this._units}isPointInPlane(t){if(!this.plane)return!0;const e=this.plane.distanceToPoint(t);return Math.abs(e)<this.tolerance}clone(){return new p([...this.points])}computePlane(){const[t,e,n]=this.points;if(!(t&&e&&n))return null;const s=new a().subVectors(e,t),o=new a().subVectors(n,t),l=new a().crossVectors(s,o).normalize();return this._plane=new v().setFromNormalAndCoplanarPoint(l,t),this.plane}convertPointTo2D(t){if(!this.isPointInPlane(t)||!this.plane)return null;const e=this._coordinateSystem;if(!e)return null;const n=new a;this.plane.projectPoint(t,n);const s=n.dot(e.x),o=n.dot(e.y);return new b(s,o)}convertPointTo3D(t){if(!this.plane)return null;const e=this._coordinateSystem;if(!e)return null;const{x:n,y:s,normal:o}=e;return new a().addScaledVector(n,t.x).addScaledVector(s,t.y).addScaledVector(o,-this.plane.constant)}}class O extends m{constructor(e){const n=document.createElement("div");n.style.backgroundColor="blue",n.style.color="white",n.style.padding="6px",n.style.borderRadius="6px",n.style.boxShadow="0px 4px 6px rgba(0, 0, 0, 0.6)",n.style.zIndex="-10";super(e,n);i(this,"_value",0);i(this,"_units","m2");i(this,"_worldUnits","m2");i(this,"_color",new g);i(this,"_textColor",new g);i(this,"_rounding",2);this.three.renderOrder=1,n.textContent=this.formattedValue}set value(e){this._value=e}get value(){return this._value}set units(e){this._units=e,this.three.element.textContent=this.formattedValue}get units(){return this._units}set worldUnits(e){this._worldUnits=e,this.three.element.textContent=this.formattedValue}get worldUnits(){return this._worldUnits}set color(e){this._color=e;const n=`#${e.getHexString()}`;this.three.element.style.backgroundColor=n}get color(){return this._color}set textColor(e){this._textColor=e;const n=`#${e.getHexString()}`;this.three.element.style.color=n}get textColor(){return this._textColor}set rounding(e){this._rounding=e,this.three.element.textContent=this.formattedValue}get rounding(){return this._rounding}get formattedValue(){return`${_.convertUnits(this.value,this.worldUnits,this.units,this.rounding)} ${this.units}`}}class Y{constructor(t,e,n=new p){i(this,"_root",new E);i(this,"_components");i(this,"_material",new D({color:"red",transparent:!0,opacity:.5,side:P,depthTest:!1}));i(this,"_visible",!0);i(this,"_color",new g);i(this,"label");i(this,"three",new C);i(this,"world");i(this,"area");i(this,"_triggerUpdate",()=>this.update());this._components=t,this.world=e,this.area=n,this.world.scene.three.add(this.three),this.label=new O(e),this._root.renderOrder=2,this.visible=!0,this.update(),n.points.onItemAdded.add(this._triggerUpdate),n.points.onItemDeleted.add(this._triggerUpdate),n.points.onCleared.add(this._triggerUpdate)}set material(t){this._material.dispose(),this._material=t,this.three.material=t}get material(){return this._material}set visible(t){this._visible=t,this.label.visible=t;const e=this.label.three;t?(this._root.add(e,this.three),this.world.scene.three.add(this._root)):(e.removeFromParent(),this._root.removeFromParent())}get visible(){return this._visible}set rounding(t){this.label.rounding=t}get rounding(){return this.label.rounding}set units(t){this.label.units=t}get units(){return this.label.units}set color(t){this._color=t,this.label.color=t,this._material.color.set(t)}get color(){return this._color}updateMesh(){if(this.area.points.size<3)return;const t=[...this.area.points],e=t.flatMap(o=>[o.x,o.y,o.z]),n=[];for(let o=1;o<t.length-1;o++)n.push(0,o,o+1);this.three.geometry.dispose();const s=new M;s.setAttribute("position",new N(e,3)),s.setIndex(n),this.three.geometry=s,this.three.material=this.material}update(){if(this.updateMesh(),this.area.value===0)this.label.visible=!1;else{this.label.value=this.area.value,this.label.visible=!0;const t=this.area.center;t&&this.label.three.position.copy(t)}}dispose(){this.label.dispose(),this._components.get(x).destroy(this._root,!0,!0),this.area.points.clear()}}const H={length:"m",area:"m2",volume:"m3"};class Z extends V{constructor(e,n){super(e);i(this,"list",new d);i(this,"onDisposed",new c);i(this,"snappings",[w.LINE,w.POINT,w.FACE]);i(this,"lines",new d);i(this,"fills",new d);i(this,"labels",new d);i(this,"_world",null);i(this,"measureType");i(this,"onPointerStop",new c);i(this,"onPointerMove",new c);i(this,"onStateChanged",new c);i(this,"pointerStopTimeout",null);i(this,"onMove",()=>{this.enabled&&(this.pointerStopTimeout!==null&&clearTimeout(this.pointerStopTimeout),this.pointerStopTimeout=window.setTimeout(()=>{this.onPointerStop.trigger()},50),this.onPointerMove.trigger())});i(this,"onKeydown",e=>{this.enabled&&e.key==="Escape"&&this.cancelCreation()});i(this,"onEnabledChange",new c);i(this,"_enabled",!1);i(this,"onVisibilityChange",new c);i(this,"_visible",!0);i(this,"_units");i(this,"_rounding",2);i(this,"_linesEndpointElement",L());i(this,"_linesMaterial",new $({color:"#0000FF",depthTest:!1}));i(this,"_fillsMaterial",new D({color:2392594,side:P,transparent:!0,opacity:.3,depthTest:!1}));i(this,"_color",new g);i(this,"_vertexPicker",new z(this.components));i(this,"create",e=>{});i(this,"endCreation",e=>{});i(this,"cancelCreation",()=>{});i(this,"delete",e=>{});this.measureType=n,this._units=H[this.measureType],this.lines.onBeforeDelete.add(s=>s.dispose()),this.fills.onBeforeDelete.add(s=>s.dispose()),this.labels.onBeforeDelete.add(s=>s.dispose()),this.list.onCleared.add(()=>{this.lines.clear(),this.fills.clear(),this.labels.clear()})}set world(e){this._world=e,this._vertexPicker.world=e}get world(){return this._world}get unitsList(){let e=[];return this.measureType==="length"?e=["mm","cm","m","km"]:this.measureType==="area"?e=["mm2","cm2","m2","km2"]:e=["mm3","cm3","m3","km3"],e}setEvents(e){if(!this.world)throw new Error("Measurement: you must specify a world first!");if(this.world.isDisposing)return;if(!this.world.renderer)throw new Error("Measurement: the world needs a renderer!");const s=this.world.renderer.three.domElement.parentElement;s&&(s.removeEventListener("pointermove",this.onMove),window.removeEventListener("keydown",this.onKeydown),e&&(s.addEventListener("pointermove",this.onMove),window.addEventListener("keydown",this.onKeydown)))}set enabled(e){this._enabled=e,this._vertexPicker.enabled=e,this.setEvents(e),this.cancelCreation(),this.onEnabledChange.trigger(e),this.onStateChanged.trigger(["enabled"])}get enabled(){return this._enabled}set visible(e){this._visible=e;for(const n of this.lines)n.visible=e;for(const n of this.fills)n.visible=e;this.onVisibilityChange.trigger(e),this.onStateChanged.trigger(["visibility"])}get visible(){return this._visible}set units(e){this._units=e;let n;if(e.endsWith("2")?n="area":e.endsWith("3")?n="volume":n="length",n==="length"){for(const s of this.lines)s.units=e;for(const s of this.list)(s instanceof u||s instanceof p)&&(s.units=e)}else if(n==="area")for(const s of this.fills)s.units=e;this.onStateChanged.trigger(["units"])}get units(){return this._units}set rounding(e){this._rounding=e;for(const n of this.list)(n instanceof u||n instanceof p)&&(n.rounding=e);for(const n of this.lines)n.rounding=e;for(const n of this.fills)n.rounding=e;this.onStateChanged.trigger(["rounding"])}get rounding(){return this._rounding}set linesEndpointElement(e){this._linesEndpointElement=e;for(const n of this.lines)n.endpointElement=e}get linesEndpointElement(){return this._linesEndpointElement}set linesMaterial(e){this._linesMaterial.dispose(),this._linesMaterial=e;for(const n of this.lines)n.material=e}get linesMaterial(){return this._linesMaterial}set fillsMaterial(e){this._fillsMaterial.dispose(),this._fillsMaterial=e;for(const n of this.fills)n.material=e}get fillsMaterial(){return this._fillsMaterial}set color(e){this._color=e,this._linesMaterial.color.set(e),this._fillsMaterial.color.set(e);for(const n of this.lines)n.color=e;for(const n of this.fills)n.color=e;this.onStateChanged.trigger(["color"])}get color(){return this._color}dispose(){this._vertexPicker.dispose(),this.list.clear(),this.linesMaterial.dispose(),this.fillsMaterial.dispose(),this.onDisposed.trigger()}createLineElement(e,n=null){if(!this.world)throw new Error("Measurement: world is need!");return new f(this.components,this.world,{line:e,startNormal:n??void 0,lineMaterial:this.linesMaterial,endpointElement:this.linesEndpointElement},this.rounding,this.units)}createFillElement(e){if(!this.world)throw new Error("Measurement: world is need!");const n=new Y(this.components,this.world,e);return n.rounding=this.rounding,(this.units.endsWith("2")?"area":void 0)==="area"&&(n.units=this.units),n}addLineElementsFromPoints(e){for(let n=0;n<e.length;n++){const s=e[n],o=e[(n+1)%e.length],l=new u(s,o),h=this.createLineElement(l);h.label.visible=!1,this.lines.add(h)}}getLineBoxes(){const e=[];for(const n of this.lines)e.push(n.boundingBox);return e}getFillBoxes(){const e=[];for(const n of this.fills)e.push(n.three);return e}}export{p as A,u as L,Z as M};
