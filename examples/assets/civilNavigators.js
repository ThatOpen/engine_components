var Le=Object.defineProperty;var Pe=(a,t,e)=>t in a?Le(a,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):a[t]=e;var l=(a,t,e)=>(Pe(a,typeof t!="symbol"?t+"":t,e),e);import{d as ne,e as Me,l as oe,V as g,C as y,G as xe,ag as ke,x as Se,q as De,a as Te,S as Be,b as $e,R as ie,m as O}from"./index-CZukAoYd.js";import{R as X,E as I,i as Ee,b as se,g as ze,F as re,C as Ae,W as He,S as Ie,h as Fe,j as Ve,d as We}from"./graphic-vertex-picker-DJhsmSZm.js";import{b as ae,a as je,L as Ne}from"./LineSegments2-DyewVTHf.js";class Re{constructor(t){l(this,"alignments",[]);l(this,"enabled",!0);l(this,"world",null);l(this,"_raycastable",[]);l(this,"_components");this._components=t}update(){this.dispose();for(const t of this.alignments)for(const e of t.children){const n=e;n.updateWorldMatrix(!0,!0);for(const r of n.children){const i=r;if(i.isLine2&&i.userData.points){const s=new ne,d=new Me;d.geometry.setIndex(i.geometry.index);const o=new Float32Array(i.userData.points),c=new oe(o,3);s.setAttribute("position",c),d.geometry=s,d.userData.curve=i,d.applyMatrix4(i.matrixWorld),d.updateMatrixWorld(),this._raycastable.push(d)}}}}dispose(){for(const t of this._raycastable)t.geometry.dispose(),t.geometry=void 0;this._raycastable=[]}castRay(){if(!this.enabled||!this.world)return null;const n=this._components.get(X).get(this.world).castRayToObjects(this._raycastable);if(!n)return null;const r=n.object,i=r.geometry,s=n.index,d=i.attributes.position.array[s*3],o=i.attributes.position.array[s*3+1],c=i.attributes.position.array[s*3+2],h=i.attributes.position.array[s*3+3],u=i.attributes.position.array[s*3+4],p=i.attributes.position.array[s*3+5],C=new g(h-d,u-o,p-c).normalize();return{point:n.point,normal:C,curve:r.userData.curve,alignment:r.userData.curve.parent}}}class E{static alignmentPercentageToPoint(t,e){const n=new g,r=new g,i=this.alignmentLength(t),s=e*i;let d=0;if(t.updateWorldMatrix(!0,!0),e===1)for(let o=t.children.length-1;o>=0;o--){const c=t.children[o],h=c.userData.points;if(!h)continue;const u=new g(h[h.length-3],h[h.length-2],h[h.length-1]);return u.applyMatrix4(c.matrixWorld),{normal:new g,point:u,curve:c,alignment:t}}for(const o of t.children){const c=o.userData.points;if(c)for(let h=0;h<c.length-3;h+=3){const u=n.set(c[h],c[h+1],c[h+2]),p=r.set(c[h+3],c[h+4],c[h+5]),C=u.distanceTo(p);if(d+C>=s){const L=s-d,w=p.clone().sub(u).normalize(),x=w.clone().multiplyScalar(L);return u.add(x),u.applyMatrix4(o.matrixWorld),{normal:w,point:u,curve:o,alignment:t}}d+=C}}return null}static curvePercentageToPoint(t,e,n){const r=new g,i=new g,s=this.curveLength(e),d=n*s;let o=0;const c=e.userData.points;if(!c)throw new Error("No points found in curve");for(let h=0;h<c.length-3;h+=3){const u=r.set(c[h],c[h+1],c[h+2]),p=i.set(c[h+3],c[h+4],c[h+5]),C=u.distanceTo(p);if(o+C>=d){const L=d-o,w=p.clone().sub(u).normalize(),x=w.clone().multiplyScalar(L);return u.add(x),{normal:w,point:u,curve:e,alignment:t}}o+=C}return null}static alignmentLength(t){let e=0;if(t.userData.length!==void 0)return t.userData.length;for(const n of t.children)"isLine2"in n&&(e+=this.curveLength(n));return t.userData.length=e,e}static curveLength(t){let e=0;if(t.userData.length!==void 0)return t.userData.length;const n=new g,r=new g,i=t.userData.points;if(!i)throw new Error("No points found in curve");for(let s=0;s<i.length-2-3;s+=3){const d=n.set(i[s],i[s+1],i[s+2]),o=r.set(i[s+3],i[s+4],i[s+5]);e+=d.distanceTo(o)}return t.userData.length=e,e}static curvePointToAlignmentPercentage(t,e,n){const r=new g,i=new g,s=this.alignmentLength(t);let d=0;t.updateWorldMatrix(!0,!0);for(const o of t.children){const c=o.userData.points;if(c)for(let h=0;h<c.length-3;h+=3){const u=r.set(c[h],c[h+1],c[h+2]),p=i.set(c[h+3],c[h+4],c[h+5]);u.applyMatrix4(o.matrixWorld),p.applyMatrix4(o.matrixWorld);const C=u.distanceTo(p),L=u.distanceTo(e)<.001,w=p.distanceTo(e)<.001,x=this.isPointbetweenTwoOthers(u,p,e);if(o===n&&(L||w||x)){const f=u.distanceTo(e);return(d+f)/s}d+=C}}return null}static isPointbetweenTwoOthers(t,e,n){const r=new g;r.subVectors(e,t).normalize();const i=new g;i.subVectors(n,t).normalize();const s=new g;s.subVectors(n,e).normalize();const o=1-.0016;return r.dot(i)>o&&r.dot(s)<-o}}class Ue{constructor(t,e){l(this,"onDisposed",new I);l(this,"alignments",[]);l(this,"components");l(this,"onMarkerChange",new I);l(this,"enabled",!0);l(this,"highlightMaterial");l(this,"increments",20);l(this,"screenDistanceLimit",.1);l(this,"fadeInTime",500);l(this,"_mouseMarkers");l(this,"_highlighted",new Set);l(this,"_stationPoints",new Map);l(this,"_originalHighlightMaterialId","originalHighlightMaterial");l(this,"_world",null);l(this,"_raycaster");l(this,"_stationLabelColor",new y(16777215));l(this,"_stationLabelBackgroundColor",new y(8014801));l(this,"_stationPointerColor",new y(16777215));l(this,"_stationPointerBackgroundColor",new y(4803766));l(this,"_pointerDown",performance.now());l(this,"_pointerDownTime",150);l(this,"onPointerDown",()=>{this._pointerDown=performance.now()});l(this,"onPointerUp",()=>{if(performance.now()-this._pointerDown>this._pointerDownTime)return;const t=this.setMarkerToMouse("select");t&&this.onMarkerChange.trigger(t)});l(this,"onMouseMove",()=>{this.setMarkerToMouse("hover")});this.components=t,this.highlightMaterial=e,this._raycaster=new Re(t),this._raycaster.alignments=this.alignments}get world(){return this._world}set world(t){var r,i,s,d;if(t===this._world||(this._world&&this.setupEvents(!1),this._world=t,(r=this._mouseMarkers)==null||r.hover.removeFromParent(),(i=this._mouseMarkers)==null||i.select.removeFromParent(),(s=this._mouseMarkers)==null||s.hover.element.remove(),(d=this._mouseMarkers)==null||d.select.element.remove(),!t))return;this._raycaster.world=t;const e=this.newCivilLabel(0,"stationPointer");t.scene.three.add(e),e.visible=!1,e.element.style.transition="";const n=this.newCivilLabel(0,"stationPointer");n.element.style.transition="",n.element.style.opacity="0.5",t.scene.three.add(n),n.visible=!1,this._mouseMarkers={select:e,hover:n},this.setupEvents(!0)}get stationLabelColor(){return this._stationLabelColor}set stationLabelColor(t){this._stationLabelColor=t;const e=`#${t.getHexString()}`;for(const[,{labels:n}]of this._stationPoints){const r=[...n.children];for(const i of r){const s=this.getLabel(i);s.style.color=e;const d=this.getPoint(i);d.style.backgroundColor=e}}}get stationLabelBackgroundColor(){return this._stationLabelBackgroundColor}set stationLabelBackgroundColor(t){this._stationLabelBackgroundColor=t;const e=`#${t.getHexString()}`;for(const[,{labels:n}]of this._stationPoints){const r=[...n.children];for(const i of r){const s=this.getLabel(i);s.style.backgroundColor=e;const d=this.getPoint(i);d.style.border=`2px solid ${e}`}}}get stationPointerColor(){return this._stationPointerColor}set stationPointerColor(t){this._stationPointerColor=t;const e=`#${t.getHexString()}`;if(this._mouseMarkers){const n=this._mouseMarkers.select,r=this.getLabel(n);r.style.color=e;const i=this.getPoint(n);i.style.backgroundColor=e}}get stationPointerBackgroundColor(){return this._stationPointerBackgroundColor}set stationPointerBackgroundColor(t){this._stationPointerBackgroundColor=t;const e=`#${t.getHexString()}`;if(this._mouseMarkers){const n=this._mouseMarkers.select,r=this.getLabel(n);r.style.backgroundColor=e;const i=this.getPoint(n);i.style.border=`2px solid ${e}`}}dispose(){var t,e,n,r;this.clearHighlight(),this.clearStations(),this.alignments=[],(t=this._mouseMarkers)==null||t.hover.removeFromParent(),(e=this._mouseMarkers)==null||e.select.removeFromParent(),(n=this._mouseMarkers)==null||n.hover.element.remove(),(r=this._mouseMarkers)==null||r.select.element.remove(),this._raycaster.dispose(),this.onDisposed.trigger(),this.onDisposed.reset()}updateAlignments(){this._raycaster.update()}setMarkerAtPoint(t,e){if(!this._mouseMarkers)throw new Error("No mouse markers found! Initialize the world before using this.");this.updateMarkerValue(t,e),this._mouseMarkers[e].visible=!0,this._mouseMarkers[e].position.copy(t.point)}highlight(t,e=!0){e&&this.clearHighlight(this._highlighted);for(const n of t.children)"isLineSegments2"in n&&"material"in n&&(n.userData[this._originalHighlightMaterialId]=n.material,n.material=this.highlightMaterial);this._highlighted.add(t)}clearHighlight(t=this._highlighted){for(const e of t)for(const n of e.children)"isLineSegments2"in n&&"material"in n&&(n.material=n.userData[this._originalHighlightMaterialId],delete n.userData[this._originalHighlightMaterialId]);this._highlighted.clear()}createStations(t){if(!this.world||this._stationPoints.has(t.uuid))return;const e=new xe;this.world.scene.three.add(e),this._stationPoints.set(t.uuid,{alignment:t,labels:e})}clearStations(t=this._stationPoints.keys()){for(const e of t){const n=this._stationPoints.get(e);n&&(this.clearLabels(n.labels),this._stationPoints.delete(e))}}updateStations(){if(!this.world)throw new Error("No world found!");if(!this.world.renderer)throw new Error("No renderer found!");const t=this.world.camera.three,e=this.world.renderer.three,n=new ke,r=e.clippingPlanes,i=new g,s=new g;let d=!0;const o=new g;for(const[,{alignment:c,labels:h}]of this._stationPoints){this.clearLabels(h),c.updateWorldMatrix(!0,!0);const u=c.userData.initialStation;let p=u||0;const C=p%this.increments;let L=u+this.increments-C;for(const w of c.children){if(!("isLine2"in w))continue;const x=w;if(x.geometry.boundingBox||x.geometry.computeBoundingBox(),n.setFromProjectionMatrix(new Se().multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse)),!n.intersectsBox(x.geometry.boundingBox)){const b=E.curveLength(w);p+=b;const D=p%this.increments;L=p+this.increments-D;continue}const f=w.userData.points,de=f[0],ue=f[1],pe=f[2];if(o.set(de,ue,pe),o.applyMatrix4(w.matrixWorld),!this.isLabelClipped(r,o)){if(d){d=!1,i.set(o.x,o.y,o.z),i.project(t),i.z=0;const b=this.newCivilLabel(p,"stationLabel");b.position.set(o.x,o.y,o.z),h.children.push(b)}else if(s.set(o.x,o.y,o.z),s.project(t),s.z=0,i.distanceTo(s)>this.screenDistanceLimit){const D=this.newCivilLabel(p,"stationLabel");D.position.set(o.x,o.y,o.z),h.children.push(D),i.copy(s)}}const A=new g,R=new g;for(let b=0;b<f.length-3;b+=3){A.set(f[b],f[b+1],f[b+2]),R.set(f[b+3],f[b+4],f[b+5]);const D=A.distanceTo(R),be=p+D,we=R.clone().sub(A).normalize();for(;be>L;){const _e=L-p,K=we.clone();K.multiplyScalar(_e);const{x:ve,y:ye,z:Ce}=A.clone().add(K);if(o.set(ve,ye,Ce),o.applyMatrix4(w.matrixWorld),!this.isLabelClipped(r,o)&&n.containsPoint(o)&&(s.set(o.x,o.y,o.z),s.project(t),s.z=0,i.distanceTo(s)>this.screenDistanceLimit)){const J=this.newCivilLabel(L,"stationLabel");J.position.set(o.x,o.y,o.z),h.children.push(J),i.copy(s)}L+=this.increments}p+=D}const me=f[f.length-3],ge=f[f.length-2],fe=f[f.length-1];if(o.set(me,ge,fe),o.applyMatrix4(w.matrixWorld),this.isLabelClipped(r,o)||!n.containsPoint(o))continue;if(s.set(o.x,o.y,o.z),s.project(t),s.z=0,i.distanceTo(s)>this.screenDistanceLimit){const b=this.newCivilLabel(p,"stationLabel");b.position.set(o.x,o.y,o.z),h.children.push(b),i.copy(s)}}}}getCursorValue(){if(!this._mouseMarkers)throw new Error("No mouse markers found! Initialize the world before using this.");return this._mouseMarkers.select.element.children[0].children[0].innerText}setCursorValue(t,e){if(!this._mouseMarkers)throw new Error("No mouse markers found! Initialize the world before using this.");const r=this._mouseMarkers[e].element.children[0].children[0];r.innerText=t}isLabelClipped(t,e){for(const n of t)if(!(n.distanceToPoint(e)>0))return!0;return!1}clearLabels(t){const e=[...t.children];for(const n of e)n.element.style.opacity="0";setTimeout(()=>{for(const n of e)n.removeFromParent(),n.element.remove(),n.visible=!1},this.fadeInTime)}newCivilLabel(t,e){const n=document.createElement("div"),r=e==="stationLabel"?this.stationLabelColor:this.stationPointerColor,i=e==="stationLabel"?this.stationLabelBackgroundColor:this.stationPointerBackgroundColor,s=document.createElement("div");s.style.width="4px",s.style.height="4px",s.style.borderRadius="50%",s.style.backgroundColor=`#${r.getHexString()}`,s.style.border=`2px solid #${i.getHexString()}`,s.style.display="flex",s.style.justifyContent="center";const d=this.getFormattedStation(t),o=document.createElement("div");o.innerText=d,o.style.backgroundColor=`#${i.getHexString()}`,o.style.color=`#${r.getHexString()}`,o.style.padding="0.3rem",o.style.position="absolute",o.style.bottom="1rem",o.style.borderRadius="6px",o.style.boxShadow="rgba(0, 0, 0, 0.6) 0px 4px 6px",s.appendChild(o);const c=new Ee(n);return n.appendChild(s),e==="stationLabel"&&(n.style.transition=`opacity ${this.fadeInTime}ms ease-in-out`,n.style.opacity="0",setTimeout(()=>{n.style.opacity="1"})),c}setupEvents(t){if(!this.world)throw new Error("No world found!");if(this.world.isDisposing||!this.world.renderer)return;const e=this.world.renderer.three.domElement,r=this.components.get(X).get(this.world);r.three.params.Line||(r.three.params.Line={threshold:10}),e.removeEventListener("pointerdown",this.onPointerDown),e.removeEventListener("pointerup",this.onPointerUp),e.removeEventListener("pointermove",this.onMouseMove),t&&(e.addEventListener("pointerdown",this.onPointerDown),e.addEventListener("pointerup",this.onPointerUp),e.addEventListener("pointermove",this.onMouseMove))}setMarkerToMouse(t){if(!this.enabled||!this._mouseMarkers)return null;if(!this.world)throw new Error("No world found!");const e=this._raycaster.castRay();if(!e)return this._mouseMarkers[t].visible=!1,null;this._mouseMarkers[t].visible=!0;const n=e.point;return this._mouseMarkers[t].position.copy(n),this.updateMarkerValue(e,t),e}updateMarkerValue(t,e){if(!this._mouseMarkers)return;const{alignment:n,curve:r,point:i}=t,s=E.curvePointToAlignmentPercentage(n,i,r);if(s===null)throw new Error("Point is not on the curve");const o=s*E.alignmentLength(n)+n.userData.initialStation,c=this.getFormattedStation(o);this.setCursorValue(c,e)}getFormattedStation(t){const e=Math.floor(t/1e3),n=Math.round(t-e*1e3);return`${e}+${n}`}getLabel(t){return t.element.children[0].children[0]}getPoint(t){return t.element.children[0]}}const W=class W extends se{constructor(e){super(e);l(this,"onDisposed",new I);l(this,"list",new Map);l(this,"enabled",!0);l(this,"highlightMaterial",new ae({color:8014801,linewidth:5,depthTest:!1}));l(this,"_increments",20);l(this,"_screenDistanceLimit",.1);l(this,"_fadeInTime",500);l(this,"_stationLabelColor",new y(16777215));l(this,"_stationLabelBackgroundColor",new y(8014801));l(this,"_stationPointerColor",new y(16777215));l(this,"_stationPointerBackgroundColor",new y(4803766));this.components.add(W.uuid,this)}get increments(){return this._increments}set increments(e){this._increments=e;for(const[,n]of this.list)n.increments=e}get screenDistanceLimit(){return this._screenDistanceLimit}set screenDistanceLimit(e){this._screenDistanceLimit=e;for(const[,n]of this.list)n.screenDistanceLimit=e}get fadeInTime(){return this._fadeInTime}set fadeInTime(e){this._fadeInTime=e;for(const[,n]of this.list)n.fadeInTime=e}get stationLabelColor(){return this._stationLabelColor}set stationLabelColor(e){this._stationLabelColor=e;for(const[,n]of this.list)n.stationLabelColor=e}get stationLabelBackgroundColor(){return this._stationLabelBackgroundColor}set stationLabelBackgroundColor(e){this._stationLabelBackgroundColor=e;for(const[,n]of this.list)n.stationLabelBackgroundColor=e}get stationPointerColor(){return this._stationPointerColor}set stationPointerColor(e){this._stationPointerColor=e;for(const[,n]of this.list)n.stationPointerColor=e}get stationPointerBackgroundColor(){return this._stationPointerBackgroundColor}set stationPointerBackgroundColor(e){this._stationPointerBackgroundColor=e;for(const[,n]of this.list)n.stationPointerBackgroundColor=e}create(e){const n=new Ue(this.components,this.highlightMaterial);return this.list.set(e,n),n}delete(e){const n=this.list.get(e);n&&(n.dispose(),this.list.delete(e))}dispose(){for(const[,e]of this.list)e.dispose();this.onDisposed.trigger(),this.onDisposed.reset()}updateAlignments(){for(const[,e]of this.list)e.updateAlignments()}};l(W,"uuid","0a59c09e-2b49-474a-9320-99f51f40f182");let G=W;const j=class j extends se{constructor(e){super(e);l(this,"enabled",!0);l(this,"onDisposed",new I);l(this,"_world",null);l(this,"_flip",!1);l(this,"_plane");l(this,"_point",new g);l(this,"_edgeMeshes",[]);l(this,"_sectionVisible",!1);l(this,"_sectionOffset",.1);l(this,"edgeMaterial",new ae({color:0,linewidth:5,depthTest:!1}));this.components.add(j.uuid,this)}get plane(){if(!this._plane)throw new Error("Plane is not set. You must give a world.");return this._plane}set plane(e){this._plane=e}get sectionVisible(){return this._sectionVisible}set sectionVisible(e){this._sectionVisible=e;for(const n of this._edgeMeshes)n.visible=e}get world(){return this._world}set world(e){var i;if(this._world=e,(i=this._plane)==null||i.dispose(),!e)return;const n=this.components.get(ze),r=n.createFromNormalAndCoplanarPoint(e,new g(1,0,0),new g);this.plane=n.list.get(r),this.plane.visible=!1,this.plane.enabled=!1}get flip(){return this._flip}set flip(e){var r;if(e===this._flip)return;this._flip=e;const n=(r=this.plane)==null?void 0:r.normal.clone().multiplyScalar(-1);for(const i of this._edgeMeshes)i.position.add(n.clone().multiplyScalar(this._sectionOffset));this.plane.setFromNormalAndCoplanarPoint(n,this._point),this.plane.update()}dispose(){var e;this.clearMeshes(),(e=this.plane)==null||e.dispose(),this.onDisposed.trigger(),this.onDisposed.reset()}async set(e,n){this.flip&&n.multiplyScalar(-1),this.plane.setFromNormalAndCoplanarPoint(n,e),this._point.copy(e)}async update(){this.clearMeshes();const e=this.components.get(re);this.plane.update();const n=[];for(const[,r]of e.list)n.push(this.generateModelSection(r));await Promise.all(n)}async generateModelSection(e){if(!this.world)return;const n=this.plane.three.clone();n.constant-=.01;const{buffer:r}=await e.getSection(n),i=new ne,s=new oe(r,3,!1);i.setAttribute("position",s);const d=new De(i),o=new je;o.fromLineSegments(d);const c=new Ne(o,this.edgeMaterial);c.frustumCulled=!1,this.world.scene.three.add(c),this._edgeMeshes.push(c),c.renderOrder=3,d.geometry.dispose()}clearMeshes(){for(const e of this._edgeMeshes)e.removeFromParent(),e.geometry.dispose(),e.material=void 0;this._edgeMeshes=[]}};l(j,"uuid","96b2c87e-d90b-4639-8257-8f01136fe324");let Y=j;const le=document.getElementById("container"),M=new Ae,Oe=M.get(He),m=Oe.create();m.scene=new Ie(M);m.renderer=new Fe(M,le);m.camera=new Ve(M);M.init();Te.init();m.scene.setup();m.camera.controls.setLookAt(5,5,5,0,0,0);le.appendChild(m.renderer.three2D.domElement);const Ge=M.get(We);Ge.create(m);m.camera.three.far=1e4;m.camera.three.updateProjectionMatrix();m.scene.three.background=null;const N=M.get(re);N.init("https://thatopen.github.io/engine_fragment/resources/worker.mjs");const ce="https://thatopen.github.io/engine_components/resources/frags/small_road.frag",Ye=await fetch(ce),qe=await Ye.arrayBuffer(),Xe=new Uint8Array(qe),Z=await N.core.load(Xe,{modelId:ce,camera:m.camera.three});m.scene.three.add(Z.object);await N.core.update(!0);m.camera.controls.addEventListener("control",()=>N.core.update());Z.getClippingPlanesEvent=()=>Array.from(m.renderer.three.clippingPlanes)||[];const k=await Z.getAlignments();m.scene.three.add(k);const v=M.get(G),_=v.create("absolute");_.world=m;for(const a of k.children)a.userData.initialStation=1925;_.alignments.push(k);_.updateAlignments();console.log(k);const F=new Be(void 0,20);_.onMarkerChange.add(({point:a})=>{F.center.copy(a),m.camera.controls.fitToSphere(F,!0)});const P=M.get(Y);P.world=m;M.get(X);const $=new $e;$.showPanel(2);document.body.append($.dom);$.dom.style.left="0px";$.dom.style.zIndex="unset";m.renderer.onBeforeUpdate.add(()=>$.begin());m.renderer.onAfterUpdate.add(()=>$.end());let T=0,U=null,Q=0,H=!0,B=!1;function q(){const a=k.children[T];H?_.highlight(a):_.clearHighlight()}q();let ee=-1;function S(){ee!==T&&_.clearStations(),ee=T;const a=k.children[T];B?(_.createStations(a),_.updateStations()):_.clearStations()}function te(a){const t=E.alignmentPercentageToPoint(k.children[T],a);t&&(F.center.copy(t.point),m.camera.controls.fitToSphere(F,!0),_.setMarkerAtPoint(t,"select"),P.set(t.point,t.normal),U&&clearTimeout(U),P.sectionVisible=!1,U=setTimeout(()=>{P.plane.enabled&&P.update()},1e3),B&&P.plane.enabled&&S())}const he=1e3;let V=0;m.camera.controls.addEventListener("update",()=>{const a=Date.now();a-V>he&&(S(),V=a)});m.camera.controls.addEventListener("update",()=>{const a=Date.now();a-V>he&&(S(),V=a)});const z=ie.create(()=>O`
  <bim-panel active label="Civil 3D Navigator Tutorial" class="options-menu">

      <bim-panel-section label="Alignments">

         <bim-dropdown required label="Selected alignment"
             @change="${({target:a})=>{T=a.value[0],H&&q(),B&&S()}}">

          ${k.children.map(()=>O`
              <bim-option ?checked=${Q===0} label="${Q++}"></bim-option>
            `)}
        </bim-dropdown>
        
        <bim-number-input
          slider step="1" label="Highlight width" value="${_.highlightMaterial.linewidth}" min="1" max="10"
          @change="${({target:a})=>{v.highlightMaterial.linewidth=a.value}}">
        </bim-number-input>

        <bim-color-input 
          label="Highlight Color" color="#${v.highlightMaterial.color.getHexString()}" 
          @input="${({target:a})=>{v.highlightMaterial.color=new y(a.color)}}">
        </bim-color-input>

        
        <bim-color-input 
          label="Station Label Color" color="#${v.stationLabelColor.getHexString()}" 
          @input="${({target:a})=>{v.stationLabelColor=new y(a.color)}}">
        </bim-color-input>

        
        <bim-color-input 
          label="Station Label Background Color" color="#${v.stationLabelBackgroundColor.getHexString()}" 
          @input="${({target:a})=>{v.stationLabelBackgroundColor=new y(a.color)}}">
        </bim-color-input>

        <bim-color-input 
          label="Station Pointer Color" color="#${v.stationPointerColor.getHexString()}" 
          @input="${({target:a})=>{v.stationPointerColor=new y(a.color)}}">
        </bim-color-input>

        <bim-color-input 
          label="Station Pointer Background Color" color="#${v.stationPointerBackgroundColor.getHexString()}" 
          @input="${({target:a})=>{v.stationPointerBackgroundColor=new y(a.color)}}">
        </bim-color-input>

        <bim-number-input
          slider step="0.05" label="Screen distance limit" value="${v.screenDistanceLimit}" min="0" max="1"
          @change="${({target:a})=>{v.screenDistanceLimit=a.value,_.updateStations()}}">
        </bim-number-input>

        <bim-checkbox
          label="Highlight selected" checked="${H}"
          @change="${({target:a})=>{H=a.checked,q()}}">
        </bim-checkbox>

        <bim-checkbox
          label="Show kps"
          @change="${({target:a})=>{B=a.checked,S()}}">
        </bim-checkbox>

        
        <bim-checkbox
          label="Clip"
          @change="${({target:a})=>{P.plane.enabled=a.checked,P.sectionVisible=a.checked,a.checked&&(P.update(),P.plane.update()),B&&S()}}">
        </bim-checkbox>

        
      <bim-checkbox
        label="Flip"
        @change="${({target:a})=>{P.flip=a.checked,B&&S()}}">
      </bim-checkbox>

      <bim-number-input
      slider step="10" label="Increments" value="${_.increments}" min="10" max="100"
      @change="${({target:a})=>{_.increments=a.value,S()}}">
    </bim-number-input>

    <bim-number-input
      slider step="0.01" label="Alignment navigation" value="0.5" min="0" max="1"
      @change="${({target:a})=>{te(a.value)}}">
    </bim-number-input>

    <bim-number-input
      slider step="10" label="Move to KP" value="2000" min="1925" max="3000"
      @change="${({target:a})=>{const t=k.children[T],e=E.alignmentLength(t),r=(a.value-t.userData.initialStation)/e,i=Math.min(Math.max(r,0),1);te(i)}}">
    </bim-number-input>

    </bim-panel-section>

    </bim-panel>
    `);z.style.zIndex="9999";document.body.append(z);const Ze=ie.create(()=>O`
      <bim-button class="phone-menu-toggler" icon="solar:settings-bold"
        @click="${()=>{z.classList.contains("options-menu-visible")?z.classList.remove("options-menu-visible"):z.classList.add("options-menu-visible")}}">
      </bim-button>
    `);document.body.append(Ze);
